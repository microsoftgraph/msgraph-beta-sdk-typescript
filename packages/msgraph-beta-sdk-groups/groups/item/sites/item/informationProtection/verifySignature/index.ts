/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createVerificationResultFromDiscriminatorValue, serializeVerificationResult, type VerificationResult } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VerifySignaturePostRequestBody}
 */
// @ts-ignore
export function createVerifySignaturePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVerifySignaturePostRequestBody;
}
/**
 * The deserialization information for the current model
 * @param VerifySignaturePostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVerifySignaturePostRequestBody(verifySignaturePostRequestBody: Partial<VerifySignaturePostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { verifySignaturePostRequestBody.backingStoreEnabled = true; },
        "digest": n => { verifySignaturePostRequestBody.digest = n.getByteArrayValue(); },
        "signature": n => { verifySignaturePostRequestBody.signature = n.getByteArrayValue(); },
        "signingKeyId": n => { verifySignaturePostRequestBody.signingKeyId = n.getStringValue(); },
    }
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VerifySignaturePostRequestBody The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVerifySignaturePostRequestBody(writer: SerializationWriter, verifySignaturePostRequestBody: Partial<VerifySignaturePostRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!verifySignaturePostRequestBody || isSerializingDerivedType) { return; }
    writer.writeByteArrayValue("digest", verifySignaturePostRequestBody.digest);
    writer.writeByteArrayValue("signature", verifySignaturePostRequestBody.signature);
    writer.writeStringValue("signingKeyId", verifySignaturePostRequestBody.signingKeyId);
    writer.writeAdditionalData(verifySignaturePostRequestBody.additionalData);
}
export interface VerifySignaturePostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The digest property
     */
    digest?: ArrayBuffer | null;
    /**
     * The signature property
     */
    signature?: ArrayBuffer | null;
    /**
     * The signingKeyId property
     */
    signingKeyId?: string | null;
}
/**
 * Provides operations to call the verifySignature method.
 */
export interface VerifySignatureRequestBuilder extends BaseRequestBuilder<VerifySignatureRequestBuilder> {
    /**
     * Invoke action verifySignature
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<VerificationResult>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated This API will no longer be accessible, please see microsoft.graph.security.informationProtection APIs. as of 2021-02/Beta_SensitivityLabels on 2021-02-15 and will be removed 2022-08-15
     */
     post(body: VerifySignaturePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<VerificationResult | undefined>;
    /**
     * Invoke action verifySignature
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated This API will no longer be accessible, please see microsoft.graph.security.informationProtection APIs. as of 2021-02/Beta_SensitivityLabels on 2021-02-15 and will be removed 2022-08-15
     */
     toPostRequestInformation(body: VerifySignaturePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const VerifySignatureRequestBuilderUriTemplate = "{+baseurl}/groups/{group%2Did}/sites/{site%2Did}/informationProtection/verifySignature";
/**
 * Metadata for all the requests in the request builder.
 */
export const VerifySignatureRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: VerifySignatureRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createVerificationResultFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeVerifySignaturePostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
