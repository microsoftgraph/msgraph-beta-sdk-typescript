/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createSitePageFromDiscriminatorValue, type SitePage } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CanvasLayoutRequestBuilderNavigationMetadata, CanvasLayoutRequestBuilderRequestsMetadata, CanvasLayoutRequestBuilderUriTemplate, type CanvasLayoutRequestBuilder } from './canvasLayout/';
import { CreatedByUserRequestBuilderNavigationMetadata, CreatedByUserRequestBuilderRequestsMetadata, CreatedByUserRequestBuilderUriTemplate, type CreatedByUserRequestBuilder } from './createdByUser/';
import { LastModifiedByUserRequestBuilderNavigationMetadata, LastModifiedByUserRequestBuilderRequestsMetadata, LastModifiedByUserRequestBuilderUriTemplate, type LastModifiedByUserRequestBuilder } from './lastModifiedByUser/';
import { type WebPartsRequestBuilder, WebPartsRequestBuilderNavigationMetadata, WebPartsRequestBuilderRequestsMetadata, WebPartsRequestBuilderUriTemplate } from './webParts/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Casts the previous resource to sitePage.
 */
export interface GraphSitePageRequestBuilder extends BaseRequestBuilder<GraphSitePageRequestBuilder> {
    /**
     * Provides operations to manage the canvasLayout property of the microsoft.graph.sitePage entity.
     */
    get canvasLayout(): CanvasLayoutRequestBuilder;
    /**
     * Provides operations to manage the createdByUser property of the microsoft.graph.baseItem entity.
     */
    get createdByUser(): CreatedByUserRequestBuilder;
    /**
     * Provides operations to manage the lastModifiedByUser property of the microsoft.graph.baseItem entity.
     */
    get lastModifiedByUser(): LastModifiedByUserRequestBuilder;
    /**
     * Provides operations to manage the webParts property of the microsoft.graph.sitePage entity.
     */
    get webParts(): WebPartsRequestBuilder;
    /**
     * Get the item of type microsoft.graph.baseSitePage as microsoft.graph.sitePage
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of SitePage
     */
     get(requestConfiguration?: RequestConfiguration<GraphSitePageRequestBuilderGetQueryParameters> | undefined) : Promise<SitePage | undefined>;
    /**
     * Get the item of type microsoft.graph.baseSitePage as microsoft.graph.sitePage
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<GraphSitePageRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Get the item of type microsoft.graph.baseSitePage as microsoft.graph.sitePage
 */
export interface GraphSitePageRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const GraphSitePageRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const GraphSitePageRequestBuilderNavigationMetadata: Record<Exclude<keyof GraphSitePageRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    canvasLayout: {
        uriTemplate: CanvasLayoutRequestBuilderUriTemplate,
        requestsMetadata: CanvasLayoutRequestBuilderRequestsMetadata,
        navigationMetadata: CanvasLayoutRequestBuilderNavigationMetadata,
    },
    createdByUser: {
        uriTemplate: CreatedByUserRequestBuilderUriTemplate,
        requestsMetadata: CreatedByUserRequestBuilderRequestsMetadata,
        navigationMetadata: CreatedByUserRequestBuilderNavigationMetadata,
    },
    lastModifiedByUser: {
        uriTemplate: LastModifiedByUserRequestBuilderUriTemplate,
        requestsMetadata: LastModifiedByUserRequestBuilderRequestsMetadata,
        navigationMetadata: LastModifiedByUserRequestBuilderNavigationMetadata,
    },
    webParts: {
        uriTemplate: WebPartsRequestBuilderUriTemplate,
        requestsMetadata: WebPartsRequestBuilderRequestsMetadata,
        navigationMetadata: WebPartsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const GraphSitePageRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createSitePageFromDiscriminatorValue,
        queryParametersMapper: GraphSitePageRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Uri template for the request builder.
 */
export const GraphSitePageRequestBuilderUriTemplate = "{+baseurl}/groups/{group%2Did}/sites/{site%2Did}/pages/{baseSitePage%2Did}/graph.sitePage{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
