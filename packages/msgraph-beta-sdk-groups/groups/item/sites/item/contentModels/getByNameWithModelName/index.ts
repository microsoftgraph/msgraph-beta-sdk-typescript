/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createContentModelFromDiscriminatorValue, type ContentModel } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { AddToDriveRequestBuilderRequestsMetadata, type AddToDriveRequestBuilder } from './addToDrive/index.js';
// @ts-ignore
import { GetAppliedDrivesRequestBuilderRequestsMetadata, type GetAppliedDrivesRequestBuilder } from './getAppliedDrives/index.js';
// @ts-ignore
import { RemoveFromDriveRequestBuilderRequestsMetadata, type RemoveFromDriveRequestBuilder } from './removeFromDrive/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to call the getByName method.
 */
export interface GetByNameWithModelNameRequestBuilder extends BaseRequestBuilder<GetByNameWithModelNameRequestBuilder> {
    /**
     * Provides operations to call the addToDrive method.
     */
    get addToDrive(): AddToDriveRequestBuilder;
    /**
     * Provides operations to call the getAppliedDrives method.
     */
    get getAppliedDrives(): GetAppliedDrivesRequestBuilder;
    /**
     * Provides operations to call the removeFromDrive method.
     */
    get removeFromDrive(): RemoveFromDriveRequestBuilder;
    /**
     * Read the properties and relationships of a contentModel object by its model name. The name should be the full model filename, including the file extension; for example, exampleModel.classifier.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ContentModel>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ContentModel | undefined>;
    /**
     * Read the properties and relationships of a contentModel object by its model name. The name should be the full model filename, including the file extension; for example, exampleModel.classifier.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const GetByNameWithModelNameRequestBuilderUriTemplate = "{+baseurl}/groups/{group%2Did}/sites/{site%2Did}/contentModels/getByName(modelName='{modelName}')";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const GetByNameWithModelNameRequestBuilderNavigationMetadata: Record<Exclude<keyof GetByNameWithModelNameRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    addToDrive: {
        requestsMetadata: AddToDriveRequestBuilderRequestsMetadata,
    },
    getAppliedDrives: {
        requestsMetadata: GetAppliedDrivesRequestBuilderRequestsMetadata,
    },
    removeFromDrive: {
        requestsMetadata: RemoveFromDriveRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const GetByNameWithModelNameRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: GetByNameWithModelNameRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createContentModelFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
