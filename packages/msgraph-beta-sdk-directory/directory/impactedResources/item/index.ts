/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createImpactedResourceFromDiscriminatorValue, serializeImpactedResource, type ImpactedResource } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CompleteRequestBuilderRequestsMetadata, type CompleteRequestBuilder } from './complete/';
import { DismissRequestBuilderRequestsMetadata, type DismissRequestBuilder } from './dismiss/';
import { PostponeRequestBuilderRequestsMetadata, type PostponeRequestBuilder } from './postpone/';
import { ReactivateRequestBuilderRequestsMetadata, type ReactivateRequestBuilder } from './reactivate/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the impactedResources property of the microsoft.graph.directory entity.
 */
export interface ImpactedResourceItemRequestBuilder extends BaseRequestBuilder<ImpactedResourceItemRequestBuilder> {
    /**
     * Provides operations to call the complete method.
     */
    get complete(): CompleteRequestBuilder;
    /**
     * Provides operations to call the dismiss method.
     */
    get dismiss(): DismissRequestBuilder;
    /**
     * Provides operations to call the postpone method.
     */
    get postpone(): PostponeRequestBuilder;
    /**
     * Provides operations to call the reactivate method.
     */
    get reactivate(): ReactivateRequestBuilder;
    /**
     * Delete navigation property impactedResources for directory
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get impactedResources from directory
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ImpactedResource>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ImpactedResourceItemRequestBuilderGetQueryParameters> | undefined) : Promise<ImpactedResource | undefined>;
    /**
     * Update the navigation property impactedResources in directory
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ImpactedResource>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: ImpactedResource, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ImpactedResource | undefined>;
    /**
     * Delete navigation property impactedResources for directory
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get impactedResources from directory
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ImpactedResourceItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property impactedResources in directory
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: ImpactedResource, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get impactedResources from directory
 */
export interface ImpactedResourceItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
/**
 * Uri template for the request builder.
 */
export const ImpactedResourceItemRequestBuilderUriTemplate = "{+baseurl}/directory/impactedResources/{impactedResource%2Did}{?%24expand,%24select}";
/**
 * Provides operations to manage the impactedResources property of the microsoft.graph.directory entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the impactedResources property of the microsoft.graph.directory entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AddedDateTime: "addedDateTime",
    AdditionalDetails: "additionalDetails",
    ApiUrl: "apiUrl",
    DisplayName: "displayName",
    LastModifiedBy: "lastModifiedBy",
    LastModifiedDateTime: "lastModifiedDateTime",
    Owner: "owner",
    PortalUrl: "portalUrl",
    PostponeUntilDateTime: "postponeUntilDateTime",
    Rank: "rank",
    RecommendationId: "recommendationId",
    ResourceType: "resourceType",
    Status: "status",
    SubjectId: "subjectId",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ImpactedResourceItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ImpactedResourceItemRequestBuilderNavigationMetadata: Record<Exclude<keyof ImpactedResourceItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    complete: {
        requestsMetadata: CompleteRequestBuilderRequestsMetadata,
    },
    dismiss: {
        requestsMetadata: DismissRequestBuilderRequestsMetadata,
    },
    postpone: {
        requestsMetadata: PostponeRequestBuilderRequestsMetadata,
    },
    reactivate: {
        requestsMetadata: ReactivateRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ImpactedResourceItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: ImpactedResourceItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: ImpactedResourceItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createImpactedResourceFromDiscriminatorValue,
        queryParametersMapper: ImpactedResourceItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: ImpactedResourceItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createImpactedResourceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeImpactedResource,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
