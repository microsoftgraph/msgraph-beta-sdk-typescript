/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createSharedEmailDomainFromDiscriminatorValue, serializeSharedEmailDomain, type SharedEmailDomain } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the sharedEmailDomains property of the microsoft.graph.directory entity.
 */
export interface SharedEmailDomainItemRequestBuilder extends BaseRequestBuilder<SharedEmailDomainItemRequestBuilder> {
    /**
     * Delete navigation property sharedEmailDomains for directory
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get sharedEmailDomains from directory
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of SharedEmailDomain
     */
     get(requestConfiguration?: RequestConfiguration<SharedEmailDomainItemRequestBuilderGetQueryParameters> | undefined) : Promise<SharedEmailDomain | undefined>;
    /**
     * Update the navigation property sharedEmailDomains in directory
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of SharedEmailDomain
     */
     patch(body: SharedEmailDomain, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<SharedEmailDomain | undefined>;
    /**
     * Delete navigation property sharedEmailDomains for directory
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get sharedEmailDomains from directory
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SharedEmailDomainItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property sharedEmailDomains in directory
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: SharedEmailDomain, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get sharedEmailDomains from directory
 */
export interface SharedEmailDomainItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SharedEmailDomainItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SharedEmailDomainItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createSharedEmailDomainFromDiscriminatorValue,
        queryParametersMapper: SharedEmailDomainItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createSharedEmailDomainFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSharedEmailDomain,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const SharedEmailDomainItemRequestBuilderUriTemplate = "{+baseurl}/directory/sharedEmailDomains/{sharedEmailDomain%2Did}{?%24expand,%24select}";
/* tslint:enable */
/* eslint-enable */
