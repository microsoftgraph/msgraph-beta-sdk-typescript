/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createHardwareOathTokenAuthenticationMethodDeviceFromDiscriminatorValue, serializeHardwareOathTokenAuthenticationMethodDevice, type HardwareOathTokenAuthenticationMethodDevice } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { AssignToRequestBuilderNavigationMetadata, AssignToRequestBuilderRequestsMetadata, type AssignToRequestBuilder } from './assignTo/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the hardwareOathDevices property of the microsoft.graph.authenticationMethodDevice entity.
 */
export interface HardwareOathTokenAuthenticationMethodDeviceItemRequestBuilder extends BaseRequestBuilder<HardwareOathTokenAuthenticationMethodDeviceItemRequestBuilder> {
    /**
     * Provides operations to manage the assignTo property of the microsoft.graph.hardwareOathTokenAuthenticationMethodDevice entity.
     */
    get assignTo(): AssignToRequestBuilder;
    /**
     * Delete navigation property hardwareOathDevices for directory
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get hardwareOathDevices from directory
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<HardwareOathTokenAuthenticationMethodDevice>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<HardwareOathTokenAuthenticationMethodDeviceItemRequestBuilderGetQueryParameters> | undefined) : Promise<HardwareOathTokenAuthenticationMethodDevice | undefined>;
    /**
     * Update the navigation property hardwareOathDevices in directory
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<HardwareOathTokenAuthenticationMethodDevice>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: HardwareOathTokenAuthenticationMethodDevice, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<HardwareOathTokenAuthenticationMethodDevice | undefined>;
    /**
     * Delete navigation property hardwareOathDevices for directory
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get hardwareOathDevices from directory
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<HardwareOathTokenAuthenticationMethodDeviceItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property hardwareOathDevices in directory
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: HardwareOathTokenAuthenticationMethodDevice, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get hardwareOathDevices from directory
 */
export interface HardwareOathTokenAuthenticationMethodDeviceItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const HardwareOathTokenAuthenticationMethodDeviceItemRequestBuilderUriTemplate = "{+baseurl}/directory/authenticationMethodDevices/hardwareOathDevices/{hardwareOathTokenAuthenticationMethodDevice%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const HardwareOathTokenAuthenticationMethodDeviceItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const HardwareOathTokenAuthenticationMethodDeviceItemRequestBuilderNavigationMetadata: Record<Exclude<keyof HardwareOathTokenAuthenticationMethodDeviceItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    assignTo: {
        requestsMetadata: AssignToRequestBuilderRequestsMetadata,
        navigationMetadata: AssignToRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const HardwareOathTokenAuthenticationMethodDeviceItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: HardwareOathTokenAuthenticationMethodDeviceItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: HardwareOathTokenAuthenticationMethodDeviceItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createHardwareOathTokenAuthenticationMethodDeviceFromDiscriminatorValue,
        queryParametersMapper: HardwareOathTokenAuthenticationMethodDeviceItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: HardwareOathTokenAuthenticationMethodDeviceItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createHardwareOathTokenAuthenticationMethodDeviceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeHardwareOathTokenAuthenticationMethodDevice,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
