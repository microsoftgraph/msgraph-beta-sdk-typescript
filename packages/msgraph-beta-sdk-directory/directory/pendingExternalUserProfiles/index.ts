/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPendingExternalUserProfileCollectionResponseFromDiscriminatorValue, createPendingExternalUserProfileFromDiscriminatorValue, serializePendingExternalUserProfile, type PendingExternalUserProfile, type PendingExternalUserProfileCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { PendingExternalUserProfileItemRequestBuilderRequestsMetadata, type PendingExternalUserProfileItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the pendingExternalUserProfiles property of the microsoft.graph.directory entity.
 */
export interface PendingExternalUserProfilesRequestBuilder extends BaseRequestBuilder<PendingExternalUserProfilesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the pendingExternalUserProfiles property of the microsoft.graph.directory entity.
     * @param pendingExternalUserProfileId The unique identifier of pendingExternalUserProfile
     * @returns {PendingExternalUserProfileItemRequestBuilder}
     */
     byPendingExternalUserProfileId(pendingExternalUserProfileId: string) : PendingExternalUserProfileItemRequestBuilder;
    /**
     * Retrieve the properties of all pendingExternalUserProfiles.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PendingExternalUserProfileCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/directory-list-pendingexternaluserprofile?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<PendingExternalUserProfilesRequestBuilderGetQueryParameters> | undefined) : Promise<PendingExternalUserProfileCollectionResponse | undefined>;
    /**
     * Create a new pendingExternalUserProfile object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PendingExternalUserProfile>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/directory-post-pendingexternaluserprofile?view=graph-rest-1.0|Find more info here}
     */
     post(body: PendingExternalUserProfile, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<PendingExternalUserProfile | undefined>;
    /**
     * Retrieve the properties of all pendingExternalUserProfiles.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PendingExternalUserProfilesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new pendingExternalUserProfile object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: PendingExternalUserProfile, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve the properties of all pendingExternalUserProfiles.
 */
export interface PendingExternalUserProfilesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const PendingExternalUserProfilesRequestBuilderUriTemplate = "{+baseurl}/directory/pendingExternalUserProfiles{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the pendingExternalUserProfiles property of the microsoft.graph.directory entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the pendingExternalUserProfiles property of the microsoft.graph.directory entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    DeletedDateTime: "deletedDateTime",
    DeletedDateTimeDesc: "deletedDateTime desc",
    Address: "address",
    AddressDesc: "address desc",
    CompanyName: "companyName",
    CompanyNameDesc: "companyName desc",
    CreatedBy: "createdBy",
    CreatedByDesc: "createdBy desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    Department: "department",
    DepartmentDesc: "department desc",
    DisplayName: "displayName",
    DisplayNameDesc: "displayName desc",
    IsDiscoverable: "isDiscoverable",
    IsDiscoverableDesc: "isDiscoverable desc",
    IsEnabled: "isEnabled",
    IsEnabledDesc: "isEnabled desc",
    JobTitle: "jobTitle",
    JobTitleDesc: "jobTitle desc",
    PhoneNumber: "phoneNumber",
    PhoneNumberDesc: "phoneNumber desc",
    SupervisorId: "supervisorId",
    SupervisorIdDesc: "supervisorId desc",
} as const;
/**
 * Provides operations to manage the pendingExternalUserProfiles property of the microsoft.graph.directory entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    DeletedDateTime: "deletedDateTime",
    Address: "address",
    CompanyName: "companyName",
    CreatedBy: "createdBy",
    CreatedDateTime: "createdDateTime",
    Department: "department",
    DisplayName: "displayName",
    IsDiscoverable: "isDiscoverable",
    IsEnabled: "isEnabled",
    JobTitle: "jobTitle",
    PhoneNumber: "phoneNumber",
    SupervisorId: "supervisorId",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PendingExternalUserProfilesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PendingExternalUserProfilesRequestBuilderNavigationMetadata: Record<Exclude<keyof PendingExternalUserProfilesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byPendingExternalUserProfileId: {
        requestsMetadata: PendingExternalUserProfileItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["pendingExternalUserProfile%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PendingExternalUserProfilesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: PendingExternalUserProfilesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPendingExternalUserProfileCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: PendingExternalUserProfilesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: PendingExternalUserProfilesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPendingExternalUserProfileFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePendingExternalUserProfile,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
