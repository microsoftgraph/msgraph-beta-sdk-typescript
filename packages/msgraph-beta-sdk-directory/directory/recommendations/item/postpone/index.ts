/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createRecommendationFromDiscriminatorValue, serializeRecommendation, type Recommendation } from '@microsoft/msgraph-beta-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PostponePostRequestBody}
 */
export function createPostponePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPostponePostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoPostponePostRequestBody(postponePostRequestBody: Partial<PostponePostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { postponePostRequestBody.backingStoreEnabled = true; },
        "postponeUntilDateTime": n => { postponePostRequestBody.postponeUntilDateTime = n.getDateValue(); },
    }
}
export interface PostponePostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The postponeUntilDateTime property
     */
    postponeUntilDateTime?: Date;
}
/**
 * Provides operations to call the postpone method.
 */
export interface PostponeRequestBuilder extends BaseRequestBuilder<PostponeRequestBuilder> {
    /**
     * Postpone action on a recommendation object to a specified future date and time by marking its status as postponed. On the date and time provided, Microsoft Entra ID will automatically update the status of the recommendation object to active again.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Recommendation>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/recommendation-postpone?view=graph-rest-1.0|Find more info here}
     */
     post(body: PostponePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Recommendation | undefined>;
    /**
     * Postpone action on a recommendation object to a specified future date and time by marking its status as postponed. On the date and time provided, Microsoft Entra ID will automatically update the status of the recommendation object to active again.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: PostponePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializePostponePostRequestBody(writer: SerializationWriter, postponePostRequestBody: Partial<PostponePostRequestBody> | undefined = {}) : void {
    writer.writeDateValue("postponeUntilDateTime", postponePostRequestBody.postponeUntilDateTime);
    writer.writeAdditionalData(postponePostRequestBody.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const PostponeRequestBuilderUriTemplate = "{+baseurl}/directory/recommendations/{recommendation%2Did}/postpone";
/**
 * Metadata for all the requests in the request builder.
 */
export const PostponeRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: PostponeRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createRecommendationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePostponePostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
