/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createRecommendationFromDiscriminatorValue, serializeRecommendation, type Recommendation } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CompleteRequestBuilderRequestsMetadata, CompleteRequestBuilderUriTemplate, type CompleteRequestBuilder } from './complete/';
import { DismissRequestBuilderRequestsMetadata, DismissRequestBuilderUriTemplate, type DismissRequestBuilder } from './dismiss/';
import { ImpactedResourcesRequestBuilderNavigationMetadata, ImpactedResourcesRequestBuilderRequestsMetadata, ImpactedResourcesRequestBuilderUriTemplate, type ImpactedResourcesRequestBuilder } from './impactedResources/';
import { PostponeRequestBuilderRequestsMetadata, PostponeRequestBuilderUriTemplate, type PostponeRequestBuilder } from './postpone/';
import { ReactivateRequestBuilderRequestsMetadata, ReactivateRequestBuilderUriTemplate, type ReactivateRequestBuilder } from './reactivate/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the recommendations property of the microsoft.graph.directory entity.
 */
export interface RecommendationItemRequestBuilder extends BaseRequestBuilder<RecommendationItemRequestBuilder> {
    /**
     * Provides operations to call the complete method.
     */
    get complete(): CompleteRequestBuilder;
    /**
     * Provides operations to call the dismiss method.
     */
    get dismiss(): DismissRequestBuilder;
    /**
     * Provides operations to manage the impactedResources property of the microsoft.graph.recommendationBase entity.
     */
    get impactedResources(): ImpactedResourcesRequestBuilder;
    /**
     * Provides operations to call the postpone method.
     */
    get postpone(): PostponeRequestBuilder;
    /**
     * Provides operations to call the reactivate method.
     */
    get reactivate(): ReactivateRequestBuilder;
    /**
     * Delete navigation property recommendations for directory
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Read the properties and relationships of a recommendation object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of Recommendation
     * @see {@link https://learn.microsoft.com/graph/api/recommendation-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<RecommendationItemRequestBuilderGetQueryParameters> | undefined) : Promise<Recommendation | undefined>;
    /**
     * Update the navigation property recommendations in directory
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of Recommendation
     */
     patch(body: Recommendation, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Recommendation | undefined>;
    /**
     * Delete navigation property recommendations for directory
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Read the properties and relationships of a recommendation object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<RecommendationItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property recommendations in directory
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: Recommendation, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Read the properties and relationships of a recommendation object.
 */
export interface RecommendationItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const RecommendationItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const RecommendationItemRequestBuilderNavigationMetadata: Record<Exclude<keyof RecommendationItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    complete: {
        uriTemplate: CompleteRequestBuilderUriTemplate,
        requestsMetadata: CompleteRequestBuilderRequestsMetadata,
    },
    dismiss: {
        uriTemplate: DismissRequestBuilderUriTemplate,
        requestsMetadata: DismissRequestBuilderRequestsMetadata,
    },
    impactedResources: {
        uriTemplate: ImpactedResourcesRequestBuilderUriTemplate,
        requestsMetadata: ImpactedResourcesRequestBuilderRequestsMetadata,
        navigationMetadata: ImpactedResourcesRequestBuilderNavigationMetadata,
    },
    postpone: {
        uriTemplate: PostponeRequestBuilderUriTemplate,
        requestsMetadata: PostponeRequestBuilderRequestsMetadata,
    },
    reactivate: {
        uriTemplate: ReactivateRequestBuilderUriTemplate,
        requestsMetadata: ReactivateRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const RecommendationItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createRecommendationFromDiscriminatorValue,
        queryParametersMapper: RecommendationItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createRecommendationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeRecommendation,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const RecommendationItemRequestBuilderUriTemplate = "{+baseurl}/directory/recommendations/{recommendation%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
