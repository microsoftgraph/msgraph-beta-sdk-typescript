/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createCertificateBasedAuthPkiFromDiscriminatorValue, serializeCertificateBasedAuthPki, type CertificateBasedAuthPki } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { CertificateAuthoritiesRequestBuilderNavigationMetadata, CertificateAuthoritiesRequestBuilderRequestsMetadata, type CertificateAuthoritiesRequestBuilder } from './certificateAuthorities/index.js';
// @ts-ignore
import { type UploadRequestBuilder, UploadRequestBuilderRequestsMetadata } from './upload/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the certificateBasedAuthConfigurations property of the microsoft.graph.publicKeyInfrastructureRoot entity.
 */
export interface CertificateBasedAuthPkiItemRequestBuilder extends BaseRequestBuilder<CertificateBasedAuthPkiItemRequestBuilder> {
    /**
     * Provides operations to manage the certificateAuthorities property of the microsoft.graph.certificateBasedAuthPki entity.
     */
    get certificateAuthorities(): CertificateAuthoritiesRequestBuilder;
    /**
     * Provides operations to call the upload method.
     */
    get upload(): UploadRequestBuilder;
    /**
     * Delete a certificateBasedAuthPki object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/publickeyinfrastructureroot-delete-certificatebasedauthconfigurations?view=graph-rest-beta|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Read the properties and relationships of a certificateBasedAuthPki object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<CertificateBasedAuthPki>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/certificatebasedauthpki-get?view=graph-rest-beta|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<CertificateBasedAuthPkiItemRequestBuilderGetQueryParameters> | undefined) : Promise<CertificateBasedAuthPki | undefined>;
    /**
     * Update the properties of a certificateBasedAuthPki object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<CertificateBasedAuthPki>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/certificatebasedauthpki-update?view=graph-rest-beta|Find more info here}
     */
     patch(body: CertificateBasedAuthPki, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<CertificateBasedAuthPki | undefined>;
    /**
     * Delete a certificateBasedAuthPki object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Read the properties and relationships of a certificateBasedAuthPki object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<CertificateBasedAuthPkiItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of a certificateBasedAuthPki object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: CertificateBasedAuthPki, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Read the properties and relationships of a certificateBasedAuthPki object.
 */
export interface CertificateBasedAuthPkiItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const CertificateBasedAuthPkiItemRequestBuilderUriTemplate = "{+baseurl}/directory/publicKeyInfrastructure/certificateBasedAuthConfigurations/{certificateBasedAuthPki%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const CertificateBasedAuthPkiItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const CertificateBasedAuthPkiItemRequestBuilderNavigationMetadata: Record<Exclude<keyof CertificateBasedAuthPkiItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    certificateAuthorities: {
        requestsMetadata: CertificateAuthoritiesRequestBuilderRequestsMetadata,
        navigationMetadata: CertificateAuthoritiesRequestBuilderNavigationMetadata,
    },
    upload: {
        requestsMetadata: UploadRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const CertificateBasedAuthPkiItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: CertificateBasedAuthPkiItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: CertificateBasedAuthPkiItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createCertificateBasedAuthPkiFromDiscriminatorValue,
        queryParametersMapper: CertificateBasedAuthPkiItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: CertificateBasedAuthPkiItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createCertificateBasedAuthPkiFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeCertificateBasedAuthPki,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
