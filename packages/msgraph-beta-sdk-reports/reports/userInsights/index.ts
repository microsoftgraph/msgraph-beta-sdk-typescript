/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createUserInsightsRootFromDiscriminatorValue, serializeUserInsightsRoot, type UserInsightsRoot } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { DailyRequestBuilderNavigationMetadata, DailyRequestBuilderRequestsMetadata, DailyRequestBuilderUriTemplate, type DailyRequestBuilder } from './daily/';
import { MonthlyRequestBuilderNavigationMetadata, MonthlyRequestBuilderRequestsMetadata, MonthlyRequestBuilderUriTemplate, type MonthlyRequestBuilder } from './monthly/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the userInsights property of the microsoft.graph.reportRoot entity.
 */
export interface UserInsightsRequestBuilder extends BaseRequestBuilder<UserInsightsRequestBuilder> {
    /**
     * Provides operations to manage the daily property of the microsoft.graph.userInsightsRoot entity.
     */
    get daily(): DailyRequestBuilder;
    /**
     * Provides operations to manage the monthly property of the microsoft.graph.userInsightsRoot entity.
     */
    get monthly(): MonthlyRequestBuilder;
    /**
     * Delete navigation property userInsights for reports
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Represents a collection of user activities on applications in a tenant that is configured for Microsoft Entra External ID for customers.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of UserInsightsRoot
     */
     get(requestConfiguration?: RequestConfiguration<UserInsightsRequestBuilderGetQueryParameters> | undefined) : Promise<UserInsightsRoot | undefined>;
    /**
     * Update the navigation property userInsights in reports
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of UserInsightsRoot
     */
     patch(body: UserInsightsRoot, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<UserInsightsRoot | undefined>;
    /**
     * Delete navigation property userInsights for reports
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Represents a collection of user activities on applications in a tenant that is configured for Microsoft Entra External ID for customers.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<UserInsightsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property userInsights in reports
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: UserInsightsRoot, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Represents a collection of user activities on applications in a tenant that is configured for Microsoft Entra External ID for customers.
 */
export interface UserInsightsRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const UserInsightsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const UserInsightsRequestBuilderNavigationMetadata: Record<Exclude<keyof UserInsightsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    daily: {
        uriTemplate: DailyRequestBuilderUriTemplate,
        requestsMetadata: DailyRequestBuilderRequestsMetadata,
        navigationMetadata: DailyRequestBuilderNavigationMetadata,
    },
    monthly: {
        uriTemplate: MonthlyRequestBuilderUriTemplate,
        requestsMetadata: MonthlyRequestBuilderRequestsMetadata,
        navigationMetadata: MonthlyRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const UserInsightsRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createUserInsightsRootFromDiscriminatorValue,
        queryParametersMapper: UserInsightsRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createUserInsightsRootFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUserInsightsRoot,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const UserInsightsRequestBuilderUriTemplate = "{+baseurl}/reports/userInsights{?%24expand,%24select}";
/* tslint:enable */
/* eslint-enable */
