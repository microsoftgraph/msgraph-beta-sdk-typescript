/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createMonthlyUserInsightMetricsRootFromDiscriminatorValue, serializeMonthlyUserInsightMetricsRoot, type MonthlyUserInsightMetricsRoot } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { ActiveUsersRequestBuilderNavigationMetadata, ActiveUsersRequestBuilderRequestsMetadata, ActiveUsersRequestBuilderUriTemplate, type ActiveUsersRequestBuilder } from './activeUsers/';
import { ActiveUsersBreakdownRequestBuilderNavigationMetadata, ActiveUsersBreakdownRequestBuilderRequestsMetadata, ActiveUsersBreakdownRequestBuilderUriTemplate, type ActiveUsersBreakdownRequestBuilder } from './activeUsersBreakdown/';
import { AuthenticationsRequestBuilderNavigationMetadata, AuthenticationsRequestBuilderRequestsMetadata, AuthenticationsRequestBuilderUriTemplate, type AuthenticationsRequestBuilder } from './authentications/';
import { InactiveUsersRequestBuilderNavigationMetadata, InactiveUsersRequestBuilderRequestsMetadata, InactiveUsersRequestBuilderUriTemplate, type InactiveUsersRequestBuilder } from './inactiveUsers/';
import { InactiveUsersByApplicationRequestBuilderNavigationMetadata, InactiveUsersByApplicationRequestBuilderRequestsMetadata, InactiveUsersByApplicationRequestBuilderUriTemplate, type InactiveUsersByApplicationRequestBuilder } from './inactiveUsersByApplication/';
import { MfaCompletionsRequestBuilderNavigationMetadata, MfaCompletionsRequestBuilderRequestsMetadata, MfaCompletionsRequestBuilderUriTemplate, type MfaCompletionsRequestBuilder } from './mfaCompletions/';
import { RequestsRequestBuilderNavigationMetadata, RequestsRequestBuilderRequestsMetadata, RequestsRequestBuilderUriTemplate, type RequestsRequestBuilder } from './requests/';
import { SignUpsRequestBuilderNavigationMetadata, SignUpsRequestBuilderRequestsMetadata, SignUpsRequestBuilderUriTemplate, type SignUpsRequestBuilder } from './signUps/';
import { SummaryRequestBuilderNavigationMetadata, SummaryRequestBuilderRequestsMetadata, SummaryRequestBuilderUriTemplate, type SummaryRequestBuilder } from './summary/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the monthly property of the microsoft.graph.userInsightsRoot entity.
 */
export interface MonthlyRequestBuilder extends BaseRequestBuilder<MonthlyRequestBuilder> {
    /**
     * Provides operations to manage the activeUsers property of the microsoft.graph.monthlyUserInsightMetricsRoot entity.
     */
    get activeUsers(): ActiveUsersRequestBuilder;
    /**
     * Provides operations to manage the activeUsersBreakdown property of the microsoft.graph.monthlyUserInsightMetricsRoot entity.
     */
    get activeUsersBreakdown(): ActiveUsersBreakdownRequestBuilder;
    /**
     * Provides operations to manage the authentications property of the microsoft.graph.monthlyUserInsightMetricsRoot entity.
     */
    get authentications(): AuthenticationsRequestBuilder;
    /**
     * Provides operations to manage the inactiveUsers property of the microsoft.graph.monthlyUserInsightMetricsRoot entity.
     */
    get inactiveUsers(): InactiveUsersRequestBuilder;
    /**
     * Provides operations to manage the inactiveUsersByApplication property of the microsoft.graph.monthlyUserInsightMetricsRoot entity.
     */
    get inactiveUsersByApplication(): InactiveUsersByApplicationRequestBuilder;
    /**
     * Provides operations to manage the mfaCompletions property of the microsoft.graph.monthlyUserInsightMetricsRoot entity.
     */
    get mfaCompletions(): MfaCompletionsRequestBuilder;
    /**
     * Provides operations to manage the requests property of the microsoft.graph.monthlyUserInsightMetricsRoot entity.
     */
    get requests(): RequestsRequestBuilder;
    /**
     * Provides operations to manage the signUps property of the microsoft.graph.monthlyUserInsightMetricsRoot entity.
     */
    get signUps(): SignUpsRequestBuilder;
    /**
     * Provides operations to manage the summary property of the microsoft.graph.monthlyUserInsightMetricsRoot entity.
     */
    get summary(): SummaryRequestBuilder;
    /**
     * Delete navigation property monthly for reports
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Summaries of monthly user activities on apps registered in your tenant that is configured for Microsoft Entra External ID for customers.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of MonthlyUserInsightMetricsRoot
     */
     get(requestConfiguration?: RequestConfiguration<MonthlyRequestBuilderGetQueryParameters> | undefined) : Promise<MonthlyUserInsightMetricsRoot | undefined>;
    /**
     * Update the navigation property monthly in reports
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of MonthlyUserInsightMetricsRoot
     */
     patch(body: MonthlyUserInsightMetricsRoot, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<MonthlyUserInsightMetricsRoot | undefined>;
    /**
     * Delete navigation property monthly for reports
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Summaries of monthly user activities on apps registered in your tenant that is configured for Microsoft Entra External ID for customers.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<MonthlyRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property monthly in reports
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: MonthlyUserInsightMetricsRoot, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Summaries of monthly user activities on apps registered in your tenant that is configured for Microsoft Entra External ID for customers.
 */
export interface MonthlyRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const MonthlyRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const MonthlyRequestBuilderNavigationMetadata: Record<Exclude<keyof MonthlyRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    activeUsers: {
        uriTemplate: ActiveUsersRequestBuilderUriTemplate,
        requestsMetadata: ActiveUsersRequestBuilderRequestsMetadata,
        navigationMetadata: ActiveUsersRequestBuilderNavigationMetadata,
    },
    activeUsersBreakdown: {
        uriTemplate: ActiveUsersBreakdownRequestBuilderUriTemplate,
        requestsMetadata: ActiveUsersBreakdownRequestBuilderRequestsMetadata,
        navigationMetadata: ActiveUsersBreakdownRequestBuilderNavigationMetadata,
    },
    authentications: {
        uriTemplate: AuthenticationsRequestBuilderUriTemplate,
        requestsMetadata: AuthenticationsRequestBuilderRequestsMetadata,
        navigationMetadata: AuthenticationsRequestBuilderNavigationMetadata,
    },
    inactiveUsers: {
        uriTemplate: InactiveUsersRequestBuilderUriTemplate,
        requestsMetadata: InactiveUsersRequestBuilderRequestsMetadata,
        navigationMetadata: InactiveUsersRequestBuilderNavigationMetadata,
    },
    inactiveUsersByApplication: {
        uriTemplate: InactiveUsersByApplicationRequestBuilderUriTemplate,
        requestsMetadata: InactiveUsersByApplicationRequestBuilderRequestsMetadata,
        navigationMetadata: InactiveUsersByApplicationRequestBuilderNavigationMetadata,
    },
    mfaCompletions: {
        uriTemplate: MfaCompletionsRequestBuilderUriTemplate,
        requestsMetadata: MfaCompletionsRequestBuilderRequestsMetadata,
        navigationMetadata: MfaCompletionsRequestBuilderNavigationMetadata,
    },
    requests: {
        uriTemplate: RequestsRequestBuilderUriTemplate,
        requestsMetadata: RequestsRequestBuilderRequestsMetadata,
        navigationMetadata: RequestsRequestBuilderNavigationMetadata,
    },
    signUps: {
        uriTemplate: SignUpsRequestBuilderUriTemplate,
        requestsMetadata: SignUpsRequestBuilderRequestsMetadata,
        navigationMetadata: SignUpsRequestBuilderNavigationMetadata,
    },
    summary: {
        uriTemplate: SummaryRequestBuilderUriTemplate,
        requestsMetadata: SummaryRequestBuilderRequestsMetadata,
        navigationMetadata: SummaryRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const MonthlyRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createMonthlyUserInsightMetricsRootFromDiscriminatorValue,
        queryParametersMapper: MonthlyRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createMonthlyUserInsightMetricsRootFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeMonthlyUserInsightMetricsRoot,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const MonthlyRequestBuilderUriTemplate = "{+baseurl}/reports/userInsights/monthly{?%24expand,%24select}";
/* tslint:enable */
/* eslint-enable */
