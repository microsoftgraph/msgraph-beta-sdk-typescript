/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createOffice365ActiveUserDetailFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, serializeOffice365ActiveUserDetail, type BaseCollectionPaginationCountResponse, type Office365ActiveUserDetail } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type DateOnly, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GetOffice365ActiveUserDetailWithDateGetResponse}
 */
export function createGetOffice365ActiveUserDetailWithDateGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGetOffice365ActiveUserDetailWithDateGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoGetOffice365ActiveUserDetailWithDateGetResponse(getOffice365ActiveUserDetailWithDateGetResponse: Partial<GetOffice365ActiveUserDetailWithDateGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(getOffice365ActiveUserDetailWithDateGetResponse),
        "value": n => { getOffice365ActiveUserDetailWithDateGetResponse.value = n.getCollectionOfObjectValues<Office365ActiveUserDetail>(createOffice365ActiveUserDetailFromDiscriminatorValue); },
    }
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export interface GetOffice365ActiveUserDetailWithDateGetResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Office365ActiveUserDetail[];
}
/**
 * Provides operations to call the getOffice365ActiveUserDetail method.
 */
export interface GetOffice365ActiveUserDetailWithDateRequestBuilder extends BaseRequestBuilder<GetOffice365ActiveUserDetailWithDateRequestBuilder> {
    /**
     * Invoke function getOffice365ActiveUserDetail
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<GetOffice365ActiveUserDetailWithDateGetResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<GetOffice365ActiveUserDetailWithDateRequestBuilderGetQueryParameters> | undefined) : Promise<GetOffice365ActiveUserDetailWithDateGetResponse | undefined>;
    /**
     * Invoke function getOffice365ActiveUserDetail
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<GetOffice365ActiveUserDetailWithDateRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Invoke function getOffice365ActiveUserDetail
 */
export interface GetOffice365ActiveUserDetailWithDateRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeGetOffice365ActiveUserDetailWithDateGetResponse(writer: SerializationWriter, getOffice365ActiveUserDetailWithDateGetResponse: Partial<GetOffice365ActiveUserDetailWithDateGetResponse> | undefined = {}) : void {
    serializeBaseCollectionPaginationCountResponse(writer, getOffice365ActiveUserDetailWithDateGetResponse)
    writer.writeCollectionOfObjectValues<Office365ActiveUserDetail>("value", getOffice365ActiveUserDetailWithDateGetResponse.value, serializeOffice365ActiveUserDetail);
}
/**
 * Uri template for the request builder.
 */
export const GetOffice365ActiveUserDetailWithDateRequestBuilderUriTemplate = "{+baseurl}/reports/getOffice365ActiveUserDetail(date={date}){?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to call the getOffice365ActiveUserDetail method.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const GetOffice365ActiveUserDetailWithDateRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const GetOffice365ActiveUserDetailWithDateRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: GetOffice365ActiveUserDetailWithDateRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createGetOffice365ActiveUserDetailWithDateGetResponseFromDiscriminatorValue,
        queryParametersMapper: GetOffice365ActiveUserDetailWithDateRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Provides operations to call the getOffice365ActiveUserDetail method.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    AssignedProducts: "assignedProducts",
    AssignedProductsDesc: "assignedProducts desc",
    DeletedDate: "deletedDate",
    DeletedDateDesc: "deletedDate desc",
    DisplayName: "displayName",
    DisplayNameDesc: "displayName desc",
    ExchangeLastActivityDate: "exchangeLastActivityDate",
    ExchangeLastActivityDateDesc: "exchangeLastActivityDate desc",
    ExchangeLicenseAssignDate: "exchangeLicenseAssignDate",
    ExchangeLicenseAssignDateDesc: "exchangeLicenseAssignDate desc",
    HasExchangeLicense: "hasExchangeLicense",
    HasExchangeLicenseDesc: "hasExchangeLicense desc",
    HasOneDriveLicense: "hasOneDriveLicense",
    HasOneDriveLicenseDesc: "hasOneDriveLicense desc",
    HasSharePointLicense: "hasSharePointLicense",
    HasSharePointLicenseDesc: "hasSharePointLicense desc",
    HasSkypeForBusinessLicense: "hasSkypeForBusinessLicense",
    HasSkypeForBusinessLicenseDesc: "hasSkypeForBusinessLicense desc",
    HasTeamsLicense: "hasTeamsLicense",
    HasTeamsLicenseDesc: "hasTeamsLicense desc",
    HasYammerLicense: "hasYammerLicense",
    HasYammerLicenseDesc: "hasYammerLicense desc",
    IsDeleted: "isDeleted",
    IsDeletedDesc: "isDeleted desc",
    OneDriveLastActivityDate: "oneDriveLastActivityDate",
    OneDriveLastActivityDateDesc: "oneDriveLastActivityDate desc",
    OneDriveLicenseAssignDate: "oneDriveLicenseAssignDate",
    OneDriveLicenseAssignDateDesc: "oneDriveLicenseAssignDate desc",
    ReportRefreshDate: "reportRefreshDate",
    ReportRefreshDateDesc: "reportRefreshDate desc",
    SharePointLastActivityDate: "sharePointLastActivityDate",
    SharePointLastActivityDateDesc: "sharePointLastActivityDate desc",
    SharePointLicenseAssignDate: "sharePointLicenseAssignDate",
    SharePointLicenseAssignDateDesc: "sharePointLicenseAssignDate desc",
    SkypeForBusinessLastActivityDate: "skypeForBusinessLastActivityDate",
    SkypeForBusinessLastActivityDateDesc: "skypeForBusinessLastActivityDate desc",
    SkypeForBusinessLicenseAssignDate: "skypeForBusinessLicenseAssignDate",
    SkypeForBusinessLicenseAssignDateDesc: "skypeForBusinessLicenseAssignDate desc",
    TeamsLastActivityDate: "teamsLastActivityDate",
    TeamsLastActivityDateDesc: "teamsLastActivityDate desc",
    TeamsLicenseAssignDate: "teamsLicenseAssignDate",
    TeamsLicenseAssignDateDesc: "teamsLicenseAssignDate desc",
    UserPrincipalName: "userPrincipalName",
    UserPrincipalNameDesc: "userPrincipalName desc",
    YammerLastActivityDate: "yammerLastActivityDate",
    YammerLastActivityDateDesc: "yammerLastActivityDate desc",
    YammerLicenseAssignDate: "yammerLicenseAssignDate",
    YammerLicenseAssignDateDesc: "yammerLicenseAssignDate desc",
} as const;
/**
 * Provides operations to call the getOffice365ActiveUserDetail method.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AssignedProducts: "assignedProducts",
    DeletedDate: "deletedDate",
    DisplayName: "displayName",
    ExchangeLastActivityDate: "exchangeLastActivityDate",
    ExchangeLicenseAssignDate: "exchangeLicenseAssignDate",
    HasExchangeLicense: "hasExchangeLicense",
    HasOneDriveLicense: "hasOneDriveLicense",
    HasSharePointLicense: "hasSharePointLicense",
    HasSkypeForBusinessLicense: "hasSkypeForBusinessLicense",
    HasTeamsLicense: "hasTeamsLicense",
    HasYammerLicense: "hasYammerLicense",
    IsDeleted: "isDeleted",
    OneDriveLastActivityDate: "oneDriveLastActivityDate",
    OneDriveLicenseAssignDate: "oneDriveLicenseAssignDate",
    ReportRefreshDate: "reportRefreshDate",
    SharePointLastActivityDate: "sharePointLastActivityDate",
    SharePointLicenseAssignDate: "sharePointLicenseAssignDate",
    SkypeForBusinessLastActivityDate: "skypeForBusinessLastActivityDate",
    SkypeForBusinessLicenseAssignDate: "skypeForBusinessLicenseAssignDate",
    TeamsLastActivityDate: "teamsLastActivityDate",
    TeamsLicenseAssignDate: "teamsLicenseAssignDate",
    UserPrincipalName: "userPrincipalName",
    YammerLastActivityDate: "yammerLastActivityDate",
    YammerLicenseAssignDate: "yammerLicenseAssignDate",
} as const;
/* tslint:enable */
/* eslint-enable */
