/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { createBillingFromDiscriminatorValue, serializeBilling, type Billing } from '@microsoft/msgraph-beta-sdk/models/partners/billing/';
import { ManifestsRequestBuilderNavigationMetadata, ManifestsRequestBuilderRequestsMetadata, ManifestsRequestBuilderUriTemplate, type ManifestsRequestBuilder } from './manifests/';
import { OperationsRequestBuilderNavigationMetadata, OperationsRequestBuilderRequestsMetadata, OperationsRequestBuilderUriTemplate, type OperationsRequestBuilder } from './operations/';
import { type UsageRequestBuilder, UsageRequestBuilderNavigationMetadata, UsageRequestBuilderRequestsMetadata, UsageRequestBuilderUriTemplate } from './usage/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the billing property of the microsoft.graph.partners entity.
 */
export interface BillingRequestBuilder extends BaseRequestBuilder<BillingRequestBuilder> {
    /**
     * Provides operations to manage the manifests property of the microsoft.graph.partners.billing.billing entity.
     */
    get manifests(): ManifestsRequestBuilder;
    /**
     * Provides operations to manage the operations property of the microsoft.graph.partners.billing.billing entity.
     */
    get operations(): OperationsRequestBuilder;
    /**
     * Provides operations to manage the usage property of the microsoft.graph.partners.billing.billing entity.
     */
    get usage(): UsageRequestBuilder;
    /**
     * Delete navigation property billing for reports
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Represents billing details for billed and unbilled data.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of Billing
     */
     get(requestConfiguration?: RequestConfiguration<BillingRequestBuilderGetQueryParameters> | undefined) : Promise<Billing | undefined>;
    /**
     * Update the navigation property billing in reports
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of Billing
     */
     patch(body: Billing, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Billing | undefined>;
    /**
     * Delete navigation property billing for reports
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Represents billing details for billed and unbilled data.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<BillingRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property billing in reports
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: Billing, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Represents billing details for billed and unbilled data.
 */
export interface BillingRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const BillingRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const BillingRequestBuilderNavigationMetadata: Record<Exclude<keyof BillingRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    manifests: {
        uriTemplate: ManifestsRequestBuilderUriTemplate,
        requestsMetadata: ManifestsRequestBuilderRequestsMetadata,
        navigationMetadata: ManifestsRequestBuilderNavigationMetadata,
    },
    operations: {
        uriTemplate: OperationsRequestBuilderUriTemplate,
        requestsMetadata: OperationsRequestBuilderRequestsMetadata,
        navigationMetadata: OperationsRequestBuilderNavigationMetadata,
    },
    usage: {
        uriTemplate: UsageRequestBuilderUriTemplate,
        requestsMetadata: UsageRequestBuilderRequestsMetadata,
        navigationMetadata: UsageRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const BillingRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createBillingFromDiscriminatorValue,
        queryParametersMapper: BillingRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createBillingFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeBilling,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const BillingRequestBuilderUriTemplate = "{+baseurl}/reports/partners/billing{?%24expand,%24select}";
/* tslint:enable */
/* eslint-enable */
