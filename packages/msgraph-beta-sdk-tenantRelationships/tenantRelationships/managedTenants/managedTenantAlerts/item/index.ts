/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createManagedTenantAlertFromDiscriminatorValue, serializeManagedTenantAlert, type ManagedTenantAlert } from '@microsoft/msgraph-beta-sdk/models/managedTenants/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { AlertLogsRequestBuilderNavigationMetadata, AlertLogsRequestBuilderRequestsMetadata, type AlertLogsRequestBuilder } from './alertLogs/index.js';
// @ts-ignore
import { AlertRuleRequestBuilderRequestsMetadata, type AlertRuleRequestBuilder } from './alertRule/index.js';
// @ts-ignore
import { ApiNotificationsRequestBuilderNavigationMetadata, ApiNotificationsRequestBuilderRequestsMetadata, type ApiNotificationsRequestBuilder } from './apiNotifications/index.js';
// @ts-ignore
import { EmailNotificationsRequestBuilderNavigationMetadata, EmailNotificationsRequestBuilderRequestsMetadata, type EmailNotificationsRequestBuilder } from './emailNotifications/index.js';
// @ts-ignore
import { MicrosoftGraphManagedTenantsAddUserInputLogRequestBuilderRequestsMetadata, type MicrosoftGraphManagedTenantsAddUserInputLogRequestBuilder } from './microsoftGraphManagedTenantsAddUserInputLog/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the managedTenantAlerts property of the microsoft.graph.managedTenants.managedTenant entity.
 */
export interface ManagedTenantAlertItemRequestBuilder extends BaseRequestBuilder<ManagedTenantAlertItemRequestBuilder> {
    /**
     * Provides operations to manage the alertLogs property of the microsoft.graph.managedTenants.managedTenantAlert entity.
     */
    get alertLogs(): AlertLogsRequestBuilder;
    /**
     * Provides operations to manage the alertRule property of the microsoft.graph.managedTenants.managedTenantAlert entity.
     */
    get alertRule(): AlertRuleRequestBuilder;
    /**
     * Provides operations to manage the apiNotifications property of the microsoft.graph.managedTenants.managedTenantAlert entity.
     */
    get apiNotifications(): ApiNotificationsRequestBuilder;
    /**
     * Provides operations to manage the emailNotifications property of the microsoft.graph.managedTenants.managedTenantAlert entity.
     */
    get emailNotifications(): EmailNotificationsRequestBuilder;
    /**
     * Provides operations to call the addUserInputLog method.
     */
    get microsoftGraphManagedTenantsAddUserInputLog(): MicrosoftGraphManagedTenantsAddUserInputLogRequestBuilder;
    /**
     * Delete navigation property managedTenantAlerts for tenantRelationships
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get managedTenantAlerts from tenantRelationships
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ManagedTenantAlert>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ManagedTenantAlertItemRequestBuilderGetQueryParameters> | undefined) : Promise<ManagedTenantAlert | undefined>;
    /**
     * Update the navigation property managedTenantAlerts in tenantRelationships
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ManagedTenantAlert>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: ManagedTenantAlert, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ManagedTenantAlert | undefined>;
    /**
     * Delete navigation property managedTenantAlerts for tenantRelationships
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get managedTenantAlerts from tenantRelationships
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ManagedTenantAlertItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property managedTenantAlerts in tenantRelationships
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: ManagedTenantAlert, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get managedTenantAlerts from tenantRelationships
 */
export interface ManagedTenantAlertItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const ManagedTenantAlertItemRequestBuilderUriTemplate = "{+baseurl}/tenantRelationships/managedTenants/managedTenantAlerts/{managedTenantAlert%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ManagedTenantAlertItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ManagedTenantAlertItemRequestBuilderNavigationMetadata: Record<Exclude<keyof ManagedTenantAlertItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    alertLogs: {
        requestsMetadata: AlertLogsRequestBuilderRequestsMetadata,
        navigationMetadata: AlertLogsRequestBuilderNavigationMetadata,
    },
    alertRule: {
        requestsMetadata: AlertRuleRequestBuilderRequestsMetadata,
    },
    apiNotifications: {
        requestsMetadata: ApiNotificationsRequestBuilderRequestsMetadata,
        navigationMetadata: ApiNotificationsRequestBuilderNavigationMetadata,
    },
    emailNotifications: {
        requestsMetadata: EmailNotificationsRequestBuilderRequestsMetadata,
        navigationMetadata: EmailNotificationsRequestBuilderNavigationMetadata,
    },
    microsoftGraphManagedTenantsAddUserInputLog: {
        requestsMetadata: MicrosoftGraphManagedTenantsAddUserInputLogRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ManagedTenantAlertItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: ManagedTenantAlertItemRequestBuilderUriTemplate,
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: ManagedTenantAlertItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createManagedTenantAlertFromDiscriminatorValue,
        queryParametersMapper: ManagedTenantAlertItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: ManagedTenantAlertItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createManagedTenantAlertFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeManagedTenantAlert,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
