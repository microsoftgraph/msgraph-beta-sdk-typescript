/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createManagedTenantEmailNotificationCollectionResponseFromDiscriminatorValue, type ManagedTenantEmailNotificationCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/managedTenants/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { ManagedTenantEmailNotificationItemRequestBuilderRequestsMetadata, type ManagedTenantEmailNotificationItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the emailNotifications property of the microsoft.graph.managedTenants.managedTenantAlert entity.
 */
export interface EmailNotificationsRequestBuilder extends BaseRequestBuilder<EmailNotificationsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the emailNotifications property of the microsoft.graph.managedTenants.managedTenantAlert entity.
     * @param managedTenantEmailNotificationId The unique identifier of managedTenantEmailNotification
     * @returns {ManagedTenantEmailNotificationItemRequestBuilder}
     */
     byManagedTenantEmailNotificationId(managedTenantEmailNotificationId: string) : ManagedTenantEmailNotificationItemRequestBuilder;
    /**
     * Get emailNotifications from tenantRelationships
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ManagedTenantEmailNotificationCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<EmailNotificationsRequestBuilderGetQueryParameters> | undefined) : Promise<ManagedTenantEmailNotificationCollectionResponse | undefined>;
    /**
     * Get emailNotifications from tenantRelationships
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<EmailNotificationsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Get emailNotifications from tenantRelationships
 */
export interface EmailNotificationsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const EmailNotificationsRequestBuilderUriTemplate = "{+baseurl}/tenantRelationships/managedTenants/managedTenantAlerts/{managedTenantAlert%2Did}/emailNotifications{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const EmailNotificationsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const EmailNotificationsRequestBuilderNavigationMetadata: Record<Exclude<keyof EmailNotificationsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byManagedTenantEmailNotificationId: {
        requestsMetadata: ManagedTenantEmailNotificationItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["managedTenantEmailNotification%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const EmailNotificationsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: EmailNotificationsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createManagedTenantEmailNotificationCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: EmailNotificationsRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Provides operations to manage the emailNotifications property of the microsoft.graph.managedTenants.managedTenantAlert entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Alert: "alert",
} as const;
/**
 * Provides operations to manage the emailNotifications property of the microsoft.graph.managedTenants.managedTenantAlert entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    CreatedByUserId: "createdByUserId",
    CreatedByUserIdDesc: "createdByUserId desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    EmailAddresses: "emailAddresses",
    EmailAddressesDesc: "emailAddresses desc",
    EmailBody: "emailBody",
    EmailBodyDesc: "emailBody desc",
    LastActionByUserId: "lastActionByUserId",
    LastActionByUserIdDesc: "lastActionByUserId desc",
    LastActionDateTime: "lastActionDateTime",
    LastActionDateTimeDesc: "lastActionDateTime desc",
    Subject: "subject",
    SubjectDesc: "subject desc",
} as const;
/**
 * Provides operations to manage the emailNotifications property of the microsoft.graph.managedTenants.managedTenantAlert entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    CreatedByUserId: "createdByUserId",
    CreatedDateTime: "createdDateTime",
    EmailAddresses: "emailAddresses",
    EmailBody: "emailBody",
    LastActionByUserId: "lastActionByUserId",
    LastActionDateTime: "lastActionDateTime",
    Subject: "subject",
    Alert: "alert",
} as const;
/* tslint:enable */
/* eslint-enable */
