/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '@microsoft/msgraph-beta-sdk/models/';
// @ts-ignore
import { createTenantGroupFromDiscriminatorValue, serializeTenantGroup, type TenantGroup } from '@microsoft/msgraph-beta-sdk/models/managedTenants/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantSearchPostRequestBody}
 */
export function createTenantSearchPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantSearchPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantSearchPostResponse}
 */
export function createTenantSearchPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantSearchPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoTenantSearchPostRequestBody(tenantSearchPostRequestBody: Partial<TenantSearchPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { tenantSearchPostRequestBody.backingStoreEnabled = true; },
        "tenantId": n => { tenantSearchPostRequestBody.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoTenantSearchPostResponse(tenantSearchPostResponse: Partial<TenantSearchPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(tenantSearchPostResponse),
        "value": n => { tenantSearchPostResponse.value = n.getCollectionOfObjectValues<TenantGroup>(createTenantGroupFromDiscriminatorValue); },
    }
}
/**
 * Provides operations to call the tenantSearch method.
 */
export interface MicrosoftGraphManagedTenantsTenantSearchRequestBuilder extends BaseRequestBuilder<MicrosoftGraphManagedTenantsTenantSearchRequestBuilder> {
    /**
     * Invoke action tenantSearch
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<TenantSearchPostResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: TenantSearchPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<TenantSearchPostResponse | undefined>;
    /**
     * Invoke action tenantSearch
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: TenantSearchPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeTenantSearchPostRequestBody(writer: SerializationWriter, tenantSearchPostRequestBody: Partial<TenantSearchPostRequestBody> | undefined = {}) : void {
    writer.writeStringValue("tenantId", tenantSearchPostRequestBody.tenantId);
    writer.writeAdditionalData(tenantSearchPostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeTenantSearchPostResponse(writer: SerializationWriter, tenantSearchPostResponse: Partial<TenantSearchPostResponse> | undefined = {}) : void {
    serializeBaseCollectionPaginationCountResponse(writer, tenantSearchPostResponse)
    writer.writeCollectionOfObjectValues<TenantGroup>("value", tenantSearchPostResponse.value, serializeTenantGroup);
}
export interface TenantSearchPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The tenantId property
     */
    tenantId?: string;
}
export interface TenantSearchPostResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: TenantGroup[];
}
/**
 * Uri template for the request builder.
 */
export const MicrosoftGraphManagedTenantsTenantSearchRequestBuilderUriTemplate = "{+baseurl}/tenantRelationships/managedTenants/tenantGroups/microsoft.graph.managedTenants.tenantSearch";
/**
 * Metadata for all the requests in the request builder.
 */
export const MicrosoftGraphManagedTenantsTenantSearchRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: MicrosoftGraphManagedTenantsTenantSearchRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createTenantSearchPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeTenantSearchPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
