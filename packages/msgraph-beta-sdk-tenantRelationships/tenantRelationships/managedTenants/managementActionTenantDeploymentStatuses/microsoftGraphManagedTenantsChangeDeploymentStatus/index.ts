/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createManagementActionDeploymentStatusFromDiscriminatorValue, serializeManagementActionDeploymentStatus, type ManagementActionDeploymentStatus } from '@microsoft/msgraph-beta-sdk/models/managedTenants/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ChangeDeploymentStatusPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The managementActionId property
     */
    managementActionId?: string | null;
    /**
     * The managementTemplateId property
     */
    managementTemplateId?: string | null;
    /**
     * The managementTemplateVersion property
     */
    managementTemplateVersion?: number | null;
    /**
     * The status property
     */
    status?: string | null;
    /**
     * The tenantGroupId property
     */
    tenantGroupId?: string | null;
    /**
     * The tenantId property
     */
    tenantId?: string | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ChangeDeploymentStatusPostRequestBody}
 */
// @ts-ignore
export function createChangeDeploymentStatusPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoChangeDeploymentStatusPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoChangeDeploymentStatusPostRequestBody(changeDeploymentStatusPostRequestBody: Partial<ChangeDeploymentStatusPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { changeDeploymentStatusPostRequestBody.backingStoreEnabled = true; },
        "managementActionId": n => { changeDeploymentStatusPostRequestBody.managementActionId = n.getStringValue(); },
        "managementTemplateId": n => { changeDeploymentStatusPostRequestBody.managementTemplateId = n.getStringValue(); },
        "managementTemplateVersion": n => { changeDeploymentStatusPostRequestBody.managementTemplateVersion = n.getNumberValue(); },
        "status": n => { changeDeploymentStatusPostRequestBody.status = n.getStringValue(); },
        "tenantGroupId": n => { changeDeploymentStatusPostRequestBody.tenantGroupId = n.getStringValue(); },
        "tenantId": n => { changeDeploymentStatusPostRequestBody.tenantId = n.getStringValue(); },
    }
}
/**
 * Provides operations to call the changeDeploymentStatus method.
 */
export interface MicrosoftGraphManagedTenantsChangeDeploymentStatusRequestBuilder extends BaseRequestBuilder<MicrosoftGraphManagedTenantsChangeDeploymentStatusRequestBuilder> {
    /**
     * Changes the tenant level deployment status for the management action. This information is used to provide insights into what management actions are in a specific state. As example there might be a plan to apply the require multi-factor authentication for admins, so it would be ideal to change the status to planned to reflect the appropriate status.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ManagementActionDeploymentStatus>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: ChangeDeploymentStatusPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ManagementActionDeploymentStatus | undefined>;
    /**
     * Changes the tenant level deployment status for the management action. This information is used to provide insights into what management actions are in a specific state. As example there might be a plan to apply the require multi-factor authentication for admins, so it would be ideal to change the status to planned to reflect the appropriate status.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ChangeDeploymentStatusPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeChangeDeploymentStatusPostRequestBody(writer: SerializationWriter, changeDeploymentStatusPostRequestBody: Partial<ChangeDeploymentStatusPostRequestBody> | undefined | null = {}) : void {
    if (changeDeploymentStatusPostRequestBody) {
        writer.writeStringValue("managementActionId", changeDeploymentStatusPostRequestBody.managementActionId);
        writer.writeStringValue("managementTemplateId", changeDeploymentStatusPostRequestBody.managementTemplateId);
        writer.writeNumberValue("managementTemplateVersion", changeDeploymentStatusPostRequestBody.managementTemplateVersion);
        writer.writeStringValue("status", changeDeploymentStatusPostRequestBody.status);
        writer.writeStringValue("tenantGroupId", changeDeploymentStatusPostRequestBody.tenantGroupId);
        writer.writeStringValue("tenantId", changeDeploymentStatusPostRequestBody.tenantId);
        writer.writeAdditionalData(changeDeploymentStatusPostRequestBody.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const MicrosoftGraphManagedTenantsChangeDeploymentStatusRequestBuilderUriTemplate = "{+baseurl}/tenantRelationships/managedTenants/managementActionTenantDeploymentStatuses/microsoft.graph.managedTenants.changeDeploymentStatus";
/**
 * Metadata for all the requests in the request builder.
 */
export const MicrosoftGraphManagedTenantsChangeDeploymentStatusRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: MicrosoftGraphManagedTenantsChangeDeploymentStatusRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createManagementActionDeploymentStatusFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeChangeDeploymentStatusPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
