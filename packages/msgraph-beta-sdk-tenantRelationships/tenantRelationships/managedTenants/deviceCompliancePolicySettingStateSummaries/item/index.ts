/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDeviceCompliancePolicySettingStateSummaryFromDiscriminatorValue, serializeDeviceCompliancePolicySettingStateSummary, type DeviceCompliancePolicySettingStateSummary } from '@microsoft/msgraph-beta-sdk/models/managedTenants/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the deviceCompliancePolicySettingStateSummaries property of the microsoft.graph.managedTenants.managedTenant entity.
 */
export interface DeviceCompliancePolicySettingStateSummaryItemRequestBuilder extends BaseRequestBuilder<DeviceCompliancePolicySettingStateSummaryItemRequestBuilder> {
    /**
     * Delete navigation property deviceCompliancePolicySettingStateSummaries for tenantRelationships
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Read the properties and relationships of a deviceCompliancePolicySettingStateSummary object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceCompliancePolicySettingStateSummary>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/managedtenants-devicecompliancepolicysettingstatesummary-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<DeviceCompliancePolicySettingStateSummaryItemRequestBuilderGetQueryParameters> | undefined) : Promise<DeviceCompliancePolicySettingStateSummary | undefined>;
    /**
     * Update the navigation property deviceCompliancePolicySettingStateSummaries in tenantRelationships
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceCompliancePolicySettingStateSummary>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: DeviceCompliancePolicySettingStateSummary, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DeviceCompliancePolicySettingStateSummary | undefined>;
    /**
     * Delete navigation property deviceCompliancePolicySettingStateSummaries for tenantRelationships
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Read the properties and relationships of a deviceCompliancePolicySettingStateSummary object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DeviceCompliancePolicySettingStateSummaryItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property deviceCompliancePolicySettingStateSummaries in tenantRelationships
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: DeviceCompliancePolicySettingStateSummary, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Read the properties and relationships of a deviceCompliancePolicySettingStateSummary object.
 */
export interface DeviceCompliancePolicySettingStateSummaryItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const DeviceCompliancePolicySettingStateSummaryItemRequestBuilderUriTemplate = "{+baseurl}/tenantRelationships/managedTenants/deviceCompliancePolicySettingStateSummaries/{deviceCompliancePolicySettingStateSummary%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DeviceCompliancePolicySettingStateSummaryItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DeviceCompliancePolicySettingStateSummaryItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: DeviceCompliancePolicySettingStateSummaryItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: DeviceCompliancePolicySettingStateSummaryItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceCompliancePolicySettingStateSummaryFromDiscriminatorValue,
        queryParametersMapper: DeviceCompliancePolicySettingStateSummaryItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: DeviceCompliancePolicySettingStateSummaryItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceCompliancePolicySettingStateSummaryFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDeviceCompliancePolicySettingStateSummary,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the deviceCompliancePolicySettingStateSummaries property of the microsoft.graph.managedTenants.managedTenant entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the deviceCompliancePolicySettingStateSummaries property of the microsoft.graph.managedTenants.managedTenant entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    ConflictDeviceCount: "conflictDeviceCount",
    ErrorDeviceCount: "errorDeviceCount",
    FailedDeviceCount: "failedDeviceCount",
    IntuneAccountId: "intuneAccountId",
    IntuneSettingId: "intuneSettingId",
    LastRefreshedDateTime: "lastRefreshedDateTime",
    NotApplicableDeviceCount: "notApplicableDeviceCount",
    PendingDeviceCount: "pendingDeviceCount",
    PolicyType: "policyType",
    SettingName: "settingName",
    SucceededDeviceCount: "succeededDeviceCount",
    TenantDisplayName: "tenantDisplayName",
    TenantId: "tenantId",
} as const;
/* tslint:enable */
/* eslint-enable */
