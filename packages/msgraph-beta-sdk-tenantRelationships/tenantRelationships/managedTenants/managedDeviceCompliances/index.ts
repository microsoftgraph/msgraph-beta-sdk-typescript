/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createManagedDeviceComplianceCollectionResponseFromDiscriminatorValue, createManagedDeviceComplianceFromDiscriminatorValue, serializeManagedDeviceCompliance, type ManagedDeviceCompliance, type ManagedDeviceComplianceCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/managedTenants/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { ManagedDeviceComplianceItemRequestBuilderRequestsMetadata, type ManagedDeviceComplianceItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the managedDeviceCompliances property of the microsoft.graph.managedTenants.managedTenant entity.
 */
export interface ManagedDeviceCompliancesRequestBuilder extends BaseRequestBuilder<ManagedDeviceCompliancesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the managedDeviceCompliances property of the microsoft.graph.managedTenants.managedTenant entity.
     * @param managedDeviceComplianceId The unique identifier of managedDeviceCompliance
     * @returns {ManagedDeviceComplianceItemRequestBuilder}
     */
     byManagedDeviceComplianceId(managedDeviceComplianceId: string) : ManagedDeviceComplianceItemRequestBuilder;
    /**
     * Get a list of the managedDeviceCompliance objects and their properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ManagedDeviceComplianceCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/managedtenants-managedtenant-list-manageddevicecompliances?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<ManagedDeviceCompliancesRequestBuilderGetQueryParameters> | undefined) : Promise<ManagedDeviceComplianceCollectionResponse | undefined>;
    /**
     * Create new navigation property to managedDeviceCompliances for tenantRelationships
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ManagedDeviceCompliance>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: ManagedDeviceCompliance, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ManagedDeviceCompliance | undefined>;
    /**
     * Get a list of the managedDeviceCompliance objects and their properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ManagedDeviceCompliancesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to managedDeviceCompliances for tenantRelationships
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ManagedDeviceCompliance, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get a list of the managedDeviceCompliance objects and their properties.
 */
export interface ManagedDeviceCompliancesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const ManagedDeviceCompliancesRequestBuilderUriTemplate = "{+baseurl}/tenantRelationships/managedTenants/managedDeviceCompliances{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the managedDeviceCompliances property of the microsoft.graph.managedTenants.managedTenant entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the managedDeviceCompliances property of the microsoft.graph.managedTenants.managedTenant entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    ComplianceStatus: "complianceStatus",
    ComplianceStatusDesc: "complianceStatus desc",
    DeviceType: "deviceType",
    DeviceTypeDesc: "deviceType desc",
    InGracePeriodUntilDateTime: "inGracePeriodUntilDateTime",
    InGracePeriodUntilDateTimeDesc: "inGracePeriodUntilDateTime desc",
    LastRefreshedDateTime: "lastRefreshedDateTime",
    LastRefreshedDateTimeDesc: "lastRefreshedDateTime desc",
    LastSyncDateTime: "lastSyncDateTime",
    LastSyncDateTimeDesc: "lastSyncDateTime desc",
    ManagedDeviceId: "managedDeviceId",
    ManagedDeviceIdDesc: "managedDeviceId desc",
    ManagedDeviceName: "managedDeviceName",
    ManagedDeviceNameDesc: "managedDeviceName desc",
    Manufacturer: "manufacturer",
    ManufacturerDesc: "manufacturer desc",
    Model: "model",
    ModelDesc: "model desc",
    OsDescription: "osDescription",
    OsDescriptionDesc: "osDescription desc",
    OsVersion: "osVersion",
    OsVersionDesc: "osVersion desc",
    OwnerType: "ownerType",
    OwnerTypeDesc: "ownerType desc",
    TenantDisplayName: "tenantDisplayName",
    TenantDisplayNameDesc: "tenantDisplayName desc",
    TenantId: "tenantId",
    TenantIdDesc: "tenantId desc",
} as const;
/**
 * Provides operations to manage the managedDeviceCompliances property of the microsoft.graph.managedTenants.managedTenant entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    ComplianceStatus: "complianceStatus",
    DeviceType: "deviceType",
    InGracePeriodUntilDateTime: "inGracePeriodUntilDateTime",
    LastRefreshedDateTime: "lastRefreshedDateTime",
    LastSyncDateTime: "lastSyncDateTime",
    ManagedDeviceId: "managedDeviceId",
    ManagedDeviceName: "managedDeviceName",
    Manufacturer: "manufacturer",
    Model: "model",
    OsDescription: "osDescription",
    OsVersion: "osVersion",
    OwnerType: "ownerType",
    TenantDisplayName: "tenantDisplayName",
    TenantId: "tenantId",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ManagedDeviceCompliancesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ManagedDeviceCompliancesRequestBuilderNavigationMetadata: Record<Exclude<keyof ManagedDeviceCompliancesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byManagedDeviceComplianceId: {
        requestsMetadata: ManagedDeviceComplianceItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["managedDeviceCompliance%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ManagedDeviceCompliancesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ManagedDeviceCompliancesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createManagedDeviceComplianceCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: ManagedDeviceCompliancesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: ManagedDeviceCompliancesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createManagedDeviceComplianceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeManagedDeviceCompliance,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
