/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createManagementTemplateCollectionTenantSummaryCollectionResponseFromDiscriminatorValue, createManagementTemplateCollectionTenantSummaryFromDiscriminatorValue, serializeManagementTemplateCollectionTenantSummary, type ManagementTemplateCollectionTenantSummary, type ManagementTemplateCollectionTenantSummaryCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/managedTenants/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { ManagementTemplateCollectionTenantSummaryItemRequestBuilderRequestsMetadata, type ManagementTemplateCollectionTenantSummaryItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the managementTemplateCollectionTenantSummaries property of the microsoft.graph.managedTenants.managedTenant entity.
 */
export interface ManagementTemplateCollectionTenantSummariesRequestBuilder extends BaseRequestBuilder<ManagementTemplateCollectionTenantSummariesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the managementTemplateCollectionTenantSummaries property of the microsoft.graph.managedTenants.managedTenant entity.
     * @param managementTemplateCollectionTenantSummaryId The unique identifier of managementTemplateCollectionTenantSummary
     * @returns {ManagementTemplateCollectionTenantSummaryItemRequestBuilder}
     */
     byManagementTemplateCollectionTenantSummaryId(managementTemplateCollectionTenantSummaryId: string) : ManagementTemplateCollectionTenantSummaryItemRequestBuilder;
    /**
     * Get managementTemplateCollectionTenantSummaries from tenantRelationships
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ManagementTemplateCollectionTenantSummaryCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ManagementTemplateCollectionTenantSummariesRequestBuilderGetQueryParameters> | undefined) : Promise<ManagementTemplateCollectionTenantSummaryCollectionResponse | undefined>;
    /**
     * Create new navigation property to managementTemplateCollectionTenantSummaries for tenantRelationships
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ManagementTemplateCollectionTenantSummary>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: ManagementTemplateCollectionTenantSummary, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ManagementTemplateCollectionTenantSummary | undefined>;
    /**
     * Get managementTemplateCollectionTenantSummaries from tenantRelationships
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ManagementTemplateCollectionTenantSummariesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to managementTemplateCollectionTenantSummaries for tenantRelationships
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ManagementTemplateCollectionTenantSummary, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get managementTemplateCollectionTenantSummaries from tenantRelationships
 */
export interface ManagementTemplateCollectionTenantSummariesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const ManagementTemplateCollectionTenantSummariesRequestBuilderUriTemplate = "{+baseurl}/tenantRelationships/managedTenants/managementTemplateCollectionTenantSummaries{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the managementTemplateCollectionTenantSummaries property of the microsoft.graph.managedTenants.managedTenant entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the managementTemplateCollectionTenantSummaries property of the microsoft.graph.managedTenants.managedTenant entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    CompleteStepsCount: "completeStepsCount",
    CompleteStepsCountDesc: "completeStepsCount desc",
    CompleteUsersCount: "completeUsersCount",
    CompleteUsersCountDesc: "completeUsersCount desc",
    CreatedByUserId: "createdByUserId",
    CreatedByUserIdDesc: "createdByUserId desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    DismissedStepsCount: "dismissedStepsCount",
    DismissedStepsCountDesc: "dismissedStepsCount desc",
    ExcludedUsersCount: "excludedUsersCount",
    ExcludedUsersCountDesc: "excludedUsersCount desc",
    ExcludedUsersDistinctCount: "excludedUsersDistinctCount",
    ExcludedUsersDistinctCountDesc: "excludedUsersDistinctCount desc",
    IncompleteStepsCount: "incompleteStepsCount",
    IncompleteStepsCountDesc: "incompleteStepsCount desc",
    IncompleteUsersCount: "incompleteUsersCount",
    IncompleteUsersCountDesc: "incompleteUsersCount desc",
    IneligibleStepsCount: "ineligibleStepsCount",
    IneligibleStepsCountDesc: "ineligibleStepsCount desc",
    IsComplete: "isComplete",
    IsCompleteDesc: "isComplete desc",
    LastActionByUserId: "lastActionByUserId",
    LastActionByUserIdDesc: "lastActionByUserId desc",
    LastActionDateTime: "lastActionDateTime",
    LastActionDateTimeDesc: "lastActionDateTime desc",
    ManagementTemplateCollectionDisplayName: "managementTemplateCollectionDisplayName",
    ManagementTemplateCollectionDisplayNameDesc: "managementTemplateCollectionDisplayName desc",
    ManagementTemplateCollectionId: "managementTemplateCollectionId",
    ManagementTemplateCollectionIdDesc: "managementTemplateCollectionId desc",
    RegressedStepsCount: "regressedStepsCount",
    RegressedStepsCountDesc: "regressedStepsCount desc",
    RegressedUsersCount: "regressedUsersCount",
    RegressedUsersCountDesc: "regressedUsersCount desc",
    TenantId: "tenantId",
    TenantIdDesc: "tenantId desc",
    UnlicensedUsersCount: "unlicensedUsersCount",
    UnlicensedUsersCountDesc: "unlicensedUsersCount desc",
} as const;
/**
 * Provides operations to manage the managementTemplateCollectionTenantSummaries property of the microsoft.graph.managedTenants.managedTenant entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    CompleteStepsCount: "completeStepsCount",
    CompleteUsersCount: "completeUsersCount",
    CreatedByUserId: "createdByUserId",
    CreatedDateTime: "createdDateTime",
    DismissedStepsCount: "dismissedStepsCount",
    ExcludedUsersCount: "excludedUsersCount",
    ExcludedUsersDistinctCount: "excludedUsersDistinctCount",
    IncompleteStepsCount: "incompleteStepsCount",
    IncompleteUsersCount: "incompleteUsersCount",
    IneligibleStepsCount: "ineligibleStepsCount",
    IsComplete: "isComplete",
    LastActionByUserId: "lastActionByUserId",
    LastActionDateTime: "lastActionDateTime",
    ManagementTemplateCollectionDisplayName: "managementTemplateCollectionDisplayName",
    ManagementTemplateCollectionId: "managementTemplateCollectionId",
    RegressedStepsCount: "regressedStepsCount",
    RegressedUsersCount: "regressedUsersCount",
    TenantId: "tenantId",
    UnlicensedUsersCount: "unlicensedUsersCount",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ManagementTemplateCollectionTenantSummariesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ManagementTemplateCollectionTenantSummariesRequestBuilderNavigationMetadata: Record<Exclude<keyof ManagementTemplateCollectionTenantSummariesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byManagementTemplateCollectionTenantSummaryId: {
        requestsMetadata: ManagementTemplateCollectionTenantSummaryItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["managementTemplateCollectionTenantSummary%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ManagementTemplateCollectionTenantSummariesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ManagementTemplateCollectionTenantSummariesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createManagementTemplateCollectionTenantSummaryCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: ManagementTemplateCollectionTenantSummariesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: ManagementTemplateCollectionTenantSummariesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createManagementTemplateCollectionTenantSummaryFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeManagementTemplateCollectionTenantSummary,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
