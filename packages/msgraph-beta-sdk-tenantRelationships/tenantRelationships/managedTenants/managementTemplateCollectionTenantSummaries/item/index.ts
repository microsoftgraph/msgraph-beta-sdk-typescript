/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createManagementTemplateCollectionTenantSummaryFromDiscriminatorValue, serializeManagementTemplateCollectionTenantSummary, type ManagementTemplateCollectionTenantSummary } from '@microsoft/msgraph-beta-sdk/models/managedTenants/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the managementTemplateCollectionTenantSummaries property of the microsoft.graph.managedTenants.managedTenant entity.
 */
export interface ManagementTemplateCollectionTenantSummaryItemRequestBuilder extends BaseRequestBuilder<ManagementTemplateCollectionTenantSummaryItemRequestBuilder> {
    /**
     * Delete navigation property managementTemplateCollectionTenantSummaries for tenantRelationships
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get managementTemplateCollectionTenantSummaries from tenantRelationships
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ManagementTemplateCollectionTenantSummary>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ManagementTemplateCollectionTenantSummaryItemRequestBuilderGetQueryParameters> | undefined) : Promise<ManagementTemplateCollectionTenantSummary | undefined>;
    /**
     * Update the navigation property managementTemplateCollectionTenantSummaries in tenantRelationships
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ManagementTemplateCollectionTenantSummary>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: ManagementTemplateCollectionTenantSummary, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ManagementTemplateCollectionTenantSummary | undefined>;
    /**
     * Delete navigation property managementTemplateCollectionTenantSummaries for tenantRelationships
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get managementTemplateCollectionTenantSummaries from tenantRelationships
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ManagementTemplateCollectionTenantSummaryItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property managementTemplateCollectionTenantSummaries in tenantRelationships
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: ManagementTemplateCollectionTenantSummary, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get managementTemplateCollectionTenantSummaries from tenantRelationships
 */
export interface ManagementTemplateCollectionTenantSummaryItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
/**
 * Uri template for the request builder.
 */
export const ManagementTemplateCollectionTenantSummaryItemRequestBuilderUriTemplate = "{+baseurl}/tenantRelationships/managedTenants/managementTemplateCollectionTenantSummaries/{managementTemplateCollectionTenantSummary%2Did}{?%24expand,%24select}";
/**
 * Provides operations to manage the managementTemplateCollectionTenantSummaries property of the microsoft.graph.managedTenants.managedTenant entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the managementTemplateCollectionTenantSummaries property of the microsoft.graph.managedTenants.managedTenant entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    CompleteStepsCount: "completeStepsCount",
    CompleteUsersCount: "completeUsersCount",
    CreatedByUserId: "createdByUserId",
    CreatedDateTime: "createdDateTime",
    DismissedStepsCount: "dismissedStepsCount",
    ExcludedUsersCount: "excludedUsersCount",
    ExcludedUsersDistinctCount: "excludedUsersDistinctCount",
    IncompleteStepsCount: "incompleteStepsCount",
    IncompleteUsersCount: "incompleteUsersCount",
    IneligibleStepsCount: "ineligibleStepsCount",
    IsComplete: "isComplete",
    LastActionByUserId: "lastActionByUserId",
    LastActionDateTime: "lastActionDateTime",
    ManagementTemplateCollectionDisplayName: "managementTemplateCollectionDisplayName",
    ManagementTemplateCollectionId: "managementTemplateCollectionId",
    RegressedStepsCount: "regressedStepsCount",
    RegressedUsersCount: "regressedUsersCount",
    TenantId: "tenantId",
    UnlicensedUsersCount: "unlicensedUsersCount",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ManagementTemplateCollectionTenantSummaryItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ManagementTemplateCollectionTenantSummaryItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: ManagementTemplateCollectionTenantSummaryItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: ManagementTemplateCollectionTenantSummaryItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createManagementTemplateCollectionTenantSummaryFromDiscriminatorValue,
        queryParametersMapper: ManagementTemplateCollectionTenantSummaryItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: ManagementTemplateCollectionTenantSummaryItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createManagementTemplateCollectionTenantSummaryFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeManagementTemplateCollectionTenantSummary,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
