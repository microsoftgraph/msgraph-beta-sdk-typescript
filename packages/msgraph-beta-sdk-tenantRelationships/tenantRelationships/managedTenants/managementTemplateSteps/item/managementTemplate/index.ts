/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createManagementTemplateFromDiscriminatorValue, type ManagementTemplate } from '@microsoft/msgraph-beta-sdk/models/managedTenants/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the managementTemplate property of the microsoft.graph.managedTenants.managementTemplateStep entity.
 */
export interface ManagementTemplateRequestBuilder extends BaseRequestBuilder<ManagementTemplateRequestBuilder> {
    /**
     * Get managementTemplate from tenantRelationships
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ManagementTemplate>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ManagementTemplateRequestBuilderGetQueryParameters> | undefined) : Promise<ManagementTemplate | undefined>;
    /**
     * Get managementTemplate from tenantRelationships
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ManagementTemplateRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Get managementTemplate from tenantRelationships
 */
export interface ManagementTemplateRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
/**
 * Uri template for the request builder.
 */
export const ManagementTemplateRequestBuilderUriTemplate = "{+baseurl}/tenantRelationships/managedTenants/managementTemplateSteps/{managementTemplateStep%2Did}/managementTemplate{?%24expand,%24select}";
/**
 * Provides operations to manage the managementTemplate property of the microsoft.graph.managedTenants.managementTemplateStep entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    ManagementTemplateCollections: "managementTemplateCollections",
    ManagementTemplateSteps: "managementTemplateSteps",
} as const;
/**
 * Provides operations to manage the managementTemplate property of the microsoft.graph.managedTenants.managementTemplateStep entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    Category: "category",
    CreatedByUserId: "createdByUserId",
    CreatedDateTime: "createdDateTime",
    Description: "description",
    DisplayName: "displayName",
    InformationLinks: "informationLinks",
    LastActionByUserId: "lastActionByUserId",
    LastActionDateTime: "lastActionDateTime",
    Parameters: "parameters",
    Priority: "priority",
    Provider: "provider",
    UserImpact: "userImpact",
    Version: "version",
    WorkloadActions: "workloadActions",
    ManagementTemplateCollections: "managementTemplateCollections",
    ManagementTemplateSteps: "managementTemplateSteps",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ManagementTemplateRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ManagementTemplateRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ManagementTemplateRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createManagementTemplateFromDiscriminatorValue,
        queryParametersMapper: ManagementTemplateRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
