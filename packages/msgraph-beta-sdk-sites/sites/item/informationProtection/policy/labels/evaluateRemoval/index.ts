/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createContentInfoFromDiscriminatorValue, createDowngradeJustificationFromDiscriminatorValue, createInformationProtectionActionFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, serializeContentInfo, serializeDowngradeJustification, serializeInformationProtectionAction, type BaseCollectionPaginationCountResponse, type ContentInfo, type DowngradeJustification, type InformationProtectionAction } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EvaluateRemovalPostRequestBody}
 */
// @ts-ignore
export function createEvaluateRemovalPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEvaluateRemovalPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EvaluateRemovalPostResponse}
 */
// @ts-ignore
export function createEvaluateRemovalPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEvaluateRemovalPostResponse;
}
/**
 * The deserialization information for the current model
 * @param EvaluateRemovalPostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEvaluateRemovalPostRequestBody(evaluateRemovalPostRequestBody: Partial<EvaluateRemovalPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { evaluateRemovalPostRequestBody.backingStoreEnabled = true; },
        "contentInfo": n => { evaluateRemovalPostRequestBody.contentInfo = n.getObjectValue<ContentInfo>(createContentInfoFromDiscriminatorValue); },
        "downgradeJustification": n => { evaluateRemovalPostRequestBody.downgradeJustification = n.getObjectValue<DowngradeJustification>(createDowngradeJustificationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EvaluateRemovalPostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEvaluateRemovalPostResponse(evaluateRemovalPostResponse: Partial<EvaluateRemovalPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(evaluateRemovalPostResponse),
        "value": n => { evaluateRemovalPostResponse.value = n.getCollectionOfObjectValues<InformationProtectionAction>(createInformationProtectionActionFromDiscriminatorValue); },
    }
}
export interface EvaluateRemovalPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The contentInfo property
     */
    contentInfo?: ContentInfo | null;
    /**
     * The downgradeJustification property
     */
    downgradeJustification?: DowngradeJustification | null;
}
export interface EvaluateRemovalPostResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: InformationProtectionAction[] | null;
}
/**
 * Provides operations to call the evaluateRemoval method.
 */
export interface EvaluateRemovalRequestBuilder extends BaseRequestBuilder<EvaluateRemovalRequestBuilder> {
    /**
     * Indicate to the consuming application what actions it should take to remove the label information. Given contentInfo as an input, which includes existing content metadata key/value pairs, the API returns an informationProtectionAction that contains some combination of one of more of the following: 
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<EvaluateRemovalPostResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated This API will no longer be accessible, please see microsoft.graph.security.informationProtection APIs. as of 2021-02/Beta_SensitivityLabels on 2021-02-15 and will be removed 2022-08-15
     */
     post(body: EvaluateRemovalPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<EvaluateRemovalPostResponse | undefined>;
    /**
     * Indicate to the consuming application what actions it should take to remove the label information. Given contentInfo as an input, which includes existing content metadata key/value pairs, the API returns an informationProtectionAction that contains some combination of one of more of the following: 
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated This API will no longer be accessible, please see microsoft.graph.security.informationProtection APIs. as of 2021-02/Beta_SensitivityLabels on 2021-02-15 and will be removed 2022-08-15
     */
     toPostRequestInformation(body: EvaluateRemovalPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param EvaluateRemovalPostRequestBody The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEvaluateRemovalPostRequestBody(writer: SerializationWriter, evaluateRemovalPostRequestBody: Partial<EvaluateRemovalPostRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!evaluateRemovalPostRequestBody || isSerializingDerivedType) { return; }
    writer.writeObjectValue<ContentInfo>("contentInfo", evaluateRemovalPostRequestBody.contentInfo, serializeContentInfo);
    writer.writeObjectValue<DowngradeJustification>("downgradeJustification", evaluateRemovalPostRequestBody.downgradeJustification, serializeDowngradeJustification);
    writer.writeAdditionalData(evaluateRemovalPostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param EvaluateRemovalPostResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEvaluateRemovalPostResponse(writer: SerializationWriter, evaluateRemovalPostResponse: Partial<EvaluateRemovalPostResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!evaluateRemovalPostResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, evaluateRemovalPostResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<InformationProtectionAction>("value", evaluateRemovalPostResponse.value, serializeInformationProtectionAction);
}
/**
 * Uri template for the request builder.
 */
export const EvaluateRemovalRequestBuilderUriTemplate = "{+baseurl}/sites/{site%2Did}/informationProtection/policy/labels/evaluateRemoval";
/**
 * Metadata for all the requests in the request builder.
 */
export const EvaluateRemovalRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: EvaluateRemovalRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createEvaluateRemovalPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeEvaluateRemovalPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
