/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createBufferDecryptionResultFromDiscriminatorValue, serializeBufferDecryptionResult, type BufferDecryptionResult } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DecryptBufferPostRequestBody}
 */
// @ts-ignore
export function createDecryptBufferPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDecryptBufferPostRequestBody;
}
export interface DecryptBufferPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The encryptedBuffer property
     */
    encryptedBuffer?: ArrayBuffer | null;
    /**
     * The publishingLicense property
     */
    publishingLicense?: ArrayBuffer | null;
}
/**
 * Provides operations to call the decryptBuffer method.
 */
export interface DecryptBufferRequestBuilder extends BaseRequestBuilder<DecryptBufferRequestBuilder> {
    /**
     * Invoke action decryptBuffer
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<BufferDecryptionResult>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated This API will no longer be accessible, please see microsoft.graph.security.informationProtection APIs. as of 2021-02/Beta_SensitivityLabels on 2021-02-15 and will be removed 2022-08-15
     */
     post(body: DecryptBufferPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<BufferDecryptionResult | undefined>;
    /**
     * Invoke action decryptBuffer
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated This API will no longer be accessible, please see microsoft.graph.security.informationProtection APIs. as of 2021-02/Beta_SensitivityLabels on 2021-02-15 and will be removed 2022-08-15
     */
     toPostRequestInformation(body: DecryptBufferPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The deserialization information for the current model
 * @param DecryptBufferPostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDecryptBufferPostRequestBody(decryptBufferPostRequestBody: Partial<DecryptBufferPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { decryptBufferPostRequestBody.backingStoreEnabled = true; },
        "encryptedBuffer": n => { decryptBufferPostRequestBody.encryptedBuffer = n.getByteArrayValue(); },
        "publishingLicense": n => { decryptBufferPostRequestBody.publishingLicense = n.getByteArrayValue(); },
    }
}
/**
 * Serializes information the current object
 * @param DecryptBufferPostRequestBody The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDecryptBufferPostRequestBody(writer: SerializationWriter, decryptBufferPostRequestBody: Partial<DecryptBufferPostRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!decryptBufferPostRequestBody || isSerializingDerivedType) { return; }
    writer.writeByteArrayValue("encryptedBuffer", decryptBufferPostRequestBody.encryptedBuffer);
    writer.writeByteArrayValue("publishingLicense", decryptBufferPostRequestBody.publishingLicense);
    writer.writeAdditionalData(decryptBufferPostRequestBody.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const DecryptBufferRequestBuilderUriTemplate = "{+baseurl}/sites/{site%2Did}/informationProtection/decryptBuffer";
/**
 * Metadata for all the requests in the request builder.
 */
export const DecryptBufferRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: DecryptBufferRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createBufferDecryptionResultFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDecryptBufferPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
