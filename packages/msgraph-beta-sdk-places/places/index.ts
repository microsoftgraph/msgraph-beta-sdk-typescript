/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createPlaceFromDiscriminatorValue, serializePlace, type Place } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/index.js';
// @ts-ignore
import { GraphRoomRequestBuilderNavigationMetadata, GraphRoomRequestBuilderRequestsMetadata, type GraphRoomRequestBuilder } from './graphRoom/index.js';
// @ts-ignore
import { GraphRoomListRequestBuilderNavigationMetadata, GraphRoomListRequestBuilderRequestsMetadata, type GraphRoomListRequestBuilder } from './graphRoomList/index.js';
// @ts-ignore
import { PlaceItemRequestBuilderNavigationMetadata, PlaceItemRequestBuilderRequestsMetadata, type PlaceItemRequestBuilder } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the collection of place entities.
 */
export interface PlacesRequestBuilder extends BaseRequestBuilder<PlacesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Casts the previous resource to room.
     */
    get graphRoom(): GraphRoomRequestBuilder;
    /**
     * Casts the previous resource to roomList.
     */
    get graphRoomList(): GraphRoomListRequestBuilder;
    /**
     * Provides operations to manage the collection of place entities.
     * @param placeId The unique identifier of place
     * @returns {PlaceItemRequestBuilder}
     */
     byPlaceId(placeId: string) : PlaceItemRequestBuilder;
    /**
     * Create a new place object. You can also use this method to create the following child object types: building, floor, section, room, workspace, or desk.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Place>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/place-post?view=graph-rest-beta|Find more info here}
     */
     post(body: Place, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Place | undefined>;
    /**
     * Create a new place object. You can also use this method to create the following child object types: building, floor, section, room, workspace, or desk.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: Place, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const PlacesRequestBuilderUriTemplate = "{+baseurl}/places";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PlacesRequestBuilderNavigationMetadata: Record<Exclude<keyof PlacesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byPlaceId: {
        requestsMetadata: PlaceItemRequestBuilderRequestsMetadata,
        navigationMetadata: PlaceItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["place%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    graphRoom: {
        requestsMetadata: GraphRoomRequestBuilderRequestsMetadata,
        navigationMetadata: GraphRoomRequestBuilderNavigationMetadata,
    },
    graphRoomList: {
        requestsMetadata: GraphRoomListRequestBuilderRequestsMetadata,
        navigationMetadata: GraphRoomListRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PlacesRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: PlacesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPlaceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePlace,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
