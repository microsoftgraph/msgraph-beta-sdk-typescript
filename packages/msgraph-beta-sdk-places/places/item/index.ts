/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createPlaceFromDiscriminatorValue, serializePlace, type Place } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { CheckInsRequestBuilderNavigationMetadata, CheckInsRequestBuilderRequestsMetadata, type CheckInsRequestBuilder } from './checkIns/index.js';
// @ts-ignore
import { DescendantsRequestBuilderRequestsMetadata, type DescendantsRequestBuilder } from './descendants/index.js';
// @ts-ignore
import { GraphRoomRequestBuilderNavigationMetadata, GraphRoomRequestBuilderRequestsMetadata, type GraphRoomRequestBuilder } from './graphRoom/index.js';
// @ts-ignore
import { GraphRoomListRequestBuilderNavigationMetadata, GraphRoomListRequestBuilderRequestsMetadata, type GraphRoomListRequestBuilder } from './graphRoomList/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the collection of place entities.
 */
export interface PlaceItemRequestBuilder extends BaseRequestBuilder<PlaceItemRequestBuilder> {
    /**
     * Provides operations to manage the checkIns property of the microsoft.graph.place entity.
     */
    get checkIns(): CheckInsRequestBuilder;
    /**
     * Provides operations to call the descendants method.
     */
    get descendants(): DescendantsRequestBuilder;
    /**
     * Casts the previous resource to room.
     */
    get graphRoom(): GraphRoomRequestBuilder;
    /**
     * Casts the previous resource to roomList.
     */
    get graphRoomList(): GraphRoomListRequestBuilder;
    /**
     * Delete a place object. You can also use this method to delete the following child object types: building, floor, section, or desk.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/place-delete?view=graph-rest-beta|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Update the properties of place object that can be a building, floor, section, desk, room, workspace, or roomList. You can identify the place by specifying the id property.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Place>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/place-update?view=graph-rest-beta|Find more info here}
     */
     patch(body: Place, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Place | undefined>;
    /**
     * Delete a place object. You can also use this method to delete the following child object types: building, floor, section, or desk.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Update the properties of place object that can be a building, floor, section, desk, room, workspace, or roomList. You can identify the place by specifying the id property.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: Place, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const PlaceItemRequestBuilderUriTemplate = "{+baseurl}/places/{place%2Did}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PlaceItemRequestBuilderNavigationMetadata: Record<Exclude<keyof PlaceItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    checkIns: {
        requestsMetadata: CheckInsRequestBuilderRequestsMetadata,
        navigationMetadata: CheckInsRequestBuilderNavigationMetadata,
    },
    descendants: {
        requestsMetadata: DescendantsRequestBuilderRequestsMetadata,
    },
    graphRoom: {
        requestsMetadata: GraphRoomRequestBuilderRequestsMetadata,
        navigationMetadata: GraphRoomRequestBuilderNavigationMetadata,
    },
    graphRoomList: {
        requestsMetadata: GraphRoomListRequestBuilderRequestsMetadata,
        navigationMetadata: GraphRoomListRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PlaceItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: PlaceItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    patch: {
        uriTemplate: PlaceItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPlaceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePlace,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
