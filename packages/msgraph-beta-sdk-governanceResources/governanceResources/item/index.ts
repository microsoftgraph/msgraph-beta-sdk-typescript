/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createGovernanceResourceFromDiscriminatorValue, serializeGovernanceResource, type GovernanceResource } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { ParentRequestBuilderRequestsMetadata, ParentRequestBuilderUriTemplate, type ParentRequestBuilder } from './parent/';
import { RoleAssignmentRequestsRequestBuilderNavigationMetadata, RoleAssignmentRequestsRequestBuilderRequestsMetadata, RoleAssignmentRequestsRequestBuilderUriTemplate, type RoleAssignmentRequestsRequestBuilder } from './roleAssignmentRequests/';
import { RoleAssignmentsRequestBuilderNavigationMetadata, RoleAssignmentsRequestBuilderRequestsMetadata, RoleAssignmentsRequestBuilderUriTemplate, type RoleAssignmentsRequestBuilder } from './roleAssignments/';
import { RoleDefinitionsRequestBuilderNavigationMetadata, RoleDefinitionsRequestBuilderRequestsMetadata, RoleDefinitionsRequestBuilderUriTemplate, type RoleDefinitionsRequestBuilder } from './roleDefinitions/';
import { RoleSettingsRequestBuilderNavigationMetadata, RoleSettingsRequestBuilderRequestsMetadata, RoleSettingsRequestBuilderUriTemplate, type RoleSettingsRequestBuilder } from './roleSettings/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the collection of governanceResource entities.
 */
export interface GovernanceResourceItemRequestBuilder extends BaseRequestBuilder<GovernanceResourceItemRequestBuilder> {
    /**
     * Provides operations to manage the parent property of the microsoft.graph.governanceResource entity.
     */
    get parent(): ParentRequestBuilder;
    /**
     * Provides operations to manage the roleAssignmentRequests property of the microsoft.graph.governanceResource entity.
     */
    get roleAssignmentRequests(): RoleAssignmentRequestsRequestBuilder;
    /**
     * Provides operations to manage the roleAssignments property of the microsoft.graph.governanceResource entity.
     */
    get roleAssignments(): RoleAssignmentsRequestBuilder;
    /**
     * Provides operations to manage the roleDefinitions property of the microsoft.graph.governanceResource entity.
     */
    get roleDefinitions(): RoleDefinitionsRequestBuilder;
    /**
     * Provides operations to manage the roleSettings property of the microsoft.graph.governanceResource entity.
     */
    get roleSettings(): RoleSettingsRequestBuilder;
    /**
     * Delete entity from governanceResources
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get entity from governanceResources by key
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of GovernanceResource
     */
     get(requestConfiguration?: RequestConfiguration<GovernanceResourceItemRequestBuilderGetQueryParameters> | undefined) : Promise<GovernanceResource | undefined>;
    /**
     * Update entity in governanceResources
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of GovernanceResource
     */
     patch(body: GovernanceResource, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<GovernanceResource | undefined>;
    /**
     * Delete entity from governanceResources
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get entity from governanceResources by key
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<GovernanceResourceItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update entity in governanceResources
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: GovernanceResource, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get entity from governanceResources by key
 */
export interface GovernanceResourceItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const GovernanceResourceItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const GovernanceResourceItemRequestBuilderNavigationMetadata: Record<Exclude<keyof GovernanceResourceItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    parent: {
        uriTemplate: ParentRequestBuilderUriTemplate,
        requestsMetadata: ParentRequestBuilderRequestsMetadata,
    },
    roleAssignmentRequests: {
        uriTemplate: RoleAssignmentRequestsRequestBuilderUriTemplate,
        requestsMetadata: RoleAssignmentRequestsRequestBuilderRequestsMetadata,
        navigationMetadata: RoleAssignmentRequestsRequestBuilderNavigationMetadata,
    },
    roleAssignments: {
        uriTemplate: RoleAssignmentsRequestBuilderUriTemplate,
        requestsMetadata: RoleAssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: RoleAssignmentsRequestBuilderNavigationMetadata,
    },
    roleDefinitions: {
        uriTemplate: RoleDefinitionsRequestBuilderUriTemplate,
        requestsMetadata: RoleDefinitionsRequestBuilderRequestsMetadata,
        navigationMetadata: RoleDefinitionsRequestBuilderNavigationMetadata,
    },
    roleSettings: {
        uriTemplate: RoleSettingsRequestBuilderUriTemplate,
        requestsMetadata: RoleSettingsRequestBuilderRequestsMetadata,
        navigationMetadata: RoleSettingsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const GovernanceResourceItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createGovernanceResourceFromDiscriminatorValue,
        queryParametersMapper: GovernanceResourceItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createGovernanceResourceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeGovernanceResource,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const GovernanceResourceItemRequestBuilderUriTemplate = "{+baseurl}/governanceResources/{governanceResource%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
