/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createGovernanceRoleSettingFromDiscriminatorValue, type GovernanceRoleSetting } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the roleSetting property of the microsoft.graph.governanceRoleDefinition entity.
 */
export interface RoleSettingRequestBuilder extends BaseRequestBuilder<RoleSettingRequestBuilder> {
    /**
     * The associated role setting for the role definition.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<GovernanceRoleSetting>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<RoleSettingRequestBuilderGetQueryParameters> | undefined) : Promise<GovernanceRoleSetting | undefined>;
    /**
     * The associated role setting for the role definition.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<RoleSettingRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * The associated role setting for the role definition.
 */
export interface RoleSettingRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
/**
 * Uri template for the request builder.
 */
export const RoleSettingRequestBuilderUriTemplate = "{+baseurl}/governanceResources/{governanceResource%2Did}/roleAssignments/{governanceRoleAssignment%2Did}/roleDefinition/roleSetting{?%24expand,%24select}";
/**
 * Provides operations to manage the roleSetting property of the microsoft.graph.governanceRoleDefinition entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Resource: "resource",
    RoleDefinition: "roleDefinition",
} as const;
/**
 * Provides operations to manage the roleSetting property of the microsoft.graph.governanceRoleDefinition entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AdminEligibleSettings: "adminEligibleSettings",
    AdminMemberSettings: "adminMemberSettings",
    IsDefault: "isDefault",
    LastUpdatedBy: "lastUpdatedBy",
    LastUpdatedDateTime: "lastUpdatedDateTime",
    ResourceId: "resourceId",
    RoleDefinitionId: "roleDefinitionId",
    UserEligibleSettings: "userEligibleSettings",
    UserMemberSettings: "userMemberSettings",
    Resource: "resource",
    RoleDefinition: "roleDefinition",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const RoleSettingRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const RoleSettingRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: RoleSettingRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createGovernanceRoleSettingFromDiscriminatorValue,
        queryParametersMapper: RoleSettingRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
