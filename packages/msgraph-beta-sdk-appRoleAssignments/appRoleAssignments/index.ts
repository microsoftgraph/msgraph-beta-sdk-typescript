/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createAppRoleAssignmentCollectionResponseFromDiscriminatorValue, createAppRoleAssignmentFromDiscriminatorValue, serializeAppRoleAssignment, type AppRoleAssignment, type AppRoleAssignmentCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/index.js';
// @ts-ignore
import { DeltaRequestBuilderRequestsMetadata, type DeltaRequestBuilder } from './delta/index.js';
// @ts-ignore
import { GetByIdsRequestBuilderRequestsMetadata, type GetByIdsRequestBuilder } from './getByIds/index.js';
// @ts-ignore
import { GetUserOwnedObjectsRequestBuilderRequestsMetadata, type GetUserOwnedObjectsRequestBuilder } from './getUserOwnedObjects/index.js';
// @ts-ignore
import { AppRoleAssignmentItemRequestBuilderNavigationMetadata, AppRoleAssignmentItemRequestBuilderRequestsMetadata, type AppRoleAssignmentItemRequestBuilder } from './item/index.js';
// @ts-ignore
import { type ValidatePropertiesRequestBuilder, ValidatePropertiesRequestBuilderRequestsMetadata } from './validateProperties/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the collection of appRoleAssignment entities.
 */
export interface AppRoleAssignmentsRequestBuilder extends BaseRequestBuilder<AppRoleAssignmentsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to call the delta method.
     */
    get delta(): DeltaRequestBuilder;
    /**
     * Provides operations to call the getByIds method.
     */
    get getByIds(): GetByIdsRequestBuilder;
    /**
     * Provides operations to call the getUserOwnedObjects method.
     */
    get getUserOwnedObjects(): GetUserOwnedObjectsRequestBuilder;
    /**
     * Provides operations to call the validateProperties method.
     */
    get validateProperties(): ValidatePropertiesRequestBuilder;
    /**
     * Provides operations to manage the collection of appRoleAssignment entities.
     * @param appRoleAssignmentId The unique identifier of appRoleAssignment
     * @returns {AppRoleAssignmentItemRequestBuilder}
     */
     byAppRoleAssignmentId(appRoleAssignmentId: string) : AppRoleAssignmentItemRequestBuilder;
    /**
     * Get entities from appRoleAssignments
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AppRoleAssignmentCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<AppRoleAssignmentsRequestBuilderGetQueryParameters> | undefined) : Promise<AppRoleAssignmentCollectionResponse | undefined>;
    /**
     * Add new entity to appRoleAssignments
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AppRoleAssignment>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: AppRoleAssignment, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<AppRoleAssignment | undefined>;
    /**
     * Get entities from appRoleAssignments
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AppRoleAssignmentsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Add new entity to appRoleAssignments
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: AppRoleAssignment, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get entities from appRoleAssignments
 */
export interface AppRoleAssignmentsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const AppRoleAssignmentsRequestBuilderUriTemplate = "{+baseurl}/appRoleAssignments{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AppRoleAssignmentsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AppRoleAssignmentsRequestBuilderNavigationMetadata: Record<Exclude<keyof AppRoleAssignmentsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byAppRoleAssignmentId: {
        requestsMetadata: AppRoleAssignmentItemRequestBuilderRequestsMetadata,
        navigationMetadata: AppRoleAssignmentItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["appRoleAssignment%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    delta: {
        requestsMetadata: DeltaRequestBuilderRequestsMetadata,
    },
    getByIds: {
        requestsMetadata: GetByIdsRequestBuilderRequestsMetadata,
    },
    getUserOwnedObjects: {
        requestsMetadata: GetUserOwnedObjectsRequestBuilderRequestsMetadata,
    },
    validateProperties: {
        requestsMetadata: ValidatePropertiesRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AppRoleAssignmentsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: AppRoleAssignmentsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAppRoleAssignmentCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: AppRoleAssignmentsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: AppRoleAssignmentsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAppRoleAssignmentFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAppRoleAssignment,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
