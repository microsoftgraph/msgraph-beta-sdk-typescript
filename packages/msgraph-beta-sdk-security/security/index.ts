/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createSecurityFromDiscriminatorValue, serializeSecurity, type Security } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { Alerts_v2RequestBuilderNavigationMetadata, Alerts_v2RequestBuilderRequestsMetadata, type Alerts_v2RequestBuilder } from './alerts_v2/index.js';
// @ts-ignore
import { AlertsRequestBuilderNavigationMetadata, AlertsRequestBuilderRequestsMetadata, type AlertsRequestBuilder } from './alerts/index.js';
// @ts-ignore
import { AttackSimulationRequestBuilderNavigationMetadata, AttackSimulationRequestBuilderRequestsMetadata, type AttackSimulationRequestBuilder } from './attackSimulation/index.js';
// @ts-ignore
import { AuditLogRequestBuilderNavigationMetadata, AuditLogRequestBuilderRequestsMetadata, type AuditLogRequestBuilder } from './auditLog/index.js';
// @ts-ignore
import { CasesRequestBuilderNavigationMetadata, CasesRequestBuilderRequestsMetadata, type CasesRequestBuilder } from './cases/index.js';
// @ts-ignore
import { CloudAppSecurityProfilesRequestBuilderNavigationMetadata, CloudAppSecurityProfilesRequestBuilderRequestsMetadata, type CloudAppSecurityProfilesRequestBuilder } from './cloudAppSecurityProfiles/index.js';
// @ts-ignore
import { CollaborationRequestBuilderNavigationMetadata, CollaborationRequestBuilderRequestsMetadata, type CollaborationRequestBuilder } from './collaboration/index.js';
// @ts-ignore
import { DataDiscoveryRequestBuilderNavigationMetadata, DataDiscoveryRequestBuilderRequestsMetadata, type DataDiscoveryRequestBuilder } from './dataDiscovery/index.js';
// @ts-ignore
import { DomainSecurityProfilesRequestBuilderNavigationMetadata, DomainSecurityProfilesRequestBuilderRequestsMetadata, type DomainSecurityProfilesRequestBuilder } from './domainSecurityProfiles/index.js';
// @ts-ignore
import { FileSecurityProfilesRequestBuilderNavigationMetadata, FileSecurityProfilesRequestBuilderRequestsMetadata, type FileSecurityProfilesRequestBuilder } from './fileSecurityProfiles/index.js';
// @ts-ignore
import { HostSecurityProfilesRequestBuilderNavigationMetadata, HostSecurityProfilesRequestBuilderRequestsMetadata, type HostSecurityProfilesRequestBuilder } from './hostSecurityProfiles/index.js';
// @ts-ignore
import { IdentitiesRequestBuilderNavigationMetadata, IdentitiesRequestBuilderRequestsMetadata, type IdentitiesRequestBuilder } from './identities/index.js';
// @ts-ignore
import { IncidentsRequestBuilderNavigationMetadata, IncidentsRequestBuilderRequestsMetadata, type IncidentsRequestBuilder } from './incidents/index.js';
// @ts-ignore
import { InformationProtectionRequestBuilderNavigationMetadata, InformationProtectionRequestBuilderRequestsMetadata, type InformationProtectionRequestBuilder } from './informationProtection/index.js';
// @ts-ignore
import { IpSecurityProfilesRequestBuilderNavigationMetadata, IpSecurityProfilesRequestBuilderRequestsMetadata, type IpSecurityProfilesRequestBuilder } from './ipSecurityProfiles/index.js';
// @ts-ignore
import { LabelsRequestBuilderNavigationMetadata, LabelsRequestBuilderRequestsMetadata, type LabelsRequestBuilder } from './labels/index.js';
// @ts-ignore
import { MicrosoftGraphSecurityRunHuntingQueryRequestBuilderRequestsMetadata, type MicrosoftGraphSecurityRunHuntingQueryRequestBuilder } from './microsoftGraphSecurityRunHuntingQuery/index.js';
// @ts-ignore
import { PartnerRequestBuilderNavigationMetadata, PartnerRequestBuilderRequestsMetadata, type PartnerRequestBuilder } from './partner/index.js';
// @ts-ignore
import { ProviderTenantSettingsRequestBuilderNavigationMetadata, ProviderTenantSettingsRequestBuilderRequestsMetadata, type ProviderTenantSettingsRequestBuilder } from './providerTenantSettings/index.js';
// @ts-ignore
import { RulesRequestBuilderNavigationMetadata, RulesRequestBuilderRequestsMetadata, type RulesRequestBuilder } from './rules/index.js';
// @ts-ignore
import { SecureScoreControlProfilesRequestBuilderNavigationMetadata, SecureScoreControlProfilesRequestBuilderRequestsMetadata, type SecureScoreControlProfilesRequestBuilder } from './secureScoreControlProfiles/index.js';
// @ts-ignore
import { SecureScoresRequestBuilderNavigationMetadata, SecureScoresRequestBuilderRequestsMetadata, type SecureScoresRequestBuilder } from './secureScores/index.js';
// @ts-ignore
import { SecurityActionsRequestBuilderNavigationMetadata, SecurityActionsRequestBuilderRequestsMetadata, type SecurityActionsRequestBuilder } from './securityActions/index.js';
// @ts-ignore
import { SubjectRightsRequestsRequestBuilderNavigationMetadata, SubjectRightsRequestsRequestBuilderRequestsMetadata, type SubjectRightsRequestsRequestBuilder } from './subjectRightsRequests/index.js';
// @ts-ignore
import { ThreatIntelligenceRequestBuilderNavigationMetadata, ThreatIntelligenceRequestBuilderRequestsMetadata, type ThreatIntelligenceRequestBuilder } from './threatIntelligence/index.js';
// @ts-ignore
import { ThreatSubmissionRequestBuilderNavigationMetadata, ThreatSubmissionRequestBuilderRequestsMetadata, type ThreatSubmissionRequestBuilder } from './threatSubmission/index.js';
// @ts-ignore
import { TiIndicatorsRequestBuilderNavigationMetadata, TiIndicatorsRequestBuilderRequestsMetadata, type TiIndicatorsRequestBuilder } from './tiIndicators/index.js';
// @ts-ignore
import { TriggersRequestBuilderNavigationMetadata, TriggersRequestBuilderRequestsMetadata, type TriggersRequestBuilder } from './triggers/index.js';
// @ts-ignore
import { TriggerTypesRequestBuilderNavigationMetadata, TriggerTypesRequestBuilderRequestsMetadata, type TriggerTypesRequestBuilder } from './triggerTypes/index.js';
// @ts-ignore
import { type UserSecurityProfilesRequestBuilder, UserSecurityProfilesRequestBuilderNavigationMetadata, UserSecurityProfilesRequestBuilderRequestsMetadata } from './userSecurityProfiles/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the security singleton.
 */
export interface SecurityRequestBuilder extends BaseRequestBuilder<SecurityRequestBuilder> {
    /**
     * Provides operations to manage the alerts property of the microsoft.graph.security entity.
     */
    get alerts(): AlertsRequestBuilder;
    /**
     * Provides operations to manage the alerts_v2 property of the microsoft.graph.security entity.
     */
    get alerts_v2(): Alerts_v2RequestBuilder;
    /**
     * Provides operations to manage the attackSimulation property of the microsoft.graph.security entity.
     */
    get attackSimulation(): AttackSimulationRequestBuilder;
    /**
     * Provides operations to manage the auditLog property of the microsoft.graph.security entity.
     */
    get auditLog(): AuditLogRequestBuilder;
    /**
     * Provides operations to manage the cases property of the microsoft.graph.security entity.
     */
    get cases(): CasesRequestBuilder;
    /**
     * Provides operations to manage the cloudAppSecurityProfiles property of the microsoft.graph.security entity.
     */
    get cloudAppSecurityProfiles(): CloudAppSecurityProfilesRequestBuilder;
    /**
     * Provides operations to manage the collaboration property of the microsoft.graph.security entity.
     */
    get collaboration(): CollaborationRequestBuilder;
    /**
     * Provides operations to manage the dataDiscovery property of the microsoft.graph.security entity.
     */
    get dataDiscovery(): DataDiscoveryRequestBuilder;
    /**
     * Provides operations to manage the domainSecurityProfiles property of the microsoft.graph.security entity.
     */
    get domainSecurityProfiles(): DomainSecurityProfilesRequestBuilder;
    /**
     * Provides operations to manage the fileSecurityProfiles property of the microsoft.graph.security entity.
     */
    get fileSecurityProfiles(): FileSecurityProfilesRequestBuilder;
    /**
     * Provides operations to manage the hostSecurityProfiles property of the microsoft.graph.security entity.
     */
    get hostSecurityProfiles(): HostSecurityProfilesRequestBuilder;
    /**
     * Provides operations to manage the identities property of the microsoft.graph.security entity.
     */
    get identities(): IdentitiesRequestBuilder;
    /**
     * Provides operations to manage the incidents property of the microsoft.graph.security entity.
     */
    get incidents(): IncidentsRequestBuilder;
    /**
     * Provides operations to manage the informationProtection property of the microsoft.graph.security entity.
     */
    get informationProtection(): InformationProtectionRequestBuilder;
    /**
     * Provides operations to manage the ipSecurityProfiles property of the microsoft.graph.security entity.
     */
    get ipSecurityProfiles(): IpSecurityProfilesRequestBuilder;
    /**
     * Provides operations to manage the labels property of the microsoft.graph.security entity.
     */
    get labels(): LabelsRequestBuilder;
    /**
     * Provides operations to call the runHuntingQuery method.
     */
    get microsoftGraphSecurityRunHuntingQuery(): MicrosoftGraphSecurityRunHuntingQueryRequestBuilder;
    /**
     * Provides operations to manage the partner property of the microsoft.graph.security entity.
     */
    get partner(): PartnerRequestBuilder;
    /**
     * Provides operations to manage the providerTenantSettings property of the microsoft.graph.security entity.
     */
    get providerTenantSettings(): ProviderTenantSettingsRequestBuilder;
    /**
     * Provides operations to manage the rules property of the microsoft.graph.security entity.
     */
    get rules(): RulesRequestBuilder;
    /**
     * Provides operations to manage the secureScoreControlProfiles property of the microsoft.graph.security entity.
     */
    get secureScoreControlProfiles(): SecureScoreControlProfilesRequestBuilder;
    /**
     * Provides operations to manage the secureScores property of the microsoft.graph.security entity.
     */
    get secureScores(): SecureScoresRequestBuilder;
    /**
     * Provides operations to manage the securityActions property of the microsoft.graph.security entity.
     */
    get securityActions(): SecurityActionsRequestBuilder;
    /**
     * Provides operations to manage the subjectRightsRequests property of the microsoft.graph.security entity.
     */
    get subjectRightsRequests(): SubjectRightsRequestsRequestBuilder;
    /**
     * Provides operations to manage the threatIntelligence property of the microsoft.graph.security entity.
     */
    get threatIntelligence(): ThreatIntelligenceRequestBuilder;
    /**
     * Provides operations to manage the threatSubmission property of the microsoft.graph.security entity.
     */
    get threatSubmission(): ThreatSubmissionRequestBuilder;
    /**
     * Provides operations to manage the tiIndicators property of the microsoft.graph.security entity.
     */
    get tiIndicators(): TiIndicatorsRequestBuilder;
    /**
     * Provides operations to manage the triggers property of the microsoft.graph.security entity.
     */
    get triggers(): TriggersRequestBuilder;
    /**
     * Provides operations to manage the triggerTypes property of the microsoft.graph.security entity.
     */
    get triggerTypes(): TriggerTypesRequestBuilder;
    /**
     * Provides operations to manage the userSecurityProfiles property of the microsoft.graph.security entity.
     */
    get userSecurityProfiles(): UserSecurityProfilesRequestBuilder;
    /**
     * Get security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Security>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<SecurityRequestBuilderGetQueryParameters> | undefined) : Promise<Security | undefined>;
    /**
     * Update security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Security>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: Security, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Security | undefined>;
    /**
     * Get security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SecurityRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: Security, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get security
 */
export interface SecurityRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const SecurityRequestBuilderUriTemplate = "{+baseurl}/security{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SecurityRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SecurityRequestBuilderNavigationMetadata: Record<Exclude<keyof SecurityRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    alerts: {
        requestsMetadata: AlertsRequestBuilderRequestsMetadata,
        navigationMetadata: AlertsRequestBuilderNavigationMetadata,
    },
    alerts_v2: {
        requestsMetadata: Alerts_v2RequestBuilderRequestsMetadata,
        navigationMetadata: Alerts_v2RequestBuilderNavigationMetadata,
    },
    attackSimulation: {
        requestsMetadata: AttackSimulationRequestBuilderRequestsMetadata,
        navigationMetadata: AttackSimulationRequestBuilderNavigationMetadata,
    },
    auditLog: {
        requestsMetadata: AuditLogRequestBuilderRequestsMetadata,
        navigationMetadata: AuditLogRequestBuilderNavigationMetadata,
    },
    cases: {
        requestsMetadata: CasesRequestBuilderRequestsMetadata,
        navigationMetadata: CasesRequestBuilderNavigationMetadata,
    },
    cloudAppSecurityProfiles: {
        requestsMetadata: CloudAppSecurityProfilesRequestBuilderRequestsMetadata,
        navigationMetadata: CloudAppSecurityProfilesRequestBuilderNavigationMetadata,
    },
    collaboration: {
        requestsMetadata: CollaborationRequestBuilderRequestsMetadata,
        navigationMetadata: CollaborationRequestBuilderNavigationMetadata,
    },
    dataDiscovery: {
        requestsMetadata: DataDiscoveryRequestBuilderRequestsMetadata,
        navigationMetadata: DataDiscoveryRequestBuilderNavigationMetadata,
    },
    domainSecurityProfiles: {
        requestsMetadata: DomainSecurityProfilesRequestBuilderRequestsMetadata,
        navigationMetadata: DomainSecurityProfilesRequestBuilderNavigationMetadata,
    },
    fileSecurityProfiles: {
        requestsMetadata: FileSecurityProfilesRequestBuilderRequestsMetadata,
        navigationMetadata: FileSecurityProfilesRequestBuilderNavigationMetadata,
    },
    hostSecurityProfiles: {
        requestsMetadata: HostSecurityProfilesRequestBuilderRequestsMetadata,
        navigationMetadata: HostSecurityProfilesRequestBuilderNavigationMetadata,
    },
    identities: {
        requestsMetadata: IdentitiesRequestBuilderRequestsMetadata,
        navigationMetadata: IdentitiesRequestBuilderNavigationMetadata,
    },
    incidents: {
        requestsMetadata: IncidentsRequestBuilderRequestsMetadata,
        navigationMetadata: IncidentsRequestBuilderNavigationMetadata,
    },
    informationProtection: {
        requestsMetadata: InformationProtectionRequestBuilderRequestsMetadata,
        navigationMetadata: InformationProtectionRequestBuilderNavigationMetadata,
    },
    ipSecurityProfiles: {
        requestsMetadata: IpSecurityProfilesRequestBuilderRequestsMetadata,
        navigationMetadata: IpSecurityProfilesRequestBuilderNavigationMetadata,
    },
    labels: {
        requestsMetadata: LabelsRequestBuilderRequestsMetadata,
        navigationMetadata: LabelsRequestBuilderNavigationMetadata,
    },
    microsoftGraphSecurityRunHuntingQuery: {
        requestsMetadata: MicrosoftGraphSecurityRunHuntingQueryRequestBuilderRequestsMetadata,
    },
    partner: {
        requestsMetadata: PartnerRequestBuilderRequestsMetadata,
        navigationMetadata: PartnerRequestBuilderNavigationMetadata,
    },
    providerTenantSettings: {
        requestsMetadata: ProviderTenantSettingsRequestBuilderRequestsMetadata,
        navigationMetadata: ProviderTenantSettingsRequestBuilderNavigationMetadata,
    },
    rules: {
        requestsMetadata: RulesRequestBuilderRequestsMetadata,
        navigationMetadata: RulesRequestBuilderNavigationMetadata,
    },
    secureScoreControlProfiles: {
        requestsMetadata: SecureScoreControlProfilesRequestBuilderRequestsMetadata,
        navigationMetadata: SecureScoreControlProfilesRequestBuilderNavigationMetadata,
    },
    secureScores: {
        requestsMetadata: SecureScoresRequestBuilderRequestsMetadata,
        navigationMetadata: SecureScoresRequestBuilderNavigationMetadata,
    },
    securityActions: {
        requestsMetadata: SecurityActionsRequestBuilderRequestsMetadata,
        navigationMetadata: SecurityActionsRequestBuilderNavigationMetadata,
    },
    subjectRightsRequests: {
        requestsMetadata: SubjectRightsRequestsRequestBuilderRequestsMetadata,
        navigationMetadata: SubjectRightsRequestsRequestBuilderNavigationMetadata,
    },
    threatIntelligence: {
        requestsMetadata: ThreatIntelligenceRequestBuilderRequestsMetadata,
        navigationMetadata: ThreatIntelligenceRequestBuilderNavigationMetadata,
    },
    threatSubmission: {
        requestsMetadata: ThreatSubmissionRequestBuilderRequestsMetadata,
        navigationMetadata: ThreatSubmissionRequestBuilderNavigationMetadata,
    },
    tiIndicators: {
        requestsMetadata: TiIndicatorsRequestBuilderRequestsMetadata,
        navigationMetadata: TiIndicatorsRequestBuilderNavigationMetadata,
    },
    triggers: {
        requestsMetadata: TriggersRequestBuilderRequestsMetadata,
        navigationMetadata: TriggersRequestBuilderNavigationMetadata,
    },
    triggerTypes: {
        requestsMetadata: TriggerTypesRequestBuilderRequestsMetadata,
        navigationMetadata: TriggerTypesRequestBuilderNavigationMetadata,
    },
    userSecurityProfiles: {
        requestsMetadata: UserSecurityProfilesRequestBuilderRequestsMetadata,
        navigationMetadata: UserSecurityProfilesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SecurityRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: SecurityRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createSecurityFromDiscriminatorValue,
        queryParametersMapper: SecurityRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: SecurityRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createSecurityFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSecurity,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
