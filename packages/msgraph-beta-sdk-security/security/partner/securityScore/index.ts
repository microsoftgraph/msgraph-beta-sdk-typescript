/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { createPartnerSecurityScoreFromDiscriminatorValue, serializePartnerSecurityScore, type PartnerSecurityScore } from '@microsoft/msgraph-beta-sdk/models/partner/security/index.js';
// @ts-ignore
import { CustomerInsightsRequestBuilderNavigationMetadata, CustomerInsightsRequestBuilderRequestsMetadata, type CustomerInsightsRequestBuilder } from './customerInsights/index.js';
// @ts-ignore
import { HistoryRequestBuilderNavigationMetadata, HistoryRequestBuilderRequestsMetadata, type HistoryRequestBuilder } from './history/index.js';
// @ts-ignore
import { RequirementsRequestBuilderNavigationMetadata, RequirementsRequestBuilderRequestsMetadata, type RequirementsRequestBuilder } from './requirements/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the securityScore property of the microsoft.graph.partner.security.partnerSecurity entity.
 */
export interface SecurityScoreRequestBuilder extends BaseRequestBuilder<SecurityScoreRequestBuilder> {
    /**
     * Provides operations to manage the customerInsights property of the microsoft.graph.partner.security.partnerSecurityScore entity.
     */
    get customerInsights(): CustomerInsightsRequestBuilder;
    /**
     * Provides operations to manage the history property of the microsoft.graph.partner.security.partnerSecurityScore entity.
     */
    get history(): HistoryRequestBuilder;
    /**
     * Provides operations to manage the requirements property of the microsoft.graph.partner.security.partnerSecurityScore entity.
     */
    get requirements(): RequirementsRequestBuilder;
    /**
     * Delete navigation property securityScore for security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Read the properties and relationships of a partnerSecurityScore object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PartnerSecurityScore>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/partner-security-partnersecurityscore-get?view=graph-rest-beta|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<SecurityScoreRequestBuilderGetQueryParameters> | undefined) : Promise<PartnerSecurityScore | undefined>;
    /**
     * Update the navigation property securityScore in security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PartnerSecurityScore>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: PartnerSecurityScore, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<PartnerSecurityScore | undefined>;
    /**
     * Delete navigation property securityScore for security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Read the properties and relationships of a partnerSecurityScore object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SecurityScoreRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property securityScore in security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: PartnerSecurityScore, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Read the properties and relationships of a partnerSecurityScore object.
 */
export interface SecurityScoreRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const SecurityScoreRequestBuilderUriTemplate = "{+baseurl}/security/partner/securityScore{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SecurityScoreRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SecurityScoreRequestBuilderNavigationMetadata: Record<Exclude<keyof SecurityScoreRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    customerInsights: {
        requestsMetadata: CustomerInsightsRequestBuilderRequestsMetadata,
        navigationMetadata: CustomerInsightsRequestBuilderNavigationMetadata,
    },
    history: {
        requestsMetadata: HistoryRequestBuilderRequestsMetadata,
        navigationMetadata: HistoryRequestBuilderNavigationMetadata,
    },
    requirements: {
        requestsMetadata: RequirementsRequestBuilderRequestsMetadata,
        navigationMetadata: RequirementsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SecurityScoreRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: SecurityScoreRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: SecurityScoreRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPartnerSecurityScoreFromDiscriminatorValue,
        queryParametersMapper: SecurityScoreRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: SecurityScoreRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPartnerSecurityScoreFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePartnerSecurityScore,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
