/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { createInformationProtectionPolicySettingFromDiscriminatorValue, serializeInformationProtectionPolicySetting, type InformationProtectionPolicySetting } from '@microsoft/msgraph-beta-sdk/models/security/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the labelPolicySettings property of the microsoft.graph.security.informationProtection entity.
 */
export interface LabelPolicySettingsRequestBuilder extends BaseRequestBuilder<LabelPolicySettingsRequestBuilder> {
    /**
     * Delete navigation property labelPolicySettings for security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Read the properties and relationships of an informationProtectionPolicySetting object. The settings exposed by this API should be used in applications to populate the moreInfoUrl property for Microsoft Purview Information Protection help, and indicate whether labeling is mandatory for the user and whether justification must be provided on downgrade.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<InformationProtectionPolicySetting>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/security-informationprotectionpolicysetting-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<LabelPolicySettingsRequestBuilderGetQueryParameters> | undefined) : Promise<InformationProtectionPolicySetting | undefined>;
    /**
     * Update the navigation property labelPolicySettings in security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<InformationProtectionPolicySetting>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: InformationProtectionPolicySetting, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<InformationProtectionPolicySetting | undefined>;
    /**
     * Delete navigation property labelPolicySettings for security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Read the properties and relationships of an informationProtectionPolicySetting object. The settings exposed by this API should be used in applications to populate the moreInfoUrl property for Microsoft Purview Information Protection help, and indicate whether labeling is mandatory for the user and whether justification must be provided on downgrade.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<LabelPolicySettingsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property labelPolicySettings in security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: InformationProtectionPolicySetting, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Read the properties and relationships of an informationProtectionPolicySetting object. The settings exposed by this API should be used in applications to populate the moreInfoUrl property for Microsoft Purview Information Protection help, and indicate whether labeling is mandatory for the user and whether justification must be provided on downgrade.
 */
export interface LabelPolicySettingsRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
/**
 * Uri template for the request builder.
 */
export const LabelPolicySettingsRequestBuilderUriTemplate = "{+baseurl}/security/informationProtection/labelPolicySettings{?%24expand,%24select}";
/**
 * Provides operations to manage the labelPolicySettings property of the microsoft.graph.security.informationProtection entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the labelPolicySettings property of the microsoft.graph.security.informationProtection entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    DefaultLabelId: "defaultLabelId",
    IsDowngradeJustificationRequired: "isDowngradeJustificationRequired",
    IsMandatory: "isMandatory",
    MoreInfoUrl: "moreInfoUrl",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const LabelPolicySettingsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const LabelPolicySettingsRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: LabelPolicySettingsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: LabelPolicySettingsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createInformationProtectionPolicySettingFromDiscriminatorValue,
        queryParametersMapper: LabelPolicySettingsRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: LabelPolicySettingsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createInformationProtectionPolicySettingFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeInformationProtectionPolicySetting,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
