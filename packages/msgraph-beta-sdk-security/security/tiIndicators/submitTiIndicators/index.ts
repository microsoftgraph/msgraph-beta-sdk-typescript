/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createTiIndicatorFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, serializeTiIndicator, type BaseCollectionPaginationCountResponse, type TiIndicator } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a submitTiIndicatorsPostRequestBody
 */
export function createSubmitTiIndicatorsPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubmitTiIndicatorsPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a submitTiIndicatorsPostResponse
 */
export function createSubmitTiIndicatorsPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubmitTiIndicatorsPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoSubmitTiIndicatorsPostRequestBody(submitTiIndicatorsPostRequestBody: Partial<SubmitTiIndicatorsPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { submitTiIndicatorsPostRequestBody.backingStoreEnabled = true; },
        "value": n => { submitTiIndicatorsPostRequestBody.value = n.getCollectionOfObjectValues<TiIndicator>(createTiIndicatorFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoSubmitTiIndicatorsPostResponse(submitTiIndicatorsPostResponse: Partial<SubmitTiIndicatorsPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(submitTiIndicatorsPostResponse),
        "value": n => { submitTiIndicatorsPostResponse.value = n.getCollectionOfObjectValues<TiIndicator>(createTiIndicatorFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeSubmitTiIndicatorsPostRequestBody(writer: SerializationWriter, submitTiIndicatorsPostRequestBody: Partial<SubmitTiIndicatorsPostRequestBody> | undefined = {}) : void {
    writer.writeCollectionOfObjectValues<TiIndicator>("value", submitTiIndicatorsPostRequestBody.value, serializeTiIndicator);
    writer.writeAdditionalData(submitTiIndicatorsPostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeSubmitTiIndicatorsPostResponse(writer: SerializationWriter, submitTiIndicatorsPostResponse: Partial<SubmitTiIndicatorsPostResponse> | undefined = {}) : void {
    serializeBaseCollectionPaginationCountResponse(writer, submitTiIndicatorsPostResponse)
    writer.writeCollectionOfObjectValues<TiIndicator>("value", submitTiIndicatorsPostResponse.value, serializeTiIndicator);
}
export interface SubmitTiIndicatorsPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The value property
     */
    value?: TiIndicator[];
}
export interface SubmitTiIndicatorsPostResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: TiIndicator[];
}
/**
 * Provides operations to call the submitTiIndicators method.
 */
export interface SubmitTiIndicatorsRequestBuilder extends BaseRequestBuilder<SubmitTiIndicatorsRequestBuilder> {
    /**
     * Upload multiple threat intelligence (TI) indicators in one request instead of multiple requests.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of SubmitTiIndicatorsPostResponse
     * @see {@link https://learn.microsoft.com/graph/api/tiindicator-submittiindicators?view=graph-rest-1.0|Find more info here}
     */
     post(body: SubmitTiIndicatorsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<SubmitTiIndicatorsPostResponse | undefined>;
    /**
     * Upload multiple threat intelligence (TI) indicators in one request instead of multiple requests.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: SubmitTiIndicatorsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Metadata for all the requests in the request builder.
 */
export const SubmitTiIndicatorsRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createSubmitTiIndicatorsPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSubmitTiIndicatorsPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const SubmitTiIndicatorsRequestBuilderUriTemplate = "{+baseurl}/security/tiIndicators/submitTiIndicators";
/* tslint:enable */
/* eslint-enable */
