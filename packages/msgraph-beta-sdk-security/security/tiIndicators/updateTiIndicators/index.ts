/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createTiIndicatorFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, serializeTiIndicator, type BaseCollectionPaginationCountResponse, type TiIndicator } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateTiIndicatorsPostRequestBody}
 */
export function createUpdateTiIndicatorsPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateTiIndicatorsPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateTiIndicatorsPostResponse}
 */
export function createUpdateTiIndicatorsPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateTiIndicatorsPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoUpdateTiIndicatorsPostRequestBody(updateTiIndicatorsPostRequestBody: Partial<UpdateTiIndicatorsPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { updateTiIndicatorsPostRequestBody.backingStoreEnabled = true; },
        "value": n => { updateTiIndicatorsPostRequestBody.value = n.getCollectionOfObjectValues<TiIndicator>(createTiIndicatorFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoUpdateTiIndicatorsPostResponse(updateTiIndicatorsPostResponse: Partial<UpdateTiIndicatorsPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(updateTiIndicatorsPostResponse),
        "value": n => { updateTiIndicatorsPostResponse.value = n.getCollectionOfObjectValues<TiIndicator>(createTiIndicatorFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUpdateTiIndicatorsPostRequestBody(writer: SerializationWriter, updateTiIndicatorsPostRequestBody: Partial<UpdateTiIndicatorsPostRequestBody> | undefined = {}) : void {
    writer.writeCollectionOfObjectValues<TiIndicator>("value", updateTiIndicatorsPostRequestBody.value, serializeTiIndicator);
    writer.writeAdditionalData(updateTiIndicatorsPostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUpdateTiIndicatorsPostResponse(writer: SerializationWriter, updateTiIndicatorsPostResponse: Partial<UpdateTiIndicatorsPostResponse> | undefined = {}) : void {
    serializeBaseCollectionPaginationCountResponse(writer, updateTiIndicatorsPostResponse)
    writer.writeCollectionOfObjectValues<TiIndicator>("value", updateTiIndicatorsPostResponse.value, serializeTiIndicator);
}
export interface UpdateTiIndicatorsPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The value property
     */
    value?: TiIndicator[];
}
export interface UpdateTiIndicatorsPostResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: TiIndicator[];
}
/**
 * Provides operations to call the updateTiIndicators method.
 */
export interface UpdateTiIndicatorsRequestBuilder extends BaseRequestBuilder<UpdateTiIndicatorsRequestBuilder> {
    /**
     * Update multiple threat intelligence (TI) indicators in one request instead of multiple requests.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UpdateTiIndicatorsPostResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated The legacy Graph Security API is deprecated and will stop returning data on January 31, 2025. Please use the new Graph Security API. as of 2024-01/Deprecation
     * @see {@link https://learn.microsoft.com/graph/api/tiindicator-updatetiindicators?view=graph-rest-beta|Find more info here}
     */
     post(body: UpdateTiIndicatorsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<UpdateTiIndicatorsPostResponse | undefined>;
    /**
     * Update multiple threat intelligence (TI) indicators in one request instead of multiple requests.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated The legacy Graph Security API is deprecated and will stop returning data on January 31, 2025. Please use the new Graph Security API. as of 2024-01/Deprecation
     */
     toPostRequestInformation(body: UpdateTiIndicatorsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const UpdateTiIndicatorsRequestBuilderUriTemplate = "{+baseurl}/security/tiIndicators/updateTiIndicators";
/**
 * Metadata for all the requests in the request builder.
 */
export const UpdateTiIndicatorsRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: UpdateTiIndicatorsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createUpdateTiIndicatorsPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUpdateTiIndicatorsPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
