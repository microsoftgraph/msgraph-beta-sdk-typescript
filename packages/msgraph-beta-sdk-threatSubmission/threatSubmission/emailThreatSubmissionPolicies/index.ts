/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { createEmailThreatSubmissionPolicyCollectionResponseFromDiscriminatorValue, createEmailThreatSubmissionPolicyFromDiscriminatorValue, serializeEmailThreatSubmissionPolicy, type EmailThreatSubmissionPolicy, type EmailThreatSubmissionPolicyCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/security/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { EmailThreatSubmissionPolicyItemRequestBuilderRequestsMetadata, type EmailThreatSubmissionPolicyItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the emailThreatSubmissionPolicies property of the microsoft.graph.security.threatSubmissionRoot entity.
 */
export interface EmailThreatSubmissionPoliciesRequestBuilder extends BaseRequestBuilder<EmailThreatSubmissionPoliciesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the emailThreatSubmissionPolicies property of the microsoft.graph.security.threatSubmissionRoot entity.
     * @param emailThreatSubmissionPolicyId The unique identifier of emailThreatSubmissionPolicy
     * @returns {EmailThreatSubmissionPolicyItemRequestBuilder}
     */
     byEmailThreatSubmissionPolicyId(emailThreatSubmissionPolicyId: string) : EmailThreatSubmissionPolicyItemRequestBuilder;
    /**
     * Get a list of the emailThreatSubmissionPolicy objects and their properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<EmailThreatSubmissionPolicyCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/security-emailthreatsubmissionpolicy-list?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<EmailThreatSubmissionPoliciesRequestBuilderGetQueryParameters> | undefined) : Promise<EmailThreatSubmissionPolicyCollectionResponse | undefined>;
    /**
     * Create new navigation property to emailThreatSubmissionPolicies for threatSubmission
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<EmailThreatSubmissionPolicy>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: EmailThreatSubmissionPolicy, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<EmailThreatSubmissionPolicy | undefined>;
    /**
     * Get a list of the emailThreatSubmissionPolicy objects and their properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<EmailThreatSubmissionPoliciesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to emailThreatSubmissionPolicies for threatSubmission
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: EmailThreatSubmissionPolicy, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get a list of the emailThreatSubmissionPolicy objects and their properties.
 */
export interface EmailThreatSubmissionPoliciesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const EmailThreatSubmissionPoliciesRequestBuilderUriTemplate = "{+baseurl}/threatSubmission/emailThreatSubmissionPolicies{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const EmailThreatSubmissionPoliciesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const EmailThreatSubmissionPoliciesRequestBuilderNavigationMetadata: Record<Exclude<keyof EmailThreatSubmissionPoliciesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byEmailThreatSubmissionPolicyId: {
        requestsMetadata: EmailThreatSubmissionPolicyItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["emailThreatSubmissionPolicy%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const EmailThreatSubmissionPoliciesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: EmailThreatSubmissionPoliciesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createEmailThreatSubmissionPolicyCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: EmailThreatSubmissionPoliciesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: EmailThreatSubmissionPoliciesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createEmailThreatSubmissionPolicyFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeEmailThreatSubmissionPolicy,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the emailThreatSubmissionPolicies property of the microsoft.graph.security.threatSubmissionRoot entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the emailThreatSubmissionPolicies property of the microsoft.graph.security.threatSubmissionRoot entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    CustomizedNotificationSenderEmailAddress: "customizedNotificationSenderEmailAddress",
    CustomizedNotificationSenderEmailAddressDesc: "customizedNotificationSenderEmailAddress desc",
    CustomizedReportRecipientEmailAddress: "customizedReportRecipientEmailAddress",
    CustomizedReportRecipientEmailAddressDesc: "customizedReportRecipientEmailAddress desc",
    IsAlwaysReportEnabledForUsers: "isAlwaysReportEnabledForUsers",
    IsAlwaysReportEnabledForUsersDesc: "isAlwaysReportEnabledForUsers desc",
    IsAskMeEnabledForUsers: "isAskMeEnabledForUsers",
    IsAskMeEnabledForUsersDesc: "isAskMeEnabledForUsers desc",
    IsCustomizedMessageEnabled: "isCustomizedMessageEnabled",
    IsCustomizedMessageEnabledDesc: "isCustomizedMessageEnabled desc",
    IsCustomizedMessageEnabledForPhishing: "isCustomizedMessageEnabledForPhishing",
    IsCustomizedMessageEnabledForPhishingDesc: "isCustomizedMessageEnabledForPhishing desc",
    IsCustomizedNotificationSenderEnabled: "isCustomizedNotificationSenderEnabled",
    IsCustomizedNotificationSenderEnabledDesc: "isCustomizedNotificationSenderEnabled desc",
    IsNeverReportEnabledForUsers: "isNeverReportEnabledForUsers",
    IsNeverReportEnabledForUsersDesc: "isNeverReportEnabledForUsers desc",
    IsOrganizationBrandingEnabled: "isOrganizationBrandingEnabled",
    IsOrganizationBrandingEnabledDesc: "isOrganizationBrandingEnabled desc",
    IsReportFromQuarantineEnabled: "isReportFromQuarantineEnabled",
    IsReportFromQuarantineEnabledDesc: "isReportFromQuarantineEnabled desc",
    IsReportToCustomizedEmailAddressEnabled: "isReportToCustomizedEmailAddressEnabled",
    IsReportToCustomizedEmailAddressEnabledDesc: "isReportToCustomizedEmailAddressEnabled desc",
    IsReportToMicrosoftEnabled: "isReportToMicrosoftEnabled",
    IsReportToMicrosoftEnabledDesc: "isReportToMicrosoftEnabled desc",
    IsReviewEmailNotificationEnabled: "isReviewEmailNotificationEnabled",
    IsReviewEmailNotificationEnabledDesc: "isReviewEmailNotificationEnabled desc",
} as const;
/**
 * Provides operations to manage the emailThreatSubmissionPolicies property of the microsoft.graph.security.threatSubmissionRoot entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    CustomizedNotificationSenderEmailAddress: "customizedNotificationSenderEmailAddress",
    CustomizedReportRecipientEmailAddress: "customizedReportRecipientEmailAddress",
    IsAlwaysReportEnabledForUsers: "isAlwaysReportEnabledForUsers",
    IsAskMeEnabledForUsers: "isAskMeEnabledForUsers",
    IsCustomizedMessageEnabled: "isCustomizedMessageEnabled",
    IsCustomizedMessageEnabledForPhishing: "isCustomizedMessageEnabledForPhishing",
    IsCustomizedNotificationSenderEnabled: "isCustomizedNotificationSenderEnabled",
    IsNeverReportEnabledForUsers: "isNeverReportEnabledForUsers",
    IsOrganizationBrandingEnabled: "isOrganizationBrandingEnabled",
    IsReportFromQuarantineEnabled: "isReportFromQuarantineEnabled",
    IsReportToCustomizedEmailAddressEnabled: "isReportToCustomizedEmailAddressEnabled",
    IsReportToMicrosoftEnabled: "isReportToMicrosoftEnabled",
    IsReviewEmailNotificationEnabled: "isReviewEmailNotificationEnabled",
} as const;
/* tslint:enable */
/* eslint-enable */
