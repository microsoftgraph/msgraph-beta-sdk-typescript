/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createSignInEventsAppActivityCollectionResponseFromDiscriminatorValue, createSignInEventsAppActivityFromDiscriminatorValue, serializeSignInEventsAppActivity, type SignInEventsAppActivity, type SignInEventsAppActivityCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/index.js';
// @ts-ignore
import { SignInEventsAppActivityAppItemRequestBuilderNavigationMetadata, SignInEventsAppActivityAppItemRequestBuilderRequestsMetadata, type SignInEventsAppActivityAppItemRequestBuilder } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the signInEventsAppSummary property of the microsoft.graph.auditLogRoot entity.
 */
export interface SignInEventsAppSummaryRequestBuilder extends BaseRequestBuilder<SignInEventsAppSummaryRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the signInEventsAppSummary property of the microsoft.graph.auditLogRoot entity.
     * @param signInEventsAppActivityAppId The unique identifier of signInEventsAppActivity
     * @returns {SignInEventsAppActivityAppItemRequestBuilder}
     */
     bySignInEventsAppActivityAppId(signInEventsAppActivityAppId: string) : SignInEventsAppActivityAppItemRequestBuilder;
    /**
     * Get a list of applications and their number of sign-in events in the past 30 days as defined in the signInEventsAppActivity object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<SignInEventsAppActivityCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/auditlogroot-list-signineventsappsummary?view=graph-rest-beta|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<SignInEventsAppSummaryRequestBuilderGetQueryParameters> | undefined) : Promise<SignInEventsAppActivityCollectionResponse | undefined>;
    /**
     * Create new navigation property to signInEventsAppSummary for auditLogs
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<SignInEventsAppActivity>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: SignInEventsAppActivity, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<SignInEventsAppActivity | undefined>;
    /**
     * Get a list of applications and their number of sign-in events in the past 30 days as defined in the signInEventsAppActivity object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SignInEventsAppSummaryRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to signInEventsAppSummary for auditLogs
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: SignInEventsAppActivity, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get a list of applications and their number of sign-in events in the past 30 days as defined in the signInEventsAppActivity object.
 */
export interface SignInEventsAppSummaryRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const SignInEventsAppSummaryRequestBuilderUriTemplate = "{+baseurl}/auditLogs/signInEventsAppSummary{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SignInEventsAppSummaryRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SignInEventsAppSummaryRequestBuilderNavigationMetadata: Record<Exclude<keyof SignInEventsAppSummaryRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    bySignInEventsAppActivityAppId: {
        requestsMetadata: SignInEventsAppActivityAppItemRequestBuilderRequestsMetadata,
        navigationMetadata: SignInEventsAppActivityAppItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["signInEventsAppActivity%2DappId"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SignInEventsAppSummaryRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: SignInEventsAppSummaryRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createSignInEventsAppActivityCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: SignInEventsAppSummaryRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: SignInEventsAppSummaryRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createSignInEventsAppActivityFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSignInEventsAppActivity,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
