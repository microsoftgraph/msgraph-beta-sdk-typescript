/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createProvisioningObjectSummaryCollectionResponseFromDiscriminatorValue, createProvisioningObjectSummaryFromDiscriminatorValue, serializeProvisioningObjectSummary, type ProvisioningObjectSummary, type ProvisioningObjectSummaryCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { ProvisioningObjectSummaryItemRequestBuilderRequestsMetadata, type ProvisioningObjectSummaryItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the directoryProvisioning property of the microsoft.graph.auditLogRoot entity.
 */
export interface DirectoryProvisioningRequestBuilder extends BaseRequestBuilder<DirectoryProvisioningRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the directoryProvisioning property of the microsoft.graph.auditLogRoot entity.
     * @param provisioningObjectSummaryId The unique identifier of provisioningObjectSummary
     * @returns {ProvisioningObjectSummaryItemRequestBuilder}
     */
     byProvisioningObjectSummaryId(provisioningObjectSummaryId: string) : ProvisioningObjectSummaryItemRequestBuilder;
    /**
     * Get directoryProvisioning from auditLogs
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ProvisioningObjectSummaryCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<DirectoryProvisioningRequestBuilderGetQueryParameters> | undefined) : Promise<ProvisioningObjectSummaryCollectionResponse | undefined>;
    /**
     * Create new navigation property to directoryProvisioning for auditLogs
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ProvisioningObjectSummary>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: ProvisioningObjectSummary, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ProvisioningObjectSummary | undefined>;
    /**
     * Get directoryProvisioning from auditLogs
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DirectoryProvisioningRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to directoryProvisioning for auditLogs
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ProvisioningObjectSummary, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get directoryProvisioning from auditLogs
 */
export interface DirectoryProvisioningRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const DirectoryProvisioningRequestBuilderUriTemplate = "{+baseurl}/auditLogs/directoryProvisioning{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DirectoryProvisioningRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DirectoryProvisioningRequestBuilderNavigationMetadata: Record<Exclude<keyof DirectoryProvisioningRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byProvisioningObjectSummaryId: {
        requestsMetadata: ProvisioningObjectSummaryItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["provisioningObjectSummary%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DirectoryProvisioningRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: DirectoryProvisioningRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createProvisioningObjectSummaryCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: DirectoryProvisioningRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: DirectoryProvisioningRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createProvisioningObjectSummaryFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeProvisioningObjectSummary,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the directoryProvisioning property of the microsoft.graph.auditLogRoot entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the directoryProvisioning property of the microsoft.graph.auditLogRoot entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    Action: "action",
    ActionDesc: "action desc",
    ActivityDateTime: "activityDateTime",
    ActivityDateTimeDesc: "activityDateTime desc",
    ChangeId: "changeId",
    ChangeIdDesc: "changeId desc",
    CycleId: "cycleId",
    CycleIdDesc: "cycleId desc",
    DurationInMilliseconds: "durationInMilliseconds",
    DurationInMillisecondsDesc: "durationInMilliseconds desc",
    InitiatedBy: "initiatedBy",
    InitiatedByDesc: "initiatedBy desc",
    JobId: "jobId",
    JobIdDesc: "jobId desc",
    ModifiedProperties: "modifiedProperties",
    ModifiedPropertiesDesc: "modifiedProperties desc",
    ProvisioningAction: "provisioningAction",
    ProvisioningActionDesc: "provisioningAction desc",
    ProvisioningStatusInfo: "provisioningStatusInfo",
    ProvisioningStatusInfoDesc: "provisioningStatusInfo desc",
    ProvisioningSteps: "provisioningSteps",
    ProvisioningStepsDesc: "provisioningSteps desc",
    ServicePrincipal: "servicePrincipal",
    ServicePrincipalDesc: "servicePrincipal desc",
    SourceIdentity: "sourceIdentity",
    SourceIdentityDesc: "sourceIdentity desc",
    SourceSystem: "sourceSystem",
    SourceSystemDesc: "sourceSystem desc",
    StatusInfo: "statusInfo",
    StatusInfoDesc: "statusInfo desc",
    TargetIdentity: "targetIdentity",
    TargetIdentityDesc: "targetIdentity desc",
    TargetSystem: "targetSystem",
    TargetSystemDesc: "targetSystem desc",
    TenantId: "tenantId",
    TenantIdDesc: "tenantId desc",
} as const;
/**
 * Provides operations to manage the directoryProvisioning property of the microsoft.graph.auditLogRoot entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    Action: "action",
    ActivityDateTime: "activityDateTime",
    ChangeId: "changeId",
    CycleId: "cycleId",
    DurationInMilliseconds: "durationInMilliseconds",
    InitiatedBy: "initiatedBy",
    JobId: "jobId",
    ModifiedProperties: "modifiedProperties",
    ProvisioningAction: "provisioningAction",
    ProvisioningStatusInfo: "provisioningStatusInfo",
    ProvisioningSteps: "provisioningSteps",
    ServicePrincipal: "servicePrincipal",
    SourceIdentity: "sourceIdentity",
    SourceSystem: "sourceSystem",
    StatusInfo: "statusInfo",
    TargetIdentity: "targetIdentity",
    TargetSystem: "targetSystem",
    TenantId: "tenantId",
} as const;
/* tslint:enable */
/* eslint-enable */
