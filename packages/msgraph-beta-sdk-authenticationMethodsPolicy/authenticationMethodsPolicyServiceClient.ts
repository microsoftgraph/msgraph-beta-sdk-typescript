/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { AuthenticationMethodsPolicyRequestBuilderNavigationMetadata, AuthenticationMethodsPolicyRequestBuilderRequestsMetadata, type AuthenticationMethodsPolicyRequestBuilder } from './authenticationMethodsPolicy/index.js';
import { apiClientProxifier, type BackingStoreFactory, type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type RequestAdapter } from '@microsoft/kiota-abstractions';
/**
 * The main entry point of the SDK, exposes the configuration and the fluent API.
 */
export interface AuthenticationMethodsPolicyServiceClient extends BaseRequestBuilder<AuthenticationMethodsPolicyServiceClient> {
    /**
     * Provides operations to manage the authenticationMethodsPolicy singleton.
     */
    get authenticationMethodsPolicy(): AuthenticationMethodsPolicyRequestBuilder;
}
/**
 * Instantiates a new AuthenticationMethodsPolicyServiceClient and sets the default values.
 * @param backingStore The backing store to use for the models.
 * @param requestAdapter The request adapter to use to execute the requests.
 */
export function createAuthenticationMethodsPolicyServiceClient(requestAdapter: RequestAdapter, backingStore?: BackingStoreFactory | undefined) {
    if (requestAdapter.baseUrl === undefined || requestAdapter.baseUrl === "") {
        requestAdapter.baseUrl = "https://graph.microsoft.com/beta";
    }
    const pathParameters: Record<string, unknown> = {
        "baseurl": requestAdapter.baseUrl,
    };
    requestAdapter.enableBackingStore(backingStore);
    return apiClientProxifier<AuthenticationMethodsPolicyServiceClient>(requestAdapter, pathParameters, AuthenticationMethodsPolicyServiceClientNavigationMetadata, undefined);
}
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AuthenticationMethodsPolicyServiceClientNavigationMetadata: Record<Exclude<keyof AuthenticationMethodsPolicyServiceClient, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    authenticationMethodsPolicy: {
        requestsMetadata: AuthenticationMethodsPolicyRequestBuilderRequestsMetadata,
        navigationMetadata: AuthenticationMethodsPolicyRequestBuilderNavigationMetadata,
    },
};
/**
 * Uri template for the request builder.
 */
export const AuthenticationMethodsPolicyServiceClientUriTemplate = "{+baseurl}";
/* tslint:enable */
/* eslint-enable */
