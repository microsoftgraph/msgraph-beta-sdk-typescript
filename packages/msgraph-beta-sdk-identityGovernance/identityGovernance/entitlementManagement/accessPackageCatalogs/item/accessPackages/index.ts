/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createAccessPackageCollectionResponseFromDiscriminatorValue, type AccessPackageCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { AccessPackageItemRequestBuilderRequestsMetadata, type AccessPackageItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the accessPackages property of the microsoft.graph.accessPackageCatalog entity.
 */
export interface AccessPackagesRequestBuilder extends BaseRequestBuilder<AccessPackagesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     * @deprecated  as of 2022-10/PrivatePreview:MicrosofEntitlementManagementCustomextensions
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the accessPackages property of the microsoft.graph.accessPackageCatalog entity.
     * @param accessPackageId The unique identifier of accessPackage
     * @returns {AccessPackageItemRequestBuilder}
     * @deprecated  as of 2022-10/PrivatePreview:MicrosofEntitlementManagementCustomextensions
     */
     byAccessPackageId(accessPackageId: string) : AccessPackageItemRequestBuilder;
    /**
     * The access packages in this catalog. Read-only. Nullable. Supports $expand.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AccessPackageCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated  as of 2022-10/PrivatePreview:MicrosofEntitlementManagementCustomextensions
     */
     get(requestConfiguration?: RequestConfiguration<AccessPackagesRequestBuilderGetQueryParameters> | undefined) : Promise<AccessPackageCollectionResponse | undefined>;
    /**
     * The access packages in this catalog. Read-only. Nullable. Supports $expand.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated  as of 2022-10/PrivatePreview:MicrosofEntitlementManagementCustomextensions
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AccessPackagesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * The access packages in this catalog. Read-only. Nullable. Supports $expand.
 */
export interface AccessPackagesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const AccessPackagesRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog%2Did}/accessPackages{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AccessPackagesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AccessPackagesRequestBuilderNavigationMetadata: Record<Exclude<keyof AccessPackagesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byAccessPackageId: {
        requestsMetadata: AccessPackageItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["accessPackage%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AccessPackagesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: AccessPackagesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAccessPackageCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: AccessPackagesRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Provides operations to manage the accessPackages property of the microsoft.graph.accessPackageCatalog entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    AccessPackageAssignmentPolicies: "accessPackageAssignmentPolicies",
    AccessPackageCatalog: "accessPackageCatalog",
    AccessPackageResourceRoleScopes: "accessPackageResourceRoleScopes",
    AccessPackagesIncompatibleWith: "accessPackagesIncompatibleWith",
    IncompatibleAccessPackages: "incompatibleAccessPackages",
    IncompatibleGroups: "incompatibleGroups",
} as const;
/**
 * Provides operations to manage the accessPackages property of the microsoft.graph.accessPackageCatalog entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    CatalogId: "catalogId",
    CatalogIdDesc: "catalogId desc",
    CreatedBy: "createdBy",
    CreatedByDesc: "createdBy desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    Description: "description",
    DescriptionDesc: "description desc",
    DisplayName: "displayName",
    DisplayNameDesc: "displayName desc",
    IsHidden: "isHidden",
    IsHiddenDesc: "isHidden desc",
    IsRoleScopesVisible: "isRoleScopesVisible",
    IsRoleScopesVisibleDesc: "isRoleScopesVisible desc",
    ModifiedBy: "modifiedBy",
    ModifiedByDesc: "modifiedBy desc",
    ModifiedDateTime: "modifiedDateTime",
    ModifiedDateTimeDesc: "modifiedDateTime desc",
} as const;
/**
 * Provides operations to manage the accessPackages property of the microsoft.graph.accessPackageCatalog entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    CatalogId: "catalogId",
    CreatedBy: "createdBy",
    CreatedDateTime: "createdDateTime",
    Description: "description",
    DisplayName: "displayName",
    IsHidden: "isHidden",
    IsRoleScopesVisible: "isRoleScopesVisible",
    ModifiedBy: "modifiedBy",
    ModifiedDateTime: "modifiedDateTime",
    AccessPackageAssignmentPolicies: "accessPackageAssignmentPolicies",
    AccessPackageCatalog: "accessPackageCatalog",
    AccessPackageResourceRoleScopes: "accessPackageResourceRoleScopes",
    AccessPackagesIncompatibleWith: "accessPackagesIncompatibleWith",
    IncompatibleAccessPackages: "incompatibleAccessPackages",
    IncompatibleGroups: "incompatibleGroups",
} as const;
/* tslint:enable */
/* eslint-enable */
