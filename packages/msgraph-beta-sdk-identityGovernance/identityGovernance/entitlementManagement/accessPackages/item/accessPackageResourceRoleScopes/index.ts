/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createAccessPackageResourceRoleScopeCollectionResponseFromDiscriminatorValue, createAccessPackageResourceRoleScopeFromDiscriminatorValue, serializeAccessPackageResourceRoleScope, type AccessPackageResourceRoleScope, type AccessPackageResourceRoleScopeCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { AccessPackageResourceRoleScopeItemRequestBuilderNavigationMetadata, AccessPackageResourceRoleScopeItemRequestBuilderRequestsMetadata, type AccessPackageResourceRoleScopeItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the accessPackageResourceRoleScopes property of the microsoft.graph.accessPackage entity.
 */
export interface AccessPackageResourceRoleScopesRequestBuilder extends BaseRequestBuilder<AccessPackageResourceRoleScopesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the accessPackageResourceRoleScopes property of the microsoft.graph.accessPackage entity.
     * @param accessPackageResourceRoleScopeId The unique identifier of accessPackageResourceRoleScope
     * @returns {AccessPackageResourceRoleScopeItemRequestBuilder}
     */
     byAccessPackageResourceRoleScopeId(accessPackageResourceRoleScopeId: string) : AccessPackageResourceRoleScopeItemRequestBuilder;
    /**
     * Get accessPackageResourceRoleScopes from identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AccessPackageResourceRoleScopeCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<AccessPackageResourceRoleScopesRequestBuilderGetQueryParameters> | undefined) : Promise<AccessPackageResourceRoleScopeCollectionResponse | undefined>;
    /**
     * Create a new accessPackageResourceRoleScope for adding a resource role to an access package. The access package resource, for a group, an app, or a SharePoint Online site, must already exist in the access package catalog, and the originId for the resource role retrieved from the list of the resource roles. Once you add the resource role scope to the access package, the user will receive this resource role through any current and future access package assignments.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AccessPackageResourceRoleScope>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/accesspackage-post-accesspackageresourcerolescopes?view=graph-rest-1.0|Find more info here}
     */
     post(body: AccessPackageResourceRoleScope, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<AccessPackageResourceRoleScope | undefined>;
    /**
     * Get accessPackageResourceRoleScopes from identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AccessPackageResourceRoleScopesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new accessPackageResourceRoleScope for adding a resource role to an access package. The access package resource, for a group, an app, or a SharePoint Online site, must already exist in the access package catalog, and the originId for the resource role retrieved from the list of the resource roles. Once you add the resource role scope to the access package, the user will receive this resource role through any current and future access package assignments.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: AccessPackageResourceRoleScope, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get accessPackageResourceRoleScopes from identityGovernance
 */
export interface AccessPackageResourceRoleScopesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const AccessPackageResourceRoleScopesRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/entitlementManagement/accessPackages/{accessPackage%2Did}/accessPackageResourceRoleScopes{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AccessPackageResourceRoleScopesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AccessPackageResourceRoleScopesRequestBuilderNavigationMetadata: Record<Exclude<keyof AccessPackageResourceRoleScopesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byAccessPackageResourceRoleScopeId: {
        requestsMetadata: AccessPackageResourceRoleScopeItemRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageResourceRoleScopeItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["accessPackageResourceRoleScope%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AccessPackageResourceRoleScopesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: AccessPackageResourceRoleScopesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAccessPackageResourceRoleScopeCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: AccessPackageResourceRoleScopesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: AccessPackageResourceRoleScopesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAccessPackageResourceRoleScopeFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAccessPackageResourceRoleScope,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the accessPackageResourceRoleScopes property of the microsoft.graph.accessPackage entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    AccessPackageResourceRole: "accessPackageResourceRole",
    AccessPackageResourceScope: "accessPackageResourceScope",
} as const;
/**
 * Provides operations to manage the accessPackageResourceRoleScopes property of the microsoft.graph.accessPackage entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    CreatedBy: "createdBy",
    CreatedByDesc: "createdBy desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    ModifiedBy: "modifiedBy",
    ModifiedByDesc: "modifiedBy desc",
    ModifiedDateTime: "modifiedDateTime",
    ModifiedDateTimeDesc: "modifiedDateTime desc",
} as const;
/**
 * Provides operations to manage the accessPackageResourceRoleScopes property of the microsoft.graph.accessPackage entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    CreatedBy: "createdBy",
    CreatedDateTime: "createdDateTime",
    ModifiedBy: "modifiedBy",
    ModifiedDateTime: "modifiedDateTime",
    AccessPackageResourceRole: "accessPackageResourceRole",
    AccessPackageResourceScope: "accessPackageResourceScope",
} as const;
/* tslint:enable */
/* eslint-enable */
