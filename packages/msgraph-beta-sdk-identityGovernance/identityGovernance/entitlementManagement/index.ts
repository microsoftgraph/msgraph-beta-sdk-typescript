/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createEntitlementManagementFromDiscriminatorValue, serializeEntitlementManagement, type EntitlementManagement } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { AccessPackageAssignmentApprovalsRequestBuilderNavigationMetadata, AccessPackageAssignmentApprovalsRequestBuilderRequestsMetadata, type AccessPackageAssignmentApprovalsRequestBuilder } from './accessPackageAssignmentApprovals/index.js';
// @ts-ignore
import { AccessPackageAssignmentPoliciesRequestBuilderNavigationMetadata, AccessPackageAssignmentPoliciesRequestBuilderRequestsMetadata, type AccessPackageAssignmentPoliciesRequestBuilder } from './accessPackageAssignmentPolicies/index.js';
// @ts-ignore
import { AccessPackageAssignmentRequestsRequestBuilderNavigationMetadata, AccessPackageAssignmentRequestsRequestBuilderRequestsMetadata, type AccessPackageAssignmentRequestsRequestBuilder } from './accessPackageAssignmentRequests/index.js';
// @ts-ignore
import { AccessPackageAssignmentResourceRolesRequestBuilderNavigationMetadata, AccessPackageAssignmentResourceRolesRequestBuilderRequestsMetadata, type AccessPackageAssignmentResourceRolesRequestBuilder } from './accessPackageAssignmentResourceRoles/index.js';
// @ts-ignore
import { AccessPackageAssignmentsRequestBuilderNavigationMetadata, AccessPackageAssignmentsRequestBuilderRequestsMetadata, type AccessPackageAssignmentsRequestBuilder } from './accessPackageAssignments/index.js';
// @ts-ignore
import { AccessPackageCatalogsRequestBuilderNavigationMetadata, AccessPackageCatalogsRequestBuilderRequestsMetadata, type AccessPackageCatalogsRequestBuilder } from './accessPackageCatalogs/index.js';
// @ts-ignore
import { AccessPackageCatalogsWithUniqueNameRequestBuilderRequestsMetadata, type AccessPackageCatalogsWithUniqueNameRequestBuilder } from './accessPackageCatalogsWithUniqueName/index.js';
// @ts-ignore
import { AccessPackageResourceEnvironmentsRequestBuilderNavigationMetadata, AccessPackageResourceEnvironmentsRequestBuilderRequestsMetadata, type AccessPackageResourceEnvironmentsRequestBuilder } from './accessPackageResourceEnvironments/index.js';
// @ts-ignore
import { AccessPackageResourceRequestsRequestBuilderNavigationMetadata, AccessPackageResourceRequestsRequestBuilderRequestsMetadata, type AccessPackageResourceRequestsRequestBuilder } from './accessPackageResourceRequests/index.js';
// @ts-ignore
import { AccessPackageResourceRoleScopesRequestBuilderNavigationMetadata, AccessPackageResourceRoleScopesRequestBuilderRequestsMetadata, type AccessPackageResourceRoleScopesRequestBuilder } from './accessPackageResourceRoleScopes/index.js';
// @ts-ignore
import { AccessPackageResourcesRequestBuilderNavigationMetadata, AccessPackageResourcesRequestBuilderRequestsMetadata, type AccessPackageResourcesRequestBuilder } from './accessPackageResources/index.js';
// @ts-ignore
import { AccessPackagesRequestBuilderNavigationMetadata, AccessPackagesRequestBuilderRequestsMetadata, type AccessPackagesRequestBuilder } from './accessPackages/index.js';
// @ts-ignore
import { AccessPackagesWithUniqueNameRequestBuilderNavigationMetadata, AccessPackagesWithUniqueNameRequestBuilderRequestsMetadata, type AccessPackagesWithUniqueNameRequestBuilder } from './accessPackagesWithUniqueName/index.js';
// @ts-ignore
import { AssignmentRequestsRequestBuilderNavigationMetadata, AssignmentRequestsRequestBuilderRequestsMetadata, type AssignmentRequestsRequestBuilder } from './assignmentRequests/index.js';
// @ts-ignore
import { ConnectedOrganizationsRequestBuilderNavigationMetadata, ConnectedOrganizationsRequestBuilderRequestsMetadata, type ConnectedOrganizationsRequestBuilder } from './connectedOrganizations/index.js';
// @ts-ignore
import { SettingsRequestBuilderRequestsMetadata, type SettingsRequestBuilder } from './settings/index.js';
// @ts-ignore
import { SubjectsRequestBuilderNavigationMetadata, SubjectsRequestBuilderRequestsMetadata, type SubjectsRequestBuilder } from './subjects/index.js';
// @ts-ignore
import { SubjectsWithObjectIdRequestBuilderRequestsMetadata, type SubjectsWithObjectIdRequestBuilder } from './subjectsWithObjectId/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the entitlementManagement property of the microsoft.graph.identityGovernance entity.
 */
export interface EntitlementManagementRequestBuilder extends BaseRequestBuilder<EntitlementManagementRequestBuilder> {
    /**
     * Provides operations to manage the accessPackageAssignmentApprovals property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageAssignmentApprovals(): AccessPackageAssignmentApprovalsRequestBuilder;
    /**
     * Provides operations to manage the accessPackageAssignmentPolicies property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageAssignmentPolicies(): AccessPackageAssignmentPoliciesRequestBuilder;
    /**
     * Provides operations to manage the accessPackageAssignmentRequests property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageAssignmentRequests(): AccessPackageAssignmentRequestsRequestBuilder;
    /**
     * Provides operations to manage the accessPackageAssignmentResourceRoles property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageAssignmentResourceRoles(): AccessPackageAssignmentResourceRolesRequestBuilder;
    /**
     * Provides operations to manage the accessPackageAssignments property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageAssignments(): AccessPackageAssignmentsRequestBuilder;
    /**
     * Provides operations to manage the accessPackageCatalogs property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageCatalogs(): AccessPackageCatalogsRequestBuilder;
    /**
     * Provides operations to manage the accessPackageResourceEnvironments property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageResourceEnvironments(): AccessPackageResourceEnvironmentsRequestBuilder;
    /**
     * Provides operations to manage the accessPackageResourceRequests property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageResourceRequests(): AccessPackageResourceRequestsRequestBuilder;
    /**
     * Provides operations to manage the accessPackageResourceRoleScopes property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageResourceRoleScopes(): AccessPackageResourceRoleScopesRequestBuilder;
    /**
     * Provides operations to manage the accessPackageResources property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageResources(): AccessPackageResourcesRequestBuilder;
    /**
     * Provides operations to manage the accessPackages property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackages(): AccessPackagesRequestBuilder;
    /**
     * Provides operations to manage the assignmentRequests property of the microsoft.graph.entitlementManagement entity.
     */
    get assignmentRequests(): AssignmentRequestsRequestBuilder;
    /**
     * Provides operations to manage the connectedOrganizations property of the microsoft.graph.entitlementManagement entity.
     */
    get connectedOrganizations(): ConnectedOrganizationsRequestBuilder;
    /**
     * Provides operations to manage the settings property of the microsoft.graph.entitlementManagement entity.
     */
    get settings(): SettingsRequestBuilder;
    /**
     * Provides operations to manage the subjects property of the microsoft.graph.entitlementManagement entity.
     */
    get subjects(): SubjectsRequestBuilder;
    /**
     * Provides operations to manage the accessPackageCatalogs property of the microsoft.graph.entitlementManagement entity.
     * @param uniqueName Alternate key of accessPackageCatalog
     * @returns {AccessPackageCatalogsWithUniqueNameRequestBuilder}
     * @deprecated  as of 2022-10/PrivatePreview:MicrosofEntitlementManagementCustomextensions
     */
     accessPackageCatalogsWithUniqueName(uniqueName: string | undefined) : AccessPackageCatalogsWithUniqueNameRequestBuilder;
    /**
     * Provides operations to manage the accessPackages property of the microsoft.graph.entitlementManagement entity.
     * @param uniqueName Alternate key of accessPackage
     * @returns {AccessPackagesWithUniqueNameRequestBuilder}
     */
     accessPackagesWithUniqueName(uniqueName: string | undefined) : AccessPackagesWithUniqueNameRequestBuilder;
    /**
     * Delete navigation property entitlementManagement for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get entitlementManagement from identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<EntitlementManagement>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<EntitlementManagementRequestBuilderGetQueryParameters> | undefined) : Promise<EntitlementManagement | undefined>;
    /**
     * Update the navigation property entitlementManagement in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<EntitlementManagement>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: EntitlementManagement, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<EntitlementManagement | undefined>;
    /**
     * Provides operations to manage the subjects property of the microsoft.graph.entitlementManagement entity.
     * @param objectId Alternate key of accessPackageSubject
     * @returns {SubjectsWithObjectIdRequestBuilder}
     */
     subjectsWithObjectId(objectId: string | undefined) : SubjectsWithObjectIdRequestBuilder;
    /**
     * Delete navigation property entitlementManagement for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get entitlementManagement from identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<EntitlementManagementRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property entitlementManagement in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: EntitlementManagement, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get entitlementManagement from identityGovernance
 */
export interface EntitlementManagementRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const EntitlementManagementRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/entitlementManagement{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const EntitlementManagementRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const EntitlementManagementRequestBuilderNavigationMetadata: Record<Exclude<keyof EntitlementManagementRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    accessPackageCatalogsWithUniqueName: {
        requestsMetadata: AccessPackageCatalogsWithUniqueNameRequestBuilderRequestsMetadata,
    },
    accessPackagesWithUniqueName: {
        requestsMetadata: AccessPackagesWithUniqueNameRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackagesWithUniqueNameRequestBuilderNavigationMetadata,
    },
    subjectsWithObjectId: {
        requestsMetadata: SubjectsWithObjectIdRequestBuilderRequestsMetadata,
    },
    accessPackageAssignmentApprovals: {
        requestsMetadata: AccessPackageAssignmentApprovalsRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageAssignmentApprovalsRequestBuilderNavigationMetadata,
    },
    accessPackageAssignmentPolicies: {
        requestsMetadata: AccessPackageAssignmentPoliciesRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageAssignmentPoliciesRequestBuilderNavigationMetadata,
    },
    accessPackageAssignmentRequests: {
        requestsMetadata: AccessPackageAssignmentRequestsRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageAssignmentRequestsRequestBuilderNavigationMetadata,
    },
    accessPackageAssignmentResourceRoles: {
        requestsMetadata: AccessPackageAssignmentResourceRolesRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageAssignmentResourceRolesRequestBuilderNavigationMetadata,
    },
    accessPackageAssignments: {
        requestsMetadata: AccessPackageAssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageAssignmentsRequestBuilderNavigationMetadata,
    },
    accessPackageCatalogs: {
        requestsMetadata: AccessPackageCatalogsRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageCatalogsRequestBuilderNavigationMetadata,
    },
    accessPackageResourceEnvironments: {
        requestsMetadata: AccessPackageResourceEnvironmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageResourceEnvironmentsRequestBuilderNavigationMetadata,
    },
    accessPackageResourceRequests: {
        requestsMetadata: AccessPackageResourceRequestsRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageResourceRequestsRequestBuilderNavigationMetadata,
    },
    accessPackageResourceRoleScopes: {
        requestsMetadata: AccessPackageResourceRoleScopesRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageResourceRoleScopesRequestBuilderNavigationMetadata,
    },
    accessPackageResources: {
        requestsMetadata: AccessPackageResourcesRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageResourcesRequestBuilderNavigationMetadata,
    },
    accessPackages: {
        requestsMetadata: AccessPackagesRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackagesRequestBuilderNavigationMetadata,
    },
    assignmentRequests: {
        requestsMetadata: AssignmentRequestsRequestBuilderRequestsMetadata,
        navigationMetadata: AssignmentRequestsRequestBuilderNavigationMetadata,
    },
    connectedOrganizations: {
        requestsMetadata: ConnectedOrganizationsRequestBuilderRequestsMetadata,
        navigationMetadata: ConnectedOrganizationsRequestBuilderNavigationMetadata,
    },
    settings: {
        requestsMetadata: SettingsRequestBuilderRequestsMetadata,
    },
    subjects: {
        requestsMetadata: SubjectsRequestBuilderRequestsMetadata,
        navigationMetadata: SubjectsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const EntitlementManagementRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: EntitlementManagementRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: EntitlementManagementRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createEntitlementManagementFromDiscriminatorValue,
        queryParametersMapper: EntitlementManagementRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: EntitlementManagementRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createEntitlementManagementFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeEntitlementManagement,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
