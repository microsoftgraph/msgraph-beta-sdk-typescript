/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createEntitlementManagementFromDiscriminatorValue, serializeEntitlementManagement, type EntitlementManagement } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { AccessPackageAssignmentApprovalsRequestBuilderNavigationMetadata, AccessPackageAssignmentApprovalsRequestBuilderRequestsMetadata, AccessPackageAssignmentApprovalsRequestBuilderUriTemplate, type AccessPackageAssignmentApprovalsRequestBuilder } from './accessPackageAssignmentApprovals/';
import { AccessPackageAssignmentPoliciesRequestBuilderNavigationMetadata, AccessPackageAssignmentPoliciesRequestBuilderRequestsMetadata, AccessPackageAssignmentPoliciesRequestBuilderUriTemplate, type AccessPackageAssignmentPoliciesRequestBuilder } from './accessPackageAssignmentPolicies/';
import { AccessPackageAssignmentRequestsRequestBuilderNavigationMetadata, AccessPackageAssignmentRequestsRequestBuilderRequestsMetadata, AccessPackageAssignmentRequestsRequestBuilderUriTemplate, type AccessPackageAssignmentRequestsRequestBuilder } from './accessPackageAssignmentRequests/';
import { AccessPackageAssignmentResourceRolesRequestBuilderNavigationMetadata, AccessPackageAssignmentResourceRolesRequestBuilderRequestsMetadata, AccessPackageAssignmentResourceRolesRequestBuilderUriTemplate, type AccessPackageAssignmentResourceRolesRequestBuilder } from './accessPackageAssignmentResourceRoles/';
import { AccessPackageAssignmentsRequestBuilderNavigationMetadata, AccessPackageAssignmentsRequestBuilderRequestsMetadata, AccessPackageAssignmentsRequestBuilderUriTemplate, type AccessPackageAssignmentsRequestBuilder } from './accessPackageAssignments/';
import { AccessPackageCatalogsRequestBuilderNavigationMetadata, AccessPackageCatalogsRequestBuilderRequestsMetadata, AccessPackageCatalogsRequestBuilderUriTemplate, type AccessPackageCatalogsRequestBuilder } from './accessPackageCatalogs/';
import { AccessPackageResourceEnvironmentsRequestBuilderNavigationMetadata, AccessPackageResourceEnvironmentsRequestBuilderRequestsMetadata, AccessPackageResourceEnvironmentsRequestBuilderUriTemplate, type AccessPackageResourceEnvironmentsRequestBuilder } from './accessPackageResourceEnvironments/';
import { AccessPackageResourceRequestsRequestBuilderNavigationMetadata, AccessPackageResourceRequestsRequestBuilderRequestsMetadata, AccessPackageResourceRequestsRequestBuilderUriTemplate, type AccessPackageResourceRequestsRequestBuilder } from './accessPackageResourceRequests/';
import { AccessPackageResourceRoleScopesRequestBuilderNavigationMetadata, AccessPackageResourceRoleScopesRequestBuilderRequestsMetadata, AccessPackageResourceRoleScopesRequestBuilderUriTemplate, type AccessPackageResourceRoleScopesRequestBuilder } from './accessPackageResourceRoleScopes/';
import { AccessPackageResourcesRequestBuilderNavigationMetadata, AccessPackageResourcesRequestBuilderRequestsMetadata, AccessPackageResourcesRequestBuilderUriTemplate, type AccessPackageResourcesRequestBuilder } from './accessPackageResources/';
import { AccessPackagesRequestBuilderNavigationMetadata, AccessPackagesRequestBuilderRequestsMetadata, AccessPackagesRequestBuilderUriTemplate, type AccessPackagesRequestBuilder } from './accessPackages/';
import { AssignmentRequestsRequestBuilderNavigationMetadata, AssignmentRequestsRequestBuilderRequestsMetadata, AssignmentRequestsRequestBuilderUriTemplate, type AssignmentRequestsRequestBuilder } from './assignmentRequests/';
import { ConnectedOrganizationsRequestBuilderNavigationMetadata, ConnectedOrganizationsRequestBuilderRequestsMetadata, ConnectedOrganizationsRequestBuilderUriTemplate, type ConnectedOrganizationsRequestBuilder } from './connectedOrganizations/';
import { SettingsRequestBuilderRequestsMetadata, SettingsRequestBuilderUriTemplate, type SettingsRequestBuilder } from './settings/';
import { SubjectsRequestBuilderNavigationMetadata, SubjectsRequestBuilderRequestsMetadata, SubjectsRequestBuilderUriTemplate, type SubjectsRequestBuilder } from './subjects/';
import { SubjectsWithObjectIdRequestBuilderRequestsMetadata, SubjectsWithObjectIdRequestBuilderUriTemplate, type SubjectsWithObjectIdRequestBuilder } from './subjectsWithObjectId/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the entitlementManagement property of the microsoft.graph.identityGovernance entity.
 */
export interface EntitlementManagementRequestBuilder extends BaseRequestBuilder<EntitlementManagementRequestBuilder> {
    /**
     * Provides operations to manage the accessPackageAssignmentApprovals property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageAssignmentApprovals(): AccessPackageAssignmentApprovalsRequestBuilder;
    /**
     * Provides operations to manage the accessPackageAssignmentPolicies property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageAssignmentPolicies(): AccessPackageAssignmentPoliciesRequestBuilder;
    /**
     * Provides operations to manage the accessPackageAssignmentRequests property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageAssignmentRequests(): AccessPackageAssignmentRequestsRequestBuilder;
    /**
     * Provides operations to manage the accessPackageAssignmentResourceRoles property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageAssignmentResourceRoles(): AccessPackageAssignmentResourceRolesRequestBuilder;
    /**
     * Provides operations to manage the accessPackageAssignments property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageAssignments(): AccessPackageAssignmentsRequestBuilder;
    /**
     * Provides operations to manage the accessPackageCatalogs property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageCatalogs(): AccessPackageCatalogsRequestBuilder;
    /**
     * Provides operations to manage the accessPackageResourceEnvironments property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageResourceEnvironments(): AccessPackageResourceEnvironmentsRequestBuilder;
    /**
     * Provides operations to manage the accessPackageResourceRequests property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageResourceRequests(): AccessPackageResourceRequestsRequestBuilder;
    /**
     * Provides operations to manage the accessPackageResourceRoleScopes property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageResourceRoleScopes(): AccessPackageResourceRoleScopesRequestBuilder;
    /**
     * Provides operations to manage the accessPackageResources property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackageResources(): AccessPackageResourcesRequestBuilder;
    /**
     * Provides operations to manage the accessPackages property of the microsoft.graph.entitlementManagement entity.
     */
    get accessPackages(): AccessPackagesRequestBuilder;
    /**
     * Provides operations to manage the assignmentRequests property of the microsoft.graph.entitlementManagement entity.
     */
    get assignmentRequests(): AssignmentRequestsRequestBuilder;
    /**
     * Provides operations to manage the connectedOrganizations property of the microsoft.graph.entitlementManagement entity.
     */
    get connectedOrganizations(): ConnectedOrganizationsRequestBuilder;
    /**
     * Provides operations to manage the settings property of the microsoft.graph.entitlementManagement entity.
     */
    get settings(): SettingsRequestBuilder;
    /**
     * Provides operations to manage the subjects property of the microsoft.graph.entitlementManagement entity.
     */
    get subjects(): SubjectsRequestBuilder;
    /**
     * Delete navigation property entitlementManagement for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get entitlementManagement from identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of EntitlementManagement
     */
     get(requestConfiguration?: RequestConfiguration<EntitlementManagementRequestBuilderGetQueryParameters> | undefined) : Promise<EntitlementManagement | undefined>;
    /**
     * Update the navigation property entitlementManagement in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of EntitlementManagement
     */
     patch(body: EntitlementManagement, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<EntitlementManagement | undefined>;
    /**
     * Provides operations to manage the subjects property of the microsoft.graph.entitlementManagement entity.
     * @param objectId Alternate key of accessPackageSubject
     * @returns a subjectsWithObjectIdRequestBuilder
     */
     subjectsWithObjectId(objectId: string | undefined) : SubjectsWithObjectIdRequestBuilder;
    /**
     * Delete navigation property entitlementManagement for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get entitlementManagement from identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<EntitlementManagementRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property entitlementManagement in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: EntitlementManagement, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get entitlementManagement from identityGovernance
 */
export interface EntitlementManagementRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const EntitlementManagementRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const EntitlementManagementRequestBuilderNavigationMetadata: Record<Exclude<keyof EntitlementManagementRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    subjectsWithObjectId: {
        uriTemplate: SubjectsWithObjectIdRequestBuilderUriTemplate,
        requestsMetadata: SubjectsWithObjectIdRequestBuilderRequestsMetadata,
    },
    accessPackageAssignmentApprovals: {
        uriTemplate: AccessPackageAssignmentApprovalsRequestBuilderUriTemplate,
        requestsMetadata: AccessPackageAssignmentApprovalsRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageAssignmentApprovalsRequestBuilderNavigationMetadata,
    },
    accessPackageAssignmentPolicies: {
        uriTemplate: AccessPackageAssignmentPoliciesRequestBuilderUriTemplate,
        requestsMetadata: AccessPackageAssignmentPoliciesRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageAssignmentPoliciesRequestBuilderNavigationMetadata,
    },
    accessPackageAssignmentRequests: {
        uriTemplate: AccessPackageAssignmentRequestsRequestBuilderUriTemplate,
        requestsMetadata: AccessPackageAssignmentRequestsRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageAssignmentRequestsRequestBuilderNavigationMetadata,
    },
    accessPackageAssignmentResourceRoles: {
        uriTemplate: AccessPackageAssignmentResourceRolesRequestBuilderUriTemplate,
        requestsMetadata: AccessPackageAssignmentResourceRolesRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageAssignmentResourceRolesRequestBuilderNavigationMetadata,
    },
    accessPackageAssignments: {
        uriTemplate: AccessPackageAssignmentsRequestBuilderUriTemplate,
        requestsMetadata: AccessPackageAssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageAssignmentsRequestBuilderNavigationMetadata,
    },
    accessPackageCatalogs: {
        uriTemplate: AccessPackageCatalogsRequestBuilderUriTemplate,
        requestsMetadata: AccessPackageCatalogsRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageCatalogsRequestBuilderNavigationMetadata,
    },
    accessPackageResourceEnvironments: {
        uriTemplate: AccessPackageResourceEnvironmentsRequestBuilderUriTemplate,
        requestsMetadata: AccessPackageResourceEnvironmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageResourceEnvironmentsRequestBuilderNavigationMetadata,
    },
    accessPackageResourceRequests: {
        uriTemplate: AccessPackageResourceRequestsRequestBuilderUriTemplate,
        requestsMetadata: AccessPackageResourceRequestsRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageResourceRequestsRequestBuilderNavigationMetadata,
    },
    accessPackageResourceRoleScopes: {
        uriTemplate: AccessPackageResourceRoleScopesRequestBuilderUriTemplate,
        requestsMetadata: AccessPackageResourceRoleScopesRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageResourceRoleScopesRequestBuilderNavigationMetadata,
    },
    accessPackageResources: {
        uriTemplate: AccessPackageResourcesRequestBuilderUriTemplate,
        requestsMetadata: AccessPackageResourcesRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackageResourcesRequestBuilderNavigationMetadata,
    },
    accessPackages: {
        uriTemplate: AccessPackagesRequestBuilderUriTemplate,
        requestsMetadata: AccessPackagesRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackagesRequestBuilderNavigationMetadata,
    },
    assignmentRequests: {
        uriTemplate: AssignmentRequestsRequestBuilderUriTemplate,
        requestsMetadata: AssignmentRequestsRequestBuilderRequestsMetadata,
        navigationMetadata: AssignmentRequestsRequestBuilderNavigationMetadata,
    },
    connectedOrganizations: {
        uriTemplate: ConnectedOrganizationsRequestBuilderUriTemplate,
        requestsMetadata: ConnectedOrganizationsRequestBuilderRequestsMetadata,
        navigationMetadata: ConnectedOrganizationsRequestBuilderNavigationMetadata,
    },
    settings: {
        uriTemplate: SettingsRequestBuilderUriTemplate,
        requestsMetadata: SettingsRequestBuilderRequestsMetadata,
    },
    subjects: {
        uriTemplate: SubjectsRequestBuilderUriTemplate,
        requestsMetadata: SubjectsRequestBuilderRequestsMetadata,
        navigationMetadata: SubjectsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const EntitlementManagementRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createEntitlementManagementFromDiscriminatorValue,
        queryParametersMapper: EntitlementManagementRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createEntitlementManagementFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeEntitlementManagement,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const EntitlementManagementRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/entitlementManagement{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
