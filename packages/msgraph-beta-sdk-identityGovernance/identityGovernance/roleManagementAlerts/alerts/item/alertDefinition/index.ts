/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createUnifiedRoleManagementAlertDefinitionFromDiscriminatorValue, type UnifiedRoleManagementAlertDefinition } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the alertDefinition property of the microsoft.graph.unifiedRoleManagementAlert entity.
 */
export interface AlertDefinitionRequestBuilder extends BaseRequestBuilder<AlertDefinitionRequestBuilder> {
    /**
     * Contains the description, impact, and measures to mitigate or prevent the security alert from being triggered in your tenant. Supports $expand.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UnifiedRoleManagementAlertDefinition>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<AlertDefinitionRequestBuilderGetQueryParameters> | undefined) : Promise<UnifiedRoleManagementAlertDefinition | undefined>;
    /**
     * Contains the description, impact, and measures to mitigate or prevent the security alert from being triggered in your tenant. Supports $expand.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AlertDefinitionRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Contains the description, impact, and measures to mitigate or prevent the security alert from being triggered in your tenant. Supports $expand.
 */
export interface AlertDefinitionRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const AlertDefinitionRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/roleManagementAlerts/alerts/{unifiedRoleManagementAlert%2Did}/alertDefinition{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AlertDefinitionRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AlertDefinitionRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: AlertDefinitionRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createUnifiedRoleManagementAlertDefinitionFromDiscriminatorValue,
        queryParametersMapper: AlertDefinitionRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Provides operations to manage the alertDefinition property of the microsoft.graph.unifiedRoleManagementAlert entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the alertDefinition property of the microsoft.graph.unifiedRoleManagementAlert entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    Description: "description",
    DisplayName: "displayName",
    HowToPrevent: "howToPrevent",
    IsConfigurable: "isConfigurable",
    IsRemediatable: "isRemediatable",
    MitigationSteps: "mitigationSteps",
    ScopeId: "scopeId",
    ScopeType: "scopeType",
    SecurityImpact: "securityImpact",
    SeverityLevel: "severityLevel",
} as const;
/* tslint:enable */
/* eslint-enable */
