/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createActivationScopeFromDiscriminatorValue, serializeActivationScope, type ActivationScope } from '@microsoft/msgraph-beta-sdk/models/identityGovernance/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ActivateWithScopePostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The scope property
     */
    scope?: ActivationScope | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ActivateWithScopePostRequestBody}
 */
// @ts-ignore
export function createActivateWithScopePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoActivateWithScopePostRequestBody;
}
/**
 * The deserialization information for the current model
 * @param ActivateWithScopePostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoActivateWithScopePostRequestBody(activateWithScopePostRequestBody: Partial<ActivateWithScopePostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { activateWithScopePostRequestBody.backingStoreEnabled = true; },
        "scope": n => { activateWithScopePostRequestBody.scope = n.getObjectValue<ActivationScope>(createActivationScopeFromDiscriminatorValue); },
    }
}
/**
 * Provides operations to call the activateWithScope method.
 */
export interface MicrosoftGraphIdentityGovernanceActivateWithScopeRequestBuilder extends BaseRequestBuilder<MicrosoftGraphIdentityGovernanceActivateWithScopeRequestBuilder> {
    /**
     * Run a workflow object on-demand with a specific scope. You can run any workflow on-demand, including scheduled workflows. Workflows created from the 'Real-time employee termination' template are run on-demand only. When you run a workflow on demand, the tasks are executed regardless of whether the user state matches the scope and trigger execution conditions.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated  as of 2025-01/PrivatePreview:organizationalUnit on 2025-03-14 and will be removed 2026-08-01
     * @see {@link https://learn.microsoft.com/graph/api/identitygovernance-workflow-activatewithscope?view=graph-rest-beta|Find more info here}
     */
     post(body: ActivateWithScopePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Run a workflow object on-demand with a specific scope. You can run any workflow on-demand, including scheduled workflows. Workflows created from the 'Real-time employee termination' template are run on-demand only. When you run a workflow on demand, the tasks are executed regardless of whether the user state matches the scope and trigger execution conditions.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated  as of 2025-01/PrivatePreview:organizationalUnit on 2025-03-14 and will be removed 2026-08-01
     */
     toPostRequestInformation(body: ActivateWithScopePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param ActivateWithScopePostRequestBody The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeActivateWithScopePostRequestBody(writer: SerializationWriter, activateWithScopePostRequestBody: Partial<ActivateWithScopePostRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!activateWithScopePostRequestBody || isSerializingDerivedType) { return; }
    writer.writeObjectValue<ActivationScope>("scope", activateWithScopePostRequestBody.scope, serializeActivationScope);
    writer.writeAdditionalData(activateWithScopePostRequestBody.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const MicrosoftGraphIdentityGovernanceActivateWithScopeRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/lifecycleWorkflows/workflows/{workflow%2Did}/microsoft.graph.identityGovernance.activateWithScope";
/**
 * Metadata for all the requests in the request builder.
 */
export const MicrosoftGraphIdentityGovernanceActivateWithScopeRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: MicrosoftGraphIdentityGovernanceActivateWithScopeRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeActivateWithScopePostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
