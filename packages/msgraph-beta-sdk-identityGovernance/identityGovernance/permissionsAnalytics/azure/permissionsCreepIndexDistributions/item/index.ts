/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPermissionsCreepIndexDistributionFromDiscriminatorValue, serializePermissionsCreepIndexDistribution, type PermissionsCreepIndexDistribution } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { AuthorizationSystemRequestBuilderRequestsMetadata, type AuthorizationSystemRequestBuilder } from './authorizationSystem/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the permissionsCreepIndexDistributions property of the microsoft.graph.permissionsAnalytics entity.
 */
export interface PermissionsCreepIndexDistributionItemRequestBuilder extends BaseRequestBuilder<PermissionsCreepIndexDistributionItemRequestBuilder> {
    /**
     * Provides operations to manage the authorizationSystem property of the microsoft.graph.permissionsCreepIndexDistribution entity.
     */
    get authorizationSystem(): AuthorizationSystemRequestBuilder;
    /**
     * Delete navigation property permissionsCreepIndexDistributions for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Represents the Permissions Creep Index (PCI) for the authorization system. PCI distribution chart shows the classification of human and nonhuman identities based on the PCI score in three buckets (low, medium, high).
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PermissionsCreepIndexDistribution>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<PermissionsCreepIndexDistributionItemRequestBuilderGetQueryParameters> | undefined) : Promise<PermissionsCreepIndexDistribution | undefined>;
    /**
     * Update the navigation property permissionsCreepIndexDistributions in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PermissionsCreepIndexDistribution>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: PermissionsCreepIndexDistribution, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<PermissionsCreepIndexDistribution | undefined>;
    /**
     * Delete navigation property permissionsCreepIndexDistributions for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Represents the Permissions Creep Index (PCI) for the authorization system. PCI distribution chart shows the classification of human and nonhuman identities based on the PCI score in three buckets (low, medium, high).
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PermissionsCreepIndexDistributionItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property permissionsCreepIndexDistributions in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: PermissionsCreepIndexDistribution, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Represents the Permissions Creep Index (PCI) for the authorization system. PCI distribution chart shows the classification of human and nonhuman identities based on the PCI score in three buckets (low, medium, high).
 */
export interface PermissionsCreepIndexDistributionItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const PermissionsCreepIndexDistributionItemRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/permissionsAnalytics/azure/permissionsCreepIndexDistributions/{permissionsCreepIndexDistribution%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PermissionsCreepIndexDistributionItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PermissionsCreepIndexDistributionItemRequestBuilderNavigationMetadata: Record<Exclude<keyof PermissionsCreepIndexDistributionItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    authorizationSystem: {
        requestsMetadata: AuthorizationSystemRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PermissionsCreepIndexDistributionItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: PermissionsCreepIndexDistributionItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: PermissionsCreepIndexDistributionItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPermissionsCreepIndexDistributionFromDiscriminatorValue,
        queryParametersMapper: PermissionsCreepIndexDistributionItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: PermissionsCreepIndexDistributionItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPermissionsCreepIndexDistributionFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePermissionsCreepIndexDistribution,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
