/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPermissionsAnalyticsAggregationFromDiscriminatorValue, serializePermissionsAnalyticsAggregation, type PermissionsAnalyticsAggregation } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { AwsRequestBuilderNavigationMetadata, AwsRequestBuilderRequestsMetadata, type AwsRequestBuilder } from './aws/';
import { AzureRequestBuilderNavigationMetadata, AzureRequestBuilderRequestsMetadata, type AzureRequestBuilder } from './azure/';
import { GcpRequestBuilderNavigationMetadata, GcpRequestBuilderRequestsMetadata, type GcpRequestBuilder } from './gcp/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the permissionsAnalytics property of the microsoft.graph.identityGovernance entity.
 */
export interface PermissionsAnalyticsRequestBuilder extends BaseRequestBuilder<PermissionsAnalyticsRequestBuilder> {
    /**
     * Provides operations to manage the aws property of the microsoft.graph.permissionsAnalyticsAggregation entity.
     */
    get aws(): AwsRequestBuilder;
    /**
     * Provides operations to manage the azure property of the microsoft.graph.permissionsAnalyticsAggregation entity.
     */
    get azure(): AzureRequestBuilder;
    /**
     * Provides operations to manage the gcp property of the microsoft.graph.permissionsAnalyticsAggregation entity.
     */
    get gcp(): GcpRequestBuilder;
    /**
     * Delete navigation property permissionsAnalytics for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get permissionsAnalytics from identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PermissionsAnalyticsAggregation>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<PermissionsAnalyticsRequestBuilderGetQueryParameters> | undefined) : Promise<PermissionsAnalyticsAggregation | undefined>;
    /**
     * Update the navigation property permissionsAnalytics in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PermissionsAnalyticsAggregation>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: PermissionsAnalyticsAggregation, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<PermissionsAnalyticsAggregation | undefined>;
    /**
     * Delete navigation property permissionsAnalytics for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get permissionsAnalytics from identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PermissionsAnalyticsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property permissionsAnalytics in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: PermissionsAnalyticsAggregation, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get permissionsAnalytics from identityGovernance
 */
export interface PermissionsAnalyticsRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
/**
 * Uri template for the request builder.
 */
export const PermissionsAnalyticsRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/permissionsAnalytics{?%24expand,%24select}";
/**
 * Provides operations to manage the permissionsAnalytics property of the microsoft.graph.identityGovernance entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Aws: "aws",
    Azure: "azure",
    Gcp: "gcp",
} as const;
/**
 * Provides operations to manage the permissionsAnalytics property of the microsoft.graph.identityGovernance entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    Aws: "aws",
    Azure: "azure",
    Gcp: "gcp",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PermissionsAnalyticsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PermissionsAnalyticsRequestBuilderNavigationMetadata: Record<Exclude<keyof PermissionsAnalyticsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    aws: {
        requestsMetadata: AwsRequestBuilderRequestsMetadata,
        navigationMetadata: AwsRequestBuilderNavigationMetadata,
    },
    azure: {
        requestsMetadata: AzureRequestBuilderRequestsMetadata,
        navigationMetadata: AzureRequestBuilderNavigationMetadata,
    },
    gcp: {
        requestsMetadata: GcpRequestBuilderRequestsMetadata,
        navigationMetadata: GcpRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PermissionsAnalyticsRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: PermissionsAnalyticsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: PermissionsAnalyticsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPermissionsAnalyticsAggregationFromDiscriminatorValue,
        queryParametersMapper: PermissionsAnalyticsRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: PermissionsAnalyticsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPermissionsAnalyticsAggregationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePermissionsAnalyticsAggregation,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
