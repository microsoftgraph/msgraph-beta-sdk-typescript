/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createBranchSiteCollectionResponseFromDiscriminatorValue, createBranchSiteFromDiscriminatorValue, serializeBranchSite, type BranchSite, type BranchSiteCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/networkaccess/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { BranchSiteItemRequestBuilderNavigationMetadata, BranchSiteItemRequestBuilderRequestsMetadata, type BranchSiteItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the branches property of the microsoft.graph.networkaccess.connectivity entity.
 */
export interface BranchesRequestBuilder extends BaseRequestBuilder<BranchesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     * @deprecated The Branches API is deprecated and will stop returning data on January 20, 2024. Please use the new Remote Network API. as of 2022-06/PrivatePreview:NetworkAccess
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the branches property of the microsoft.graph.networkaccess.connectivity entity.
     * @param branchSiteId The unique identifier of branchSite
     * @returns {BranchSiteItemRequestBuilder}
     * @deprecated The Branches API is deprecated and will stop returning data on January 20, 2024. Please use the new Remote Network API. as of 2022-06/PrivatePreview:NetworkAccess
     */
     byBranchSiteId(branchSiteId: string) : BranchSiteItemRequestBuilder;
    /**
     * Retrieve a list of branches within a tenant connected to the Global Secure Access services.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<BranchSiteCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated The Branches API is deprecated and will stop returning data on January 20, 2024. Please use the new Remote Network API. as of 2022-06/PrivatePreview:NetworkAccess
     * @see {@link https://learn.microsoft.com/graph/api/networkaccess-connectivity-list-branches?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<BranchesRequestBuilderGetQueryParameters> | undefined) : Promise<BranchSiteCollectionResponse | undefined>;
    /**
     * Create a new branch.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<BranchSite>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated The Branches API is deprecated and will stop returning data on January 20, 2024. Please use the new Remote Network API. as of 2022-06/PrivatePreview:NetworkAccess
     * @see {@link https://learn.microsoft.com/graph/api/networkaccess-connectivity-post-branches?view=graph-rest-1.0|Find more info here}
     */
     post(body: BranchSite, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<BranchSite | undefined>;
    /**
     * Retrieve a list of branches within a tenant connected to the Global Secure Access services.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated The Branches API is deprecated and will stop returning data on January 20, 2024. Please use the new Remote Network API. as of 2022-06/PrivatePreview:NetworkAccess
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<BranchesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new branch.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated The Branches API is deprecated and will stop returning data on January 20, 2024. Please use the new Remote Network API. as of 2022-06/PrivatePreview:NetworkAccess
     */
     toPostRequestInformation(body: BranchSite, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve a list of branches within a tenant connected to the Global Secure Access services.
 */
export interface BranchesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const BranchesRequestBuilderUriTemplate = "{+baseurl}/networkAccess/connectivity/branches{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const BranchesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const BranchesRequestBuilderNavigationMetadata: Record<Exclude<keyof BranchesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byBranchSiteId: {
        requestsMetadata: BranchSiteItemRequestBuilderRequestsMetadata,
        navigationMetadata: BranchSiteItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["branchSite%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const BranchesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: BranchesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createBranchSiteCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: BranchesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: BranchesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createBranchSiteFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeBranchSite,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the branches property of the microsoft.graph.networkaccess.connectivity entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    ConnectivityConfiguration: "connectivityConfiguration",
    DeviceLinks: "deviceLinks",
    ForwardingProfiles: "forwardingProfiles",
} as const;
/**
 * Provides operations to manage the branches property of the microsoft.graph.networkaccess.connectivity entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    BandwidthCapacity: "bandwidthCapacity",
    BandwidthCapacityDesc: "bandwidthCapacity desc",
    ConnectivityState: "connectivityState",
    ConnectivityStateDesc: "connectivityState desc",
    Country: "country",
    CountryDesc: "country desc",
    LastModifiedDateTime: "lastModifiedDateTime",
    LastModifiedDateTimeDesc: "lastModifiedDateTime desc",
    Name: "name",
    NameDesc: "name desc",
    Region: "region",
    RegionDesc: "region desc",
    Version: "version",
    VersionDesc: "version desc",
} as const;
/**
 * Provides operations to manage the branches property of the microsoft.graph.networkaccess.connectivity entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    BandwidthCapacity: "bandwidthCapacity",
    ConnectivityState: "connectivityState",
    Country: "country",
    LastModifiedDateTime: "lastModifiedDateTime",
    Name: "name",
    Region: "region",
    Version: "version",
    ConnectivityConfiguration: "connectivityConfiguration",
    DeviceLinks: "deviceLinks",
    ForwardingProfiles: "forwardingProfiles",
} as const;
/* tslint:enable */
/* eslint-enable */
