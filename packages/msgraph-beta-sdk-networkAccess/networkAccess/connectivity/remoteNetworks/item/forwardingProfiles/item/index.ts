/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createForwardingProfileFromDiscriminatorValue, serializeForwardingProfile, type ForwardingProfile } from '@microsoft/msgraph-beta-sdk/models/networkaccess/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { PoliciesRequestBuilderNavigationMetadata, PoliciesRequestBuilderRequestsMetadata, type PoliciesRequestBuilder } from './policies/';
import { ServicePrincipalRequestBuilderRequestsMetadata, type ServicePrincipalRequestBuilder } from './servicePrincipal/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the forwardingProfiles property of the microsoft.graph.networkaccess.remoteNetwork entity.
 */
export interface ForwardingProfileItemRequestBuilder extends BaseRequestBuilder<ForwardingProfileItemRequestBuilder> {
    /**
     * Provides operations to manage the policies property of the microsoft.graph.networkaccess.profile entity.
     */
    get policies(): PoliciesRequestBuilder;
    /**
     * Provides operations to manage the servicePrincipal property of the microsoft.graph.networkaccess.forwardingProfile entity.
     */
    get servicePrincipal(): ServicePrincipalRequestBuilder;
    /**
     * Delete navigation property forwardingProfiles for networkAccess
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get forwardingProfiles from networkAccess
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ForwardingProfile>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ForwardingProfileItemRequestBuilderGetQueryParameters> | undefined) : Promise<ForwardingProfile | undefined>;
    /**
     * Update the navigation property forwardingProfiles in networkAccess
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ForwardingProfile>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: ForwardingProfile, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ForwardingProfile | undefined>;
    /**
     * Delete navigation property forwardingProfiles for networkAccess
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get forwardingProfiles from networkAccess
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ForwardingProfileItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property forwardingProfiles in networkAccess
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: ForwardingProfile, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get forwardingProfiles from networkAccess
 */
export interface ForwardingProfileItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const ForwardingProfileItemRequestBuilderUriTemplate = "{+baseurl}/networkAccess/connectivity/remoteNetworks/{remoteNetwork%2Did}/forwardingProfiles/{forwardingProfile%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ForwardingProfileItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ForwardingProfileItemRequestBuilderNavigationMetadata: Record<Exclude<keyof ForwardingProfileItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    policies: {
        requestsMetadata: PoliciesRequestBuilderRequestsMetadata,
        navigationMetadata: PoliciesRequestBuilderNavigationMetadata,
    },
    servicePrincipal: {
        requestsMetadata: ServicePrincipalRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ForwardingProfileItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: ForwardingProfileItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: ForwardingProfileItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createForwardingProfileFromDiscriminatorValue,
        queryParametersMapper: ForwardingProfileItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: ForwardingProfileItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createForwardingProfileFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeForwardingProfile,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the forwardingProfiles property of the microsoft.graph.networkaccess.remoteNetwork entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Policies: "policies",
    ServicePrincipal: "servicePrincipal",
} as const;
/**
 * Provides operations to manage the forwardingProfiles property of the microsoft.graph.networkaccess.remoteNetwork entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    Description: "description",
    LastModifiedDateTime: "lastModifiedDateTime",
    Name: "name",
    State: "state",
    Version: "version",
    Associations: "associations",
    Priority: "priority",
    TrafficForwardingType: "trafficForwardingType",
    Policies: "policies",
    ServicePrincipal: "servicePrincipal",
} as const;
/* tslint:enable */
/* eslint-enable */
