/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createServicePrincipalCreationPolicyFromDiscriminatorValue, serializeServicePrincipalCreationPolicy, type ServicePrincipalCreationPolicy } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { ExcludesRequestBuilderNavigationMetadata, ExcludesRequestBuilderRequestsMetadata, type ExcludesRequestBuilder } from './excludes/';
import { IncludesRequestBuilderNavigationMetadata, IncludesRequestBuilderRequestsMetadata, type IncludesRequestBuilder } from './includes/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the servicePrincipalCreationPolicies property of the microsoft.graph.policyRoot entity.
 */
export interface ServicePrincipalCreationPolicyItemRequestBuilder extends BaseRequestBuilder<ServicePrincipalCreationPolicyItemRequestBuilder> {
    /**
     * Provides operations to manage the excludes property of the microsoft.graph.servicePrincipalCreationPolicy entity.
     */
    get excludes(): ExcludesRequestBuilder;
    /**
     * Provides operations to manage the includes property of the microsoft.graph.servicePrincipalCreationPolicy entity.
     */
    get includes(): IncludesRequestBuilder;
    /**
     * Delete navigation property servicePrincipalCreationPolicies for policies
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get servicePrincipalCreationPolicies from policies
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ServicePrincipalCreationPolicy>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ServicePrincipalCreationPolicyItemRequestBuilderGetQueryParameters> | undefined) : Promise<ServicePrincipalCreationPolicy | undefined>;
    /**
     * Update the navigation property servicePrincipalCreationPolicies in policies
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ServicePrincipalCreationPolicy>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: ServicePrincipalCreationPolicy, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ServicePrincipalCreationPolicy | undefined>;
    /**
     * Delete navigation property servicePrincipalCreationPolicies for policies
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get servicePrincipalCreationPolicies from policies
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ServicePrincipalCreationPolicyItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property servicePrincipalCreationPolicies in policies
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: ServicePrincipalCreationPolicy, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get servicePrincipalCreationPolicies from policies
 */
export interface ServicePrincipalCreationPolicyItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
/**
 * Uri template for the request builder.
 */
export const ServicePrincipalCreationPolicyItemRequestBuilderUriTemplate = "{+baseurl}/policies/servicePrincipalCreationPolicies/{servicePrincipalCreationPolicy%2Did}{?%24expand,%24select}";
/**
 * Provides operations to manage the servicePrincipalCreationPolicies property of the microsoft.graph.policyRoot entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Excludes: "excludes",
    Includes: "includes",
} as const;
/**
 * Provides operations to manage the servicePrincipalCreationPolicies property of the microsoft.graph.policyRoot entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    DeletedDateTime: "deletedDateTime",
    Description: "description",
    DisplayName: "displayName",
    IsBuiltIn: "isBuiltIn",
    Excludes: "excludes",
    Includes: "includes",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ServicePrincipalCreationPolicyItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ServicePrincipalCreationPolicyItemRequestBuilderNavigationMetadata: Record<Exclude<keyof ServicePrincipalCreationPolicyItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    excludes: {
        requestsMetadata: ExcludesRequestBuilderRequestsMetadata,
        navigationMetadata: ExcludesRequestBuilderNavigationMetadata,
    },
    includes: {
        requestsMetadata: IncludesRequestBuilderRequestsMetadata,
        navigationMetadata: IncludesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ServicePrincipalCreationPolicyItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: ServicePrincipalCreationPolicyItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: ServicePrincipalCreationPolicyItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createServicePrincipalCreationPolicyFromDiscriminatorValue,
        queryParametersMapper: ServicePrincipalCreationPolicyItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: ServicePrincipalCreationPolicyItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createServicePrincipalCreationPolicyFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeServicePrincipalCreationPolicy,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
