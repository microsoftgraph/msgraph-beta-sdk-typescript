/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createNoncustodialDataSourceCollectionResponseFromDiscriminatorValue, createNoncustodialDataSourceFromDiscriminatorValue, serializeNoncustodialDataSource, type NoncustodialDataSource, type NoncustodialDataSourceCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/ediscovery/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, CountRequestBuilderUriTemplate, type CountRequestBuilder } from './count/';
import { NoncustodialDataSourceItemRequestBuilderNavigationMetadata, NoncustodialDataSourceItemRequestBuilderRequestsMetadata, NoncustodialDataSourceItemRequestBuilderUriTemplate, type NoncustodialDataSourceItemRequestBuilder } from './item/';
import { MicrosoftGraphEdiscoveryApplyHoldRequestBuilderRequestsMetadata, MicrosoftGraphEdiscoveryApplyHoldRequestBuilderUriTemplate, type MicrosoftGraphEdiscoveryApplyHoldRequestBuilder } from './microsoftGraphEdiscoveryApplyHold/';
import { MicrosoftGraphEdiscoveryRemoveHoldRequestBuilderRequestsMetadata, MicrosoftGraphEdiscoveryRemoveHoldRequestBuilderUriTemplate, type MicrosoftGraphEdiscoveryRemoveHoldRequestBuilder } from './microsoftGraphEdiscoveryRemoveHold/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the noncustodialDataSources property of the microsoft.graph.ediscovery.case entity.
 */
export interface NoncustodialDataSourcesRequestBuilder extends BaseRequestBuilder<NoncustodialDataSourcesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to call the applyHold method.
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace
     */
    get microsoftGraphEdiscoveryApplyHold(): MicrosoftGraphEdiscoveryApplyHoldRequestBuilder;
    /**
     * Provides operations to call the removeHold method.
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace
     */
    get microsoftGraphEdiscoveryRemoveHold(): MicrosoftGraphEdiscoveryRemoveHoldRequestBuilder;
    /**
     * Provides operations to manage the noncustodialDataSources property of the microsoft.graph.ediscovery.case entity.
     * @param noncustodialDataSourceId The unique identifier of noncustodialDataSource
     * @returns a NoncustodialDataSourceItemRequestBuilder
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace
     */
     byNoncustodialDataSourceId(noncustodialDataSourceId: string) : NoncustodialDataSourceItemRequestBuilder;
    /**
     * Get a list of the noncustodialDataSource objects and their properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of NoncustodialDataSourceCollectionResponse
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace
     * @see {@link https://learn.microsoft.com/graph/api/ediscovery-noncustodialdatasource-list?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<NoncustodialDataSourcesRequestBuilderGetQueryParameters> | undefined) : Promise<NoncustodialDataSourceCollectionResponse | undefined>;
    /**
     * Create a new noncustodialDataSource object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of NoncustodialDataSource
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace
     * @see {@link https://learn.microsoft.com/graph/api/ediscovery-noncustodialdatasource-post?view=graph-rest-1.0|Find more info here}
     */
     post(body: NoncustodialDataSource, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<NoncustodialDataSource | undefined>;
    /**
     * Get a list of the noncustodialDataSource objects and their properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<NoncustodialDataSourcesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new noncustodialDataSource object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace
     */
     toPostRequestInformation(body: NoncustodialDataSource, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get a list of the noncustodialDataSource objects and their properties.
 */
export interface NoncustodialDataSourcesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const NoncustodialDataSourcesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const NoncustodialDataSourcesRequestBuilderNavigationMetadata: Record<Exclude<keyof NoncustodialDataSourcesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byNoncustodialDataSourceId: {
        uriTemplate: NoncustodialDataSourceItemRequestBuilderUriTemplate,
        requestsMetadata: NoncustodialDataSourceItemRequestBuilderRequestsMetadata,
        navigationMetadata: NoncustodialDataSourceItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["noncustodialDataSource%2Did"],
    },
    count: {
        uriTemplate: CountRequestBuilderUriTemplate,
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    microsoftGraphEdiscoveryApplyHold: {
        uriTemplate: MicrosoftGraphEdiscoveryApplyHoldRequestBuilderUriTemplate,
        requestsMetadata: MicrosoftGraphEdiscoveryApplyHoldRequestBuilderRequestsMetadata,
    },
    microsoftGraphEdiscoveryRemoveHold: {
        uriTemplate: MicrosoftGraphEdiscoveryRemoveHoldRequestBuilderUriTemplate,
        requestsMetadata: MicrosoftGraphEdiscoveryRemoveHoldRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const NoncustodialDataSourcesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createNoncustodialDataSourceCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: NoncustodialDataSourcesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createNoncustodialDataSourceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeNoncustodialDataSource,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const NoncustodialDataSourcesRequestBuilderUriTemplate = "{+baseurl}/compliance/ediscovery/cases/{case%2Did}/noncustodialDataSources{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/* tslint:enable */
/* eslint-enable */
