/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createNoncustodialDataSourceFromDiscriminatorValue, serializeNoncustodialDataSource, type NoncustodialDataSource } from '@microsoft/msgraph-beta-sdk/models/ediscovery/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { DataSourceRequestBuilderRequestsMetadata, type DataSourceRequestBuilder } from './dataSource/index.js';
// @ts-ignore
import { LastIndexOperationRequestBuilderRequestsMetadata, type LastIndexOperationRequestBuilder } from './lastIndexOperation/index.js';
// @ts-ignore
import { MicrosoftGraphEdiscoveryApplyHoldRequestBuilderRequestsMetadata, type MicrosoftGraphEdiscoveryApplyHoldRequestBuilder } from './microsoftGraphEdiscoveryApplyHold/index.js';
// @ts-ignore
import { MicrosoftGraphEdiscoveryReleaseRequestBuilderRequestsMetadata, type MicrosoftGraphEdiscoveryReleaseRequestBuilder } from './microsoftGraphEdiscoveryRelease/index.js';
// @ts-ignore
import { MicrosoftGraphEdiscoveryRemoveHoldRequestBuilderRequestsMetadata, type MicrosoftGraphEdiscoveryRemoveHoldRequestBuilder } from './microsoftGraphEdiscoveryRemoveHold/index.js';
// @ts-ignore
import { MicrosoftGraphEdiscoveryUpdateIndexRequestBuilderRequestsMetadata, type MicrosoftGraphEdiscoveryUpdateIndexRequestBuilder } from './microsoftGraphEdiscoveryUpdateIndex/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the noncustodialDataSources property of the microsoft.graph.ediscovery.case entity.
 */
export interface NoncustodialDataSourceItemRequestBuilder extends BaseRequestBuilder<NoncustodialDataSourceItemRequestBuilder> {
    /**
     * Provides operations to manage the dataSource property of the microsoft.graph.ediscovery.noncustodialDataSource entity.
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace on 2022-12-05 and will be removed 2023-02-01
     */
    get dataSource(): DataSourceRequestBuilder;
    /**
     * Provides operations to manage the lastIndexOperation property of the microsoft.graph.ediscovery.dataSourceContainer entity.
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace on 2022-12-05 and will be removed 2023-02-01
     */
    get lastIndexOperation(): LastIndexOperationRequestBuilder;
    /**
     * Provides operations to call the applyHold method.
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace on 2022-12-05 and will be removed 2023-02-01
     */
    get microsoftGraphEdiscoveryApplyHold(): MicrosoftGraphEdiscoveryApplyHoldRequestBuilder;
    /**
     * Provides operations to call the release method.
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace on 2022-12-05 and will be removed 2023-02-01
     */
    get microsoftGraphEdiscoveryRelease(): MicrosoftGraphEdiscoveryReleaseRequestBuilder;
    /**
     * Provides operations to call the removeHold method.
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace on 2022-12-05 and will be removed 2023-02-01
     */
    get microsoftGraphEdiscoveryRemoveHold(): MicrosoftGraphEdiscoveryRemoveHoldRequestBuilder;
    /**
     * Provides operations to call the updateIndex method.
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace on 2022-12-05 and will be removed 2023-02-01
     */
    get microsoftGraphEdiscoveryUpdateIndex(): MicrosoftGraphEdiscoveryUpdateIndexRequestBuilder;
    /**
     * Delete navigation property noncustodialDataSources for compliance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace on 2022-12-05 and will be removed 2023-02-01
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Read the properties and relationships of a noncustodialDataSource object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<NoncustodialDataSource>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace on 2022-12-05 and will be removed 2023-02-01
     * @see {@link https://learn.microsoft.com/graph/api/ediscovery-noncustodialdatasource-get?view=graph-rest-beta|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<NoncustodialDataSourceItemRequestBuilderGetQueryParameters> | undefined) : Promise<NoncustodialDataSource | undefined>;
    /**
     * Update the navigation property noncustodialDataSources in compliance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<NoncustodialDataSource>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace on 2022-12-05 and will be removed 2023-02-01
     */
     patch(body: NoncustodialDataSource, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<NoncustodialDataSource | undefined>;
    /**
     * Delete navigation property noncustodialDataSources for compliance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace on 2022-12-05 and will be removed 2023-02-01
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Read the properties and relationships of a noncustodialDataSource object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace on 2022-12-05 and will be removed 2023-02-01
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<NoncustodialDataSourceItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property noncustodialDataSources in compliance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace on 2022-12-05 and will be removed 2023-02-01
     */
     toPatchRequestInformation(body: NoncustodialDataSource, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Read the properties and relationships of a noncustodialDataSource object.
 */
export interface NoncustodialDataSourceItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const NoncustodialDataSourceItemRequestBuilderUriTemplate = "{+baseurl}/compliance/ediscovery/cases/{case%2Did}/noncustodialDataSources/{noncustodialDataSource%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const NoncustodialDataSourceItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const NoncustodialDataSourceItemRequestBuilderNavigationMetadata: Record<Exclude<keyof NoncustodialDataSourceItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    dataSource: {
        requestsMetadata: DataSourceRequestBuilderRequestsMetadata,
    },
    lastIndexOperation: {
        requestsMetadata: LastIndexOperationRequestBuilderRequestsMetadata,
    },
    microsoftGraphEdiscoveryApplyHold: {
        requestsMetadata: MicrosoftGraphEdiscoveryApplyHoldRequestBuilderRequestsMetadata,
    },
    microsoftGraphEdiscoveryRelease: {
        requestsMetadata: MicrosoftGraphEdiscoveryReleaseRequestBuilderRequestsMetadata,
    },
    microsoftGraphEdiscoveryRemoveHold: {
        requestsMetadata: MicrosoftGraphEdiscoveryRemoveHoldRequestBuilderRequestsMetadata,
    },
    microsoftGraphEdiscoveryUpdateIndex: {
        requestsMetadata: MicrosoftGraphEdiscoveryUpdateIndexRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const NoncustodialDataSourceItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: NoncustodialDataSourceItemRequestBuilderUriTemplate,
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: NoncustodialDataSourceItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createNoncustodialDataSourceFromDiscriminatorValue,
        queryParametersMapper: NoncustodialDataSourceItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: NoncustodialDataSourceItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createNoncustodialDataSourceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeNoncustodialDataSource,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
