/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createTagFromDiscriminatorValue, serializeTag, type Tag } from '@microsoft/msgraph-beta-sdk/models/ediscovery/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ApplyTagsPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The tagsToAdd property
     */
    tagsToAdd?: Tag[] | null;
    /**
     * The tagsToRemove property
     */
    tagsToRemove?: Tag[] | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ApplyTagsPostRequestBody}
 */
// @ts-ignore
export function createApplyTagsPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoApplyTagsPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @param ApplyTagsPostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoApplyTagsPostRequestBody(applyTagsPostRequestBody: Partial<ApplyTagsPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { applyTagsPostRequestBody.backingStoreEnabled = true; },
        "tagsToAdd": n => { applyTagsPostRequestBody.tagsToAdd = n.getCollectionOfObjectValues<Tag>(createTagFromDiscriminatorValue); },
        "tagsToRemove": n => { applyTagsPostRequestBody.tagsToRemove = n.getCollectionOfObjectValues<Tag>(createTagFromDiscriminatorValue); },
    }
}
/**
 * Provides operations to call the applyTags method.
 */
export interface MicrosoftGraphEdiscoveryApplyTagsRequestBuilder extends BaseRequestBuilder<MicrosoftGraphEdiscoveryApplyTagsRequestBuilder> {
    /**
     * Apply tags to documents that match the specified reviewSetQuery.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace on 2022-12-05 and will be removed 2023-02-01
     * @see {@link https://learn.microsoft.com/graph/api/ediscovery-reviewsetquery-applytags?view=graph-rest-beta|Find more info here}
     */
     post(body: ApplyTagsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Apply tags to documents that match the specified reviewSetQuery.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated The ediscovery Apis are deprecated under /compliance and will stop returning data from February 01, 2023. Please use the new ediscovery Apis under /security. as of 2022-12/ediscoveryNamespace on 2022-12-05 and will be removed 2023-02-01
     */
     toPostRequestInformation(body: ApplyTagsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param ApplyTagsPostRequestBody The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeApplyTagsPostRequestBody(writer: SerializationWriter, applyTagsPostRequestBody: Partial<ApplyTagsPostRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!applyTagsPostRequestBody || isSerializingDerivedType) { return; }
    writer.writeCollectionOfObjectValues<Tag>("tagsToAdd", applyTagsPostRequestBody.tagsToAdd, serializeTag);
    writer.writeCollectionOfObjectValues<Tag>("tagsToRemove", applyTagsPostRequestBody.tagsToRemove, serializeTag);
    writer.writeAdditionalData(applyTagsPostRequestBody.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const MicrosoftGraphEdiscoveryApplyTagsRequestBuilderUriTemplate = "{+baseurl}/compliance/ediscovery/cases/{case%2Did}/reviewSets/{reviewSet%2Did}/queries/{reviewSetQuery%2Did}/microsoft.graph.ediscovery.applyTags";
/**
 * Metadata for all the requests in the request builder.
 */
export const MicrosoftGraphEdiscoveryApplyTagsRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: MicrosoftGraphEdiscoveryApplyTagsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeApplyTagsPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
