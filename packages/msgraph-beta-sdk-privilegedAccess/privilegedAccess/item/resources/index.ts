/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createGovernanceResourceCollectionResponseFromDiscriminatorValue, createGovernanceResourceFromDiscriminatorValue, serializeGovernanceResource, type GovernanceResource, type GovernanceResourceCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, CountRequestBuilderUriTemplate, type CountRequestBuilder } from './count/';
import { GovernanceResourceItemRequestBuilderNavigationMetadata, GovernanceResourceItemRequestBuilderRequestsMetadata, GovernanceResourceItemRequestBuilderUriTemplate, type GovernanceResourceItemRequestBuilder } from './item/';
import { RegisterRequestBuilderRequestsMetadata, RegisterRequestBuilderUriTemplate, type RegisterRequestBuilder } from './register/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the resources property of the microsoft.graph.privilegedAccess entity.
 */
export interface ResourcesRequestBuilder extends BaseRequestBuilder<ResourcesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to call the register method.
     */
    get register(): RegisterRequestBuilder;
    /**
     * Provides operations to manage the resources property of the microsoft.graph.privilegedAccess entity.
     * @param governanceResourceId The unique identifier of governanceResource
     * @returns a GovernanceResourceItemRequestBuilder
     */
     byGovernanceResourceId(governanceResourceId: string) : GovernanceResourceItemRequestBuilder;
    /**
     * Retrieve a collection of governanceResource that the requestor has access to.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of GovernanceResourceCollectionResponse
     * @see {@link https://learn.microsoft.com/graph/api/governanceresource-list?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<ResourcesRequestBuilderGetQueryParameters> | undefined) : Promise<GovernanceResourceCollectionResponse | undefined>;
    /**
     * Create new navigation property to resources for privilegedAccess
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of GovernanceResource
     */
     post(body: GovernanceResource, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<GovernanceResource | undefined>;
    /**
     * Retrieve a collection of governanceResource that the requestor has access to.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ResourcesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to resources for privilegedAccess
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: GovernanceResource, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve a collection of governanceResource that the requestor has access to.
 */
export interface ResourcesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ResourcesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ResourcesRequestBuilderNavigationMetadata: Record<Exclude<keyof ResourcesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byGovernanceResourceId: {
        uriTemplate: GovernanceResourceItemRequestBuilderUriTemplate,
        requestsMetadata: GovernanceResourceItemRequestBuilderRequestsMetadata,
        navigationMetadata: GovernanceResourceItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["governanceResource%2Did"],
    },
    count: {
        uriTemplate: CountRequestBuilderUriTemplate,
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    register: {
        uriTemplate: RegisterRequestBuilderUriTemplate,
        requestsMetadata: RegisterRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ResourcesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createGovernanceResourceCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: ResourcesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createGovernanceResourceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeGovernanceResource,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const ResourcesRequestBuilderUriTemplate = "{+baseurl}/privilegedAccess/{privilegedAccess%2Did}/resources{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/* tslint:enable */
/* eslint-enable */
