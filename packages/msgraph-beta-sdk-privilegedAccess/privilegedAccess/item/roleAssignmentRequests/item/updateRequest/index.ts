/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createGovernanceRoleAssignmentRequestFromDiscriminatorValue, createGovernanceScheduleFromDiscriminatorValue, serializeGovernanceRoleAssignmentRequest, serializeGovernanceSchedule, type GovernanceRoleAssignmentRequest, type GovernanceSchedule } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a updateRequestPostRequestBody
 */
export function createUpdateRequestPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateRequestPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUpdateRequestPostRequestBody(updateRequestPostRequestBody: Partial<UpdateRequestPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "assignmentState": n => { updateRequestPostRequestBody.assignmentState = n.getStringValue(); },
        "backingStoreEnabled": n => { updateRequestPostRequestBody.backingStoreEnabled = true; },
        "decision": n => { updateRequestPostRequestBody.decision = n.getStringValue(); },
        "reason": n => { updateRequestPostRequestBody.reason = n.getStringValue(); },
        "schedule": n => { updateRequestPostRequestBody.schedule = n.getObjectValue<GovernanceSchedule>(createGovernanceScheduleFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUpdateRequestPostRequestBody(writer: SerializationWriter, updateRequestPostRequestBody: Partial<UpdateRequestPostRequestBody> | undefined = {}) : void {
    writer.writeStringValue("assignmentState", updateRequestPostRequestBody.assignmentState);
    writer.writeStringValue("decision", updateRequestPostRequestBody.decision);
    writer.writeStringValue("reason", updateRequestPostRequestBody.reason);
    writer.writeObjectValue<GovernanceSchedule>("schedule", updateRequestPostRequestBody.schedule, serializeGovernanceSchedule);
    writer.writeAdditionalData(updateRequestPostRequestBody.additionalData);
}
export interface UpdateRequestPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The assignmentState property
     */
    assignmentState?: string;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The decision property
     */
    decision?: string;
    /**
     * The reason property
     */
    reason?: string;
    /**
     * The schedule property
     */
    schedule?: GovernanceSchedule;
}
/**
 * Provides operations to call the updateRequest method.
 */
export interface UpdateRequestRequestBuilder extends BaseRequestBuilder<UpdateRequestRequestBuilder> {
    /**
     * Invoke action updateRequest
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of GovernanceRoleAssignmentRequest
     */
     post(body: UpdateRequestPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<GovernanceRoleAssignmentRequest | undefined>;
    /**
     * Invoke action updateRequest
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: UpdateRequestPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Metadata for all the requests in the request builder.
 */
export const UpdateRequestRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createGovernanceRoleAssignmentRequestFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUpdateRequestPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const UpdateRequestRequestBuilderUriTemplate = "{+baseurl}/privilegedAccess/{privilegedAccess%2Did}/roleAssignmentRequests/{governanceRoleAssignmentRequest%2Did}/updateRequest";
/* tslint:enable */
/* eslint-enable */
