/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createParticipantCollectionResponseFromDiscriminatorValue, createParticipantFromDiscriminatorValue, serializeParticipant, type Participant, type ParticipantCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/callRecords/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, CountRequestBuilderUriTemplate, type CountRequestBuilder } from './count/';
import { ParticipantItemRequestBuilderRequestsMetadata, ParticipantItemRequestBuilderUriTemplate, type ParticipantItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the participants_v2 property of the microsoft.graph.callRecords.callRecord entity.
 */
export interface Participants_v2RequestBuilder extends BaseRequestBuilder<Participants_v2RequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the participants_v2 property of the microsoft.graph.callRecords.callRecord entity.
     * @param participantId The unique identifier of participant
     * @returns a ParticipantItemRequestBuilder
     */
     byParticipantId(participantId: string) : ParticipantItemRequestBuilder;
    /**
     * Get the list of participant objects associated with a callRecord.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of ParticipantCollectionResponse
     * @see {@link https://learn.microsoft.com/graph/api/callrecords-callrecord-list-participants_v2?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<Participants_v2RequestBuilderGetQueryParameters> | undefined) : Promise<ParticipantCollectionResponse | undefined>;
    /**
     * Create new navigation property to participants_v2 for communications
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of Participant
     */
     post(body: Participant, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Participant | undefined>;
    /**
     * Get the list of participant objects associated with a callRecord.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<Participants_v2RequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to participants_v2 for communications
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: Participant, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get the list of participant objects associated with a callRecord.
 */
export interface Participants_v2RequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const Participants_v2RequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const Participants_v2RequestBuilderNavigationMetadata: Record<Exclude<keyof Participants_v2RequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byParticipantId: {
        uriTemplate: ParticipantItemRequestBuilderUriTemplate,
        requestsMetadata: ParticipantItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["participant%2Did"],
    },
    count: {
        uriTemplate: CountRequestBuilderUriTemplate,
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Participants_v2RequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createParticipantCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: Participants_v2RequestBuilderGetQueryParametersMapper,
    },
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createParticipantFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeParticipant,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const Participants_v2RequestBuilderUriTemplate = "{+baseurl}/communications/callRecords/{callRecord%2Did}/participants_v2{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/* tslint:enable */
/* eslint-enable */
