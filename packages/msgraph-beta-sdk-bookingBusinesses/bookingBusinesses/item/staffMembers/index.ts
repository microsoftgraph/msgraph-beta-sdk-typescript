/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createBookingStaffMemberCollectionResponseFromDiscriminatorValue, createBookingStaffMemberFromDiscriminatorValue, serializeBookingStaffMember, type BookingStaffMember, type BookingStaffMemberCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/index.js';
// @ts-ignore
import { BookingStaffMemberItemRequestBuilderRequestsMetadata, type BookingStaffMemberItemRequestBuilder } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the staffMembers property of the microsoft.graph.bookingBusiness entity.
 */
export interface StaffMembersRequestBuilder extends BaseRequestBuilder<StaffMembersRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the staffMembers property of the microsoft.graph.bookingBusiness entity.
     * @param bookingStaffMemberId The unique identifier of bookingStaffMember
     * @returns {BookingStaffMemberItemRequestBuilder}
     */
     byBookingStaffMemberId(bookingStaffMemberId: string) : BookingStaffMemberItemRequestBuilder;
    /**
     * All the staff members that provide services in this business. Read-only. Nullable.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<BookingStaffMemberCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<StaffMembersRequestBuilderGetQueryParameters> | undefined) : Promise<BookingStaffMemberCollectionResponse | undefined>;
    /**
     * Create new navigation property to staffMembers for bookingBusinesses
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<BookingStaffMember>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: BookingStaffMember, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<BookingStaffMember | undefined>;
    /**
     * All the staff members that provide services in this business. Read-only. Nullable.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<StaffMembersRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to staffMembers for bookingBusinesses
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: BookingStaffMember, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * All the staff members that provide services in this business. Read-only. Nullable.
 */
export interface StaffMembersRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const StaffMembersRequestBuilderUriTemplate = "{+baseurl}/bookingBusinesses/{bookingBusiness%2Did}/staffMembers{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const StaffMembersRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const StaffMembersRequestBuilderNavigationMetadata: Record<Exclude<keyof StaffMembersRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byBookingStaffMemberId: {
        requestsMetadata: BookingStaffMemberItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["bookingStaffMember%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const StaffMembersRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: StaffMembersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createBookingStaffMemberCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: StaffMembersRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: StaffMembersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createBookingStaffMemberFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeBookingStaffMember,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
