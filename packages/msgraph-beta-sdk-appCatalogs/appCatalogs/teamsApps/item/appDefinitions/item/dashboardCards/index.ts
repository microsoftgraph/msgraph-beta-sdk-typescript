/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createTeamsAppDashboardCardDefinitionCollectionResponseFromDiscriminatorValue, createTeamsAppDashboardCardDefinitionFromDiscriminatorValue, serializeTeamsAppDashboardCardDefinition, type TeamsAppDashboardCardDefinition, type TeamsAppDashboardCardDefinitionCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { TeamsAppDashboardCardDefinitionItemRequestBuilderRequestsMetadata, type TeamsAppDashboardCardDefinitionItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the dashboardCards property of the microsoft.graph.teamsAppDefinition entity.
 */
export interface DashboardCardsRequestBuilder extends BaseRequestBuilder<DashboardCardsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the dashboardCards property of the microsoft.graph.teamsAppDefinition entity.
     * @param teamsAppDashboardCardDefinitionId The unique identifier of teamsAppDashboardCardDefinition
     * @returns {TeamsAppDashboardCardDefinitionItemRequestBuilder}
     */
     byTeamsAppDashboardCardDefinitionId(teamsAppDashboardCardDefinitionId: string) : TeamsAppDashboardCardDefinitionItemRequestBuilder;
    /**
     * Dashboard cards specified in the Teams app manifest.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<TeamsAppDashboardCardDefinitionCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<DashboardCardsRequestBuilderGetQueryParameters> | undefined) : Promise<TeamsAppDashboardCardDefinitionCollectionResponse | undefined>;
    /**
     * Create new navigation property to dashboardCards for appCatalogs
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<TeamsAppDashboardCardDefinition>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: TeamsAppDashboardCardDefinition, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<TeamsAppDashboardCardDefinition | undefined>;
    /**
     * Dashboard cards specified in the Teams app manifest.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DashboardCardsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to dashboardCards for appCatalogs
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: TeamsAppDashboardCardDefinition, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Dashboard cards specified in the Teams app manifest.
 */
export interface DashboardCardsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const DashboardCardsRequestBuilderUriTemplate = "{+baseurl}/appCatalogs/teamsApps/{teamsApp%2Did}/appDefinitions/{teamsAppDefinition%2Did}/dashboardCards{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DashboardCardsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DashboardCardsRequestBuilderNavigationMetadata: Record<Exclude<keyof DashboardCardsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byTeamsAppDashboardCardDefinitionId: {
        requestsMetadata: TeamsAppDashboardCardDefinitionItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["teamsAppDashboardCardDefinition%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DashboardCardsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: DashboardCardsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createTeamsAppDashboardCardDefinitionCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: DashboardCardsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: DashboardCardsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createTeamsAppDashboardCardDefinitionFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeTeamsAppDashboardCardDefinition,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the dashboardCards property of the microsoft.graph.teamsAppDefinition entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the dashboardCards property of the microsoft.graph.teamsAppDefinition entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    ContentSource: "contentSource",
    ContentSourceDesc: "contentSource desc",
    DefaultSize: "defaultSize",
    DefaultSizeDesc: "defaultSize desc",
    Description: "description",
    DescriptionDesc: "description desc",
    DisplayName: "displayName",
    DisplayNameDesc: "displayName desc",
    Icon: "icon",
    IconDesc: "icon desc",
    PickerGroupId: "pickerGroupId",
    PickerGroupIdDesc: "pickerGroupId desc",
} as const;
/**
 * Provides operations to manage the dashboardCards property of the microsoft.graph.teamsAppDefinition entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    ContentSource: "contentSource",
    DefaultSize: "defaultSize",
    Description: "description",
    DisplayName: "displayName",
    Icon: "icon",
    PickerGroupId: "pickerGroupId",
} as const;
/* tslint:enable */
/* eslint-enable */
