/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createPrivilegedRoleAssignmentFromDiscriminatorValue, serializePrivilegedRoleAssignment, type PrivilegedRoleAssignment } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SelfActivatePostRequestBody}
 */
// @ts-ignore
export function createSelfActivatePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSelfActivatePostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSelfActivatePostRequestBody(selfActivatePostRequestBody: Partial<SelfActivatePostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { selfActivatePostRequestBody.backingStoreEnabled = true; },
        "duration": n => { selfActivatePostRequestBody.duration = n.getStringValue(); },
        "reason": n => { selfActivatePostRequestBody.reason = n.getStringValue(); },
        "ticketNumber": n => { selfActivatePostRequestBody.ticketNumber = n.getStringValue(); },
        "ticketSystem": n => { selfActivatePostRequestBody.ticketSystem = n.getStringValue(); },
    }
}
export interface SelfActivatePostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The duration property
     */
    duration?: string | null;
    /**
     * The reason property
     */
    reason?: string | null;
    /**
     * The ticketNumber property
     */
    ticketNumber?: string | null;
    /**
     * The ticketSystem property
     */
    ticketSystem?: string | null;
}
/**
 * Provides operations to call the selfActivate method.
 */
export interface SelfActivateRequestBuilder extends BaseRequestBuilder<SelfActivateRequestBuilder> {
    /**
     * Invoke action selfActivate
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PrivilegedRoleAssignment>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: SelfActivatePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<PrivilegedRoleAssignment | undefined>;
    /**
     * Invoke action selfActivate
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: SelfActivatePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSelfActivatePostRequestBody(writer: SerializationWriter, selfActivatePostRequestBody: Partial<SelfActivatePostRequestBody> | undefined | null = {}) : void {
    if (selfActivatePostRequestBody) {
        writer.writeStringValue("duration", selfActivatePostRequestBody.duration);
        writer.writeStringValue("reason", selfActivatePostRequestBody.reason);
        writer.writeStringValue("ticketNumber", selfActivatePostRequestBody.ticketNumber);
        writer.writeStringValue("ticketSystem", selfActivatePostRequestBody.ticketSystem);
        writer.writeAdditionalData(selfActivatePostRequestBody.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const SelfActivateRequestBuilderUriTemplate = "{+baseurl}/privilegedRoleAssignments/{privilegedRoleAssignment%2Did}/roleInfo/selfActivate";
/**
 * Metadata for all the requests in the request builder.
 */
export const SelfActivateRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: SelfActivateRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPrivilegedRoleAssignmentFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSelfActivatePostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
