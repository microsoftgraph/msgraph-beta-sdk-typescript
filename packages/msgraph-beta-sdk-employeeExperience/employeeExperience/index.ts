/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createEmployeeExperienceFromDiscriminatorValue, serializeEmployeeExperience, type EmployeeExperience } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CommunitiesRequestBuilderNavigationMetadata, CommunitiesRequestBuilderRequestsMetadata, CommunitiesRequestBuilderUriTemplate, type CommunitiesRequestBuilder } from './communities/';
import { EngagementAsyncOperationsRequestBuilderNavigationMetadata, EngagementAsyncOperationsRequestBuilderRequestsMetadata, EngagementAsyncOperationsRequestBuilderUriTemplate, type EngagementAsyncOperationsRequestBuilder } from './engagementAsyncOperations/';
import { GoalsRequestBuilderNavigationMetadata, GoalsRequestBuilderRequestsMetadata, GoalsRequestBuilderUriTemplate, type GoalsRequestBuilder } from './goals/';
import { LearningCourseActivitiesRequestBuilderNavigationMetadata, LearningCourseActivitiesRequestBuilderRequestsMetadata, LearningCourseActivitiesRequestBuilderUriTemplate, type LearningCourseActivitiesRequestBuilder } from './learningCourseActivities/';
import { LearningCourseActivitiesWithExternalcourseActivityIdRequestBuilderRequestsMetadata, LearningCourseActivitiesWithExternalcourseActivityIdRequestBuilderUriTemplate, type LearningCourseActivitiesWithExternalcourseActivityIdRequestBuilder } from './learningCourseActivitiesWithExternalcourseActivityId/';
import { LearningProvidersRequestBuilderNavigationMetadata, LearningProvidersRequestBuilderRequestsMetadata, LearningProvidersRequestBuilderUriTemplate, type LearningProvidersRequestBuilder } from './learningProviders/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the employeeExperience singleton.
 */
export interface EmployeeExperienceRequestBuilder extends BaseRequestBuilder<EmployeeExperienceRequestBuilder> {
    /**
     * Provides operations to manage the communities property of the microsoft.graph.employeeExperience entity.
     */
    get communities(): CommunitiesRequestBuilder;
    /**
     * Provides operations to manage the engagementAsyncOperations property of the microsoft.graph.employeeExperience entity.
     */
    get engagementAsyncOperations(): EngagementAsyncOperationsRequestBuilder;
    /**
     * Provides operations to manage the goals property of the microsoft.graph.employeeExperience entity.
     */
    get goals(): GoalsRequestBuilder;
    /**
     * Provides operations to manage the learningCourseActivities property of the microsoft.graph.employeeExperience entity.
     */
    get learningCourseActivities(): LearningCourseActivitiesRequestBuilder;
    /**
     * Provides operations to manage the learningProviders property of the microsoft.graph.employeeExperience entity.
     */
    get learningProviders(): LearningProvidersRequestBuilder;
    /**
     * Get employeeExperience
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of EmployeeExperience
     */
     get(requestConfiguration?: RequestConfiguration<EmployeeExperienceRequestBuilderGetQueryParameters> | undefined) : Promise<EmployeeExperience | undefined>;
    /**
     * Provides operations to manage the learningCourseActivities property of the microsoft.graph.employeeExperience entity.
     * @param externalcourseActivityId Alternate key of learningCourseActivity
     * @returns a learningCourseActivitiesWithExternalcourseActivityIdRequestBuilder
     */
     learningCourseActivitiesWithExternalcourseActivityId(externalcourseActivityId: string | undefined) : LearningCourseActivitiesWithExternalcourseActivityIdRequestBuilder;
    /**
     * Update employeeExperience
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of EmployeeExperience
     */
     patch(body: EmployeeExperience, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<EmployeeExperience | undefined>;
    /**
     * Get employeeExperience
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<EmployeeExperienceRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update employeeExperience
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: EmployeeExperience, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get employeeExperience
 */
export interface EmployeeExperienceRequestBuilderGetQueryParameters {
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const EmployeeExperienceRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const EmployeeExperienceRequestBuilderNavigationMetadata: Record<Exclude<keyof EmployeeExperienceRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    learningCourseActivitiesWithExternalcourseActivityId: {
        uriTemplate: LearningCourseActivitiesWithExternalcourseActivityIdRequestBuilderUriTemplate,
        requestsMetadata: LearningCourseActivitiesWithExternalcourseActivityIdRequestBuilderRequestsMetadata,
    },
    communities: {
        uriTemplate: CommunitiesRequestBuilderUriTemplate,
        requestsMetadata: CommunitiesRequestBuilderRequestsMetadata,
        navigationMetadata: CommunitiesRequestBuilderNavigationMetadata,
    },
    engagementAsyncOperations: {
        uriTemplate: EngagementAsyncOperationsRequestBuilderUriTemplate,
        requestsMetadata: EngagementAsyncOperationsRequestBuilderRequestsMetadata,
        navigationMetadata: EngagementAsyncOperationsRequestBuilderNavigationMetadata,
    },
    goals: {
        uriTemplate: GoalsRequestBuilderUriTemplate,
        requestsMetadata: GoalsRequestBuilderRequestsMetadata,
        navigationMetadata: GoalsRequestBuilderNavigationMetadata,
    },
    learningCourseActivities: {
        uriTemplate: LearningCourseActivitiesRequestBuilderUriTemplate,
        requestsMetadata: LearningCourseActivitiesRequestBuilderRequestsMetadata,
        navigationMetadata: LearningCourseActivitiesRequestBuilderNavigationMetadata,
    },
    learningProviders: {
        uriTemplate: LearningProvidersRequestBuilderUriTemplate,
        requestsMetadata: LearningProvidersRequestBuilderRequestsMetadata,
        navigationMetadata: LearningProvidersRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const EmployeeExperienceRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createEmployeeExperienceFromDiscriminatorValue,
        queryParametersMapper: EmployeeExperienceRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createEmployeeExperienceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeEmployeeExperience,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const EmployeeExperienceRequestBuilderUriTemplate = "{+baseurl}/employeeExperience{?%24select}";
/* tslint:enable */
/* eslint-enable */
