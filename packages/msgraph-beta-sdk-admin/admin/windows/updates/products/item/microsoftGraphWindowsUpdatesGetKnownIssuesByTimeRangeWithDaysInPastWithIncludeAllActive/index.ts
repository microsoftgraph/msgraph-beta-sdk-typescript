/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { createKnownIssueFromDiscriminatorValue, serializeKnownIssue, type KnownIssue } from '@microsoft/msgraph-beta-sdk/models/windowsUpdates/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponse}
 */
// @ts-ignore
export function createGetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponse(getKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponse: Partial<GetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(getKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponse),
        "value": n => { getKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponse.value = n.getCollectionOfObjectValues<KnownIssue>(createKnownIssueFromDiscriminatorValue); },
    }
}
export interface GetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: KnownIssue[];
}
/**
 * Provides operations to call the getKnownIssuesByTimeRange method.
 */
export interface MicrosoftGraphWindowsUpdatesGetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveRequestBuilder extends BaseRequestBuilder<MicrosoftGraphWindowsUpdatesGetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveRequestBuilder> {
    /**
     * Get known issues related to a particular product based on a specified timeframe in the past.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<GetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/windowsupdates-product-getknownissuesbytimerange?view=graph-rest-beta|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<MicrosoftGraphWindowsUpdatesGetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveRequestBuilderGetQueryParameters> | undefined) : Promise<GetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponse | undefined>;
    /**
     * Get known issues related to a particular product based on a specified timeframe in the past.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<MicrosoftGraphWindowsUpdatesGetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Get known issues related to a particular product based on a specified timeframe in the past.
 */
export interface MicrosoftGraphWindowsUpdatesGetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Usage: includeAllActive=@includeAllActive
     */
    includeAllActive?: boolean;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponse(writer: SerializationWriter, getKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponse: Partial<GetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponse> | undefined = {}) : void {
    serializeBaseCollectionPaginationCountResponse(writer, getKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponse)
    writer.writeCollectionOfObjectValues<KnownIssue>("value", getKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponse.value, serializeKnownIssue);
}
/**
 * Uri template for the request builder.
 */
export const MicrosoftGraphWindowsUpdatesGetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveRequestBuilderUriTemplate = "{+baseurl}/admin/windows/updates/products/{product%2Did}/microsoft.graph.windowsUpdates.getKnownIssuesByTimeRange(daysInPast={daysInPast},includeAllActive=@includeAllActive){?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top,includeAllActive*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const MicrosoftGraphWindowsUpdatesGetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const MicrosoftGraphWindowsUpdatesGetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: MicrosoftGraphWindowsUpdatesGetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createGetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveGetResponseFromDiscriminatorValue,
        queryParametersMapper: MicrosoftGraphWindowsUpdatesGetKnownIssuesByTimeRangeWithDaysInPastWithIncludeAllActiveRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
