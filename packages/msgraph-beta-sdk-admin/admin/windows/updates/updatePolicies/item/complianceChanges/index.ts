/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
// @ts-ignore
import { createComplianceChangeCollectionResponseFromDiscriminatorValue, createComplianceChangeFromDiscriminatorValue, serializeComplianceChange, type ComplianceChange, type ComplianceChangeCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/windowsUpdates/';
// @ts-ignore
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
// @ts-ignore
import { ComplianceChangeItemRequestBuilderNavigationMetadata, ComplianceChangeItemRequestBuilderRequestsMetadata, type ComplianceChangeItemRequestBuilder } from './item/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the complianceChanges property of the microsoft.graph.windowsUpdates.updatePolicy entity.
 */
export interface ComplianceChangesRequestBuilder extends BaseRequestBuilder<ComplianceChangesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the complianceChanges property of the microsoft.graph.windowsUpdates.updatePolicy entity.
     * @param complianceChangeId The unique identifier of complianceChange
     * @returns {ComplianceChangeItemRequestBuilder}
     */
     byComplianceChangeId(complianceChangeId: string) : ComplianceChangeItemRequestBuilder;
    /**
     * Get a list of the complianceChange objects and their properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ComplianceChangeCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/windowsupdates-updatepolicy-list-compliancechanges?view=graph-rest-beta|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<ComplianceChangesRequestBuilderGetQueryParameters> | undefined) : Promise<ComplianceChangeCollectionResponse | undefined>;
    /**
     * Create a new contentApproval object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ComplianceChange>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/windowsupdates-updatepolicy-post-compliancechanges-contentapproval?view=graph-rest-beta|Find more info here}
     */
     post(body: ComplianceChange, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ComplianceChange | undefined>;
    /**
     * Get a list of the complianceChange objects and their properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ComplianceChangesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new contentApproval object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ComplianceChange, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get a list of the complianceChange objects and their properties.
 */
export interface ComplianceChangesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const ComplianceChangesRequestBuilderUriTemplate = "{+baseurl}/admin/windows/updates/updatePolicies/{updatePolicy%2Did}/complianceChanges{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ComplianceChangesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ComplianceChangesRequestBuilderNavigationMetadata: Record<Exclude<keyof ComplianceChangesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byComplianceChangeId: {
        requestsMetadata: ComplianceChangeItemRequestBuilderRequestsMetadata,
        navigationMetadata: ComplianceChangeItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["complianceChange%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ComplianceChangesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ComplianceChangesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createComplianceChangeCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: ComplianceChangesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: ComplianceChangesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createComplianceChangeFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeComplianceChange,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
