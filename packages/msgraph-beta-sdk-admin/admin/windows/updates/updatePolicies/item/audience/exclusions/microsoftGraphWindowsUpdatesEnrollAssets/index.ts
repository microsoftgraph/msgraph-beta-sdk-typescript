/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { createUpdatableAssetFromDiscriminatorValue, serializeUpdatableAsset, type UpdatableAsset, UpdateCategory, UpdateCategoryObject } from '@microsoft/msgraph-beta-sdk/models/windowsUpdates/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a enrollAssetsPostRequestBody
 */
export function createEnrollAssetsPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEnrollAssetsPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoEnrollAssetsPostRequestBody(enrollAssetsPostRequestBody: Partial<EnrollAssetsPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "assets": n => { enrollAssetsPostRequestBody.assets = n.getCollectionOfObjectValues<UpdatableAsset>(createUpdatableAssetFromDiscriminatorValue); },
        "backingStoreEnabled": n => { enrollAssetsPostRequestBody.backingStoreEnabled = true; },
        "updateCategory": n => { enrollAssetsPostRequestBody.updateCategory = n.getEnumValue<UpdateCategory>(UpdateCategoryObject); },
    }
}
export interface EnrollAssetsPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The assets property
     */
    assets?: UpdatableAsset[];
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The updateCategory property
     */
    updateCategory?: UpdateCategory;
}
/**
 * Provides operations to call the enrollAssets method.
 */
export interface MicrosoftGraphWindowsUpdatesEnrollAssetsRequestBuilder extends BaseRequestBuilder<MicrosoftGraphWindowsUpdatesEnrollAssetsRequestBuilder> {
    /**
     * Invoke action enrollAssets
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     post(body: EnrollAssetsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Invoke action enrollAssets
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: EnrollAssetsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeEnrollAssetsPostRequestBody(writer: SerializationWriter, enrollAssetsPostRequestBody: Partial<EnrollAssetsPostRequestBody> | undefined = {}) : void {
    writer.writeCollectionOfObjectValues<UpdatableAsset>("assets", enrollAssetsPostRequestBody.assets, serializeUpdatableAsset);
    writer.writeEnumValue<UpdateCategory>("updateCategory", enrollAssetsPostRequestBody.updateCategory);
    writer.writeAdditionalData(enrollAssetsPostRequestBody.additionalData);
}
/**
 * Metadata for all the requests in the request builder.
 */
export const MicrosoftGraphWindowsUpdatesEnrollAssetsRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeEnrollAssetsPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const MicrosoftGraphWindowsUpdatesEnrollAssetsRequestBuilderUriTemplate = "{+baseurl}/admin/windows/updates/updatePolicies/{updatePolicy%2Did}/audience/exclusions/microsoft.graph.windowsUpdates.enrollAssets";
/* tslint:enable */
/* eslint-enable */
