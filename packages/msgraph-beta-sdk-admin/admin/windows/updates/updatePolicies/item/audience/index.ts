/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { createDeploymentAudienceFromDiscriminatorValue, serializeDeploymentAudience, type DeploymentAudience } from '@microsoft/msgraph-beta-sdk/models/windowsUpdates/index.js';
// @ts-ignore
import { ApplicableContentRequestBuilderNavigationMetadata, ApplicableContentRequestBuilderRequestsMetadata, type ApplicableContentRequestBuilder } from './applicableContent/index.js';
// @ts-ignore
import { ExclusionsRequestBuilderNavigationMetadata, ExclusionsRequestBuilderRequestsMetadata, type ExclusionsRequestBuilder } from './exclusions/index.js';
// @ts-ignore
import { MembersRequestBuilderNavigationMetadata, MembersRequestBuilderRequestsMetadata, type MembersRequestBuilder } from './members/index.js';
// @ts-ignore
import { MicrosoftGraphWindowsUpdatesUpdateAudienceRequestBuilderRequestsMetadata, type MicrosoftGraphWindowsUpdatesUpdateAudienceRequestBuilder } from './microsoftGraphWindowsUpdatesUpdateAudience/index.js';
// @ts-ignore
import { MicrosoftGraphWindowsUpdatesUpdateAudienceByIdRequestBuilderRequestsMetadata, type MicrosoftGraphWindowsUpdatesUpdateAudienceByIdRequestBuilder } from './microsoftGraphWindowsUpdatesUpdateAudienceById/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the audience property of the microsoft.graph.windowsUpdates.updatePolicy entity.
 */
export interface AudienceRequestBuilder extends BaseRequestBuilder<AudienceRequestBuilder> {
    /**
     * Provides operations to manage the applicableContent property of the microsoft.graph.windowsUpdates.deploymentAudience entity.
     */
    get applicableContent(): ApplicableContentRequestBuilder;
    /**
     * Provides operations to manage the exclusions property of the microsoft.graph.windowsUpdates.deploymentAudience entity.
     */
    get exclusions(): ExclusionsRequestBuilder;
    /**
     * Provides operations to manage the members property of the microsoft.graph.windowsUpdates.deploymentAudience entity.
     */
    get members(): MembersRequestBuilder;
    /**
     * Provides operations to call the updateAudience method.
     */
    get microsoftGraphWindowsUpdatesUpdateAudience(): MicrosoftGraphWindowsUpdatesUpdateAudienceRequestBuilder;
    /**
     * Provides operations to call the updateAudienceById method.
     */
    get microsoftGraphWindowsUpdatesUpdateAudienceById(): MicrosoftGraphWindowsUpdatesUpdateAudienceByIdRequestBuilder;
    /**
     * Delete navigation property audience for admin
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Specifies the audience to target.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeploymentAudience>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<AudienceRequestBuilderGetQueryParameters> | undefined) : Promise<DeploymentAudience | undefined>;
    /**
     * Update the navigation property audience in admin
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeploymentAudience>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: DeploymentAudience, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DeploymentAudience | undefined>;
    /**
     * Delete navigation property audience for admin
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Specifies the audience to target.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AudienceRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property audience in admin
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: DeploymentAudience, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Specifies the audience to target.
 */
export interface AudienceRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const AudienceRequestBuilderUriTemplate = "{+baseurl}/admin/windows/updates/updatePolicies/{updatePolicy%2Did}/audience{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AudienceRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AudienceRequestBuilderNavigationMetadata: Record<Exclude<keyof AudienceRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    applicableContent: {
        requestsMetadata: ApplicableContentRequestBuilderRequestsMetadata,
        navigationMetadata: ApplicableContentRequestBuilderNavigationMetadata,
    },
    exclusions: {
        requestsMetadata: ExclusionsRequestBuilderRequestsMetadata,
        navigationMetadata: ExclusionsRequestBuilderNavigationMetadata,
    },
    members: {
        requestsMetadata: MembersRequestBuilderRequestsMetadata,
        navigationMetadata: MembersRequestBuilderNavigationMetadata,
    },
    microsoftGraphWindowsUpdatesUpdateAudience: {
        requestsMetadata: MicrosoftGraphWindowsUpdatesUpdateAudienceRequestBuilderRequestsMetadata,
    },
    microsoftGraphWindowsUpdatesUpdateAudienceById: {
        requestsMetadata: MicrosoftGraphWindowsUpdatesUpdateAudienceByIdRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AudienceRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: AudienceRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: AudienceRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeploymentAudienceFromDiscriminatorValue,
        queryParametersMapper: AudienceRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: AudienceRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeploymentAudienceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDeploymentAudience,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
