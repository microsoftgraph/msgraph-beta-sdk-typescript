/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createExchangeAdminFromDiscriminatorValue, serializeExchangeAdmin, type ExchangeAdmin } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { MailboxesRequestBuilderNavigationMetadata, MailboxesRequestBuilderRequestsMetadata, type MailboxesRequestBuilder } from './mailboxes/index.js';
// @ts-ignore
import { MessageTracesRequestBuilderNavigationMetadata, MessageTracesRequestBuilderRequestsMetadata, type MessageTracesRequestBuilder } from './messageTraces/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the exchange property of the microsoft.graph.admin entity.
 */
export interface ExchangeRequestBuilder extends BaseRequestBuilder<ExchangeRequestBuilder> {
    /**
     * Provides operations to manage the mailboxes property of the microsoft.graph.exchangeAdmin entity.
     * @deprecated Private preview for Import Export APIs as of 2021-08/PrivatePreview:importExport
     */
    get mailboxes(): MailboxesRequestBuilder;
    /**
     * Provides operations to manage the messageTraces property of the microsoft.graph.exchangeAdmin entity.
     * @deprecated Private preview for Import Export APIs as of 2021-08/PrivatePreview:importExport
     */
    get messageTraces(): MessageTracesRequestBuilder;
    /**
     * Delete navigation property exchange for admin
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated Private preview for Import Export APIs as of 2021-08/PrivatePreview:importExport
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * A container for the Exchange admin functionality. Read-only.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ExchangeAdmin>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated Private preview for Import Export APIs as of 2021-08/PrivatePreview:importExport
     */
     get(requestConfiguration?: RequestConfiguration<ExchangeRequestBuilderGetQueryParameters> | undefined) : Promise<ExchangeAdmin | undefined>;
    /**
     * Update the navigation property exchange in admin
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ExchangeAdmin>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated Private preview for Import Export APIs as of 2021-08/PrivatePreview:importExport
     */
     patch(body: ExchangeAdmin, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ExchangeAdmin | undefined>;
    /**
     * Delete navigation property exchange for admin
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated Private preview for Import Export APIs as of 2021-08/PrivatePreview:importExport
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * A container for the Exchange admin functionality. Read-only.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated Private preview for Import Export APIs as of 2021-08/PrivatePreview:importExport
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ExchangeRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property exchange in admin
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated Private preview for Import Export APIs as of 2021-08/PrivatePreview:importExport
     */
     toPatchRequestInformation(body: ExchangeAdmin, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * A container for the Exchange admin functionality. Read-only.
 */
export interface ExchangeRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const ExchangeRequestBuilderUriTemplate = "{+baseurl}/admin/exchange{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ExchangeRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ExchangeRequestBuilderNavigationMetadata: Record<Exclude<keyof ExchangeRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    mailboxes: {
        requestsMetadata: MailboxesRequestBuilderRequestsMetadata,
        navigationMetadata: MailboxesRequestBuilderNavigationMetadata,
    },
    messageTraces: {
        requestsMetadata: MessageTracesRequestBuilderRequestsMetadata,
        navigationMetadata: MessageTracesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ExchangeRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: ExchangeRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: ExchangeRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createExchangeAdminFromDiscriminatorValue,
        queryParametersMapper: ExchangeRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: ExchangeRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createExchangeAdminFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeExchangeAdmin,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
