/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { createTeamsUserConfigurationFromDiscriminatorValue, serializeTeamsUserConfiguration, type TeamsUserConfiguration } from '@microsoft/msgraph-beta-sdk/models/teamsAdministration/index.js';
// @ts-ignore
import { type UserRequestBuilder, UserRequestBuilderNavigationMetadata, UserRequestBuilderRequestsMetadata } from './user/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the userConfigurations property of the microsoft.graph.teamsAdministration.teamsAdminRoot entity.
 */
export interface TeamsUserConfigurationItemRequestBuilder extends BaseRequestBuilder<TeamsUserConfigurationItemRequestBuilder> {
    /**
     * Provides operations to manage the user property of the microsoft.graph.teamsAdministration.teamsUserConfiguration entity.
     */
    get user(): UserRequestBuilder;
    /**
     * Delete navigation property userConfigurations for admin
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Read the Teams user configurations for a specific user using their ID (the user's identifier).
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<TeamsUserConfiguration>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/teamsadministration-teamsuserconfiguration-get?view=graph-rest-beta|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<TeamsUserConfigurationItemRequestBuilderGetQueryParameters> | undefined) : Promise<TeamsUserConfiguration | undefined>;
    /**
     * Update the navigation property userConfigurations in admin
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<TeamsUserConfiguration>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: TeamsUserConfiguration, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<TeamsUserConfiguration | undefined>;
    /**
     * Delete navigation property userConfigurations for admin
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Read the Teams user configurations for a specific user using their ID (the user's identifier).
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<TeamsUserConfigurationItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property userConfigurations in admin
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: TeamsUserConfiguration, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Read the Teams user configurations for a specific user using their ID (the user's identifier).
 */
export interface TeamsUserConfigurationItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const TeamsUserConfigurationItemRequestBuilderUriTemplate = "{+baseurl}/admin/teams/userConfigurations/{teamsUserConfiguration%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const TeamsUserConfigurationItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const TeamsUserConfigurationItemRequestBuilderNavigationMetadata: Record<Exclude<keyof TeamsUserConfigurationItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    user: {
        requestsMetadata: UserRequestBuilderRequestsMetadata,
        navigationMetadata: UserRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const TeamsUserConfigurationItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: TeamsUserConfigurationItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: TeamsUserConfigurationItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createTeamsUserConfigurationFromDiscriminatorValue,
        queryParametersMapper: TeamsUserConfigurationItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: TeamsUserConfigurationItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createTeamsUserConfigurationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeTeamsUserConfiguration,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
