/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createQrCodeFromDiscriminatorValue, serializeQrCode, type QrCode } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the temporaryQRCode property of the microsoft.graph.qrCodePinAuthenticationMethod entity.
 */
export interface TemporaryQRCodeRequestBuilder extends BaseRequestBuilder<TemporaryQRCodeRequestBuilder> {
    /**
     * Delete navigation property temporaryQRCode for users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Temporary QR code has lifetime up to 12 hours. It can be issued when the user doesn't have access to their standard QR code. There can be only one active temporary QR code for the user.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<QrCode>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<TemporaryQRCodeRequestBuilderGetQueryParameters> | undefined) : Promise<QrCode | undefined>;
    /**
     * Update the navigation property temporaryQRCode in users
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<QrCode>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: QrCode, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<QrCode | undefined>;
    /**
     * Delete navigation property temporaryQRCode for users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Temporary QR code has lifetime up to 12 hours. It can be issued when the user doesn't have access to their standard QR code. There can be only one active temporary QR code for the user.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<TemporaryQRCodeRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property temporaryQRCode in users
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: QrCode, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Temporary QR code has lifetime up to 12 hours. It can be issued when the user doesn't have access to their standard QR code. There can be only one active temporary QR code for the user.
 */
export interface TemporaryQRCodeRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const TemporaryQRCodeRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/authentication/qrCodePinMethod/temporaryQRCode{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const TemporaryQRCodeRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const TemporaryQRCodeRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: TemporaryQRCodeRequestBuilderUriTemplate,
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: TemporaryQRCodeRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createQrCodeFromDiscriminatorValue,
        queryParametersMapper: TemporaryQRCodeRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: TemporaryQRCodeRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createQrCodeFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeQrCode,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
