/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createHardwareOathAuthenticationMethodFromDiscriminatorValue, type HardwareOathAuthenticationMethod } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { ActivateRequestBuilderRequestsMetadata, type ActivateRequestBuilder } from './activate/index.js';
// @ts-ignore
import { DeactivateRequestBuilderRequestsMetadata, type DeactivateRequestBuilder } from './deactivate/index.js';
// @ts-ignore
import { DeviceRequestBuilderNavigationMetadata, DeviceRequestBuilderRequestsMetadata, type DeviceRequestBuilder } from './device/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the hardwareOathMethods property of the microsoft.graph.authentication entity.
 */
export interface HardwareOathAuthenticationMethodItemRequestBuilder extends BaseRequestBuilder<HardwareOathAuthenticationMethodItemRequestBuilder> {
    /**
     * Provides operations to call the activate method.
     */
    get activate(): ActivateRequestBuilder;
    /**
     * Provides operations to call the deactivate method.
     */
    get deactivate(): DeactivateRequestBuilder;
    /**
     * Provides operations to manage the device property of the microsoft.graph.hardwareOathAuthenticationMethod entity.
     */
    get device(): DeviceRequestBuilder;
    /**
     * Delete navigation property hardwareOathMethods for users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The hardware OATH time-based one-time password (TOTP) devices assigned to a user for authentication.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<HardwareOathAuthenticationMethod>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<HardwareOathAuthenticationMethodItemRequestBuilderGetQueryParameters> | undefined) : Promise<HardwareOathAuthenticationMethod | undefined>;
    /**
     * Delete navigation property hardwareOathMethods for users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The hardware OATH time-based one-time password (TOTP) devices assigned to a user for authentication.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<HardwareOathAuthenticationMethodItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * The hardware OATH time-based one-time password (TOTP) devices assigned to a user for authentication.
 */
export interface HardwareOathAuthenticationMethodItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const HardwareOathAuthenticationMethodItemRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/authentication/hardwareOathMethods/{hardwareOathAuthenticationMethod%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const HardwareOathAuthenticationMethodItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const HardwareOathAuthenticationMethodItemRequestBuilderNavigationMetadata: Record<Exclude<keyof HardwareOathAuthenticationMethodItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    activate: {
        requestsMetadata: ActivateRequestBuilderRequestsMetadata,
    },
    deactivate: {
        requestsMetadata: DeactivateRequestBuilderRequestsMetadata,
    },
    device: {
        requestsMetadata: DeviceRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const HardwareOathAuthenticationMethodItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: HardwareOathAuthenticationMethodItemRequestBuilderUriTemplate,
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: HardwareOathAuthenticationMethodItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createHardwareOathAuthenticationMethodFromDiscriminatorValue,
        queryParametersMapper: HardwareOathAuthenticationMethodItemRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
