/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createMessageFromDiscriminatorValue, serializeMessage, type Message } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MarkAsNotJunkPostRequestBody}
 */
// @ts-ignore
export function createMarkAsNotJunkPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMarkAsNotJunkPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMarkAsNotJunkPostRequestBody(markAsNotJunkPostRequestBody: Partial<MarkAsNotJunkPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { markAsNotJunkPostRequestBody.backingStoreEnabled = true; },
        "MoveToInbox": n => { markAsNotJunkPostRequestBody.moveToInbox = n.getBooleanValue(); },
    }
}
export interface MarkAsNotJunkPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The MoveToInbox property
     */
    moveToInbox?: boolean | null;
}
/**
 * Provides operations to call the markAsNotJunk method.
 */
export interface MarkAsNotJunkRequestBuilder extends BaseRequestBuilder<MarkAsNotJunkRequestBuilder> {
    /**
     * Mark a message as not junk. This API removes the sender from the list of blocked senders and moves the message to the Inbox folder, when moveToInbox is true.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Message>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     * @see {@link https://learn.microsoft.com/graph/api/message-markasnotjunk?view=graph-rest-beta|Find more info here}
     */
     post(body: MarkAsNotJunkPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Message | undefined>;
    /**
     * Mark a message as not junk. This API removes the sender from the list of blocked senders and moves the message to the Inbox folder, when moveToInbox is true.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
     toPostRequestInformation(body: MarkAsNotJunkPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMarkAsNotJunkPostRequestBody(writer: SerializationWriter, markAsNotJunkPostRequestBody: Partial<MarkAsNotJunkPostRequestBody> | undefined | null = {}) : void {
    if (markAsNotJunkPostRequestBody) {
        writer.writeBooleanValue("MoveToInbox", markAsNotJunkPostRequestBody.moveToInbox);
        writer.writeAdditionalData(markAsNotJunkPostRequestBody.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const MarkAsNotJunkRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/mailFolders/{mailFolder%2Did}/childFolders/{mailFolder%2Did1}/messages/{message%2Did}/markAsNotJunk";
/**
 * Metadata for all the requests in the request builder.
 */
export const MarkAsNotJunkRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: MarkAsNotJunkRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createMessageFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeMarkAsNotJunkPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
