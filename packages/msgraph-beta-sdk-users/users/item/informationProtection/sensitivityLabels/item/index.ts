/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createSensitivityLabelFromDiscriminatorValue, serializeSensitivityLabel, type SensitivityLabel } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { SublabelsRequestBuilderNavigationMetadata, SublabelsRequestBuilderRequestsMetadata, type SublabelsRequestBuilder } from './sublabels/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the sensitivityLabels property of the microsoft.graph.informationProtection entity.
 */
export interface SensitivityLabelItemRequestBuilder extends BaseRequestBuilder<SensitivityLabelItemRequestBuilder> {
    /**
     * Provides operations to manage the sublabels property of the microsoft.graph.sensitivityLabel entity.
     */
    get sublabels(): SublabelsRequestBuilder;
    /**
     * Delete navigation property sensitivityLabels for users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get sensitivityLabels from users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<SensitivityLabel>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<SensitivityLabelItemRequestBuilderGetQueryParameters> | undefined) : Promise<SensitivityLabel | undefined>;
    /**
     * Update the navigation property sensitivityLabels in users
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<SensitivityLabel>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: SensitivityLabel, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<SensitivityLabel | undefined>;
    /**
     * Delete navigation property sensitivityLabels for users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get sensitivityLabels from users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SensitivityLabelItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property sensitivityLabels in users
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: SensitivityLabel, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get sensitivityLabels from users
 */
export interface SensitivityLabelItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const SensitivityLabelItemRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/informationProtection/sensitivityLabels/{sensitivityLabel%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SensitivityLabelItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SensitivityLabelItemRequestBuilderNavigationMetadata: Record<Exclude<keyof SensitivityLabelItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    sublabels: {
        requestsMetadata: SublabelsRequestBuilderRequestsMetadata,
        navigationMetadata: SublabelsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SensitivityLabelItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: SensitivityLabelItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        uriTemplate: SensitivityLabelItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createSensitivityLabelFromDiscriminatorValue,
        queryParametersMapper: SensitivityLabelItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: SensitivityLabelItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createSensitivityLabelFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSensitivityLabel,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
