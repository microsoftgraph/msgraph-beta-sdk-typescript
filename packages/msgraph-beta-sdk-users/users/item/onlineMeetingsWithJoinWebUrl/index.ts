/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createOnlineMeetingFromDiscriminatorValue, serializeOnlineMeeting, type OnlineMeeting } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { GetVirtualAppointmentJoinWebUrlRequestBuilderRequestsMetadata, GetVirtualAppointmentJoinWebUrlRequestBuilderUriTemplate, type GetVirtualAppointmentJoinWebUrlRequestBuilder } from './getVirtualAppointmentJoinWebUrl/';
import { SendVirtualAppointmentReminderSmsRequestBuilderRequestsMetadata, SendVirtualAppointmentReminderSmsRequestBuilderUriTemplate, type SendVirtualAppointmentReminderSmsRequestBuilder } from './sendVirtualAppointmentReminderSms/';
import { SendVirtualAppointmentSmsRequestBuilderRequestsMetadata, SendVirtualAppointmentSmsRequestBuilderUriTemplate, type SendVirtualAppointmentSmsRequestBuilder } from './sendVirtualAppointmentSms/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the onlineMeetings property of the microsoft.graph.user entity.
 */
export interface OnlineMeetingsWithJoinWebUrlRequestBuilder extends BaseRequestBuilder<OnlineMeetingsWithJoinWebUrlRequestBuilder> {
    /**
     * Provides operations to call the getVirtualAppointmentJoinWebUrl method.
     */
    get getVirtualAppointmentJoinWebUrl(): GetVirtualAppointmentJoinWebUrlRequestBuilder;
    /**
     * Provides operations to call the sendVirtualAppointmentReminderSms method.
     */
    get sendVirtualAppointmentReminderSms(): SendVirtualAppointmentReminderSmsRequestBuilder;
    /**
     * Provides operations to call the sendVirtualAppointmentSms method.
     */
    get sendVirtualAppointmentSms(): SendVirtualAppointmentSmsRequestBuilder;
    /**
     * Delete an onlineMeeting object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @see {@link https://learn.microsoft.com/graph/api/onlinemeeting-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Information about a meeting, including the URL used to join a meeting, the attendees list, and the description.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of OnlineMeeting
     */
     get(requestConfiguration?: RequestConfiguration<OnlineMeetingsWithJoinWebUrlRequestBuilderGetQueryParameters> | undefined) : Promise<OnlineMeeting | undefined>;
    /**
     * Update the properties of the specified onlineMeeting object. Please see Request body section for the list of properties that support updating.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of OnlineMeeting
     * @see {@link https://learn.microsoft.com/graph/api/onlinemeeting-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: OnlineMeeting, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<OnlineMeeting | undefined>;
    /**
     * Delete an onlineMeeting object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Information about a meeting, including the URL used to join a meeting, the attendees list, and the description.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<OnlineMeetingsWithJoinWebUrlRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of the specified onlineMeeting object. Please see Request body section for the list of properties that support updating.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: OnlineMeeting, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Information about a meeting, including the URL used to join a meeting, the attendees list, and the description.
 */
export interface OnlineMeetingsWithJoinWebUrlRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const OnlineMeetingsWithJoinWebUrlRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const OnlineMeetingsWithJoinWebUrlRequestBuilderNavigationMetadata: Record<Exclude<keyof OnlineMeetingsWithJoinWebUrlRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    getVirtualAppointmentJoinWebUrl: {
        uriTemplate: GetVirtualAppointmentJoinWebUrlRequestBuilderUriTemplate,
        requestsMetadata: GetVirtualAppointmentJoinWebUrlRequestBuilderRequestsMetadata,
    },
    sendVirtualAppointmentReminderSms: {
        uriTemplate: SendVirtualAppointmentReminderSmsRequestBuilderUriTemplate,
        requestsMetadata: SendVirtualAppointmentReminderSmsRequestBuilderRequestsMetadata,
    },
    sendVirtualAppointmentSms: {
        uriTemplate: SendVirtualAppointmentSmsRequestBuilderUriTemplate,
        requestsMetadata: SendVirtualAppointmentSmsRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const OnlineMeetingsWithJoinWebUrlRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createOnlineMeetingFromDiscriminatorValue,
        queryParametersMapper: OnlineMeetingsWithJoinWebUrlRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createOnlineMeetingFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeOnlineMeeting,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const OnlineMeetingsWithJoinWebUrlRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/onlineMeetings(joinWebUrl='{joinWebUrl}'){?%24expand,%24select}";
/* tslint:enable */
/* eslint-enable */
