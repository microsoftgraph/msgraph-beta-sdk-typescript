/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createConversionUserDetailsFromDiscriminatorValue, createPasswordProfileFromDiscriminatorValue, serializeConversionUserDetails, serializePasswordProfile, type ConversionUserDetails, type PasswordProfile } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ConvertExternalToInternalMemberUserPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The mail property
     */
    mail?: string;
    /**
     * The passwordProfile property
     */
    passwordProfile?: PasswordProfile;
    /**
     * The userPrincipalName property
     */
    userPrincipalName?: string;
}
/**
 * Provides operations to call the convertExternalToInternalMemberUser method.
 */
export interface ConvertExternalToInternalMemberUserRequestBuilder extends BaseRequestBuilder<ConvertExternalToInternalMemberUserRequestBuilder> {
    /**
     * Convert an externally authenticated user into an internal user. The user is able to sign into the host tenant as an internal user and access resources as a member. For more information about this conversion, see Convert external users to internal users.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ConversionUserDetails>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/user-convertexternaltointernalmemberuser?view=graph-rest-beta|Find more info here}
     */
     post(body: ConvertExternalToInternalMemberUserPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ConversionUserDetails | undefined>;
    /**
     * Convert an externally authenticated user into an internal user. The user is able to sign into the host tenant as an internal user and access resources as a member. For more information about this conversion, see Convert external users to internal users.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ConvertExternalToInternalMemberUserPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ConvertExternalToInternalMemberUserPostRequestBody}
 */
export function createConvertExternalToInternalMemberUserPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoConvertExternalToInternalMemberUserPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoConvertExternalToInternalMemberUserPostRequestBody(convertExternalToInternalMemberUserPostRequestBody: Partial<ConvertExternalToInternalMemberUserPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { convertExternalToInternalMemberUserPostRequestBody.backingStoreEnabled = true; },
        "mail": n => { convertExternalToInternalMemberUserPostRequestBody.mail = n.getStringValue(); },
        "passwordProfile": n => { convertExternalToInternalMemberUserPostRequestBody.passwordProfile = n.getObjectValue<PasswordProfile>(createPasswordProfileFromDiscriminatorValue); },
        "userPrincipalName": n => { convertExternalToInternalMemberUserPostRequestBody.userPrincipalName = n.getStringValue(); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeConvertExternalToInternalMemberUserPostRequestBody(writer: SerializationWriter, convertExternalToInternalMemberUserPostRequestBody: Partial<ConvertExternalToInternalMemberUserPostRequestBody> | undefined = {}) : void {
    writer.writeStringValue("mail", convertExternalToInternalMemberUserPostRequestBody.mail);
    writer.writeObjectValue<PasswordProfile>("passwordProfile", convertExternalToInternalMemberUserPostRequestBody.passwordProfile, serializePasswordProfile);
    writer.writeStringValue("userPrincipalName", convertExternalToInternalMemberUserPostRequestBody.userPrincipalName);
    writer.writeAdditionalData(convertExternalToInternalMemberUserPostRequestBody.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const ConvertExternalToInternalMemberUserRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/convertExternalToInternalMemberUser";
/**
 * Metadata for all the requests in the request builder.
 */
export const ConvertExternalToInternalMemberUserRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: ConvertExternalToInternalMemberUserRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createConversionUserDetailsFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeConvertExternalToInternalMemberUserPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
