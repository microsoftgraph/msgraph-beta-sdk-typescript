/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createGroupCollectionResponseFromDiscriminatorValue, type GroupCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { DeltaRequestBuilderRequestsMetadata, type DeltaRequestBuilder } from './delta/';
import { EvaluateDynamicMembershipRequestBuilderRequestsMetadata, type EvaluateDynamicMembershipRequestBuilder } from './evaluateDynamicMembership/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the joinedGroups property of the microsoft.graph.user entity.
 */
export interface JoinedGroupsRequestBuilder extends BaseRequestBuilder<JoinedGroupsRequestBuilder> {
    /**
     * Provides operations to call the delta method.
     */
    get delta(): DeltaRequestBuilder;
    /**
     * Provides operations to call the evaluateDynamicMembership method.
     */
    get evaluateDynamicMembership(): EvaluateDynamicMembershipRequestBuilder;
    /**
     * Get joinedGroups from users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<GroupCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<JoinedGroupsRequestBuilderGetQueryParameters> | undefined) : Promise<GroupCollectionResponse | undefined>;
    /**
     * Get joinedGroups from users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<JoinedGroupsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Get joinedGroups from users
 */
export interface JoinedGroupsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const JoinedGroupsRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/joinedGroups{?%24count,%24filter,%24orderby,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const JoinedGroupsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const JoinedGroupsRequestBuilderNavigationMetadata: Record<Exclude<keyof JoinedGroupsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    delta: {
        requestsMetadata: DeltaRequestBuilderRequestsMetadata,
    },
    evaluateDynamicMembership: {
        requestsMetadata: EvaluateDynamicMembershipRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const JoinedGroupsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: JoinedGroupsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createGroupCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: JoinedGroupsRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
