/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createAccessReviewInstanceFromDiscriminatorValue, serializeAccessReviewInstance, type AccessReviewInstance } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { AcceptRecommendationsRequestBuilderRequestsMetadata, type AcceptRecommendationsRequestBuilder } from './acceptRecommendations/index.js';
// @ts-ignore
import { ApplyDecisionsRequestBuilderRequestsMetadata, type ApplyDecisionsRequestBuilder } from './applyDecisions/index.js';
// @ts-ignore
import { BatchRecordDecisionsRequestBuilderRequestsMetadata, type BatchRecordDecisionsRequestBuilder } from './batchRecordDecisions/index.js';
// @ts-ignore
import { ContactedReviewersRequestBuilderNavigationMetadata, ContactedReviewersRequestBuilderRequestsMetadata, type ContactedReviewersRequestBuilder } from './contactedReviewers/index.js';
// @ts-ignore
import { DecisionsRequestBuilderNavigationMetadata, DecisionsRequestBuilderRequestsMetadata, type DecisionsRequestBuilder } from './decisions/index.js';
// @ts-ignore
import { DefinitionRequestBuilderRequestsMetadata, type DefinitionRequestBuilder } from './definition/index.js';
// @ts-ignore
import { ResetDecisionsRequestBuilderRequestsMetadata, type ResetDecisionsRequestBuilder } from './resetDecisions/index.js';
// @ts-ignore
import { SendReminderRequestBuilderRequestsMetadata, type SendReminderRequestBuilder } from './sendReminder/index.js';
// @ts-ignore
import { StopRequestBuilderRequestsMetadata, type StopRequestBuilder } from './stop/index.js';
// @ts-ignore
import { StopApplyDecisionsRequestBuilderRequestsMetadata, type StopApplyDecisionsRequestBuilder } from './stopApplyDecisions/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the instance property of the microsoft.graph.accessReviewInstanceDecisionItem entity.
 */
export interface InstanceRequestBuilder extends BaseRequestBuilder<InstanceRequestBuilder> {
    /**
     * Provides operations to call the acceptRecommendations method.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get acceptRecommendations(): AcceptRecommendationsRequestBuilder;
    /**
     * Provides operations to call the applyDecisions method.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get applyDecisions(): ApplyDecisionsRequestBuilder;
    /**
     * Provides operations to call the batchRecordDecisions method.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get batchRecordDecisions(): BatchRecordDecisionsRequestBuilder;
    /**
     * Provides operations to manage the contactedReviewers property of the microsoft.graph.accessReviewInstance entity.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get contactedReviewers(): ContactedReviewersRequestBuilder;
    /**
     * Provides operations to manage the decisions property of the microsoft.graph.accessReviewInstance entity.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get decisions(): DecisionsRequestBuilder;
    /**
     * Provides operations to manage the definition property of the microsoft.graph.accessReviewInstance entity.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get definition(): DefinitionRequestBuilder;
    /**
     * Provides operations to call the resetDecisions method.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get resetDecisions(): ResetDecisionsRequestBuilder;
    /**
     * Provides operations to call the sendReminder method.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get sendReminder(): SendReminderRequestBuilder;
    /**
     * Provides operations to call the stop method.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get stop(): StopRequestBuilder;
    /**
     * Provides operations to call the stopApplyDecisions method.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get stopApplyDecisions(): StopApplyDecisionsRequestBuilder;
    /**
     * Delete navigation property instance for users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * There's exactly one accessReviewInstance associated with each decision. The instance is the parent of the decision item, representing the recurrence of the access review the decision is made on.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AccessReviewInstance>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
     get(requestConfiguration?: RequestConfiguration<InstanceRequestBuilderGetQueryParameters> | undefined) : Promise<AccessReviewInstance | undefined>;
    /**
     * Update the navigation property instance in users
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AccessReviewInstance>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
     patch(body: AccessReviewInstance, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<AccessReviewInstance | undefined>;
    /**
     * Delete navigation property instance for users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * There's exactly one accessReviewInstance associated with each decision. The instance is the parent of the decision item, representing the recurrence of the access review the decision is made on.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<InstanceRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property instance in users
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
     toPatchRequestInformation(body: AccessReviewInstance, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * There's exactly one accessReviewInstance associated with each decision. The instance is the parent of the decision item, representing the recurrence of the access review the decision is made on.
 */
export interface InstanceRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const InstanceRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/pendingAccessReviewInstances/{accessReviewInstance%2Did}/stages/{accessReviewStage%2Did}/decisions/{accessReviewInstanceDecisionItem%2Did}/instance{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const InstanceRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const InstanceRequestBuilderNavigationMetadata: Record<Exclude<keyof InstanceRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    acceptRecommendations: {
        requestsMetadata: AcceptRecommendationsRequestBuilderRequestsMetadata,
    },
    applyDecisions: {
        requestsMetadata: ApplyDecisionsRequestBuilderRequestsMetadata,
    },
    batchRecordDecisions: {
        requestsMetadata: BatchRecordDecisionsRequestBuilderRequestsMetadata,
    },
    contactedReviewers: {
        requestsMetadata: ContactedReviewersRequestBuilderRequestsMetadata,
        navigationMetadata: ContactedReviewersRequestBuilderNavigationMetadata,
    },
    decisions: {
        requestsMetadata: DecisionsRequestBuilderRequestsMetadata,
        navigationMetadata: DecisionsRequestBuilderNavigationMetadata,
    },
    definition: {
        requestsMetadata: DefinitionRequestBuilderRequestsMetadata,
    },
    resetDecisions: {
        requestsMetadata: ResetDecisionsRequestBuilderRequestsMetadata,
    },
    sendReminder: {
        requestsMetadata: SendReminderRequestBuilderRequestsMetadata,
    },
    stop: {
        requestsMetadata: StopRequestBuilderRequestsMetadata,
    },
    stopApplyDecisions: {
        requestsMetadata: StopApplyDecisionsRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const InstanceRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: InstanceRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: InstanceRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAccessReviewInstanceFromDiscriminatorValue,
        queryParametersMapper: InstanceRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: InstanceRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAccessReviewInstanceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAccessReviewInstance,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
