/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPlannerPlanFromDiscriminatorValue, type PlannerPlan } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the favoritePlans property of the microsoft.graph.plannerUser entity.
 */
export interface PlannerPlanItemRequestBuilder extends BaseRequestBuilder<PlannerPlanItemRequestBuilder> {
    /**
     * Read-only. Nullable. Returns the plannerPlans that the user marked as favorites.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PlannerPlan>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<PlannerPlanItemRequestBuilderGetQueryParameters> | undefined) : Promise<PlannerPlan | undefined>;
    /**
     * Read-only. Nullable. Returns the plannerPlans that the user marked as favorites.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PlannerPlanItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Read-only. Nullable. Returns the plannerPlans that the user marked as favorites.
 */
export interface PlannerPlanItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
/**
 * Uri template for the request builder.
 */
export const PlannerPlanItemRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/planner/favoritePlans/{plannerPlan%2Did}{?%24expand,%24select}";
/**
 * Provides operations to manage the favoritePlans property of the microsoft.graph.plannerUser entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Buckets: "buckets",
    Details: "details",
    Tasks: "tasks",
} as const;
/**
 * Provides operations to manage the favoritePlans property of the microsoft.graph.plannerUser entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    ArchivalInfo: "archivalInfo",
    Container: "container",
    Contexts: "contexts",
    CreatedBy: "createdBy",
    CreatedDateTime: "createdDateTime",
    CreationSource: "creationSource",
    IsArchived: "isArchived",
    Owner: "owner",
    SharedWithContainers: "sharedWithContainers",
    Title: "title",
    Buckets: "buckets",
    Details: "details",
    Tasks: "tasks",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PlannerPlanItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PlannerPlanItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: PlannerPlanItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPlannerPlanFromDiscriminatorValue,
        queryParametersMapper: PlannerPlanItemRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
