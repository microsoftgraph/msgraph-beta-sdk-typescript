/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createOnlineMeetingFromDiscriminatorValue, serializeOnlineMeeting, type OnlineMeeting } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { AiInsightsRequestBuilderNavigationMetadata, AiInsightsRequestBuilderRequestsMetadata, type AiInsightsRequestBuilder } from './aiInsights/index.js';
// @ts-ignore
import { AlternativeRecordingRequestBuilderRequestsMetadata, type AlternativeRecordingRequestBuilder } from './alternativeRecording/index.js';
// @ts-ignore
import { AttendanceReportsRequestBuilderNavigationMetadata, AttendanceReportsRequestBuilderRequestsMetadata, type AttendanceReportsRequestBuilder } from './attendanceReports/index.js';
// @ts-ignore
import { AttendeeReportRequestBuilderRequestsMetadata, type AttendeeReportRequestBuilder } from './attendeeReport/index.js';
// @ts-ignore
import { BroadcastRecordingRequestBuilderRequestsMetadata, type BroadcastRecordingRequestBuilder } from './broadcastRecording/index.js';
// @ts-ignore
import { GetVirtualAppointmentJoinWebUrlRequestBuilderRequestsMetadata, type GetVirtualAppointmentJoinWebUrlRequestBuilder } from './getVirtualAppointmentJoinWebUrl/index.js';
// @ts-ignore
import { MeetingAttendanceReportRequestBuilderNavigationMetadata, MeetingAttendanceReportRequestBuilderRequestsMetadata, type MeetingAttendanceReportRequestBuilder } from './meetingAttendanceReport/index.js';
// @ts-ignore
import { RecordingRequestBuilderRequestsMetadata, type RecordingRequestBuilder } from './recording/index.js';
// @ts-ignore
import { RecordingsRequestBuilderNavigationMetadata, RecordingsRequestBuilderRequestsMetadata, type RecordingsRequestBuilder } from './recordings/index.js';
// @ts-ignore
import { RegistrationRequestBuilderNavigationMetadata, RegistrationRequestBuilderRequestsMetadata, type RegistrationRequestBuilder } from './registration/index.js';
// @ts-ignore
import { SendVirtualAppointmentReminderSmsRequestBuilderRequestsMetadata, type SendVirtualAppointmentReminderSmsRequestBuilder } from './sendVirtualAppointmentReminderSms/index.js';
// @ts-ignore
import { SendVirtualAppointmentSmsRequestBuilderRequestsMetadata, type SendVirtualAppointmentSmsRequestBuilder } from './sendVirtualAppointmentSms/index.js';
// @ts-ignore
import { TranscriptsRequestBuilderNavigationMetadata, TranscriptsRequestBuilderRequestsMetadata, type TranscriptsRequestBuilder } from './transcripts/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the onlineMeetings property of the microsoft.graph.user entity.
 */
export interface OnlineMeetingItemRequestBuilder extends BaseRequestBuilder<OnlineMeetingItemRequestBuilder> {
    /**
     * Provides operations to manage the aiInsights property of the microsoft.graph.onlineMeeting entity.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get aiInsights(): AiInsightsRequestBuilder;
    /**
     * Provides operations to manage the media for the user entity.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get alternativeRecording(): AlternativeRecordingRequestBuilder;
    /**
     * Provides operations to manage the attendanceReports property of the microsoft.graph.onlineMeetingBase entity.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get attendanceReports(): AttendanceReportsRequestBuilder;
    /**
     * Provides operations to manage the media for the user entity.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get attendeeReport(): AttendeeReportRequestBuilder;
    /**
     * Provides operations to manage the media for the user entity.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get broadcastRecording(): BroadcastRecordingRequestBuilder;
    /**
     * Provides operations to call the getVirtualAppointmentJoinWebUrl method.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get getVirtualAppointmentJoinWebUrl(): GetVirtualAppointmentJoinWebUrlRequestBuilder;
    /**
     * Provides operations to manage the meetingAttendanceReport property of the microsoft.graph.onlineMeeting entity.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get meetingAttendanceReport(): MeetingAttendanceReportRequestBuilder;
    /**
     * Provides operations to manage the media for the user entity.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get recording(): RecordingRequestBuilder;
    /**
     * Provides operations to manage the recordings property of the microsoft.graph.onlineMeeting entity.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get recordings(): RecordingsRequestBuilder;
    /**
     * Provides operations to manage the registration property of the microsoft.graph.onlineMeeting entity.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get registration(): RegistrationRequestBuilder;
    /**
     * Provides operations to call the sendVirtualAppointmentReminderSms method.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get sendVirtualAppointmentReminderSms(): SendVirtualAppointmentReminderSmsRequestBuilder;
    /**
     * Provides operations to call the sendVirtualAppointmentSms method.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get sendVirtualAppointmentSms(): SendVirtualAppointmentSmsRequestBuilder;
    /**
     * Provides operations to manage the transcripts property of the microsoft.graph.onlineMeeting entity.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
    get transcripts(): TranscriptsRequestBuilder;
    /**
     * Delete navigation property onlineMeetings for users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Information about a meeting, including the URL used to join a meeting, the attendees list, and the description.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OnlineMeeting>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
     get(requestConfiguration?: RequestConfiguration<OnlineMeetingItemRequestBuilderGetQueryParameters> | undefined) : Promise<OnlineMeeting | undefined>;
    /**
     * Update the navigation property onlineMeetings in users
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OnlineMeeting>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
     patch(body: OnlineMeeting, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<OnlineMeeting | undefined>;
    /**
     * Delete navigation property onlineMeetings for users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Information about a meeting, including the URL used to join a meeting, the attendees list, and the description.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<OnlineMeetingItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property onlineMeetings in users
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
     toPatchRequestInformation(body: OnlineMeeting, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Information about a meeting, including the URL used to join a meeting, the attendees list, and the description.
 */
export interface OnlineMeetingItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const OnlineMeetingItemRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/onlineMeetings/{onlineMeeting%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const OnlineMeetingItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const OnlineMeetingItemRequestBuilderNavigationMetadata: Record<Exclude<keyof OnlineMeetingItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    aiInsights: {
        requestsMetadata: AiInsightsRequestBuilderRequestsMetadata,
        navigationMetadata: AiInsightsRequestBuilderNavigationMetadata,
    },
    alternativeRecording: {
        requestsMetadata: AlternativeRecordingRequestBuilderRequestsMetadata,
    },
    attendanceReports: {
        requestsMetadata: AttendanceReportsRequestBuilderRequestsMetadata,
        navigationMetadata: AttendanceReportsRequestBuilderNavigationMetadata,
    },
    attendeeReport: {
        requestsMetadata: AttendeeReportRequestBuilderRequestsMetadata,
    },
    broadcastRecording: {
        requestsMetadata: BroadcastRecordingRequestBuilderRequestsMetadata,
    },
    getVirtualAppointmentJoinWebUrl: {
        requestsMetadata: GetVirtualAppointmentJoinWebUrlRequestBuilderRequestsMetadata,
    },
    meetingAttendanceReport: {
        requestsMetadata: MeetingAttendanceReportRequestBuilderRequestsMetadata,
        navigationMetadata: MeetingAttendanceReportRequestBuilderNavigationMetadata,
    },
    recording: {
        requestsMetadata: RecordingRequestBuilderRequestsMetadata,
    },
    recordings: {
        requestsMetadata: RecordingsRequestBuilderRequestsMetadata,
        navigationMetadata: RecordingsRequestBuilderNavigationMetadata,
    },
    registration: {
        requestsMetadata: RegistrationRequestBuilderRequestsMetadata,
        navigationMetadata: RegistrationRequestBuilderNavigationMetadata,
    },
    sendVirtualAppointmentReminderSms: {
        requestsMetadata: SendVirtualAppointmentReminderSmsRequestBuilderRequestsMetadata,
    },
    sendVirtualAppointmentSms: {
        requestsMetadata: SendVirtualAppointmentSmsRequestBuilderRequestsMetadata,
    },
    transcripts: {
        requestsMetadata: TranscriptsRequestBuilderRequestsMetadata,
        navigationMetadata: TranscriptsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const OnlineMeetingItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: OnlineMeetingItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: OnlineMeetingItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createOnlineMeetingFromDiscriminatorValue,
        queryParametersMapper: OnlineMeetingItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: OnlineMeetingItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createOnlineMeetingFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeOnlineMeeting,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
