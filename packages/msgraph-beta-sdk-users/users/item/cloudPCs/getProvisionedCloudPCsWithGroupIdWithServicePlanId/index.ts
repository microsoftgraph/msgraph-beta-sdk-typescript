/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createCloudPCFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, serializeCloudPC, type BaseCollectionPaginationCountResponse, type CloudPC } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GetProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponse}
 */
export function createGetProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGetProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoGetProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponse(getProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponse: Partial<GetProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(getProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponse),
        "value": n => { getProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponse.value = n.getCollectionOfObjectValues<CloudPC>(createCloudPCFromDiscriminatorValue); },
    }
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export interface GetProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: CloudPC[];
}
/**
 * Provides operations to call the getProvisionedCloudPCs method.
 */
export interface GetProvisionedCloudPCsWithGroupIdWithServicePlanIdRequestBuilder extends BaseRequestBuilder<GetProvisionedCloudPCsWithGroupIdWithServicePlanIdRequestBuilder> {
    /**
     * Invoke function getProvisionedCloudPCs
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<GetProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<GetProvisionedCloudPCsWithGroupIdWithServicePlanIdRequestBuilderGetQueryParameters> | undefined) : Promise<GetProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponse | undefined>;
    /**
     * Invoke function getProvisionedCloudPCs
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<GetProvisionedCloudPCsWithGroupIdWithServicePlanIdRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Invoke function getProvisionedCloudPCs
 */
export interface GetProvisionedCloudPCsWithGroupIdWithServicePlanIdRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeGetProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponse(writer: SerializationWriter, getProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponse: Partial<GetProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponse> | undefined = {}) : void {
    serializeBaseCollectionPaginationCountResponse(writer, getProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponse)
    writer.writeCollectionOfObjectValues<CloudPC>("value", getProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponse.value, serializeCloudPC);
}
/**
 * Uri template for the request builder.
 */
export const GetProvisionedCloudPCsWithGroupIdWithServicePlanIdRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/cloudPCs/getProvisionedCloudPCs(groupId='{groupId}',servicePlanId='{servicePlanId}'){?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to call the getProvisionedCloudPCs method.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to call the getProvisionedCloudPCs method.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    AadDeviceId: "aadDeviceId",
    AadDeviceIdDesc: "aadDeviceId desc",
    ConnectionSettings: "connectionSettings",
    ConnectionSettingsDesc: "connectionSettings desc",
    ConnectivityResult: "connectivityResult",
    ConnectivityResultDesc: "connectivityResult desc",
    DisasterRecoveryCapability: "disasterRecoveryCapability",
    DisasterRecoveryCapabilityDesc: "disasterRecoveryCapability desc",
    DiskEncryptionState: "diskEncryptionState",
    DiskEncryptionStateDesc: "diskEncryptionState desc",
    DisplayName: "displayName",
    DisplayNameDesc: "displayName desc",
    GracePeriodEndDateTime: "gracePeriodEndDateTime",
    GracePeriodEndDateTimeDesc: "gracePeriodEndDateTime desc",
    ImageDisplayName: "imageDisplayName",
    ImageDisplayNameDesc: "imageDisplayName desc",
    LastLoginResult: "lastLoginResult",
    LastLoginResultDesc: "lastLoginResult desc",
    LastModifiedDateTime: "lastModifiedDateTime",
    LastModifiedDateTimeDesc: "lastModifiedDateTime desc",
    LastRemoteActionResult: "lastRemoteActionResult",
    LastRemoteActionResultDesc: "lastRemoteActionResult desc",
    ManagedDeviceId: "managedDeviceId",
    ManagedDeviceIdDesc: "managedDeviceId desc",
    ManagedDeviceName: "managedDeviceName",
    ManagedDeviceNameDesc: "managedDeviceName desc",
    OnPremisesConnectionName: "onPremisesConnectionName",
    OnPremisesConnectionNameDesc: "onPremisesConnectionName desc",
    OsVersion: "osVersion",
    OsVersionDesc: "osVersion desc",
    PartnerAgentInstallResults: "partnerAgentInstallResults",
    PartnerAgentInstallResultsDesc: "partnerAgentInstallResults desc",
    PowerState: "powerState",
    PowerStateDesc: "powerState desc",
    ProvisioningPolicyId: "provisioningPolicyId",
    ProvisioningPolicyIdDesc: "provisioningPolicyId desc",
    ProvisioningPolicyName: "provisioningPolicyName",
    ProvisioningPolicyNameDesc: "provisioningPolicyName desc",
    ProvisioningType: "provisioningType",
    ProvisioningTypeDesc: "provisioningType desc",
    ScopeIds: "scopeIds",
    ScopeIdsDesc: "scopeIds desc",
    ServicePlanId: "servicePlanId",
    ServicePlanIdDesc: "servicePlanId desc",
    ServicePlanName: "servicePlanName",
    ServicePlanNameDesc: "servicePlanName desc",
    ServicePlanType: "servicePlanType",
    ServicePlanTypeDesc: "servicePlanType desc",
    Status: "status",
    StatusDesc: "status desc",
    StatusDetails: "statusDetails",
    StatusDetailsDesc: "statusDetails desc",
    UserAccountType: "userAccountType",
    UserAccountTypeDesc: "userAccountType desc",
    UserPrincipalName: "userPrincipalName",
    UserPrincipalNameDesc: "userPrincipalName desc",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const GetProvisionedCloudPCsWithGroupIdWithServicePlanIdRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const GetProvisionedCloudPCsWithGroupIdWithServicePlanIdRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: GetProvisionedCloudPCsWithGroupIdWithServicePlanIdRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createGetProvisionedCloudPCsWithGroupIdWithServicePlanIdGetResponseFromDiscriminatorValue,
        queryParametersMapper: GetProvisionedCloudPCsWithGroupIdWithServicePlanIdRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Provides operations to call the getProvisionedCloudPCs method.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AadDeviceId: "aadDeviceId",
    ConnectionSettings: "connectionSettings",
    ConnectivityResult: "connectivityResult",
    DisasterRecoveryCapability: "disasterRecoveryCapability",
    DiskEncryptionState: "diskEncryptionState",
    DisplayName: "displayName",
    GracePeriodEndDateTime: "gracePeriodEndDateTime",
    ImageDisplayName: "imageDisplayName",
    LastLoginResult: "lastLoginResult",
    LastModifiedDateTime: "lastModifiedDateTime",
    LastRemoteActionResult: "lastRemoteActionResult",
    ManagedDeviceId: "managedDeviceId",
    ManagedDeviceName: "managedDeviceName",
    OnPremisesConnectionName: "onPremisesConnectionName",
    OsVersion: "osVersion",
    PartnerAgentInstallResults: "partnerAgentInstallResults",
    PowerState: "powerState",
    ProvisioningPolicyId: "provisioningPolicyId",
    ProvisioningPolicyName: "provisioningPolicyName",
    ProvisioningType: "provisioningType",
    ScopeIds: "scopeIds",
    ServicePlanId: "servicePlanId",
    ServicePlanName: "servicePlanName",
    ServicePlanType: "servicePlanType",
    Status: "status",
    StatusDetails: "statusDetails",
    UserAccountType: "userAccountType",
    UserPrincipalName: "userPrincipalName",
} as const;
/* tslint:enable */
/* eslint-enable */
