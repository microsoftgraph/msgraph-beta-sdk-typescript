/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createCloudPCCollectionResponseFromDiscriminatorValue, createCloudPCFromDiscriminatorValue, serializeCloudPC, type CloudPC, type CloudPCCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { BulkResizeRequestBuilderRequestsMetadata, type BulkResizeRequestBuilder } from './bulkResize/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { GetProvisionedCloudPCsWithGroupIdWithServicePlanIdRequestBuilderRequestsMetadata, type GetProvisionedCloudPCsWithGroupIdWithServicePlanIdRequestBuilder } from './getProvisionedCloudPCsWithGroupIdWithServicePlanId/';
import { CloudPCItemRequestBuilderNavigationMetadata, CloudPCItemRequestBuilderRequestsMetadata, type CloudPCItemRequestBuilder } from './item/';
import { type ValidateBulkResizeRequestBuilder, ValidateBulkResizeRequestBuilderRequestsMetadata } from './validateBulkResize/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the cloudPCs property of the microsoft.graph.user entity.
 */
export interface CloudPCsRequestBuilder extends BaseRequestBuilder<CloudPCsRequestBuilder> {
    /**
     * Provides operations to call the bulkResize method.
     */
    get bulkResize(): BulkResizeRequestBuilder;
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to call the validateBulkResize method.
     */
    get validateBulkResize(): ValidateBulkResizeRequestBuilder;
    /**
     * Provides operations to manage the cloudPCs property of the microsoft.graph.user entity.
     * @param cloudPCId The unique identifier of cloudPC
     * @returns {CloudPCItemRequestBuilder}
     */
     byCloudPCId(cloudPCId: string) : CloudPCItemRequestBuilder;
    /**
     * List the cloudPC devices that are attributed to the signed-in user. 
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<CloudPCCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/user-list-cloudpcs?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<CloudPCsRequestBuilderGetQueryParameters> | undefined) : Promise<CloudPCCollectionResponse | undefined>;
    /**
     * Provides operations to call the getProvisionedCloudPCs method.
     * @param groupId Usage: groupId='{groupId}'
     * @param servicePlanId Usage: servicePlanId='{servicePlanId}'
     * @returns {GetProvisionedCloudPCsWithGroupIdWithServicePlanIdRequestBuilder}
     */
     getProvisionedCloudPCsWithGroupIdWithServicePlanId(groupId: string | undefined, servicePlanId: string | undefined) : GetProvisionedCloudPCsWithGroupIdWithServicePlanIdRequestBuilder;
    /**
     * Create new navigation property to cloudPCs for users
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<CloudPC>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: CloudPC, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<CloudPC | undefined>;
    /**
     * List the cloudPC devices that are attributed to the signed-in user. 
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<CloudPCsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to cloudPCs for users
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: CloudPC, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * List the cloudPC devices that are attributed to the signed-in user. 
 */
export interface CloudPCsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const CloudPCsRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/cloudPCs{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const CloudPCsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const CloudPCsRequestBuilderNavigationMetadata: Record<Exclude<keyof CloudPCsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byCloudPCId: {
        requestsMetadata: CloudPCItemRequestBuilderRequestsMetadata,
        navigationMetadata: CloudPCItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["cloudPC%2Did"],
    },
    getProvisionedCloudPCsWithGroupIdWithServicePlanId: {
        requestsMetadata: GetProvisionedCloudPCsWithGroupIdWithServicePlanIdRequestBuilderRequestsMetadata,
    },
    bulkResize: {
        requestsMetadata: BulkResizeRequestBuilderRequestsMetadata,
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    validateBulkResize: {
        requestsMetadata: ValidateBulkResizeRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const CloudPCsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: CloudPCsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createCloudPCCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: CloudPCsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: CloudPCsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createCloudPCFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeCloudPC,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the cloudPCs property of the microsoft.graph.user entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the cloudPCs property of the microsoft.graph.user entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    AadDeviceId: "aadDeviceId",
    AadDeviceIdDesc: "aadDeviceId desc",
    ConnectionSettings: "connectionSettings",
    ConnectionSettingsDesc: "connectionSettings desc",
    ConnectivityResult: "connectivityResult",
    ConnectivityResultDesc: "connectivityResult desc",
    DisasterRecoveryCapability: "disasterRecoveryCapability",
    DisasterRecoveryCapabilityDesc: "disasterRecoveryCapability desc",
    DiskEncryptionState: "diskEncryptionState",
    DiskEncryptionStateDesc: "diskEncryptionState desc",
    DisplayName: "displayName",
    DisplayNameDesc: "displayName desc",
    GracePeriodEndDateTime: "gracePeriodEndDateTime",
    GracePeriodEndDateTimeDesc: "gracePeriodEndDateTime desc",
    ImageDisplayName: "imageDisplayName",
    ImageDisplayNameDesc: "imageDisplayName desc",
    LastLoginResult: "lastLoginResult",
    LastLoginResultDesc: "lastLoginResult desc",
    LastModifiedDateTime: "lastModifiedDateTime",
    LastModifiedDateTimeDesc: "lastModifiedDateTime desc",
    LastRemoteActionResult: "lastRemoteActionResult",
    LastRemoteActionResultDesc: "lastRemoteActionResult desc",
    ManagedDeviceId: "managedDeviceId",
    ManagedDeviceIdDesc: "managedDeviceId desc",
    ManagedDeviceName: "managedDeviceName",
    ManagedDeviceNameDesc: "managedDeviceName desc",
    OnPremisesConnectionName: "onPremisesConnectionName",
    OnPremisesConnectionNameDesc: "onPremisesConnectionName desc",
    OsVersion: "osVersion",
    OsVersionDesc: "osVersion desc",
    PartnerAgentInstallResults: "partnerAgentInstallResults",
    PartnerAgentInstallResultsDesc: "partnerAgentInstallResults desc",
    PowerState: "powerState",
    PowerStateDesc: "powerState desc",
    ProvisioningPolicyId: "provisioningPolicyId",
    ProvisioningPolicyIdDesc: "provisioningPolicyId desc",
    ProvisioningPolicyName: "provisioningPolicyName",
    ProvisioningPolicyNameDesc: "provisioningPolicyName desc",
    ProvisioningType: "provisioningType",
    ProvisioningTypeDesc: "provisioningType desc",
    ScopeIds: "scopeIds",
    ScopeIdsDesc: "scopeIds desc",
    ServicePlanId: "servicePlanId",
    ServicePlanIdDesc: "servicePlanId desc",
    ServicePlanName: "servicePlanName",
    ServicePlanNameDesc: "servicePlanName desc",
    ServicePlanType: "servicePlanType",
    ServicePlanTypeDesc: "servicePlanType desc",
    Status: "status",
    StatusDesc: "status desc",
    StatusDetails: "statusDetails",
    StatusDetailsDesc: "statusDetails desc",
    UserAccountType: "userAccountType",
    UserAccountTypeDesc: "userAccountType desc",
    UserPrincipalName: "userPrincipalName",
    UserPrincipalNameDesc: "userPrincipalName desc",
} as const;
/**
 * Provides operations to manage the cloudPCs property of the microsoft.graph.user entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AadDeviceId: "aadDeviceId",
    ConnectionSettings: "connectionSettings",
    ConnectivityResult: "connectivityResult",
    DisasterRecoveryCapability: "disasterRecoveryCapability",
    DiskEncryptionState: "diskEncryptionState",
    DisplayName: "displayName",
    GracePeriodEndDateTime: "gracePeriodEndDateTime",
    ImageDisplayName: "imageDisplayName",
    LastLoginResult: "lastLoginResult",
    LastModifiedDateTime: "lastModifiedDateTime",
    LastRemoteActionResult: "lastRemoteActionResult",
    ManagedDeviceId: "managedDeviceId",
    ManagedDeviceName: "managedDeviceName",
    OnPremisesConnectionName: "onPremisesConnectionName",
    OsVersion: "osVersion",
    PartnerAgentInstallResults: "partnerAgentInstallResults",
    PowerState: "powerState",
    ProvisioningPolicyId: "provisioningPolicyId",
    ProvisioningPolicyName: "provisioningPolicyName",
    ProvisioningType: "provisioningType",
    ScopeIds: "scopeIds",
    ServicePlanId: "servicePlanId",
    ServicePlanName: "servicePlanName",
    ServicePlanType: "servicePlanType",
    Status: "status",
    StatusDetails: "statusDetails",
    UserAccountType: "userAccountType",
    UserPrincipalName: "userPrincipalName",
} as const;
/* tslint:enable */
/* eslint-enable */
