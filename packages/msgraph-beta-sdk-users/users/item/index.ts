/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createUserFromDiscriminatorValue, serializeUser, type User } from '@microsoft/msgraph-beta-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
// @ts-ignore
import { ActivitiesRequestBuilderNavigationMetadata, ActivitiesRequestBuilderRequestsMetadata, type ActivitiesRequestBuilder } from './activities/';
// @ts-ignore
import { AgreementAcceptancesRequestBuilderNavigationMetadata, AgreementAcceptancesRequestBuilderRequestsMetadata, type AgreementAcceptancesRequestBuilder } from './agreementAcceptances/';
// @ts-ignore
import { AnalyticsRequestBuilderNavigationMetadata, AnalyticsRequestBuilderRequestsMetadata, type AnalyticsRequestBuilder } from './analytics/';
// @ts-ignore
import { AppConsentRequestsForApprovalRequestBuilderNavigationMetadata, AppConsentRequestsForApprovalRequestBuilderRequestsMetadata, type AppConsentRequestsForApprovalRequestBuilder } from './appConsentRequestsForApproval/';
// @ts-ignore
import { AppRoleAssignedResourcesRequestBuilderNavigationMetadata, AppRoleAssignedResourcesRequestBuilderRequestsMetadata, type AppRoleAssignedResourcesRequestBuilder } from './appRoleAssignedResources/';
// @ts-ignore
import { AppRoleAssignedResourcesWithAppIdRequestBuilderRequestsMetadata, type AppRoleAssignedResourcesWithAppIdRequestBuilder } from './appRoleAssignedResourcesWithAppId/';
// @ts-ignore
import { AppRoleAssignmentsRequestBuilderNavigationMetadata, AppRoleAssignmentsRequestBuilderRequestsMetadata, type AppRoleAssignmentsRequestBuilder } from './appRoleAssignments/';
// @ts-ignore
import { ApprovalsRequestBuilderNavigationMetadata, ApprovalsRequestBuilderRequestsMetadata, type ApprovalsRequestBuilder } from './approvals/';
// @ts-ignore
import { AssignLicenseRequestBuilderRequestsMetadata, type AssignLicenseRequestBuilder } from './assignLicense/';
// @ts-ignore
import { AuthenticationRequestBuilderNavigationMetadata, AuthenticationRequestBuilderRequestsMetadata, type AuthenticationRequestBuilder } from './authentication/';
// @ts-ignore
import { CalendarRequestBuilderNavigationMetadata, CalendarRequestBuilderRequestsMetadata, type CalendarRequestBuilder } from './calendar/';
// @ts-ignore
import { CalendarGroupsRequestBuilderNavigationMetadata, CalendarGroupsRequestBuilderRequestsMetadata, type CalendarGroupsRequestBuilder } from './calendarGroups/';
// @ts-ignore
import { CalendarsRequestBuilderNavigationMetadata, CalendarsRequestBuilderRequestsMetadata, type CalendarsRequestBuilder } from './calendars/';
// @ts-ignore
import { CalendarViewRequestBuilderNavigationMetadata, CalendarViewRequestBuilderRequestsMetadata, type CalendarViewRequestBuilder } from './calendarView/';
// @ts-ignore
import { ChangePasswordRequestBuilderRequestsMetadata, type ChangePasswordRequestBuilder } from './changePassword/';
// @ts-ignore
import { ChatsRequestBuilderNavigationMetadata, ChatsRequestBuilderRequestsMetadata, type ChatsRequestBuilder } from './chats/';
// @ts-ignore
import { CheckMemberGroupsRequestBuilderRequestsMetadata, type CheckMemberGroupsRequestBuilder } from './checkMemberGroups/';
// @ts-ignore
import { CheckMemberObjectsRequestBuilderRequestsMetadata, type CheckMemberObjectsRequestBuilder } from './checkMemberObjects/';
// @ts-ignore
import { CloudClipboardRequestBuilderNavigationMetadata, CloudClipboardRequestBuilderRequestsMetadata, type CloudClipboardRequestBuilder } from './cloudClipboard/';
// @ts-ignore
import { CloudPCsRequestBuilderNavigationMetadata, CloudPCsRequestBuilderRequestsMetadata, type CloudPCsRequestBuilder } from './cloudPCs/';
// @ts-ignore
import { ContactFoldersRequestBuilderNavigationMetadata, ContactFoldersRequestBuilderRequestsMetadata, type ContactFoldersRequestBuilder } from './contactFolders/';
// @ts-ignore
import { ContactsRequestBuilderNavigationMetadata, ContactsRequestBuilderRequestsMetadata, type ContactsRequestBuilder } from './contacts/';
// @ts-ignore
import { ConvertExternalToInternalMemberUserRequestBuilderRequestsMetadata, type ConvertExternalToInternalMemberUserRequestBuilder } from './convertExternalToInternalMemberUser/';
// @ts-ignore
import { CreatedObjectsRequestBuilderNavigationMetadata, CreatedObjectsRequestBuilderRequestsMetadata, type CreatedObjectsRequestBuilder } from './createdObjects/';
// @ts-ignore
import { DeletePasswordSingleSignOnCredentialsRequestBuilderRequestsMetadata, type DeletePasswordSingleSignOnCredentialsRequestBuilder } from './deletePasswordSingleSignOnCredentials/';
// @ts-ignore
import { DeviceEnrollmentConfigurationsRequestBuilderNavigationMetadata, DeviceEnrollmentConfigurationsRequestBuilderRequestsMetadata, type DeviceEnrollmentConfigurationsRequestBuilder } from './deviceEnrollmentConfigurations/';
// @ts-ignore
import { DeviceManagementTroubleshootingEventsRequestBuilderNavigationMetadata, DeviceManagementTroubleshootingEventsRequestBuilderRequestsMetadata, type DeviceManagementTroubleshootingEventsRequestBuilder } from './deviceManagementTroubleshootingEvents/';
// @ts-ignore
import { DevicesRequestBuilderNavigationMetadata, DevicesRequestBuilderRequestsMetadata, type DevicesRequestBuilder } from './devices/';
// @ts-ignore
import { DevicesWithDeviceIdRequestBuilderRequestsMetadata, type DevicesWithDeviceIdRequestBuilder } from './devicesWithDeviceId/';
// @ts-ignore
import { DirectReportsRequestBuilderNavigationMetadata, DirectReportsRequestBuilderRequestsMetadata, type DirectReportsRequestBuilder } from './directReports/';
// @ts-ignore
import { DriveRequestBuilderRequestsMetadata, type DriveRequestBuilder } from './drive/';
// @ts-ignore
import { DrivesRequestBuilderNavigationMetadata, DrivesRequestBuilderRequestsMetadata, type DrivesRequestBuilder } from './drives/';
// @ts-ignore
import { EmployeeExperienceRequestBuilderNavigationMetadata, EmployeeExperienceRequestBuilderRequestsMetadata, type EmployeeExperienceRequestBuilder } from './employeeExperience/';
// @ts-ignore
import { EventsRequestBuilderNavigationMetadata, EventsRequestBuilderRequestsMetadata, type EventsRequestBuilder } from './events/';
// @ts-ignore
import { ExportDeviceAndAppManagementDataRequestBuilderRequestsMetadata, type ExportDeviceAndAppManagementDataRequestBuilder } from './exportDeviceAndAppManagementData/';
// @ts-ignore
import { ExportDeviceAndAppManagementDataWithSkipWithTopRequestBuilderRequestsMetadata, type ExportDeviceAndAppManagementDataWithSkipWithTopRequestBuilder } from './exportDeviceAndAppManagementDataWithSkipWithTop/';
// @ts-ignore
import { ExportPersonalDataRequestBuilderRequestsMetadata, type ExportPersonalDataRequestBuilder } from './exportPersonalData/';
// @ts-ignore
import { ExtensionsRequestBuilderNavigationMetadata, ExtensionsRequestBuilderRequestsMetadata, type ExtensionsRequestBuilder } from './extensions/';
// @ts-ignore
import { FindMeetingTimesRequestBuilderRequestsMetadata, type FindMeetingTimesRequestBuilder } from './findMeetingTimes/';
// @ts-ignore
import { FindRoomListsRequestBuilderRequestsMetadata, type FindRoomListsRequestBuilder } from './findRoomLists/';
// @ts-ignore
import { FindRoomsRequestBuilderRequestsMetadata, type FindRoomsRequestBuilder } from './findRooms/';
// @ts-ignore
import { FindRoomsWithRoomListRequestBuilderRequestsMetadata, type FindRoomsWithRoomListRequestBuilder } from './findRoomsWithRoomList/';
// @ts-ignore
import { FollowedSitesRequestBuilderNavigationMetadata, FollowedSitesRequestBuilderRequestsMetadata, type FollowedSitesRequestBuilder } from './followedSites/';
// @ts-ignore
import { GetEffectiveDeviceEnrollmentConfigurationsRequestBuilderRequestsMetadata, type GetEffectiveDeviceEnrollmentConfigurationsRequestBuilder } from './getEffectiveDeviceEnrollmentConfigurations/';
// @ts-ignore
import { GetLoggedOnManagedDevicesRequestBuilderRequestsMetadata, type GetLoggedOnManagedDevicesRequestBuilder } from './getLoggedOnManagedDevices/';
// @ts-ignore
import { GetMailTipsRequestBuilderRequestsMetadata, type GetMailTipsRequestBuilder } from './getMailTips/';
// @ts-ignore
import { GetManagedAppDiagnosticStatusesRequestBuilderRequestsMetadata, type GetManagedAppDiagnosticStatusesRequestBuilder } from './getManagedAppDiagnosticStatuses/';
// @ts-ignore
import { GetManagedAppPoliciesRequestBuilderRequestsMetadata, type GetManagedAppPoliciesRequestBuilder } from './getManagedAppPolicies/';
// @ts-ignore
import { GetManagedDevicesWithAppFailuresRequestBuilderRequestsMetadata, type GetManagedDevicesWithAppFailuresRequestBuilder } from './getManagedDevicesWithAppFailures/';
// @ts-ignore
import { GetManagedDevicesWithFailedOrPendingAppsRequestBuilderRequestsMetadata, type GetManagedDevicesWithFailedOrPendingAppsRequestBuilder } from './getManagedDevicesWithFailedOrPendingApps/';
// @ts-ignore
import { GetMemberGroupsRequestBuilderRequestsMetadata, type GetMemberGroupsRequestBuilder } from './getMemberGroups/';
// @ts-ignore
import { GetMemberObjectsRequestBuilderRequestsMetadata, type GetMemberObjectsRequestBuilder } from './getMemberObjects/';
// @ts-ignore
import { GetPasswordSingleSignOnCredentialsRequestBuilderRequestsMetadata, type GetPasswordSingleSignOnCredentialsRequestBuilder } from './getPasswordSingleSignOnCredentials/';
// @ts-ignore
import { InferenceClassificationRequestBuilderNavigationMetadata, InferenceClassificationRequestBuilderRequestsMetadata, type InferenceClassificationRequestBuilder } from './inferenceClassification/';
// @ts-ignore
import { InformationProtectionRequestBuilderNavigationMetadata, InformationProtectionRequestBuilderRequestsMetadata, type InformationProtectionRequestBuilder } from './informationProtection/';
// @ts-ignore
import { InsightsRequestBuilderNavigationMetadata, InsightsRequestBuilderRequestsMetadata, type InsightsRequestBuilder } from './insights/';
// @ts-ignore
import { InvalidateAllRefreshTokensRequestBuilderRequestsMetadata, type InvalidateAllRefreshTokensRequestBuilder } from './invalidateAllRefreshTokens/';
// @ts-ignore
import { InvitedByRequestBuilderRequestsMetadata, type InvitedByRequestBuilder } from './invitedBy/';
// @ts-ignore
import { IsManagedAppUserBlockedRequestBuilderRequestsMetadata, type IsManagedAppUserBlockedRequestBuilder } from './isManagedAppUserBlocked/';
// @ts-ignore
import { JoinedGroupsRequestBuilderNavigationMetadata, JoinedGroupsRequestBuilderRequestsMetadata, type JoinedGroupsRequestBuilder } from './joinedGroups/';
// @ts-ignore
import { JoinedTeamsRequestBuilderNavigationMetadata, JoinedTeamsRequestBuilderRequestsMetadata, type JoinedTeamsRequestBuilder } from './joinedTeams/';
// @ts-ignore
import { LicenseDetailsRequestBuilderNavigationMetadata, LicenseDetailsRequestBuilderRequestsMetadata, type LicenseDetailsRequestBuilder } from './licenseDetails/';
// @ts-ignore
import { MailboxSettingsRequestBuilderRequestsMetadata, type MailboxSettingsRequestBuilder } from './mailboxSettings/';
// @ts-ignore
import { MailFoldersRequestBuilderNavigationMetadata, MailFoldersRequestBuilderRequestsMetadata, type MailFoldersRequestBuilder } from './mailFolders/';
// @ts-ignore
import { ManagedAppRegistrationsRequestBuilderNavigationMetadata, ManagedAppRegistrationsRequestBuilderRequestsMetadata, type ManagedAppRegistrationsRequestBuilder } from './managedAppRegistrations/';
// @ts-ignore
import { ManagedDevicesRequestBuilderNavigationMetadata, ManagedDevicesRequestBuilderRequestsMetadata, type ManagedDevicesRequestBuilder } from './managedDevices/';
// @ts-ignore
import { ManagerRequestBuilderNavigationMetadata, ManagerRequestBuilderRequestsMetadata, type ManagerRequestBuilder } from './manager/';
// @ts-ignore
import { MemberOfRequestBuilderNavigationMetadata, MemberOfRequestBuilderRequestsMetadata, type MemberOfRequestBuilder } from './memberOf/';
// @ts-ignore
import { MessagesRequestBuilderNavigationMetadata, MessagesRequestBuilderRequestsMetadata, type MessagesRequestBuilder } from './messages/';
// @ts-ignore
import { MobileAppIntentAndStatesRequestBuilderNavigationMetadata, MobileAppIntentAndStatesRequestBuilderRequestsMetadata, type MobileAppIntentAndStatesRequestBuilder } from './mobileAppIntentAndStates/';
// @ts-ignore
import { MobileAppTroubleshootingEventsRequestBuilderNavigationMetadata, MobileAppTroubleshootingEventsRequestBuilderRequestsMetadata, type MobileAppTroubleshootingEventsRequestBuilder } from './mobileAppTroubleshootingEvents/';
// @ts-ignore
import { NotificationsRequestBuilderNavigationMetadata, NotificationsRequestBuilderRequestsMetadata, type NotificationsRequestBuilder } from './notifications/';
// @ts-ignore
import { Oauth2PermissionGrantsRequestBuilderNavigationMetadata, Oauth2PermissionGrantsRequestBuilderRequestsMetadata, type Oauth2PermissionGrantsRequestBuilder } from './oauth2PermissionGrants/';
// @ts-ignore
import { OnenoteRequestBuilderNavigationMetadata, OnenoteRequestBuilderRequestsMetadata, type OnenoteRequestBuilder } from './onenote/';
// @ts-ignore
import { OnlineMeetingsRequestBuilderNavigationMetadata, OnlineMeetingsRequestBuilderRequestsMetadata, type OnlineMeetingsRequestBuilder } from './onlineMeetings/';
// @ts-ignore
import { OnlineMeetingsWithJoinWebUrlRequestBuilderNavigationMetadata, OnlineMeetingsWithJoinWebUrlRequestBuilderRequestsMetadata, type OnlineMeetingsWithJoinWebUrlRequestBuilder } from './onlineMeetingsWithJoinWebUrl/';
// @ts-ignore
import { OutlookRequestBuilderNavigationMetadata, OutlookRequestBuilderRequestsMetadata, type OutlookRequestBuilder } from './outlook/';
// @ts-ignore
import { OwnedDevicesRequestBuilderNavigationMetadata, OwnedDevicesRequestBuilderRequestsMetadata, type OwnedDevicesRequestBuilder } from './ownedDevices/';
// @ts-ignore
import { OwnedObjectsRequestBuilderNavigationMetadata, OwnedObjectsRequestBuilderRequestsMetadata, type OwnedObjectsRequestBuilder } from './ownedObjects/';
// @ts-ignore
import { PendingAccessReviewInstancesRequestBuilderNavigationMetadata, PendingAccessReviewInstancesRequestBuilderRequestsMetadata, type PendingAccessReviewInstancesRequestBuilder } from './pendingAccessReviewInstances/';
// @ts-ignore
import { PeopleRequestBuilderNavigationMetadata, PeopleRequestBuilderRequestsMetadata, type PeopleRequestBuilder } from './people/';
// @ts-ignore
import { PermissionGrantsRequestBuilderNavigationMetadata, PermissionGrantsRequestBuilderRequestsMetadata, type PermissionGrantsRequestBuilder } from './permissionGrants/';
// @ts-ignore
import { PhotoRequestBuilderNavigationMetadata, PhotoRequestBuilderRequestsMetadata, type PhotoRequestBuilder } from './photo/';
// @ts-ignore
import { PhotosRequestBuilderNavigationMetadata, PhotosRequestBuilderRequestsMetadata, type PhotosRequestBuilder } from './photos/';
// @ts-ignore
import { PlannerRequestBuilderNavigationMetadata, PlannerRequestBuilderRequestsMetadata, type PlannerRequestBuilder } from './planner/';
// @ts-ignore
import { PresenceRequestBuilderNavigationMetadata, PresenceRequestBuilderRequestsMetadata, type PresenceRequestBuilder } from './presence/';
// @ts-ignore
import { ProfileRequestBuilderNavigationMetadata, ProfileRequestBuilderRequestsMetadata, type ProfileRequestBuilder } from './profile/';
// @ts-ignore
import { RegisteredDevicesRequestBuilderNavigationMetadata, RegisteredDevicesRequestBuilderRequestsMetadata, type RegisteredDevicesRequestBuilder } from './registeredDevices/';
// @ts-ignore
import { ReminderViewWithStartDateTimeWithEndDateTimeRequestBuilderRequestsMetadata, type ReminderViewWithStartDateTimeWithEndDateTimeRequestBuilder } from './reminderViewWithStartDateTimeWithEndDateTime/';
// @ts-ignore
import { RemoveAllDevicesFromManagementRequestBuilderRequestsMetadata, type RemoveAllDevicesFromManagementRequestBuilder } from './removeAllDevicesFromManagement/';
// @ts-ignore
import { ReprocessLicenseAssignmentRequestBuilderRequestsMetadata, type ReprocessLicenseAssignmentRequestBuilder } from './reprocessLicenseAssignment/';
// @ts-ignore
import { RestoreRequestBuilderRequestsMetadata, type RestoreRequestBuilder } from './restore/';
// @ts-ignore
import { RetryServiceProvisioningRequestBuilderRequestsMetadata, type RetryServiceProvisioningRequestBuilder } from './retryServiceProvisioning/';
// @ts-ignore
import { RevokeSignInSessionsRequestBuilderRequestsMetadata, type RevokeSignInSessionsRequestBuilder } from './revokeSignInSessions/';
// @ts-ignore
import { ScopedRoleMemberOfRequestBuilderNavigationMetadata, ScopedRoleMemberOfRequestBuilderRequestsMetadata, type ScopedRoleMemberOfRequestBuilder } from './scopedRoleMemberOf/';
// @ts-ignore
import { SecurityRequestBuilderNavigationMetadata, SecurityRequestBuilderRequestsMetadata, type SecurityRequestBuilder } from './security/';
// @ts-ignore
import { SendMailRequestBuilderRequestsMetadata, type SendMailRequestBuilder } from './sendMail/';
// @ts-ignore
import { ServiceProvisioningErrorsRequestBuilderNavigationMetadata, ServiceProvisioningErrorsRequestBuilderRequestsMetadata, type ServiceProvisioningErrorsRequestBuilder } from './serviceProvisioningErrors/';
// @ts-ignore
import { SettingsRequestBuilderNavigationMetadata, SettingsRequestBuilderRequestsMetadata, type SettingsRequestBuilder } from './settings/';
// @ts-ignore
import { SponsorsRequestBuilderNavigationMetadata, SponsorsRequestBuilderRequestsMetadata, type SponsorsRequestBuilder } from './sponsors/';
// @ts-ignore
import { TeamworkRequestBuilderNavigationMetadata, TeamworkRequestBuilderRequestsMetadata, type TeamworkRequestBuilder } from './teamwork/';
// @ts-ignore
import { TodoRequestBuilderNavigationMetadata, TodoRequestBuilderRequestsMetadata, type TodoRequestBuilder } from './todo/';
// @ts-ignore
import { TransitiveMemberOfRequestBuilderNavigationMetadata, TransitiveMemberOfRequestBuilderRequestsMetadata, type TransitiveMemberOfRequestBuilder } from './transitiveMemberOf/';
// @ts-ignore
import { TransitiveReportsRequestBuilderNavigationMetadata, TransitiveReportsRequestBuilderRequestsMetadata, type TransitiveReportsRequestBuilder } from './transitiveReports/';
// @ts-ignore
import { TranslateExchangeIdsRequestBuilderRequestsMetadata, type TranslateExchangeIdsRequestBuilder } from './translateExchangeIds/';
// @ts-ignore
import { type UnblockManagedAppsRequestBuilder, UnblockManagedAppsRequestBuilderRequestsMetadata } from './unblockManagedApps/';
// @ts-ignore
import { type UsageRightsRequestBuilder, UsageRightsRequestBuilderNavigationMetadata, UsageRightsRequestBuilderRequestsMetadata } from './usageRights/';
// @ts-ignore
import { type VirtualEventsRequestBuilder, VirtualEventsRequestBuilderNavigationMetadata, VirtualEventsRequestBuilderRequestsMetadata } from './virtualEvents/';
// @ts-ignore
import { type WindowsInformationProtectionDeviceRegistrationsRequestBuilder, WindowsInformationProtectionDeviceRegistrationsRequestBuilderNavigationMetadata, WindowsInformationProtectionDeviceRegistrationsRequestBuilderRequestsMetadata } from './windowsInformationProtectionDeviceRegistrations/';
// @ts-ignore
import { type WipeAndBlockManagedAppsRequestBuilder, WipeAndBlockManagedAppsRequestBuilderRequestsMetadata } from './wipeAndBlockManagedApps/';
// @ts-ignore
import { type WipeManagedAppRegistrationByDeviceTagRequestBuilder, WipeManagedAppRegistrationByDeviceTagRequestBuilderRequestsMetadata } from './wipeManagedAppRegistrationByDeviceTag/';
// @ts-ignore
import { type WipeManagedAppRegistrationsByAzureAdDeviceIdRequestBuilder, WipeManagedAppRegistrationsByAzureAdDeviceIdRequestBuilderRequestsMetadata } from './wipeManagedAppRegistrationsByAzureAdDeviceId/';
// @ts-ignore
import { type WipeManagedAppRegistrationsByDeviceTagRequestBuilder, WipeManagedAppRegistrationsByDeviceTagRequestBuilderRequestsMetadata } from './wipeManagedAppRegistrationsByDeviceTag/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the collection of user entities.
 */
export interface UserItemRequestBuilder extends BaseRequestBuilder<UserItemRequestBuilder> {
    /**
     * Provides operations to manage the activities property of the microsoft.graph.user entity.
     */
    get activities(): ActivitiesRequestBuilder;
    /**
     * Provides operations to manage the agreementAcceptances property of the microsoft.graph.user entity.
     */
    get agreementAcceptances(): AgreementAcceptancesRequestBuilder;
    /**
     * Provides operations to manage the analytics property of the microsoft.graph.user entity.
     */
    get analytics(): AnalyticsRequestBuilder;
    /**
     * Provides operations to manage the appConsentRequestsForApproval property of the microsoft.graph.user entity.
     */
    get appConsentRequestsForApproval(): AppConsentRequestsForApprovalRequestBuilder;
    /**
     * Provides operations to manage the appRoleAssignedResources property of the microsoft.graph.user entity.
     */
    get appRoleAssignedResources(): AppRoleAssignedResourcesRequestBuilder;
    /**
     * Provides operations to manage the appRoleAssignments property of the microsoft.graph.user entity.
     */
    get appRoleAssignments(): AppRoleAssignmentsRequestBuilder;
    /**
     * Provides operations to manage the approvals property of the microsoft.graph.user entity.
     */
    get approvals(): ApprovalsRequestBuilder;
    /**
     * Provides operations to call the assignLicense method.
     */
    get assignLicense(): AssignLicenseRequestBuilder;
    /**
     * Provides operations to manage the authentication property of the microsoft.graph.user entity.
     */
    get authentication(): AuthenticationRequestBuilder;
    /**
     * Provides operations to manage the calendar property of the microsoft.graph.user entity.
     */
    get calendar(): CalendarRequestBuilder;
    /**
     * Provides operations to manage the calendarGroups property of the microsoft.graph.user entity.
     */
    get calendarGroups(): CalendarGroupsRequestBuilder;
    /**
     * Provides operations to manage the calendars property of the microsoft.graph.user entity.
     */
    get calendars(): CalendarsRequestBuilder;
    /**
     * Provides operations to manage the calendarView property of the microsoft.graph.user entity.
     */
    get calendarView(): CalendarViewRequestBuilder;
    /**
     * Provides operations to call the changePassword method.
     */
    get changePassword(): ChangePasswordRequestBuilder;
    /**
     * Provides operations to manage the chats property of the microsoft.graph.user entity.
     */
    get chats(): ChatsRequestBuilder;
    /**
     * Provides operations to call the checkMemberGroups method.
     */
    get checkMemberGroups(): CheckMemberGroupsRequestBuilder;
    /**
     * Provides operations to call the checkMemberObjects method.
     */
    get checkMemberObjects(): CheckMemberObjectsRequestBuilder;
    /**
     * Provides operations to manage the cloudClipboard property of the microsoft.graph.user entity.
     */
    get cloudClipboard(): CloudClipboardRequestBuilder;
    /**
     * Provides operations to manage the cloudPCs property of the microsoft.graph.user entity.
     */
    get cloudPCs(): CloudPCsRequestBuilder;
    /**
     * Provides operations to manage the contactFolders property of the microsoft.graph.user entity.
     */
    get contactFolders(): ContactFoldersRequestBuilder;
    /**
     * Provides operations to manage the contacts property of the microsoft.graph.user entity.
     */
    get contacts(): ContactsRequestBuilder;
    /**
     * Provides operations to call the convertExternalToInternalMemberUser method.
     */
    get convertExternalToInternalMemberUser(): ConvertExternalToInternalMemberUserRequestBuilder;
    /**
     * Provides operations to manage the createdObjects property of the microsoft.graph.user entity.
     */
    get createdObjects(): CreatedObjectsRequestBuilder;
    /**
     * Provides operations to call the deletePasswordSingleSignOnCredentials method.
     */
    get deletePasswordSingleSignOnCredentials(): DeletePasswordSingleSignOnCredentialsRequestBuilder;
    /**
     * Provides operations to manage the deviceEnrollmentConfigurations property of the microsoft.graph.user entity.
     */
    get deviceEnrollmentConfigurations(): DeviceEnrollmentConfigurationsRequestBuilder;
    /**
     * Provides operations to manage the deviceManagementTroubleshootingEvents property of the microsoft.graph.user entity.
     */
    get deviceManagementTroubleshootingEvents(): DeviceManagementTroubleshootingEventsRequestBuilder;
    /**
     * Provides operations to manage the devices property of the microsoft.graph.user entity.
     */
    get devices(): DevicesRequestBuilder;
    /**
     * Provides operations to manage the directReports property of the microsoft.graph.user entity.
     */
    get directReports(): DirectReportsRequestBuilder;
    /**
     * Provides operations to manage the drive property of the microsoft.graph.user entity.
     */
    get drive(): DriveRequestBuilder;
    /**
     * Provides operations to manage the drives property of the microsoft.graph.user entity.
     */
    get drives(): DrivesRequestBuilder;
    /**
     * Provides operations to manage the employeeExperience property of the microsoft.graph.user entity.
     */
    get employeeExperience(): EmployeeExperienceRequestBuilder;
    /**
     * Provides operations to manage the events property of the microsoft.graph.user entity.
     */
    get events(): EventsRequestBuilder;
    /**
     * Provides operations to call the exportDeviceAndAppManagementData method.
     */
    get exportDeviceAndAppManagementData(): ExportDeviceAndAppManagementDataRequestBuilder;
    /**
     * Provides operations to call the exportPersonalData method.
     */
    get exportPersonalData(): ExportPersonalDataRequestBuilder;
    /**
     * Provides operations to manage the extensions property of the microsoft.graph.user entity.
     */
    get extensions(): ExtensionsRequestBuilder;
    /**
     * Provides operations to call the findMeetingTimes method.
     */
    get findMeetingTimes(): FindMeetingTimesRequestBuilder;
    /**
     * Provides operations to call the findRoomLists method.
     */
    get findRoomLists(): FindRoomListsRequestBuilder;
    /**
     * Provides operations to call the findRooms method.
     */
    get findRooms(): FindRoomsRequestBuilder;
    /**
     * Provides operations to manage the followedSites property of the microsoft.graph.user entity.
     */
    get followedSites(): FollowedSitesRequestBuilder;
    /**
     * Provides operations to call the getEffectiveDeviceEnrollmentConfigurations method.
     */
    get getEffectiveDeviceEnrollmentConfigurations(): GetEffectiveDeviceEnrollmentConfigurationsRequestBuilder;
    /**
     * Provides operations to call the getLoggedOnManagedDevices method.
     */
    get getLoggedOnManagedDevices(): GetLoggedOnManagedDevicesRequestBuilder;
    /**
     * Provides operations to call the getMailTips method.
     */
    get getMailTips(): GetMailTipsRequestBuilder;
    /**
     * Provides operations to call the getManagedAppDiagnosticStatuses method.
     */
    get getManagedAppDiagnosticStatuses(): GetManagedAppDiagnosticStatusesRequestBuilder;
    /**
     * Provides operations to call the getManagedAppPolicies method.
     */
    get getManagedAppPolicies(): GetManagedAppPoliciesRequestBuilder;
    /**
     * Provides operations to call the getManagedDevicesWithAppFailures method.
     */
    get getManagedDevicesWithAppFailures(): GetManagedDevicesWithAppFailuresRequestBuilder;
    /**
     * Provides operations to call the getManagedDevicesWithFailedOrPendingApps method.
     */
    get getManagedDevicesWithFailedOrPendingApps(): GetManagedDevicesWithFailedOrPendingAppsRequestBuilder;
    /**
     * Provides operations to call the getMemberGroups method.
     */
    get getMemberGroups(): GetMemberGroupsRequestBuilder;
    /**
     * Provides operations to call the getMemberObjects method.
     */
    get getMemberObjects(): GetMemberObjectsRequestBuilder;
    /**
     * Provides operations to call the getPasswordSingleSignOnCredentials method.
     */
    get getPasswordSingleSignOnCredentials(): GetPasswordSingleSignOnCredentialsRequestBuilder;
    /**
     * Provides operations to manage the inferenceClassification property of the microsoft.graph.user entity.
     */
    get inferenceClassification(): InferenceClassificationRequestBuilder;
    /**
     * Provides operations to manage the informationProtection property of the microsoft.graph.user entity.
     */
    get informationProtection(): InformationProtectionRequestBuilder;
    /**
     * Provides operations to manage the insights property of the microsoft.graph.user entity.
     */
    get insights(): InsightsRequestBuilder;
    /**
     * Provides operations to call the invalidateAllRefreshTokens method.
     */
    get invalidateAllRefreshTokens(): InvalidateAllRefreshTokensRequestBuilder;
    /**
     * Provides operations to manage the invitedBy property of the microsoft.graph.user entity.
     */
    get invitedBy(): InvitedByRequestBuilder;
    /**
     * Provides operations to call the isManagedAppUserBlocked method.
     */
    get isManagedAppUserBlocked(): IsManagedAppUserBlockedRequestBuilder;
    /**
     * Provides operations to manage the joinedGroups property of the microsoft.graph.user entity.
     */
    get joinedGroups(): JoinedGroupsRequestBuilder;
    /**
     * Provides operations to manage the joinedTeams property of the microsoft.graph.user entity.
     */
    get joinedTeams(): JoinedTeamsRequestBuilder;
    /**
     * Provides operations to manage the licenseDetails property of the microsoft.graph.user entity.
     */
    get licenseDetails(): LicenseDetailsRequestBuilder;
    /**
     * The mailboxSettings property
     */
    get mailboxSettings(): MailboxSettingsRequestBuilder;
    /**
     * Provides operations to manage the mailFolders property of the microsoft.graph.user entity.
     */
    get mailFolders(): MailFoldersRequestBuilder;
    /**
     * Provides operations to manage the managedAppRegistrations property of the microsoft.graph.user entity.
     */
    get managedAppRegistrations(): ManagedAppRegistrationsRequestBuilder;
    /**
     * Provides operations to manage the managedDevices property of the microsoft.graph.user entity.
     */
    get managedDevices(): ManagedDevicesRequestBuilder;
    /**
     * Provides operations to manage the manager property of the microsoft.graph.user entity.
     */
    get manager(): ManagerRequestBuilder;
    /**
     * Provides operations to manage the memberOf property of the microsoft.graph.user entity.
     */
    get memberOf(): MemberOfRequestBuilder;
    /**
     * Provides operations to manage the messages property of the microsoft.graph.user entity.
     */
    get messages(): MessagesRequestBuilder;
    /**
     * Provides operations to manage the mobileAppIntentAndStates property of the microsoft.graph.user entity.
     */
    get mobileAppIntentAndStates(): MobileAppIntentAndStatesRequestBuilder;
    /**
     * Provides operations to manage the mobileAppTroubleshootingEvents property of the microsoft.graph.user entity.
     */
    get mobileAppTroubleshootingEvents(): MobileAppTroubleshootingEventsRequestBuilder;
    /**
     * Provides operations to manage the notifications property of the microsoft.graph.user entity.
     */
    get notifications(): NotificationsRequestBuilder;
    /**
     * Provides operations to manage the oauth2PermissionGrants property of the microsoft.graph.user entity.
     */
    get oauth2PermissionGrants(): Oauth2PermissionGrantsRequestBuilder;
    /**
     * Provides operations to manage the onenote property of the microsoft.graph.user entity.
     */
    get onenote(): OnenoteRequestBuilder;
    /**
     * Provides operations to manage the onlineMeetings property of the microsoft.graph.user entity.
     */
    get onlineMeetings(): OnlineMeetingsRequestBuilder;
    /**
     * Provides operations to manage the outlook property of the microsoft.graph.user entity.
     */
    get outlook(): OutlookRequestBuilder;
    /**
     * Provides operations to manage the ownedDevices property of the microsoft.graph.user entity.
     */
    get ownedDevices(): OwnedDevicesRequestBuilder;
    /**
     * Provides operations to manage the ownedObjects property of the microsoft.graph.user entity.
     */
    get ownedObjects(): OwnedObjectsRequestBuilder;
    /**
     * Provides operations to manage the pendingAccessReviewInstances property of the microsoft.graph.user entity.
     */
    get pendingAccessReviewInstances(): PendingAccessReviewInstancesRequestBuilder;
    /**
     * Provides operations to manage the people property of the microsoft.graph.user entity.
     */
    get people(): PeopleRequestBuilder;
    /**
     * Provides operations to manage the permissionGrants property of the microsoft.graph.user entity.
     */
    get permissionGrants(): PermissionGrantsRequestBuilder;
    /**
     * Provides operations to manage the photo property of the microsoft.graph.user entity.
     */
    get photo(): PhotoRequestBuilder;
    /**
     * Provides operations to manage the photos property of the microsoft.graph.user entity.
     */
    get photos(): PhotosRequestBuilder;
    /**
     * Provides operations to manage the planner property of the microsoft.graph.user entity.
     */
    get planner(): PlannerRequestBuilder;
    /**
     * Provides operations to manage the presence property of the microsoft.graph.user entity.
     */
    get presence(): PresenceRequestBuilder;
    /**
     * Provides operations to manage the profile property of the microsoft.graph.user entity.
     */
    get profile(): ProfileRequestBuilder;
    /**
     * Provides operations to manage the registeredDevices property of the microsoft.graph.user entity.
     */
    get registeredDevices(): RegisteredDevicesRequestBuilder;
    /**
     * Provides operations to call the removeAllDevicesFromManagement method.
     */
    get removeAllDevicesFromManagement(): RemoveAllDevicesFromManagementRequestBuilder;
    /**
     * Provides operations to call the reprocessLicenseAssignment method.
     */
    get reprocessLicenseAssignment(): ReprocessLicenseAssignmentRequestBuilder;
    /**
     * Provides operations to call the restore method.
     */
    get restore(): RestoreRequestBuilder;
    /**
     * Provides operations to call the retryServiceProvisioning method.
     */
    get retryServiceProvisioning(): RetryServiceProvisioningRequestBuilder;
    /**
     * Provides operations to call the revokeSignInSessions method.
     */
    get revokeSignInSessions(): RevokeSignInSessionsRequestBuilder;
    /**
     * Provides operations to manage the scopedRoleMemberOf property of the microsoft.graph.user entity.
     */
    get scopedRoleMemberOf(): ScopedRoleMemberOfRequestBuilder;
    /**
     * Provides operations to manage the security property of the microsoft.graph.user entity.
     */
    get security(): SecurityRequestBuilder;
    /**
     * Provides operations to call the sendMail method.
     */
    get sendMail(): SendMailRequestBuilder;
    /**
     * The serviceProvisioningErrors property
     */
    get serviceProvisioningErrors(): ServiceProvisioningErrorsRequestBuilder;
    /**
     * Provides operations to manage the settings property of the microsoft.graph.user entity.
     */
    get settings(): SettingsRequestBuilder;
    /**
     * Provides operations to manage the sponsors property of the microsoft.graph.user entity.
     */
    get sponsors(): SponsorsRequestBuilder;
    /**
     * Provides operations to manage the teamwork property of the microsoft.graph.user entity.
     */
    get teamwork(): TeamworkRequestBuilder;
    /**
     * Provides operations to manage the todo property of the microsoft.graph.user entity.
     */
    get todo(): TodoRequestBuilder;
    /**
     * Provides operations to manage the transitiveMemberOf property of the microsoft.graph.user entity.
     */
    get transitiveMemberOf(): TransitiveMemberOfRequestBuilder;
    /**
     * Provides operations to manage the transitiveReports property of the microsoft.graph.user entity.
     */
    get transitiveReports(): TransitiveReportsRequestBuilder;
    /**
     * Provides operations to call the translateExchangeIds method.
     */
    get translateExchangeIds(): TranslateExchangeIdsRequestBuilder;
    /**
     * Provides operations to call the unblockManagedApps method.
     */
    get unblockManagedApps(): UnblockManagedAppsRequestBuilder;
    /**
     * Provides operations to manage the usageRights property of the microsoft.graph.user entity.
     */
    get usageRights(): UsageRightsRequestBuilder;
    /**
     * Provides operations to manage the virtualEvents property of the microsoft.graph.user entity.
     */
    get virtualEvents(): VirtualEventsRequestBuilder;
    /**
     * Provides operations to manage the windowsInformationProtectionDeviceRegistrations property of the microsoft.graph.user entity.
     */
    get windowsInformationProtectionDeviceRegistrations(): WindowsInformationProtectionDeviceRegistrationsRequestBuilder;
    /**
     * Provides operations to call the wipeAndBlockManagedApps method.
     */
    get wipeAndBlockManagedApps(): WipeAndBlockManagedAppsRequestBuilder;
    /**
     * Provides operations to call the wipeManagedAppRegistrationByDeviceTag method.
     */
    get wipeManagedAppRegistrationByDeviceTag(): WipeManagedAppRegistrationByDeviceTagRequestBuilder;
    /**
     * Provides operations to call the wipeManagedAppRegistrationsByAzureAdDeviceId method.
     */
    get wipeManagedAppRegistrationsByAzureAdDeviceId(): WipeManagedAppRegistrationsByAzureAdDeviceIdRequestBuilder;
    /**
     * Provides operations to call the wipeManagedAppRegistrationsByDeviceTag method.
     */
    get wipeManagedAppRegistrationsByDeviceTag(): WipeManagedAppRegistrationsByDeviceTagRequestBuilder;
    /**
     * Provides operations to manage the appRoleAssignedResources property of the microsoft.graph.user entity.
     * @param appId Alternate key of servicePrincipal
     * @returns {AppRoleAssignedResourcesWithAppIdRequestBuilder}
     */
     appRoleAssignedResourcesWithAppId(appId: string | undefined) : AppRoleAssignedResourcesWithAppIdRequestBuilder;
    /**
     * Delete user.   When deleted, user resources are moved to a temporary container and can be restored within 30 days.  After that time, they are permanently deleted.  To learn more, see deletedItems.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/user-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Provides operations to manage the devices property of the microsoft.graph.user entity.
     * @param deviceId Alternate key of device
     * @returns {DevicesWithDeviceIdRequestBuilder}
     */
     devicesWithDeviceId(deviceId: string | undefined) : DevicesWithDeviceIdRequestBuilder;
    /**
     * Provides operations to call the exportDeviceAndAppManagementData method.
     * @param skip Usage: skip={skip}
     * @param top Usage: top={top}
     * @returns {ExportDeviceAndAppManagementDataWithSkipWithTopRequestBuilder}
     */
     exportDeviceAndAppManagementDataWithSkipWithTop(skip: number | undefined, top: number | undefined) : ExportDeviceAndAppManagementDataWithSkipWithTopRequestBuilder;
    /**
     * Provides operations to call the findRooms method.
     * @param RoomList Usage: RoomList='{RoomList}'
     * @returns {FindRoomsWithRoomListRequestBuilder}
     */
     findRoomsWithRoomList(roomList: string | undefined) : FindRoomsWithRoomListRequestBuilder;
    /**
     * Retrieve the properties and relationships of user object. This operation returns by default only a subset of the more commonly used properties for each user. These default properties are noted in the Properties section. To get properties that are not returned by default, do a GET operation for the user and specify the properties in a $select OData query option. Because the user resource supports extensions, you can also use the GET operation to get custom properties and extension data in a user instance. Customers through Microsoft Entra ID for customers can also use this API operation to retrieve their details.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<User>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/user-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<UserItemRequestBuilderGetQueryParameters> | undefined) : Promise<User | undefined>;
    /**
     * Provides operations to manage the onlineMeetings property of the microsoft.graph.user entity.
     * @param joinWebUrl Alternate key of onlineMeeting
     * @returns {OnlineMeetingsWithJoinWebUrlRequestBuilder}
     */
     onlineMeetingsWithJoinWebUrl(joinWebUrl: string | undefined) : OnlineMeetingsWithJoinWebUrlRequestBuilder;
    /**
     * Update the properties of a user object. Not all properties can be updated by Member or Guest users with their default permissions without Administrator roles. Compare member and guest default permissions to see properties they can manage. Customers through Microsoft Entra ID for customers can also use this API operation to update their details. See Default user permissions in customer tenants for the list of properties they can update.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<User>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/user-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: User, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<User | undefined>;
    /**
     * Provides operations to call the reminderView method.
     * @param EndDateTime Usage: EndDateTime='{EndDateTime}'
     * @param StartDateTime Usage: StartDateTime='{StartDateTime}'
     * @returns {ReminderViewWithStartDateTimeWithEndDateTimeRequestBuilder}
     */
     reminderViewWithStartDateTimeWithEndDateTime(endDateTime: string | undefined, startDateTime: string | undefined) : ReminderViewWithStartDateTimeWithEndDateTimeRequestBuilder;
    /**
     * Delete user.   When deleted, user resources are moved to a temporary container and can be restored within 30 days.  After that time, they are permanently deleted.  To learn more, see deletedItems.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieve the properties and relationships of user object. This operation returns by default only a subset of the more commonly used properties for each user. These default properties are noted in the Properties section. To get properties that are not returned by default, do a GET operation for the user and specify the properties in a $select OData query option. Because the user resource supports extensions, you can also use the GET operation to get custom properties and extension data in a user instance. Customers through Microsoft Entra ID for customers can also use this API operation to retrieve their details.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<UserItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of a user object. Not all properties can be updated by Member or Guest users with their default permissions without Administrator roles. Compare member and guest default permissions to see properties they can manage. Customers through Microsoft Entra ID for customers can also use this API operation to update their details. See Default user permissions in customer tenants for the list of properties they can update.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: User, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve the properties and relationships of user object. This operation returns by default only a subset of the more commonly used properties for each user. These default properties are noted in the Properties section. To get properties that are not returned by default, do a GET operation for the user and specify the properties in a $select OData query option. Because the user resource supports extensions, you can also use the GET operation to get custom properties and extension data in a user instance. Customers through Microsoft Entra ID for customers can also use this API operation to retrieve their details.
 */
export interface UserItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const UserItemRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const UserItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const UserItemRequestBuilderNavigationMetadata: Record<Exclude<keyof UserItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    appRoleAssignedResourcesWithAppId: {
        requestsMetadata: AppRoleAssignedResourcesWithAppIdRequestBuilderRequestsMetadata,
    },
    devicesWithDeviceId: {
        requestsMetadata: DevicesWithDeviceIdRequestBuilderRequestsMetadata,
    },
    exportDeviceAndAppManagementDataWithSkipWithTop: {
        requestsMetadata: ExportDeviceAndAppManagementDataWithSkipWithTopRequestBuilderRequestsMetadata,
    },
    findRoomsWithRoomList: {
        requestsMetadata: FindRoomsWithRoomListRequestBuilderRequestsMetadata,
    },
    onlineMeetingsWithJoinWebUrl: {
        requestsMetadata: OnlineMeetingsWithJoinWebUrlRequestBuilderRequestsMetadata,
        navigationMetadata: OnlineMeetingsWithJoinWebUrlRequestBuilderNavigationMetadata,
    },
    reminderViewWithStartDateTimeWithEndDateTime: {
        requestsMetadata: ReminderViewWithStartDateTimeWithEndDateTimeRequestBuilderRequestsMetadata,
    },
    activities: {
        requestsMetadata: ActivitiesRequestBuilderRequestsMetadata,
        navigationMetadata: ActivitiesRequestBuilderNavigationMetadata,
    },
    agreementAcceptances: {
        requestsMetadata: AgreementAcceptancesRequestBuilderRequestsMetadata,
        navigationMetadata: AgreementAcceptancesRequestBuilderNavigationMetadata,
    },
    analytics: {
        requestsMetadata: AnalyticsRequestBuilderRequestsMetadata,
        navigationMetadata: AnalyticsRequestBuilderNavigationMetadata,
    },
    appConsentRequestsForApproval: {
        requestsMetadata: AppConsentRequestsForApprovalRequestBuilderRequestsMetadata,
        navigationMetadata: AppConsentRequestsForApprovalRequestBuilderNavigationMetadata,
    },
    appRoleAssignedResources: {
        requestsMetadata: AppRoleAssignedResourcesRequestBuilderRequestsMetadata,
        navigationMetadata: AppRoleAssignedResourcesRequestBuilderNavigationMetadata,
    },
    appRoleAssignments: {
        requestsMetadata: AppRoleAssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AppRoleAssignmentsRequestBuilderNavigationMetadata,
    },
    approvals: {
        requestsMetadata: ApprovalsRequestBuilderRequestsMetadata,
        navigationMetadata: ApprovalsRequestBuilderNavigationMetadata,
    },
    assignLicense: {
        requestsMetadata: AssignLicenseRequestBuilderRequestsMetadata,
    },
    authentication: {
        requestsMetadata: AuthenticationRequestBuilderRequestsMetadata,
        navigationMetadata: AuthenticationRequestBuilderNavigationMetadata,
    },
    calendar: {
        requestsMetadata: CalendarRequestBuilderRequestsMetadata,
        navigationMetadata: CalendarRequestBuilderNavigationMetadata,
    },
    calendarGroups: {
        requestsMetadata: CalendarGroupsRequestBuilderRequestsMetadata,
        navigationMetadata: CalendarGroupsRequestBuilderNavigationMetadata,
    },
    calendars: {
        requestsMetadata: CalendarsRequestBuilderRequestsMetadata,
        navigationMetadata: CalendarsRequestBuilderNavigationMetadata,
    },
    calendarView: {
        requestsMetadata: CalendarViewRequestBuilderRequestsMetadata,
        navigationMetadata: CalendarViewRequestBuilderNavigationMetadata,
    },
    changePassword: {
        requestsMetadata: ChangePasswordRequestBuilderRequestsMetadata,
    },
    chats: {
        requestsMetadata: ChatsRequestBuilderRequestsMetadata,
        navigationMetadata: ChatsRequestBuilderNavigationMetadata,
    },
    checkMemberGroups: {
        requestsMetadata: CheckMemberGroupsRequestBuilderRequestsMetadata,
    },
    checkMemberObjects: {
        requestsMetadata: CheckMemberObjectsRequestBuilderRequestsMetadata,
    },
    cloudClipboard: {
        requestsMetadata: CloudClipboardRequestBuilderRequestsMetadata,
        navigationMetadata: CloudClipboardRequestBuilderNavigationMetadata,
    },
    cloudPCs: {
        requestsMetadata: CloudPCsRequestBuilderRequestsMetadata,
        navigationMetadata: CloudPCsRequestBuilderNavigationMetadata,
    },
    contactFolders: {
        requestsMetadata: ContactFoldersRequestBuilderRequestsMetadata,
        navigationMetadata: ContactFoldersRequestBuilderNavigationMetadata,
    },
    contacts: {
        requestsMetadata: ContactsRequestBuilderRequestsMetadata,
        navigationMetadata: ContactsRequestBuilderNavigationMetadata,
    },
    convertExternalToInternalMemberUser: {
        requestsMetadata: ConvertExternalToInternalMemberUserRequestBuilderRequestsMetadata,
    },
    createdObjects: {
        requestsMetadata: CreatedObjectsRequestBuilderRequestsMetadata,
        navigationMetadata: CreatedObjectsRequestBuilderNavigationMetadata,
    },
    deletePasswordSingleSignOnCredentials: {
        requestsMetadata: DeletePasswordSingleSignOnCredentialsRequestBuilderRequestsMetadata,
    },
    deviceEnrollmentConfigurations: {
        requestsMetadata: DeviceEnrollmentConfigurationsRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceEnrollmentConfigurationsRequestBuilderNavigationMetadata,
    },
    deviceManagementTroubleshootingEvents: {
        requestsMetadata: DeviceManagementTroubleshootingEventsRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceManagementTroubleshootingEventsRequestBuilderNavigationMetadata,
    },
    devices: {
        requestsMetadata: DevicesRequestBuilderRequestsMetadata,
        navigationMetadata: DevicesRequestBuilderNavigationMetadata,
    },
    directReports: {
        requestsMetadata: DirectReportsRequestBuilderRequestsMetadata,
        navigationMetadata: DirectReportsRequestBuilderNavigationMetadata,
    },
    drive: {
        requestsMetadata: DriveRequestBuilderRequestsMetadata,
    },
    drives: {
        requestsMetadata: DrivesRequestBuilderRequestsMetadata,
        navigationMetadata: DrivesRequestBuilderNavigationMetadata,
    },
    employeeExperience: {
        requestsMetadata: EmployeeExperienceRequestBuilderRequestsMetadata,
        navigationMetadata: EmployeeExperienceRequestBuilderNavigationMetadata,
    },
    events: {
        requestsMetadata: EventsRequestBuilderRequestsMetadata,
        navigationMetadata: EventsRequestBuilderNavigationMetadata,
    },
    exportDeviceAndAppManagementData: {
        requestsMetadata: ExportDeviceAndAppManagementDataRequestBuilderRequestsMetadata,
    },
    exportPersonalData: {
        requestsMetadata: ExportPersonalDataRequestBuilderRequestsMetadata,
    },
    extensions: {
        requestsMetadata: ExtensionsRequestBuilderRequestsMetadata,
        navigationMetadata: ExtensionsRequestBuilderNavigationMetadata,
    },
    findMeetingTimes: {
        requestsMetadata: FindMeetingTimesRequestBuilderRequestsMetadata,
    },
    findRoomLists: {
        requestsMetadata: FindRoomListsRequestBuilderRequestsMetadata,
    },
    findRooms: {
        requestsMetadata: FindRoomsRequestBuilderRequestsMetadata,
    },
    followedSites: {
        requestsMetadata: FollowedSitesRequestBuilderRequestsMetadata,
        navigationMetadata: FollowedSitesRequestBuilderNavigationMetadata,
    },
    getEffectiveDeviceEnrollmentConfigurations: {
        requestsMetadata: GetEffectiveDeviceEnrollmentConfigurationsRequestBuilderRequestsMetadata,
    },
    getLoggedOnManagedDevices: {
        requestsMetadata: GetLoggedOnManagedDevicesRequestBuilderRequestsMetadata,
    },
    getMailTips: {
        requestsMetadata: GetMailTipsRequestBuilderRequestsMetadata,
    },
    getManagedAppDiagnosticStatuses: {
        requestsMetadata: GetManagedAppDiagnosticStatusesRequestBuilderRequestsMetadata,
    },
    getManagedAppPolicies: {
        requestsMetadata: GetManagedAppPoliciesRequestBuilderRequestsMetadata,
    },
    getManagedDevicesWithAppFailures: {
        requestsMetadata: GetManagedDevicesWithAppFailuresRequestBuilderRequestsMetadata,
    },
    getManagedDevicesWithFailedOrPendingApps: {
        requestsMetadata: GetManagedDevicesWithFailedOrPendingAppsRequestBuilderRequestsMetadata,
    },
    getMemberGroups: {
        requestsMetadata: GetMemberGroupsRequestBuilderRequestsMetadata,
    },
    getMemberObjects: {
        requestsMetadata: GetMemberObjectsRequestBuilderRequestsMetadata,
    },
    getPasswordSingleSignOnCredentials: {
        requestsMetadata: GetPasswordSingleSignOnCredentialsRequestBuilderRequestsMetadata,
    },
    inferenceClassification: {
        requestsMetadata: InferenceClassificationRequestBuilderRequestsMetadata,
        navigationMetadata: InferenceClassificationRequestBuilderNavigationMetadata,
    },
    informationProtection: {
        requestsMetadata: InformationProtectionRequestBuilderRequestsMetadata,
        navigationMetadata: InformationProtectionRequestBuilderNavigationMetadata,
    },
    insights: {
        requestsMetadata: InsightsRequestBuilderRequestsMetadata,
        navigationMetadata: InsightsRequestBuilderNavigationMetadata,
    },
    invalidateAllRefreshTokens: {
        requestsMetadata: InvalidateAllRefreshTokensRequestBuilderRequestsMetadata,
    },
    invitedBy: {
        requestsMetadata: InvitedByRequestBuilderRequestsMetadata,
    },
    isManagedAppUserBlocked: {
        requestsMetadata: IsManagedAppUserBlockedRequestBuilderRequestsMetadata,
    },
    joinedGroups: {
        requestsMetadata: JoinedGroupsRequestBuilderRequestsMetadata,
        navigationMetadata: JoinedGroupsRequestBuilderNavigationMetadata,
    },
    joinedTeams: {
        requestsMetadata: JoinedTeamsRequestBuilderRequestsMetadata,
        navigationMetadata: JoinedTeamsRequestBuilderNavigationMetadata,
    },
    licenseDetails: {
        requestsMetadata: LicenseDetailsRequestBuilderRequestsMetadata,
        navigationMetadata: LicenseDetailsRequestBuilderNavigationMetadata,
    },
    mailboxSettings: {
        requestsMetadata: MailboxSettingsRequestBuilderRequestsMetadata,
    },
    mailFolders: {
        requestsMetadata: MailFoldersRequestBuilderRequestsMetadata,
        navigationMetadata: MailFoldersRequestBuilderNavigationMetadata,
    },
    managedAppRegistrations: {
        requestsMetadata: ManagedAppRegistrationsRequestBuilderRequestsMetadata,
        navigationMetadata: ManagedAppRegistrationsRequestBuilderNavigationMetadata,
    },
    managedDevices: {
        requestsMetadata: ManagedDevicesRequestBuilderRequestsMetadata,
        navigationMetadata: ManagedDevicesRequestBuilderNavigationMetadata,
    },
    manager: {
        requestsMetadata: ManagerRequestBuilderRequestsMetadata,
        navigationMetadata: ManagerRequestBuilderNavigationMetadata,
    },
    memberOf: {
        requestsMetadata: MemberOfRequestBuilderRequestsMetadata,
        navigationMetadata: MemberOfRequestBuilderNavigationMetadata,
    },
    messages: {
        requestsMetadata: MessagesRequestBuilderRequestsMetadata,
        navigationMetadata: MessagesRequestBuilderNavigationMetadata,
    },
    mobileAppIntentAndStates: {
        requestsMetadata: MobileAppIntentAndStatesRequestBuilderRequestsMetadata,
        navigationMetadata: MobileAppIntentAndStatesRequestBuilderNavigationMetadata,
    },
    mobileAppTroubleshootingEvents: {
        requestsMetadata: MobileAppTroubleshootingEventsRequestBuilderRequestsMetadata,
        navigationMetadata: MobileAppTroubleshootingEventsRequestBuilderNavigationMetadata,
    },
    notifications: {
        requestsMetadata: NotificationsRequestBuilderRequestsMetadata,
        navigationMetadata: NotificationsRequestBuilderNavigationMetadata,
    },
    oauth2PermissionGrants: {
        requestsMetadata: Oauth2PermissionGrantsRequestBuilderRequestsMetadata,
        navigationMetadata: Oauth2PermissionGrantsRequestBuilderNavigationMetadata,
    },
    onenote: {
        requestsMetadata: OnenoteRequestBuilderRequestsMetadata,
        navigationMetadata: OnenoteRequestBuilderNavigationMetadata,
    },
    onlineMeetings: {
        requestsMetadata: OnlineMeetingsRequestBuilderRequestsMetadata,
        navigationMetadata: OnlineMeetingsRequestBuilderNavigationMetadata,
    },
    outlook: {
        requestsMetadata: OutlookRequestBuilderRequestsMetadata,
        navigationMetadata: OutlookRequestBuilderNavigationMetadata,
    },
    ownedDevices: {
        requestsMetadata: OwnedDevicesRequestBuilderRequestsMetadata,
        navigationMetadata: OwnedDevicesRequestBuilderNavigationMetadata,
    },
    ownedObjects: {
        requestsMetadata: OwnedObjectsRequestBuilderRequestsMetadata,
        navigationMetadata: OwnedObjectsRequestBuilderNavigationMetadata,
    },
    pendingAccessReviewInstances: {
        requestsMetadata: PendingAccessReviewInstancesRequestBuilderRequestsMetadata,
        navigationMetadata: PendingAccessReviewInstancesRequestBuilderNavigationMetadata,
    },
    people: {
        requestsMetadata: PeopleRequestBuilderRequestsMetadata,
        navigationMetadata: PeopleRequestBuilderNavigationMetadata,
    },
    permissionGrants: {
        requestsMetadata: PermissionGrantsRequestBuilderRequestsMetadata,
        navigationMetadata: PermissionGrantsRequestBuilderNavigationMetadata,
    },
    photo: {
        requestsMetadata: PhotoRequestBuilderRequestsMetadata,
        navigationMetadata: PhotoRequestBuilderNavigationMetadata,
    },
    photos: {
        requestsMetadata: PhotosRequestBuilderRequestsMetadata,
        navigationMetadata: PhotosRequestBuilderNavigationMetadata,
    },
    planner: {
        requestsMetadata: PlannerRequestBuilderRequestsMetadata,
        navigationMetadata: PlannerRequestBuilderNavigationMetadata,
    },
    presence: {
        requestsMetadata: PresenceRequestBuilderRequestsMetadata,
        navigationMetadata: PresenceRequestBuilderNavigationMetadata,
    },
    profile: {
        requestsMetadata: ProfileRequestBuilderRequestsMetadata,
        navigationMetadata: ProfileRequestBuilderNavigationMetadata,
    },
    registeredDevices: {
        requestsMetadata: RegisteredDevicesRequestBuilderRequestsMetadata,
        navigationMetadata: RegisteredDevicesRequestBuilderNavigationMetadata,
    },
    removeAllDevicesFromManagement: {
        requestsMetadata: RemoveAllDevicesFromManagementRequestBuilderRequestsMetadata,
    },
    reprocessLicenseAssignment: {
        requestsMetadata: ReprocessLicenseAssignmentRequestBuilderRequestsMetadata,
    },
    restore: {
        requestsMetadata: RestoreRequestBuilderRequestsMetadata,
    },
    retryServiceProvisioning: {
        requestsMetadata: RetryServiceProvisioningRequestBuilderRequestsMetadata,
    },
    revokeSignInSessions: {
        requestsMetadata: RevokeSignInSessionsRequestBuilderRequestsMetadata,
    },
    scopedRoleMemberOf: {
        requestsMetadata: ScopedRoleMemberOfRequestBuilderRequestsMetadata,
        navigationMetadata: ScopedRoleMemberOfRequestBuilderNavigationMetadata,
    },
    security: {
        requestsMetadata: SecurityRequestBuilderRequestsMetadata,
        navigationMetadata: SecurityRequestBuilderNavigationMetadata,
    },
    sendMail: {
        requestsMetadata: SendMailRequestBuilderRequestsMetadata,
    },
    serviceProvisioningErrors: {
        requestsMetadata: ServiceProvisioningErrorsRequestBuilderRequestsMetadata,
        navigationMetadata: ServiceProvisioningErrorsRequestBuilderNavigationMetadata,
    },
    settings: {
        requestsMetadata: SettingsRequestBuilderRequestsMetadata,
        navigationMetadata: SettingsRequestBuilderNavigationMetadata,
    },
    sponsors: {
        requestsMetadata: SponsorsRequestBuilderRequestsMetadata,
        navigationMetadata: SponsorsRequestBuilderNavigationMetadata,
    },
    teamwork: {
        requestsMetadata: TeamworkRequestBuilderRequestsMetadata,
        navigationMetadata: TeamworkRequestBuilderNavigationMetadata,
    },
    todo: {
        requestsMetadata: TodoRequestBuilderRequestsMetadata,
        navigationMetadata: TodoRequestBuilderNavigationMetadata,
    },
    transitiveMemberOf: {
        requestsMetadata: TransitiveMemberOfRequestBuilderRequestsMetadata,
        navigationMetadata: TransitiveMemberOfRequestBuilderNavigationMetadata,
    },
    transitiveReports: {
        requestsMetadata: TransitiveReportsRequestBuilderRequestsMetadata,
        navigationMetadata: TransitiveReportsRequestBuilderNavigationMetadata,
    },
    translateExchangeIds: {
        requestsMetadata: TranslateExchangeIdsRequestBuilderRequestsMetadata,
    },
    unblockManagedApps: {
        requestsMetadata: UnblockManagedAppsRequestBuilderRequestsMetadata,
    },
    usageRights: {
        requestsMetadata: UsageRightsRequestBuilderRequestsMetadata,
        navigationMetadata: UsageRightsRequestBuilderNavigationMetadata,
    },
    virtualEvents: {
        requestsMetadata: VirtualEventsRequestBuilderRequestsMetadata,
        navigationMetadata: VirtualEventsRequestBuilderNavigationMetadata,
    },
    windowsInformationProtectionDeviceRegistrations: {
        requestsMetadata: WindowsInformationProtectionDeviceRegistrationsRequestBuilderRequestsMetadata,
        navigationMetadata: WindowsInformationProtectionDeviceRegistrationsRequestBuilderNavigationMetadata,
    },
    wipeAndBlockManagedApps: {
        requestsMetadata: WipeAndBlockManagedAppsRequestBuilderRequestsMetadata,
    },
    wipeManagedAppRegistrationByDeviceTag: {
        requestsMetadata: WipeManagedAppRegistrationByDeviceTagRequestBuilderRequestsMetadata,
    },
    wipeManagedAppRegistrationsByAzureAdDeviceId: {
        requestsMetadata: WipeManagedAppRegistrationsByAzureAdDeviceIdRequestBuilderRequestsMetadata,
    },
    wipeManagedAppRegistrationsByDeviceTag: {
        requestsMetadata: WipeManagedAppRegistrationsByDeviceTagRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const UserItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: UserItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: UserItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createUserFromDiscriminatorValue,
        queryParametersMapper: UserItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: UserItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createUserFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUser,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
