/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createOutlookTaskFolderCollectionResponseFromDiscriminatorValue, createOutlookTaskFolderFromDiscriminatorValue, serializeOutlookTaskFolder, type OutlookTaskFolder, type OutlookTaskFolderCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { OutlookTaskFolderItemRequestBuilderNavigationMetadata, OutlookTaskFolderItemRequestBuilderRequestsMetadata, type OutlookTaskFolderItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the taskFolders property of the microsoft.graph.outlookUser entity.
 */
export interface TaskFoldersRequestBuilder extends BaseRequestBuilder<TaskFoldersRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     * @deprecated The Outlook tasks API is deprecated and will stop returning data on February 20, 2023. Please use the new To Do API. For more details, please visit https://developer.microsoft.com/en-us/office/blogs/announcing-the-general-availability-of-microsoft-to-do-apis-on-graph/ as of 2020-08/Outlook_Tasks
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the taskFolders property of the microsoft.graph.outlookUser entity.
     * @param outlookTaskFolderId The unique identifier of outlookTaskFolder
     * @returns {OutlookTaskFolderItemRequestBuilder}
     * @deprecated The Outlook tasks API is deprecated and will stop returning data on February 20, 2023. Please use the new To Do API. For more details, please visit https://developer.microsoft.com/en-us/office/blogs/announcing-the-general-availability-of-microsoft-to-do-apis-on-graph/ as of 2020-08/Outlook_Tasks
     */
     byOutlookTaskFolderId(outlookTaskFolderId: string) : OutlookTaskFolderItemRequestBuilder;
    /**
     * Get all the Outlook task folders in the user's mailbox.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OutlookTaskFolderCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated The Outlook tasks API is deprecated and will stop returning data on February 20, 2023. Please use the new To Do API. For more details, please visit https://developer.microsoft.com/en-us/office/blogs/announcing-the-general-availability-of-microsoft-to-do-apis-on-graph/ as of 2020-08/Outlook_Tasks
     * @see {@link https://learn.microsoft.com/graph/api/outlookuser-list-taskfolders?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<TaskFoldersRequestBuilderGetQueryParameters> | undefined) : Promise<OutlookTaskFolderCollectionResponse | undefined>;
    /**
     * Create a task folder in the default task group (My Tasks) of the user's mailbox.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OutlookTaskFolder>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated The Outlook tasks API is deprecated and will stop returning data on February 20, 2023. Please use the new To Do API. For more details, please visit https://developer.microsoft.com/en-us/office/blogs/announcing-the-general-availability-of-microsoft-to-do-apis-on-graph/ as of 2020-08/Outlook_Tasks
     * @see {@link https://learn.microsoft.com/graph/api/outlookuser-post-taskfolders?view=graph-rest-1.0|Find more info here}
     */
     post(body: OutlookTaskFolder, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<OutlookTaskFolder | undefined>;
    /**
     * Get all the Outlook task folders in the user's mailbox.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated The Outlook tasks API is deprecated and will stop returning data on February 20, 2023. Please use the new To Do API. For more details, please visit https://developer.microsoft.com/en-us/office/blogs/announcing-the-general-availability-of-microsoft-to-do-apis-on-graph/ as of 2020-08/Outlook_Tasks
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<TaskFoldersRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a task folder in the default task group (My Tasks) of the user's mailbox.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated The Outlook tasks API is deprecated and will stop returning data on February 20, 2023. Please use the new To Do API. For more details, please visit https://developer.microsoft.com/en-us/office/blogs/announcing-the-general-availability-of-microsoft-to-do-apis-on-graph/ as of 2020-08/Outlook_Tasks
     */
     toPostRequestInformation(body: OutlookTaskFolder, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get all the Outlook task folders in the user's mailbox.
 */
export interface TaskFoldersRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const TaskFoldersRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/outlook/taskFolders{?%24count,%24filter,%24orderby,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const TaskFoldersRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const TaskFoldersRequestBuilderNavigationMetadata: Record<Exclude<keyof TaskFoldersRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byOutlookTaskFolderId: {
        requestsMetadata: OutlookTaskFolderItemRequestBuilderRequestsMetadata,
        navigationMetadata: OutlookTaskFolderItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["outlookTaskFolder%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const TaskFoldersRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: TaskFoldersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createOutlookTaskFolderCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: TaskFoldersRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: TaskFoldersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createOutlookTaskFolderFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeOutlookTaskFolder,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
