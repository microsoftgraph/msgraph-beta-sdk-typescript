/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createOutlookUserFromDiscriminatorValue, type OutlookUser } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { MasterCategoriesRequestBuilderNavigationMetadata, MasterCategoriesRequestBuilderRequestsMetadata, MasterCategoriesRequestBuilderUriTemplate, type MasterCategoriesRequestBuilder } from './masterCategories/';
import { SupportedLanguagesRequestBuilderRequestsMetadata, SupportedLanguagesRequestBuilderUriTemplate, type SupportedLanguagesRequestBuilder } from './supportedLanguages/';
import { SupportedTimeZonesRequestBuilderRequestsMetadata, SupportedTimeZonesRequestBuilderUriTemplate, type SupportedTimeZonesRequestBuilder } from './supportedTimeZones/';
import { SupportedTimeZonesWithTimeZoneStandardRequestBuilderRequestsMetadata, SupportedTimeZonesWithTimeZoneStandardRequestBuilderUriTemplate, type SupportedTimeZonesWithTimeZoneStandardRequestBuilder } from './supportedTimeZonesWithTimeZoneStandard/';
import { TaskFoldersRequestBuilderNavigationMetadata, TaskFoldersRequestBuilderRequestsMetadata, TaskFoldersRequestBuilderUriTemplate, type TaskFoldersRequestBuilder } from './taskFolders/';
import { TaskGroupsRequestBuilderNavigationMetadata, TaskGroupsRequestBuilderRequestsMetadata, TaskGroupsRequestBuilderUriTemplate, type TaskGroupsRequestBuilder } from './taskGroups/';
import { TasksRequestBuilderNavigationMetadata, TasksRequestBuilderRequestsMetadata, TasksRequestBuilderUriTemplate, type TasksRequestBuilder } from './tasks/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the outlook property of the microsoft.graph.user entity.
 */
export interface OutlookRequestBuilder extends BaseRequestBuilder<OutlookRequestBuilder> {
    /**
     * Provides operations to manage the masterCategories property of the microsoft.graph.outlookUser entity.
     */
    get masterCategories(): MasterCategoriesRequestBuilder;
    /**
     * Provides operations to call the supportedLanguages method.
     */
    get supportedLanguages(): SupportedLanguagesRequestBuilder;
    /**
     * Provides operations to call the supportedTimeZones method.
     */
    get supportedTimeZones(): SupportedTimeZonesRequestBuilder;
    /**
     * Provides operations to manage the taskFolders property of the microsoft.graph.outlookUser entity.
     */
    get taskFolders(): TaskFoldersRequestBuilder;
    /**
     * Provides operations to manage the taskGroups property of the microsoft.graph.outlookUser entity.
     */
    get taskGroups(): TaskGroupsRequestBuilder;
    /**
     * Provides operations to manage the tasks property of the microsoft.graph.outlookUser entity.
     */
    get tasks(): TasksRequestBuilder;
    /**
     * Selective Outlook services available to the user. Read-only. Nullable.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of OutlookUser
     */
     get(requestConfiguration?: RequestConfiguration<OutlookRequestBuilderGetQueryParameters> | undefined) : Promise<OutlookUser | undefined>;
    /**
     * Provides operations to call the supportedTimeZones method.
     * @param TimeZoneStandard Usage: TimeZoneStandard='{TimeZoneStandard}'
     * @returns a supportedTimeZonesWithTimeZoneStandardRequestBuilder
     */
     supportedTimeZonesWithTimeZoneStandard(timeZoneStandard: string | undefined) : SupportedTimeZonesWithTimeZoneStandardRequestBuilder;
    /**
     * Selective Outlook services available to the user. Read-only. Nullable.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<OutlookRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Selective Outlook services available to the user. Read-only. Nullable.
 */
export interface OutlookRequestBuilderGetQueryParameters {
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const OutlookRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const OutlookRequestBuilderNavigationMetadata: Record<Exclude<keyof OutlookRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    supportedTimeZonesWithTimeZoneStandard: {
        uriTemplate: SupportedTimeZonesWithTimeZoneStandardRequestBuilderUriTemplate,
        requestsMetadata: SupportedTimeZonesWithTimeZoneStandardRequestBuilderRequestsMetadata,
    },
    masterCategories: {
        uriTemplate: MasterCategoriesRequestBuilderUriTemplate,
        requestsMetadata: MasterCategoriesRequestBuilderRequestsMetadata,
        navigationMetadata: MasterCategoriesRequestBuilderNavigationMetadata,
    },
    supportedLanguages: {
        uriTemplate: SupportedLanguagesRequestBuilderUriTemplate,
        requestsMetadata: SupportedLanguagesRequestBuilderRequestsMetadata,
    },
    supportedTimeZones: {
        uriTemplate: SupportedTimeZonesRequestBuilderUriTemplate,
        requestsMetadata: SupportedTimeZonesRequestBuilderRequestsMetadata,
    },
    taskFolders: {
        uriTemplate: TaskFoldersRequestBuilderUriTemplate,
        requestsMetadata: TaskFoldersRequestBuilderRequestsMetadata,
        navigationMetadata: TaskFoldersRequestBuilderNavigationMetadata,
    },
    taskGroups: {
        uriTemplate: TaskGroupsRequestBuilderUriTemplate,
        requestsMetadata: TaskGroupsRequestBuilderRequestsMetadata,
        navigationMetadata: TaskGroupsRequestBuilderNavigationMetadata,
    },
    tasks: {
        uriTemplate: TasksRequestBuilderUriTemplate,
        requestsMetadata: TasksRequestBuilderRequestsMetadata,
        navigationMetadata: TasksRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const OutlookRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createOutlookUserFromDiscriminatorValue,
        queryParametersMapper: OutlookRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Uri template for the request builder.
 */
export const OutlookRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/outlook{?%24select}";
/* tslint:enable */
/* eslint-enable */
