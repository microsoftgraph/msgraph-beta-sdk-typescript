/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPersonFromDiscriminatorValue, type Person } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the people property of the microsoft.graph.user entity.
 */
export interface PersonItemRequestBuilder extends BaseRequestBuilder<PersonItemRequestBuilder> {
    /**
     * Read-only. The most relevant people to the user. The collection is ordered by their relevance to the user, which is determined by the user's communication, collaboration, and business relationships. A person aggregates information from mail, contacts, and social networks.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Person>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<PersonItemRequestBuilderGetQueryParameters> | undefined) : Promise<Person | undefined>;
    /**
     * Read-only. The most relevant people to the user. The collection is ordered by their relevance to the user, which is determined by the user's communication, collaboration, and business relationships. A person aggregates information from mail, contacts, and social networks.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PersonItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Read-only. The most relevant people to the user. The collection is ordered by their relevance to the user, which is determined by the user's communication, collaboration, and business relationships. A person aggregates information from mail, contacts, and social networks.
 */
export interface PersonItemRequestBuilderGetQueryParameters {
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const PersonItemRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/people/{person%2Did}{?%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PersonItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PersonItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: PersonItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPersonFromDiscriminatorValue,
        queryParametersMapper: PersonItemRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
