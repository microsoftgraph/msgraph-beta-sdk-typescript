/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createProjectParticipationCollectionResponseFromDiscriminatorValue, createProjectParticipationFromDiscriminatorValue, serializeProjectParticipation, type ProjectParticipation, type ProjectParticipationCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { ProjectParticipationItemRequestBuilderRequestsMetadata, type ProjectParticipationItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the projects property of the microsoft.graph.profile entity.
 */
export interface ProjectsRequestBuilder extends BaseRequestBuilder<ProjectsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the projects property of the microsoft.graph.profile entity.
     * @param projectParticipationId The unique identifier of projectParticipation
     * @returns {ProjectParticipationItemRequestBuilder}
     */
     byProjectParticipationId(projectParticipationId: string) : ProjectParticipationItemRequestBuilder;
    /**
     * Retrieve a list of projectParticipation objects from a user's profile.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ProjectParticipationCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/profile-list-projects?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<ProjectsRequestBuilderGetQueryParameters> | undefined) : Promise<ProjectParticipationCollectionResponse | undefined>;
    /**
     * Use this API to create a new projectParticipation object in a user's profile.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ProjectParticipation>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/profile-post-projects?view=graph-rest-1.0|Find more info here}
     */
     post(body: ProjectParticipation, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ProjectParticipation | undefined>;
    /**
     * Retrieve a list of projectParticipation objects from a user's profile.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ProjectsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Use this API to create a new projectParticipation object in a user's profile.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ProjectParticipation, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve a list of projectParticipation objects from a user's profile.
 */
export interface ProjectsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const ProjectsRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/profile/projects{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the projects property of the microsoft.graph.profile entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the projects property of the microsoft.graph.profile entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    AllowedAudiences: "allowedAudiences",
    AllowedAudiencesDesc: "allowedAudiences desc",
    CreatedBy: "createdBy",
    CreatedByDesc: "createdBy desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    Inference: "inference",
    InferenceDesc: "inference desc",
    IsSearchable: "isSearchable",
    IsSearchableDesc: "isSearchable desc",
    LastModifiedBy: "lastModifiedBy",
    LastModifiedByDesc: "lastModifiedBy desc",
    LastModifiedDateTime: "lastModifiedDateTime",
    LastModifiedDateTimeDesc: "lastModifiedDateTime desc",
    Source: "source",
    SourceDesc: "source desc",
    Categories: "categories",
    CategoriesDesc: "categories desc",
    Client: "client",
    ClientDesc: "client desc",
    CollaborationTags: "collaborationTags",
    CollaborationTagsDesc: "collaborationTags desc",
    Colleagues: "colleagues",
    ColleaguesDesc: "colleagues desc",
    Detail: "detail",
    DetailDesc: "detail desc",
    DisplayName: "displayName",
    DisplayNameDesc: "displayName desc",
    Sponsors: "sponsors",
    SponsorsDesc: "sponsors desc",
    ThumbnailUrl: "thumbnailUrl",
    ThumbnailUrlDesc: "thumbnailUrl desc",
} as const;
/**
 * Provides operations to manage the projects property of the microsoft.graph.profile entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AllowedAudiences: "allowedAudiences",
    CreatedBy: "createdBy",
    CreatedDateTime: "createdDateTime",
    Inference: "inference",
    IsSearchable: "isSearchable",
    LastModifiedBy: "lastModifiedBy",
    LastModifiedDateTime: "lastModifiedDateTime",
    Source: "source",
    Categories: "categories",
    Client: "client",
    CollaborationTags: "collaborationTags",
    Colleagues: "colleagues",
    Detail: "detail",
    DisplayName: "displayName",
    Sponsors: "sponsors",
    ThumbnailUrl: "thumbnailUrl",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ProjectsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ProjectsRequestBuilderNavigationMetadata: Record<Exclude<keyof ProjectsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byProjectParticipationId: {
        requestsMetadata: ProjectParticipationItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["projectParticipation%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ProjectsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ProjectsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createProjectParticipationCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: ProjectsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: ProjectsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createProjectParticipationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeProjectParticipation,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
