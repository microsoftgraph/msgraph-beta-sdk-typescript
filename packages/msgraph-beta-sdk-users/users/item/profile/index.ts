/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createProfileFromDiscriminatorValue, serializeProfile, type Profile } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { AccountRequestBuilderNavigationMetadata, AccountRequestBuilderRequestsMetadata, AccountRequestBuilderUriTemplate, type AccountRequestBuilder } from './account/';
import { AddressesRequestBuilderNavigationMetadata, AddressesRequestBuilderRequestsMetadata, AddressesRequestBuilderUriTemplate, type AddressesRequestBuilder } from './addresses/';
import { AnniversariesRequestBuilderNavigationMetadata, AnniversariesRequestBuilderRequestsMetadata, AnniversariesRequestBuilderUriTemplate, type AnniversariesRequestBuilder } from './anniversaries/';
import { AwardsRequestBuilderNavigationMetadata, AwardsRequestBuilderRequestsMetadata, AwardsRequestBuilderUriTemplate, type AwardsRequestBuilder } from './awards/';
import { CertificationsRequestBuilderNavigationMetadata, CertificationsRequestBuilderRequestsMetadata, CertificationsRequestBuilderUriTemplate, type CertificationsRequestBuilder } from './certifications/';
import { EducationalActivitiesRequestBuilderNavigationMetadata, EducationalActivitiesRequestBuilderRequestsMetadata, EducationalActivitiesRequestBuilderUriTemplate, type EducationalActivitiesRequestBuilder } from './educationalActivities/';
import { EmailsRequestBuilderNavigationMetadata, EmailsRequestBuilderRequestsMetadata, EmailsRequestBuilderUriTemplate, type EmailsRequestBuilder } from './emails/';
import { InterestsRequestBuilderNavigationMetadata, InterestsRequestBuilderRequestsMetadata, InterestsRequestBuilderUriTemplate, type InterestsRequestBuilder } from './interests/';
import { LanguagesRequestBuilderNavigationMetadata, LanguagesRequestBuilderRequestsMetadata, LanguagesRequestBuilderUriTemplate, type LanguagesRequestBuilder } from './languages/';
import { NamesRequestBuilderNavigationMetadata, NamesRequestBuilderRequestsMetadata, NamesRequestBuilderUriTemplate, type NamesRequestBuilder } from './names/';
import { NotesRequestBuilderNavigationMetadata, NotesRequestBuilderRequestsMetadata, NotesRequestBuilderUriTemplate, type NotesRequestBuilder } from './notes/';
import { PatentsRequestBuilderNavigationMetadata, PatentsRequestBuilderRequestsMetadata, PatentsRequestBuilderUriTemplate, type PatentsRequestBuilder } from './patents/';
import { PhonesRequestBuilderNavigationMetadata, PhonesRequestBuilderRequestsMetadata, PhonesRequestBuilderUriTemplate, type PhonesRequestBuilder } from './phones/';
import { PositionsRequestBuilderNavigationMetadata, PositionsRequestBuilderRequestsMetadata, PositionsRequestBuilderUriTemplate, type PositionsRequestBuilder } from './positions/';
import { ProjectsRequestBuilderNavigationMetadata, ProjectsRequestBuilderRequestsMetadata, ProjectsRequestBuilderUriTemplate, type ProjectsRequestBuilder } from './projects/';
import { PublicationsRequestBuilderNavigationMetadata, PublicationsRequestBuilderRequestsMetadata, PublicationsRequestBuilderUriTemplate, type PublicationsRequestBuilder } from './publications/';
import { SkillsRequestBuilderNavigationMetadata, SkillsRequestBuilderRequestsMetadata, SkillsRequestBuilderUriTemplate, type SkillsRequestBuilder } from './skills/';
import { type WebAccountsRequestBuilder, WebAccountsRequestBuilderNavigationMetadata, WebAccountsRequestBuilderRequestsMetadata, WebAccountsRequestBuilderUriTemplate } from './webAccounts/';
import { type WebsitesRequestBuilder, WebsitesRequestBuilderNavigationMetadata, WebsitesRequestBuilderRequestsMetadata, WebsitesRequestBuilderUriTemplate } from './websites/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the profile property of the microsoft.graph.user entity.
 */
export interface ProfileRequestBuilder extends BaseRequestBuilder<ProfileRequestBuilder> {
    /**
     * Provides operations to manage the account property of the microsoft.graph.profile entity.
     */
    get account(): AccountRequestBuilder;
    /**
     * Provides operations to manage the addresses property of the microsoft.graph.profile entity.
     */
    get addresses(): AddressesRequestBuilder;
    /**
     * Provides operations to manage the anniversaries property of the microsoft.graph.profile entity.
     */
    get anniversaries(): AnniversariesRequestBuilder;
    /**
     * Provides operations to manage the awards property of the microsoft.graph.profile entity.
     */
    get awards(): AwardsRequestBuilder;
    /**
     * Provides operations to manage the certifications property of the microsoft.graph.profile entity.
     */
    get certifications(): CertificationsRequestBuilder;
    /**
     * Provides operations to manage the educationalActivities property of the microsoft.graph.profile entity.
     */
    get educationalActivities(): EducationalActivitiesRequestBuilder;
    /**
     * Provides operations to manage the emails property of the microsoft.graph.profile entity.
     */
    get emails(): EmailsRequestBuilder;
    /**
     * Provides operations to manage the interests property of the microsoft.graph.profile entity.
     */
    get interests(): InterestsRequestBuilder;
    /**
     * Provides operations to manage the languages property of the microsoft.graph.profile entity.
     */
    get languages(): LanguagesRequestBuilder;
    /**
     * Provides operations to manage the names property of the microsoft.graph.profile entity.
     */
    get names(): NamesRequestBuilder;
    /**
     * Provides operations to manage the notes property of the microsoft.graph.profile entity.
     */
    get notes(): NotesRequestBuilder;
    /**
     * Provides operations to manage the patents property of the microsoft.graph.profile entity.
     */
    get patents(): PatentsRequestBuilder;
    /**
     * Provides operations to manage the phones property of the microsoft.graph.profile entity.
     */
    get phones(): PhonesRequestBuilder;
    /**
     * Provides operations to manage the positions property of the microsoft.graph.profile entity.
     */
    get positions(): PositionsRequestBuilder;
    /**
     * Provides operations to manage the projects property of the microsoft.graph.profile entity.
     */
    get projects(): ProjectsRequestBuilder;
    /**
     * Provides operations to manage the publications property of the microsoft.graph.profile entity.
     */
    get publications(): PublicationsRequestBuilder;
    /**
     * Provides operations to manage the skills property of the microsoft.graph.profile entity.
     */
    get skills(): SkillsRequestBuilder;
    /**
     * Provides operations to manage the webAccounts property of the microsoft.graph.profile entity.
     */
    get webAccounts(): WebAccountsRequestBuilder;
    /**
     * Provides operations to manage the websites property of the microsoft.graph.profile entity.
     */
    get websites(): WebsitesRequestBuilder;
    /**
     * Deletes a profile object from a user's account.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @see {@link https://learn.microsoft.com/graph/api/profile-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Retrieve the properties and relationships of a profile object for a given user. The profile resource exposes various rich properties that are descriptive of the user as relationships, for example, anniversaries and education activities. To get one of these navigation properties, use the corresponding GET method on that property. See the methods exposed by profile.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of Profile
     * @see {@link https://learn.microsoft.com/graph/api/profile-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<ProfileRequestBuilderGetQueryParameters> | undefined) : Promise<Profile | undefined>;
    /**
     * Update the navigation property profile in users
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of Profile
     */
     patch(body: Profile, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Profile | undefined>;
    /**
     * Deletes a profile object from a user's account.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieve the properties and relationships of a profile object for a given user. The profile resource exposes various rich properties that are descriptive of the user as relationships, for example, anniversaries and education activities. To get one of these navigation properties, use the corresponding GET method on that property. See the methods exposed by profile.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ProfileRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property profile in users
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: Profile, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve the properties and relationships of a profile object for a given user. The profile resource exposes various rich properties that are descriptive of the user as relationships, for example, anniversaries and education activities. To get one of these navigation properties, use the corresponding GET method on that property. See the methods exposed by profile.
 */
export interface ProfileRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ProfileRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ProfileRequestBuilderNavigationMetadata: Record<Exclude<keyof ProfileRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    account: {
        uriTemplate: AccountRequestBuilderUriTemplate,
        requestsMetadata: AccountRequestBuilderRequestsMetadata,
        navigationMetadata: AccountRequestBuilderNavigationMetadata,
    },
    addresses: {
        uriTemplate: AddressesRequestBuilderUriTemplate,
        requestsMetadata: AddressesRequestBuilderRequestsMetadata,
        navigationMetadata: AddressesRequestBuilderNavigationMetadata,
    },
    anniversaries: {
        uriTemplate: AnniversariesRequestBuilderUriTemplate,
        requestsMetadata: AnniversariesRequestBuilderRequestsMetadata,
        navigationMetadata: AnniversariesRequestBuilderNavigationMetadata,
    },
    awards: {
        uriTemplate: AwardsRequestBuilderUriTemplate,
        requestsMetadata: AwardsRequestBuilderRequestsMetadata,
        navigationMetadata: AwardsRequestBuilderNavigationMetadata,
    },
    certifications: {
        uriTemplate: CertificationsRequestBuilderUriTemplate,
        requestsMetadata: CertificationsRequestBuilderRequestsMetadata,
        navigationMetadata: CertificationsRequestBuilderNavigationMetadata,
    },
    educationalActivities: {
        uriTemplate: EducationalActivitiesRequestBuilderUriTemplate,
        requestsMetadata: EducationalActivitiesRequestBuilderRequestsMetadata,
        navigationMetadata: EducationalActivitiesRequestBuilderNavigationMetadata,
    },
    emails: {
        uriTemplate: EmailsRequestBuilderUriTemplate,
        requestsMetadata: EmailsRequestBuilderRequestsMetadata,
        navigationMetadata: EmailsRequestBuilderNavigationMetadata,
    },
    interests: {
        uriTemplate: InterestsRequestBuilderUriTemplate,
        requestsMetadata: InterestsRequestBuilderRequestsMetadata,
        navigationMetadata: InterestsRequestBuilderNavigationMetadata,
    },
    languages: {
        uriTemplate: LanguagesRequestBuilderUriTemplate,
        requestsMetadata: LanguagesRequestBuilderRequestsMetadata,
        navigationMetadata: LanguagesRequestBuilderNavigationMetadata,
    },
    names: {
        uriTemplate: NamesRequestBuilderUriTemplate,
        requestsMetadata: NamesRequestBuilderRequestsMetadata,
        navigationMetadata: NamesRequestBuilderNavigationMetadata,
    },
    notes: {
        uriTemplate: NotesRequestBuilderUriTemplate,
        requestsMetadata: NotesRequestBuilderRequestsMetadata,
        navigationMetadata: NotesRequestBuilderNavigationMetadata,
    },
    patents: {
        uriTemplate: PatentsRequestBuilderUriTemplate,
        requestsMetadata: PatentsRequestBuilderRequestsMetadata,
        navigationMetadata: PatentsRequestBuilderNavigationMetadata,
    },
    phones: {
        uriTemplate: PhonesRequestBuilderUriTemplate,
        requestsMetadata: PhonesRequestBuilderRequestsMetadata,
        navigationMetadata: PhonesRequestBuilderNavigationMetadata,
    },
    positions: {
        uriTemplate: PositionsRequestBuilderUriTemplate,
        requestsMetadata: PositionsRequestBuilderRequestsMetadata,
        navigationMetadata: PositionsRequestBuilderNavigationMetadata,
    },
    projects: {
        uriTemplate: ProjectsRequestBuilderUriTemplate,
        requestsMetadata: ProjectsRequestBuilderRequestsMetadata,
        navigationMetadata: ProjectsRequestBuilderNavigationMetadata,
    },
    publications: {
        uriTemplate: PublicationsRequestBuilderUriTemplate,
        requestsMetadata: PublicationsRequestBuilderRequestsMetadata,
        navigationMetadata: PublicationsRequestBuilderNavigationMetadata,
    },
    skills: {
        uriTemplate: SkillsRequestBuilderUriTemplate,
        requestsMetadata: SkillsRequestBuilderRequestsMetadata,
        navigationMetadata: SkillsRequestBuilderNavigationMetadata,
    },
    webAccounts: {
        uriTemplate: WebAccountsRequestBuilderUriTemplate,
        requestsMetadata: WebAccountsRequestBuilderRequestsMetadata,
        navigationMetadata: WebAccountsRequestBuilderNavigationMetadata,
    },
    websites: {
        uriTemplate: WebsitesRequestBuilderUriTemplate,
        requestsMetadata: WebsitesRequestBuilderRequestsMetadata,
        navigationMetadata: WebsitesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ProfileRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createProfileFromDiscriminatorValue,
        queryParametersMapper: ProfileRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createProfileFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeProfile,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const ProfileRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/profile{?%24expand,%24select}";
/* tslint:enable */
/* eslint-enable */
