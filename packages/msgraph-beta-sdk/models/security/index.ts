/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createGroupFromDiscriminatorValue, createIdentitySetFromDiscriminatorValue, createPhysicalAddressFromDiscriminatorValue, createPublicErrorFromDiscriminatorValue, createResultInfoFromDiscriminatorValue, createSiteFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, deserializeIntoEntity, deserializeIntoIdentity, serializeBaseCollectionPaginationCountResponse, serializeEntity, serializeGroup, serializeIdentity, serializeIdentitySet, serializePhysicalAddress, serializePublicError, serializeResultInfo, serializeSite, type BaseCollectionPaginationCountResponse, type Entity, type Group, type Identity, type IdentitySet, type PhysicalAddress, type PublicError, type ResultInfo, type Site } from '../index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type Duration, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';
// @ts-ignore
import { type Guid } from 'guid-typescript';

export interface AadRiskDetectionAuditRecord extends AuditData, Parsable {
}
export type ActionAfterRetentionPeriod = (typeof ActionAfterRetentionPeriodObject)[keyof typeof ActionAfterRetentionPeriodObject];
export type ActionSource = (typeof ActionSourceObject)[keyof typeof ActionSourceObject];
export interface AddContentFooterAction extends InformationProtectionAction, Parsable {
    /**
     * The alignment property
     */
    alignment?: ContentAlignment | null;
    /**
     * Color of the font to use for the footer.
     */
    fontColor?: string | null;
    /**
     * Name of the font to use for the footer.
     */
    fontName?: string | null;
    /**
     * Font size to use for the footer.
     */
    fontSize?: number | null;
    /**
     * The margin of the header from the bottom of the document.
     */
    margin?: number | null;
    /**
     * The contents of the footer itself.
     */
    text?: string | null;
    /**
     * The name of the UI element where the footer should be placed.
     */
    uiElementName?: string | null;
}
export interface AddContentHeaderAction extends InformationProtectionAction, Parsable {
    /**
     * The alignment property
     */
    alignment?: ContentAlignment | null;
    /**
     * Color of the font to use for the header.
     */
    fontColor?: string | null;
    /**
     * Name of the font to use for the header.
     */
    fontName?: string | null;
    /**
     * Font size to use for the header.
     */
    fontSize?: number | null;
    /**
     * The margin of the header from the top of the document.
     */
    margin?: number | null;
    /**
     * The contents of the header itself.
     */
    text?: string | null;
    /**
     * The name of the UI element where the header should be placed.
     */
    uiElementName?: string | null;
}
export type AdditionalDataOptions = (typeof AdditionalDataOptionsObject)[keyof typeof AdditionalDataOptionsObject];
export type AdditionalOptions = (typeof AdditionalOptionsObject)[keyof typeof AdditionalOptionsObject];
export interface AddWatermarkAction extends InformationProtectionAction, Parsable {
    /**
     * Color of the font to use for the watermark.
     */
    fontColor?: string | null;
    /**
     * Name of the font to use for the watermark.
     */
    fontName?: string | null;
    /**
     * Font size to use for the watermark.
     */
    fontSize?: number | null;
    /**
     * The layout property
     */
    layout?: WatermarkLayout | null;
    /**
     * The contents of the watermark itself.
     */
    text?: string | null;
    /**
     * The name of the UI element where the watermark should be placed.
     */
    uiElementName?: string | null;
}
export interface AedAuditRecord extends AuditData, Parsable {
}
export interface AiAppInteractionAuditRecord extends AuditData, Parsable {
}
export interface AipFileDeleted extends AuditData, Parsable {
}
export interface AipHeartBeat extends AuditData, Parsable {
}
export interface AipProtectionActionLogRequest extends AuditData, Parsable {
}
export interface AipScannerDiscoverEvent extends AuditData, Parsable {
}
export interface AipSensitivityLabelActionLogRequest extends AuditData, Parsable {
}
export interface AirAdminActionInvestigationData extends AuditData, Parsable {
}
export interface AirInvestigationData extends AuditData, Parsable {
}
export interface AirManualInvestigationData extends AuditData, Parsable {
}
export interface Alert extends Entity, Parsable {
    /**
     * The adversary or activity group that is associated with this alert.
     */
    actorDisplayName?: string | null;
    /**
     * A collection of other alert properties, including user-defined properties. Any custom details defined in the alert, and any dynamic content in the alert details, are stored here.
     */
    additionalDataProperty?: Dictionary | null;
    /**
     * The ID of the policy that generated the alert, and populated when there is a specific policy that generated the alert, whether configured by a customer or a built-in policy.
     */
    alertPolicyId?: string | null;
    /**
     * URL for the Microsoft 365 Defender portal alert page.
     */
    alertWebUrl?: string | null;
    /**
     * Owner of the alert, or null if no owner is assigned.
     */
    assignedTo?: string | null;
    /**
     * The attack kill-chain category that the alert belongs to. Aligned with the MITRE ATT&CK framework.
     */
    category?: string | null;
    /**
     * Specifies whether the alert represents a true threat. Possible values are: unknown, falsePositive, truePositive, informationalExpectedActivity, unknownFutureValue.
     */
    classification?: AlertClassification | null;
    /**
     * Array of comments created by the Security Operations (SecOps) team during the alert management process.
     */
    comments?: AlertComment[] | null;
    /**
     * Time when Microsoft 365 Defender created the alert.
     */
    createdDateTime?: Date | null;
    /**
     * String value describing each alert.
     */
    description?: string | null;
    /**
     * Detection technology or sensor that identified the notable component or activity. Possible values are: unknown, microsoftDefenderForEndpoint, antivirus, smartScreen, customTi, microsoftDefenderForOffice365, automatedInvestigation, microsoftThreatExperts, customDetection, microsoftDefenderForIdentity, cloudAppSecurity, microsoft365Defender, azureAdIdentityProtection, manual, microsoftDataLossPrevention, appGovernancePolicy, appGovernanceDetection, unknownFutureValue, microsoftDefenderForCloud, microsoftDefenderForIoT, microsoftDefenderForServers, microsoftDefenderForStorage, microsoftDefenderForDNS, microsoftDefenderForDatabases, microsoftDefenderForContainers, microsoftDefenderForNetwork, microsoftDefenderForAppService, microsoftDefenderForKeyVault, microsoftDefenderForResourceManager, microsoftDefenderForApiManagement, microsoftSentinel, nrtAlerts, scheduledAlerts, microsoftDefenderThreatIntelligenceAnalytics, builtInMl. You must use the Prefer: include-unknown-enum-members request header to get the following value(s) in this evolvable enum: microsoftDefenderForCloud, microsoftDefenderForIoT, microsoftDefenderForServers, microsoftDefenderForStorage, microsoftDefenderForDNS, microsoftDefenderForDatabases, microsoftDefenderForContainers, microsoftDefenderForNetwork, microsoftDefenderForAppService, microsoftDefenderForKeyVault, microsoftDefenderForResourceManager, microsoftDefenderForApiManagement, microsoftSentinel, nrtAlerts, scheduledAlerts, microsoftDefenderThreatIntelligenceAnalytics, builtInMl.
     */
    detectionSource?: DetectionSource | null;
    /**
     * The ID of the detector that triggered the alert.
     */
    detectorId?: string | null;
    /**
     * Specifies the result of the investigation, whether the alert represents a true attack, and if so, the nature of the attack. Possible values are: unknown, apt, malware, securityPersonnel, securityTesting, unwantedSoftware, other, multiStagedAttack, compromisedAccount, phishing, maliciousUserActivity, notMalicious, notEnoughDataToValidate, confirmedUserActivity, lineOfBusinessApplication, unknownFutureValue.
     */
    determination?: AlertDetermination | null;
    /**
     * Collection of evidence related to the alert.
     */
    evidence?: AlertEvidence[] | null;
    /**
     * The earliest activity associated with the alert.
     */
    firstActivityDateTime?: Date | null;
    /**
     * Unique identifier to represent the incident this alert resource is associated with.
     */
    incidentId?: string | null;
    /**
     * URL for the incident page in the Microsoft 365 Defender portal.
     */
    incidentWebUrl?: string | null;
    /**
     * The oldest activity associated with the alert.
     */
    lastActivityDateTime?: Date | null;
    /**
     * Time when the alert was last updated at Microsoft 365 Defender.
     */
    lastUpdateDateTime?: Date | null;
    /**
     * The attack techniques, as aligned with the MITRE ATT&CK framework.
     */
    mitreTechniques?: string[] | null;
    /**
     * The name of the product which published this alert.
     */
    productName?: string | null;
    /**
     * The ID of the alert as it appears in the security provider product that generated the alert.
     */
    providerAlertId?: string | null;
    /**
     * Recommended response and remediation actions to take in the event this alert was generated.
     */
    recommendedActions?: string | null;
    /**
     * Time when the alert was resolved.
     */
    resolvedDateTime?: Date | null;
    /**
     * The serviceSource property
     */
    serviceSource?: ServiceSource | null;
    /**
     * The severity property
     */
    severity?: AlertSeverity | null;
    /**
     * The status property
     */
    status?: AlertStatus | null;
    /**
     * The system tags associated with the alert.
     */
    systemTags?: string[] | null;
    /**
     * The Microsoft Entra tenant the alert was created in.
     */
    tenantId?: string | null;
    /**
     * The threat associated with this alert.
     */
    threatDisplayName?: string | null;
    /**
     * Threat family associated with this alert.
     */
    threatFamilyName?: string | null;
    /**
     * Brief identifying string value describing the alert.
     */
    title?: string | null;
}
export type AlertClassification = (typeof AlertClassificationObject)[keyof typeof AlertClassificationObject];
export interface AlertCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Alert[] | null;
}
export interface AlertComment extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The comment text.
     */
    comment?: string | null;
    /**
     * The person or app name that submitted the comment.
     */
    createdByDisplayName?: string | null;
    /**
     * The time when the comment was submitted.
     */
    createdDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type AlertDetermination = (typeof AlertDeterminationObject)[keyof typeof AlertDeterminationObject];
export interface AlertEvidence extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The date and time when the evidence was created and added to the alert. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    createdDateTime?: Date | null;
    /**
     * Detailed description of the entity role/s in an alert. Values are free-form.
     */
    detailedRoles?: string[] | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The remediationStatus property
     */
    remediationStatus?: EvidenceRemediationStatus | null;
    /**
     * Details about the remediation status.
     */
    remediationStatusDetails?: string | null;
    /**
     * The role/s that an evidence entity represents in an alert, for example, an IP address that is associated with an attacker has the evidence role Attacker.
     */
    roles?: EvidenceRole[] | null;
    /**
     * Array of custom tags associated with an evidence instance, for example, to denote a group of devices, high-value assets, etc.
     */
    tags?: string[] | null;
    /**
     * The verdict property
     */
    verdict?: EvidenceVerdict | null;
}
export type AlertSeverity = (typeof AlertSeverityObject)[keyof typeof AlertSeverityObject];
export type AlertStatus = (typeof AlertStatusObject)[keyof typeof AlertStatusObject];
export interface AlertTemplate extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Category assigned to the alert triggered by the custom detection rule.
     */
    category?: string | null;
    /**
     * Description of the alert triggered by the custom detection rule.
     */
    description?: string | null;
    /**
     * Which asset or assets were impacted based on the alert triggered by the custom detection rule.
     */
    impactedAssets?: ImpactedAsset[] | null;
    /**
     * MITRE technique assigned to the alert triggered by the custom detection rule.
     */
    mitreTechniques?: string[] | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Recommended actions to mitigate the threat related to the alert triggered by the custom detection rule.
     */
    recommendedActions?: string | null;
    /**
     * The severity property
     */
    severity?: AlertSeverity | null;
    /**
     * Name of the alert triggered by the custom detection rule.
     */
    title?: string | null;
}
export interface AllowFileResponseAction extends Parsable, ResponseAction {
    /**
     * Device groups to which the actions set in the custom detection rule are applied. More information
     */
    deviceGroupNames?: string[] | null;
    /**
     * The identifier property
     */
    identifier?: FileEntityIdentifier[] | null;
}
export interface AmazonResourceEvidence extends AlertEvidence, Parsable {
    /**
     * The unique identifier for the Amazon account.
     */
    amazonAccountId?: string | null;
    /**
     * The Amazon resource identifier (ARN) for the cloud resource.
     */
    amazonResourceId?: string | null;
    /**
     * The name of the resource.
     */
    resourceName?: string | null;
    /**
     * The type of the resource.
     */
    resourceType?: string | null;
}
export interface AnalyzedEmail extends Entity, Parsable {
    /**
     * A collection of values that contain the IDs of any alerts associated with the email.
     */
    alertIds?: string[] | null;
    /**
     * A collection of the attachments in the email.
     */
    attachments?: AnalyzedEmailAttachment[] | null;
    /**
     * The number of attachments in the email.
     */
    attachmentsCount?: number | null;
    /**
     * The authentication details associated with the email.
     */
    authenticationDetails?: AnalyzedEmailAuthenticationDetail | null;
    /**
     * The bulk complaint level of the email. A higher level is more likely to be spam.
     */
    bulkComplaintLevel?: string | null;
    /**
     * Provides context of the email.
     */
    contexts?: string[] | null;
    /**
     * The methods of detection used.
     */
    detectionMethods?: string[] | null;
    /**
     * The direction of the emails. The possible values are: unknown, inbound, outbound, intraOrg, unknownFutureValue.
     */
    directionality?: AntispamDirectionality | null;
    /**
     * The distribution list details to which the email was sent.
     */
    distributionList?: string | null;
    /**
     * The identifier for the group of similar emails clustered based on heuristic analysis of their content.
     */
    emailClusterId?: string | null;
    /**
     * The name of the Exchange transport rules (ETRs) associated with the email.
     */
    exchangeTransportRules?: AnalyzedEmailExchangeTransportRuleInfo[] | null;
    /**
     * A public-facing identifier for the email that is sent. The message ID is in the format specified by RFC2822.
     */
    internetMessageId?: string | null;
    /**
     * The detected language of the email content.
     */
    language?: string | null;
    /**
     * The latest delivery details of the email.
     */
    latestDelivery?: AnalyzedEmailDeliveryDetail | null;
    /**
     * Date-time when the email record was logged.
     */
    loggedDateTime?: Date | null;
    /**
     * An internal identifier for the email generated by Microsoft 365.
     */
    networkMessageId?: string | null;
    /**
     * The original delivery details of the email.
     */
    originalDelivery?: AnalyzedEmailDeliveryDetail | null;
    /**
     * An aggregated list of all overrides with source on email.
     */
    overrideSources?: string[] | null;
    /**
     * The phish confidence level associated with the email
     */
    phishConfidenceLevel?: string | null;
    /**
     * The action policy that took effect.
     */
    policy?: string | null;
    /**
     * The action taken on the email based on the configured policy.
     */
    policyAction?: string | null;
    /**
     * Contains the email address of the recipient.
     */
    recipientEmailAddress?: string | null;
    /**
     * A field that indicates where and how bounced emails are processed.
     */
    returnPath?: string | null;
    /**
     * Sender details of the email.
     */
    senderDetail?: AnalyzedEmailSenderDetail | null;
    /**
     * Size of the email in bytes.
     */
    sizeInBytes?: number | null;
    /**
     * Spam confidence of the email.
     */
    spamConfidenceLevel?: string | null;
    /**
     * Subject of the email.
     */
    subject?: string | null;
    /**
     * Indicates the threat types. The possible values are: unknown, spam, malware, phish, none, unknownFutureValue.
     */
    threatTypes?: ThreatType[] | null;
    /**
     * A collection of the URLs in the email.
     */
    urls?: AnalyzedEmailUrl[] | null;
    /**
     * The number of URLs in the email.
     */
    urlsCount?: number | null;
}
export interface AnalyzedEmailAttachment extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The detonation details of the attachment.
     */
    detonationDetails?: DetonationDetails | null;
    /**
     * The name of the attachment in the email.
     */
    fileName?: string | null;
    /**
     * The type of the attachment in the email.
     */
    fileType?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The SHA256 file hash of the attachment.
     */
    sha256?: string | null;
    /**
     * The threat name associated with the threat type.
     */
    threatName?: string | null;
    /**
     * The threat type associated with the attachment. The possible values are: unknown, spam, malware, phishing, none, unknownFutureValue.
     */
    threatType?: ThreatType | null;
}
export interface AnalyzedEmailAuthenticationDetail extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * A value used by Microsoft 365 to combine email authentication such as SPF, DKIM, and DMARC, to determine whether the message is authentic.
     */
    compositeAuthentication?: string | null;
    /**
     * DomainKeys identified mail (DKIM). Indicates whether it was pass/fail/soft fail.
     */
    dkim?: string | null;
    /**
     * Domain-based Message Authentication. Indicates whether it was pass/fail/soft fail.
     */
    dmarc?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Sender Policy Framework (SPF). Indicates whether it was pass/fail/soft fail.
     */
    senderPolicyFramework?: string | null;
}
export interface AnalyzedEmailCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AnalyzedEmail[] | null;
}
export interface AnalyzedEmailDeliveryDetail extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The delivery action of the email. The possible values are: unknown, deliveredToJunk, delivered, blocked, replaced, unknownFutureValue.
     */
    action?: DeliveryAction | null;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The delivery location of the email. The possible values are: unknown, inboxfolder, junkFolder, deletedFolder, quarantine, onpremexternal, failed, dropped, others, unknownFutureValue.
     */
    location?: DeliveryLocation | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface AnalyzedEmailExchangeTransportRuleInfo extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Name of the Exchange transport rules (ETRs) that are part of the email.
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The ETR rule ID.
     */
    ruleId?: string | null;
}
export interface AnalyzedEmailSenderDetail extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The sender email address in the mail From header, also known as the envelope sender or the P1 sender.
     */
    fromAddress?: string | null;
    /**
     * The IPv4 address of the last detected mail server that relayed the message.
     */
    ipv4?: string | null;
    /**
     * The sender email address in the From header, which is visible to email recipients on their email clients. Also known as P2 sender.
     */
    mailFromAddress?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface AnalyzedEmailUrl extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The method used to detect threats in the URL.
     */
    detectionMethod?: string | null;
    /**
     * Detonation data associated with the URL.
     */
    detonationDetails?: DetonationDetails | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The type of threat associated with the URL. The possible values are: unknown, spam, malware, phishing, none, unknownFutureValue.
     */
    threatType?: ThreatType | null;
    /**
     * The URL that is found in the email. This is full URL string, including query parameters.
     */
    url?: string | null;
}
export interface AnalyzedMessageEvidence extends AlertEvidence, Parsable {
    /**
     * Direction of the email relative to your network. The possible values are: inbound, outbound or intraorg.
     */
    antiSpamDirection?: string | null;
    /**
     * Number of attachments in the email.
     */
    attachmentsCount?: number | null;
    /**
     * Delivery action of the email. The possible values are: delivered, deliveredAsSpam, junked, blocked, or replaced.
     */
    deliveryAction?: string | null;
    /**
     * Location where the email was delivered. The possible values are: inbox, external, junkFolder, quarantine, failed, dropped, deletedFolder or forwarded.
     */
    deliveryLocation?: string | null;
    /**
     * Public-facing identifier for the email that is set by the sending email system.
     */
    internetMessageId?: string | null;
    /**
     * Detected language of the email content.
     */
    language?: string | null;
    /**
     * Unique identifier for the email, generated by Microsoft 365.
     */
    networkMessageId?: string | null;
    /**
     * The P1 sender.
     */
    p1Sender?: EmailSender | null;
    /**
     * The P2 sender.
     */
    p2Sender?: EmailSender | null;
    /**
     * Date and time when the email was received.
     */
    receivedDateTime?: Date | null;
    /**
     * Email address of the recipient, or email address of the recipient after distribution list expansion.
     */
    recipientEmailAddress?: string | null;
    /**
     * IP address of the last detected mail server that relayed the message.
     */
    senderIp?: string | null;
    /**
     * Subject of the email.
     */
    subject?: string | null;
    /**
     * Collection of methods used to detect malware, phishing, or other threats found in the email.
     */
    threatDetectionMethods?: string[] | null;
    /**
     * Collection of detection names for malware or other threats found.
     */
    threats?: string[] | null;
    /**
     * Number of embedded URLs in the email.
     */
    urlCount?: number | null;
    /**
     * Collection of the URLs contained in this email.
     */
    urls?: string[] | null;
    /**
     * Uniform resource name (URN) of the automated investigation where the cluster was identified.
     */
    urn?: string | null;
}
export type AntispamDirectionality = (typeof AntispamDirectionalityObject)[keyof typeof AntispamDirectionalityObject];
export interface ApplyLabelAction extends InformationProtectionAction, Parsable {
    /**
     * The collection of actions that should be implemented by the caller.
     */
    actions?: InformationProtectionAction[] | null;
    /**
     * The actionSource property
     */
    actionSource?: ActionSource | null;
    /**
     * If the label was the result of an automatic classification, supply the list of sensitive info type GUIDs that resulted in the returned label.
     */
    responsibleSensitiveTypeIds?: string[] | null;
    /**
     * The sensitivityLabelId property
     */
    sensitivityLabelId?: string | null;
}
export interface Article extends Entity, Parsable {
    /**
     * The body property
     */
    body?: FormattedContent | null;
    /**
     * The date and time when this article was created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    createdDateTime?: Date | null;
    /**
     * URL of the header image for this article, used for display purposes.
     */
    imageUrl?: string | null;
    /**
     * Indicators related to this article.
     */
    indicators?: ArticleIndicator[] | null;
    /**
     * Indicates whether this article is currently featured by Microsoft.
     */
    isFeatured?: boolean | null;
    /**
     * The most recent date and time when this article was updated. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastUpdatedDateTime?: Date | null;
    /**
     * The summary property
     */
    summary?: FormattedContent | null;
    /**
     * Tags for this article, communicating keywords, or key concepts.
     */
    tags?: string[] | null;
    /**
     * The title of this article.
     */
    title?: string | null;
}
export interface ArticleCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Article[] | null;
}
export interface ArticleIndicator extends Indicator, Parsable {
}
export interface ArticleIndicatorCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ArticleIndicator[] | null;
}
export interface Artifact extends Entity, Parsable {
}
export type AssignmentMethod = (typeof AssignmentMethodObject)[keyof typeof AssignmentMethodObject];
export interface AttackSimAdminAuditRecord extends AuditData, Parsable {
}
export interface AttackSimulationInfo extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The date and time of the attack simulation.
     */
    attackSimDateTime?: Date | null;
    /**
     * The duration (in time) for the attack simulation.
     */
    attackSimDurationTime?: Duration | null;
    /**
     * The activity ID for the attack simulation.
     */
    attackSimId?: Guid | null;
    /**
     * The unique identifier for the user who got the attack simulation email.
     */
    attackSimUserId?: string | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface AuditCoreRoot extends Entity, Parsable {
    /**
     * The queries property
     */
    queries?: AuditLogQuery[] | null;
}
export interface AuditData extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface AuditLogQuery extends Entity, Parsable {
    /**
     * The administrative units tagged to an audit log record.
     */
    administrativeUnitIdFilters?: string[] | null;
    /**
     * The display name of the saved audit log query.
     */
    displayName?: string | null;
    /**
     * The end date of the date range in the query.
     */
    filterEndDateTime?: Date | null;
    /**
     * The start date of the date range in the query.
     */
    filterStartDateTime?: Date | null;
    /**
     * The IP address of the device that was used when the activity was logged.
     */
    ipAddressFilters?: string[] | null;
    /**
     * Free text field to search non-indexed properties of the audit log.
     */
    keywordFilter?: string | null;
    /**
     * For SharePoint and OneDrive for Business activity, the full path name of the file or folder accessed by the user. For Exchange admin audit logging, the name of the object that was modified by the cmdlet.
     */
    objectIdFilters?: string[] | null;
    /**
     * The name of the user or admin activity. For a description of the most common operations/activities, see Search the audit log in the Office 365 Protection Center.
     */
    operationFilters?: string[] | null;
    /**
     * An individual audit log record.
     */
    records?: AuditLogRecord[] | null;
    /**
     * The type of operation indicated by the record. The possible values are: exchangeAdmin, exchangeItem, exchangeItemGroup, sharePoint, syntheticProbe, sharePointFileOperation, oneDrive, azureActiveDirectory, azureActiveDirectoryAccountLogon, dataCenterSecurityCmdlet, complianceDLPSharePoint, sway, complianceDLPExchange, sharePointSharingOperation, azureActiveDirectoryStsLogon, skypeForBusinessPSTNUsage, skypeForBusinessUsersBlocked, securityComplianceCenterEOPCmdlet, exchangeAggregatedOperation, powerBIAudit, crm, yammer, skypeForBusinessCmdlets, discovery, microsoftTeams, threatIntelligence, mailSubmission, microsoftFlow, aeD, microsoftStream, complianceDLPSharePointClassification, threatFinder, project, sharePointListOperation, sharePointCommentOperation, dataGovernance, kaizala, securityComplianceAlerts, threatIntelligenceUrl, securityComplianceInsights, mipLabel, workplaceAnalytics, powerAppsApp, powerAppsPlan, threatIntelligenceAtpContent, labelContentExplorer, teamsHealthcare, exchangeItemAggregated, hygieneEvent, dataInsightsRestApiAudit, informationBarrierPolicyApplication, sharePointListItemOperation, sharePointContentTypeOperation, sharePointFieldOperation, microsoftTeamsAdmin, hrSignal, microsoftTeamsDevice, microsoftTeamsAnalytics, informationWorkerProtection, campaign, dlpEndpoint, airInvestigation, quarantine, microsoftForms, applicationAudit, complianceSupervisionExchange, customerKeyServiceEncryption, officeNative, mipAutoLabelSharePointItem, mipAutoLabelSharePointPolicyLocation, microsoftTeamsShifts, secureScore, mipAutoLabelExchangeItem, cortanaBriefing, search, wdatpAlerts, powerPlatformAdminDlp, powerPlatformAdminEnvironment, mdatpAudit, sensitivityLabelPolicyMatch, sensitivityLabelAction, sensitivityLabeledFileAction, attackSim, airManualInvestigation, securityComplianceRBAC, userTraining, airAdminActionInvestigation, mstic, physicalBadgingSignal, teamsEasyApprovals, aipDiscover, aipSensitivityLabelAction, aipProtectionAction, aipFileDeleted, aipHeartBeat, mcasAlerts, onPremisesFileShareScannerDlp, onPremisesSharePointScannerDlp, exchangeSearch, sharePointSearch, privacyDataMinimization, labelAnalyticsAggregate, myAnalyticsSettings, securityComplianceUserChange, complianceDLPExchangeClassification, complianceDLPEndpoint, mipExactDataMatch, msdeResponseActions, msdeGeneralSettings, msdeIndicatorsSettings, ms365DCustomDetection, msdeRolesSettings, mapgAlerts, mapgPolicy, mapgRemediation, privacyRemediationAction, privacyDigestEmail, mipAutoLabelSimulationProgress, mipAutoLabelSimulationCompletion, mipAutoLabelProgressFeedback, dlpSensitiveInformationType, mipAutoLabelSimulationStatistics, largeContentMetadata, microsoft365Group, cdpMlInferencingResult, filteringMailMetadata, cdpClassificationMailItem, cdpClassificationDocument, officeScriptsRunAction, filteringPostMailDeliveryAction, cdpUnifiedFeedback, tenantAllowBlockList, consumptionResource, healthcareSignal, dlpImportResult, cdpCompliancePolicyExecution, multiStageDisposition, privacyDataMatch, filteringDocMetadata, filteringEmailFeatures, powerBIDlp, filteringUrlInfo, filteringAttachmentInfo, coreReportingSettings, complianceConnector, powerPlatformLockboxResourceAccessRequest, powerPlatformLockboxResourceCommand, cdpPredictiveCodingLabel, cdpCompliancePolicyUserFeedback, webpageActivityEndpoint, omePortal, cmImprovementActionChange, filteringUrlClick, mipLabelAnalyticsAuditRecord, filteringEntityEvent, filteringRuleHits, filteringMailSubmission, labelExplorer, microsoftManagedServicePlatform, powerPlatformServiceActivity, scorePlatformGenericAuditRecord, filteringTimeTravelDocMetadata, alert, alertStatus, alertIncident, incidentStatus, case, caseInvestigation, recordsManagement, privacyRemediation, dataShareOperation, cdpDlpSensitive, ehrConnector, filteringMailGradingResult, publicFolder, privacyTenantAuditHistoryRecord, aipScannerDiscoverEvent, eduDataLakeDownloadOperation, m365ComplianceConnector, microsoftGraphDataConnectOperation, microsoftPurview, filteringEmailContentFeatures, powerPagesSite, powerAppsResource, plannerPlan, plannerCopyPlan, plannerTask, plannerRoster, plannerPlanList, plannerTaskList, plannerTenantSettings, projectForTheWebProject, projectForTheWebTask, projectForTheWebRoadmap, projectForTheWebRoadmapItem, projectForTheWebProjectSettings, projectForTheWebRoadmapSettings, quarantineMetadata, microsoftTodoAudit, timeTravelFilteringDocMetadata, teamsQuarantineMetadata, sharePointAppPermissionOperation, microsoftTeamsSensitivityLabelAction, filteringTeamsMetadata, filteringTeamsUrlInfo, filteringTeamsPostDeliveryAction, mdcAssessments, mdcRegulatoryComplianceStandards, mdcRegulatoryComplianceControls, mdcRegulatoryComplianceAssessments, mdcSecurityConnectors, mdaDataSecuritySignal, vivaGoals, filteringRuntimeInfo, attackSimAdmin, microsoftGraphDataConnectConsent, filteringAtpDetonationInfo, privacyPortal, managedTenants, unifiedSimulationMatchedItem, unifiedSimulationSummary, updateQuarantineMetadata, ms365DSuppressionRule, purviewDataMapOperation, filteringUrlPostClickAction, irmUserDefinedDetectionSignal, teamsUpdates, plannerRosterSensitivityLabel, ms365DIncident, filteringDelistingMetadata, complianceDLPSharePointClassificationExtended, microsoftDefenderForIdentityAudit, supervisoryReviewDayXInsight, defenderExpertsforXDRAdmin, cdpEdgeBlockedMessage, hostedRpa, cdpContentExplorerAggregateRecord, cdpHygieneAttachmentInfo, cdpHygieneSummary, cdpPostMailDeliveryAction, cdpEmailFeatures, cdpHygieneUrlInfo, cdpUrlClick, cdpPackageManagerHygieneEvent, filteringDocScan, timeTravelFilteringDocScan, mapgOnboard, unknownFutureValue.
     */
    recordTypeFilters?: AuditLogRecordType[] | null;
    /**
     * The serviceFilters property
     */
    serviceFilters?: string[] | null;
    /**
     * Describes the current status of the query. The possible values are: notStarted, running, succeeded, failed, cancelled, unknownFutureValue.
     */
    status?: AuditLogQueryStatus | null;
    /**
     * The UPN (user principal name) of the user who performed the action (specified in the operation property) that resulted in the record being logged; for example, myname@mydomain_name.
     */
    userPrincipalNameFilters?: string[] | null;
}
export interface AuditLogQueryCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AuditLogQuery[] | null;
}
export type AuditLogQueryStatus = (typeof AuditLogQueryStatusObject)[keyof typeof AuditLogQueryStatusObject];
export interface AuditLogRecord extends Entity, Parsable {
    /**
     * The administrative units tagged to an audit log record.
     */
    administrativeUnits?: string[] | null;
    /**
     * A JSON object that contains the actual audit log data.
     */
    auditData?: AuditData | null;
    /**
     * The type of operation indicated by the record. The possible values are: exchangeAdmin, exchangeItem, exchangeItemGroup, sharePoint, syntheticProbe, sharePointFileOperation, oneDrive, azureActiveDirectory, azureActiveDirectoryAccountLogon, dataCenterSecurityCmdlet, complianceDLPSharePoint, sway, complianceDLPExchange, sharePointSharingOperation, azureActiveDirectoryStsLogon, skypeForBusinessPSTNUsage, skypeForBusinessUsersBlocked, securityComplianceCenterEOPCmdlet, exchangeAggregatedOperation, powerBIAudit, crm, yammer, skypeForBusinessCmdlets, discovery, microsoftTeams, threatIntelligence, mailSubmission, microsoftFlow, aeD, microsoftStream, complianceDLPSharePointClassification, threatFinder, project, sharePointListOperation, sharePointCommentOperation, dataGovernance, kaizala, securityComplianceAlerts, threatIntelligenceUrl, securityComplianceInsights, mipLabel, workplaceAnalytics, powerAppsApp, powerAppsPlan, threatIntelligenceAtpContent, labelContentExplorer, teamsHealthcare, exchangeItemAggregated, hygieneEvent, dataInsightsRestApiAudit, informationBarrierPolicyApplication, sharePointListItemOperation, sharePointContentTypeOperation, sharePointFieldOperation, microsoftTeamsAdmin, hrSignal, microsoftTeamsDevice, microsoftTeamsAnalytics, informationWorkerProtection, campaign, dlpEndpoint, airInvestigation, quarantine, microsoftForms, applicationAudit, complianceSupervisionExchange, customerKeyServiceEncryption, officeNative, mipAutoLabelSharePointItem, mipAutoLabelSharePointPolicyLocation, microsoftTeamsShifts, secureScore, mipAutoLabelExchangeItem, cortanaBriefing, search, wdatpAlerts, powerPlatformAdminDlp, powerPlatformAdminEnvironment, mdatpAudit, sensitivityLabelPolicyMatch, sensitivityLabelAction, sensitivityLabeledFileAction, attackSim, airManualInvestigation, securityComplianceRBAC, userTraining, airAdminActionInvestigation, mstic, physicalBadgingSignal, teamsEasyApprovals, aipDiscover, aipSensitivityLabelAction, aipProtectionAction, aipFileDeleted, aipHeartBeat, mcasAlerts, onPremisesFileShareScannerDlp, onPremisesSharePointScannerDlp, exchangeSearch, sharePointSearch, privacyDataMinimization, labelAnalyticsAggregate, myAnalyticsSettings, securityComplianceUserChange, complianceDLPExchangeClassification, complianceDLPEndpoint, mipExactDataMatch, msdeResponseActions, msdeGeneralSettings, msdeIndicatorsSettings, ms365DCustomDetection, msdeRolesSettings, mapgAlerts, mapgPolicy, mapgRemediation, privacyRemediationAction, privacyDigestEmail, mipAutoLabelSimulationProgress, mipAutoLabelSimulationCompletion, mipAutoLabelProgressFeedback, dlpSensitiveInformationType, mipAutoLabelSimulationStatistics, largeContentMetadata, microsoft365Group, cdpMlInferencingResult, filteringMailMetadata, cdpClassificationMailItem, cdpClassificationDocument, officeScriptsRunAction, filteringPostMailDeliveryAction, cdpUnifiedFeedback, tenantAllowBlockList, consumptionResource, healthcareSignal, dlpImportResult, cdpCompliancePolicyExecution, multiStageDisposition, privacyDataMatch, filteringDocMetadata, filteringEmailFeatures, powerBIDlp, filteringUrlInfo, filteringAttachmentInfo, coreReportingSettings, complianceConnector, powerPlatformLockboxResourceAccessRequest, powerPlatformLockboxResourceCommand, cdpPredictiveCodingLabel, cdpCompliancePolicyUserFeedback, webpageActivityEndpoint, omePortal, cmImprovementActionChange, filteringUrlClick, mipLabelAnalyticsAuditRecord, filteringEntityEvent, filteringRuleHits, filteringMailSubmission, labelExplorer, microsoftManagedServicePlatform, powerPlatformServiceActivity, scorePlatformGenericAuditRecord, filteringTimeTravelDocMetadata, alert, alertStatus, alertIncident, incidentStatus, case, caseInvestigation, recordsManagement, privacyRemediation, dataShareOperation, cdpDlpSensitive, ehrConnector, filteringMailGradingResult, publicFolder, privacyTenantAuditHistoryRecord, aipScannerDiscoverEvent, eduDataLakeDownloadOperation, m365ComplianceConnector, microsoftGraphDataConnectOperation, microsoftPurview, filteringEmailContentFeatures, powerPagesSite, powerAppsResource, plannerPlan, plannerCopyPlan, plannerTask, plannerRoster, plannerPlanList, plannerTaskList, plannerTenantSettings, projectForTheWebProject, projectForTheWebTask, projectForTheWebRoadmap, projectForTheWebRoadmapItem, projectForTheWebProjectSettings, projectForTheWebRoadmapSettings, quarantineMetadata, microsoftTodoAudit, timeTravelFilteringDocMetadata, teamsQuarantineMetadata, sharePointAppPermissionOperation, microsoftTeamsSensitivityLabelAction, filteringTeamsMetadata, filteringTeamsUrlInfo, filteringTeamsPostDeliveryAction, mdcAssessments, mdcRegulatoryComplianceStandards, mdcRegulatoryComplianceControls, mdcRegulatoryComplianceAssessments, mdcSecurityConnectors, mdaDataSecuritySignal, vivaGoals, filteringRuntimeInfo, attackSimAdmin, microsoftGraphDataConnectConsent, filteringAtpDetonationInfo, privacyPortal, managedTenants, unifiedSimulationMatchedItem, unifiedSimulationSummary, updateQuarantineMetadata, ms365DSuppressionRule, purviewDataMapOperation, filteringUrlPostClickAction, irmUserDefinedDetectionSignal, teamsUpdates, plannerRosterSensitivityLabel, ms365DIncident, filteringDelistingMetadata, complianceDLPSharePointClassificationExtended, microsoftDefenderForIdentityAudit, supervisoryReviewDayXInsight, defenderExpertsforXDRAdmin, cdpEdgeBlockedMessage, hostedRpa, cdpContentExplorerAggregateRecord, cdpHygieneAttachmentInfo, cdpHygieneSummary, cdpPostMailDeliveryAction, cdpEmailFeatures, cdpHygieneUrlInfo, cdpUrlClick, cdpPackageManagerHygieneEvent, filteringDocScan, timeTravelFilteringDocScan, mapgOnboard, unknownFutureValue.
     */
    auditLogRecordType?: AuditLogRecordType | null;
    /**
     * The IP address of the device used when the activity was logged. The IP address is displayed in either an IPv4 or IPv6 address format.
     */
    clientIp?: string | null;
    /**
     * The date and time in UTC when the user performed the activity.
     */
    createdDateTime?: Date | null;
    /**
     * For Exchange admin audit logging, the name of the object modified by the cmdlet. For SharePoint activity, the full URL path name of the file or folder accessed by a user. For Microsoft Entra activity, the name of the user account that was modified.
     */
    objectId?: string | null;
    /**
     * The name of the user or admin activity.
     */
    operation?: string | null;
    /**
     * The GUID for your organization.
     */
    organizationId?: string | null;
    /**
     * The Microsoft 365 service where the activity occurred.
     */
    service?: string | null;
    /**
     * The user who performed the action (specified in the Operation property) that resulted in the record being logged. Audit records for activity performed by system accounts (such as SHAREPOINT/system or NT AUTHORITY/SYSTEM) are also included in the audit log. Another common value for the UserId property is app@sharepoint. It indicates that the 'user' who performed the activity was an application with the necessary permissions in SharePoint to perform organization-wide actions (such as searching a SharePoint site or OneDrive account) on behalf of a user, admin, or service.
     */
    userId?: string | null;
    /**
     * UPN of the user who performed the action.
     */
    userPrincipalName?: string | null;
    /**
     * The type of user that performed the operation. The possible values are: regular, reserved, admin, dcAdmin, system, application, servicePrincipal, customPolicy, systemPolicy, partnerTechnician, guest, unknownFutureValue.
     */
    userType?: AuditLogUserType | null;
}
export interface AuditLogRecordCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AuditLogRecord[] | null;
}
export type AuditLogRecordType = (typeof AuditLogRecordTypeObject)[keyof typeof AuditLogRecordTypeObject];
export type AuditLogUserType = (typeof AuditLogUserTypeObject)[keyof typeof AuditLogUserTypeObject];
export interface AuditSearchAuditRecord extends AuditData, Parsable {
}
export interface AuthorityTemplate extends FilePlanDescriptorTemplate, Parsable {
}
export interface AuthorityTemplateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AuthorityTemplate[] | null;
}
export interface AutonomousSystem extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name of the autonomous system.
     */
    name?: string | null;
    /**
     * The autonomous system number, assigned by IANA.
     */
    number?: number | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The name of the autonomous system organization.
     */
    organization?: string | null;
    /**
     * A displayable value for these autonomous system details.
     */
    value?: string | null;
}
export interface AzureActiveDirectoryAccountLogonAuditRecord extends AuditData, Parsable {
}
export interface AzureActiveDirectoryAuditRecord extends AuditData, Parsable {
}
export interface AzureActiveDirectoryBaseAuditRecord extends AuditData, Parsable {
}
export interface AzureActiveDirectoryStsLogonAuditRecord extends AuditData, Parsable {
}
export interface AzureResourceEvidence extends AlertEvidence, Parsable {
    /**
     * The unique identifier for the Azure resource.
     */
    resourceId?: string | null;
    /**
     * The name of the resource.
     */
    resourceName?: string | null;
    /**
     * The type of the resource.
     */
    resourceType?: string | null;
}
export type BehaviorDuringRetentionPeriod = (typeof BehaviorDuringRetentionPeriodObject)[keyof typeof BehaviorDuringRetentionPeriodObject];
export interface BlobContainerEvidence extends AlertEvidence, Parsable {
    /**
     * The name of the blob container.
     */
    name?: string | null;
    /**
     * The storage which the blob container belongs to.
     */
    storageResource?: AzureResourceEvidence | null;
    /**
     * The full URL representation of the blob container.
     */
    url?: string | null;
}
export interface BlobEvidence extends AlertEvidence, Parsable {
    /**
     * The container which the blob belongs to.
     */
    blobContainer?: BlobContainerEvidence | null;
    /**
     * The Etag associated with this blob.
     */
    etag?: string | null;
    /**
     * The file hashes associated with this blob.
     */
    fileHashes?: FileHash[] | null;
    /**
     * The name of the blob.
     */
    name?: string | null;
    /**
     * The full URL representation of the blob.
     */
    url?: string | null;
}
export interface BlockFileResponseAction extends Parsable, ResponseAction {
    /**
     * Device groups to which the actions set in the custom detection rule are applied. More information
     */
    deviceGroupNames?: string[] | null;
    /**
     * The identifier property
     */
    identifier?: FileEntityIdentifier[] | null;
}
export interface CampaignAuditRecord extends AuditData, Parsable {
}
export type CaseAction = (typeof CaseActionObject)[keyof typeof CaseActionObject];
export interface CaseAuditRecord extends AuditData, Parsable {
}
export interface CaseEscaped extends Entity, Parsable {
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The lastModifiedBy property
     */
    lastModifiedBy?: IdentitySet | null;
    /**
     * The lastModifiedDateTime property
     */
    lastModifiedDateTime?: Date | null;
    /**
     * The status property
     */
    status?: CaseStatus | null;
}
export interface CaseInvestigation extends AuditData, Parsable {
}
export interface CaseOperation extends Entity, Parsable {
    /**
     * The type of action the operation represents. Possible values are: contentExport, applyTags, convertToPdf, index, estimateStatistics, addToReviewSet, holdUpdate, unknownFutureValue, purgeData, exportReport, exportResult. You must use the Prefer: include-unknown-enum-members request header to get the following values from this evolvable enum: purgeData, exportReport, exportResult.
     */
    action?: CaseAction | null;
    /**
     * The date and time the operation was completed.
     */
    completedDateTime?: Date | null;
    /**
     * The user that created the operation.
     */
    createdBy?: IdentitySet | null;
    /**
     * The date and time the operation was created.
     */
    createdDateTime?: Date | null;
    /**
     * The progress of the operation.
     */
    percentProgress?: number | null;
    /**
     * Contains success and failure-specific result information.
     */
    resultInfo?: ResultInfo | null;
    /**
     * The status of the case operation. Possible values are: notStarted, submissionFailed, running, succeeded, partiallySucceeded, failed.
     */
    status?: CaseOperationStatus | null;
}
export interface CaseOperationCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: CaseOperation[] | null;
}
export type CaseOperationStatus = (typeof CaseOperationStatusObject)[keyof typeof CaseOperationStatusObject];
export interface CasesRoot extends Entity, Parsable {
    /**
     * The ediscoveryCases property
     */
    ediscoveryCases?: EdiscoveryCase[] | null;
}
export type CaseStatus = (typeof CaseStatusObject)[keyof typeof CaseStatusObject];
export interface CategoryTemplate extends FilePlanDescriptorTemplate, Parsable {
    /**
     * Represents all subcategories under a particular category.
     */
    subcategories?: SubcategoryTemplate[] | null;
}
export interface CategoryTemplateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: CategoryTemplate[] | null;
}
export interface CdpColdCrawlStatusRecord extends AuditData, Parsable {
}
export interface CdpContentExplorerAggregateRecord extends AuditData, Parsable {
}
export interface CdpDlpSensitiveAuditRecord extends AuditData, Parsable {
}
export interface CdpDlpSensitiveEndpointAuditRecord extends AuditData, Parsable {
}
export interface CdpLogRecord extends AuditData, Parsable {
}
export interface CdpOcrBillingRecord extends AuditData, Parsable {
}
export interface CdpResourceScopeChangeEventRecord extends AuditData, Parsable {
}
export interface CernerSMSLinkRecord extends AuditData, Parsable {
}
export interface CernerSMSSettingsUpdateRecord extends AuditData, Parsable {
}
export interface CernerSMSUnlinkRecord extends AuditData, Parsable {
}
export type ChildSelectability = (typeof ChildSelectabilityObject)[keyof typeof ChildSelectabilityObject];
export interface CitationTemplate extends FilePlanDescriptorTemplate, Parsable {
    /**
     * Represents the jurisdiction or agency that published the citation.
     */
    citationJurisdiction?: string | null;
    /**
     * Represents the URL to the published citation.
     */
    citationUrl?: string | null;
}
export interface CitationTemplateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: CitationTemplate[] | null;
}
export interface ClassificationResult extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The confidence level, 0 to 100, of the result.
     */
    confidenceLevel?: number | null;
    /**
     * The number of instances of the specific information type in the input.
     */
    count?: number | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The GUID of the discovered sensitive information type.
     */
    sensitiveTypeId?: string | null;
}
export interface CloudApplicationEvidence extends AlertEvidence, Parsable {
    /**
     * Unique identifier of the application.
     */
    appId?: number | null;
    /**
     * Name of the application.
     */
    displayName?: string | null;
    /**
     * Identifier of the instance of the Software as a Service (SaaS) application.
     */
    instanceId?: number | null;
    /**
     * Name of the instance of the SaaS application.
     */
    instanceName?: string | null;
    /**
     * The identifier of the SaaS application.
     */
    saasAppId?: number | null;
    /**
     * The stream property
     */
    stream?: Stream | null;
}
export interface CloudLogonRequestEvidence extends AlertEvidence, Parsable {
    /**
     * The unique identifier for the sign-in request.
     */
    requestId?: string | null;
}
export interface CloudLogonSessionEvidence extends AlertEvidence, Parsable {
    /**
     * The account associated with the sign-in session.
     */
    account?: UserEvidence | null;
    /**
     * The browser that is used for the sign-in, if known.
     */
    browser?: string | null;
    /**
     * The friendly name of the device, if known.
     */
    deviceName?: string | null;
    /**
     * The operating system that the device is running, if known.
     */
    operatingSystem?: string | null;
    /**
     * The previous sign-in time for this account, if known.
     */
    previousLogonDateTime?: Date | null;
    /**
     * The authentication protocol that is used in this session, if known.
     */
    protocol?: string | null;
    /**
     * The session ID for the account reported in the alert.
     */
    sessionId?: string | null;
    /**
     * The session start time, if known.
     */
    startUtcDateTime?: Date | null;
    /**
     * The user agent that is used for the sign-in, if known.
     */
    userAgent?: string | null;
}
export interface CollaborationRoot extends Entity, Parsable {
    /**
     * Contains metadata for analyzed emails.
     */
    analyzedEmails?: AnalyzedEmail[] | null;
}
export interface CollectInvestigationPackageResponseAction extends Parsable, ResponseAction {
    /**
     * The identifier property
     */
    identifier?: DeviceIdEntityIdentifier[] | null;
}
export interface ComplianceConnectorAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDLMExchangeAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDLMSharePointAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpApplicationsAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpApplicationsClassificationAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpBaseAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpClassificationBaseAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpClassificationBaseCdpRecord extends AuditData, Parsable {
}
export interface ComplianceDlpEndpointAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpEndpointDiscoveryAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpExchangeAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpExchangeClassificationAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpExchangeClassificationCdpRecord extends AuditData, Parsable {
}
export interface ComplianceDlpExchangeDiscoveryAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpSharePointAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpSharePointClassificationAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpSharePointClassificationExtendedAuditRecord extends AuditData, Parsable {
}
export interface ComplianceManagerActionRecord extends AuditData, Parsable {
}
export interface ComplianceSupervisionBaseAuditRecord extends AuditData, Parsable {
}
export interface ComplianceSupervisionExchangeAuditRecord extends AuditData, Parsable {
}
export interface ConsumptionResourceAuditRecord extends AuditData, Parsable {
}
export interface ContainerEvidence extends AlertEvidence, Parsable {
    /**
     * The list of arguments.
     */
    args?: string[] | null;
    /**
     * The list of commands.
     */
    command?: string[] | null;
    /**
     * The container ID.
     */
    containerId?: string | null;
    /**
     * The image used to run the container.
     */
    image?: ContainerImageEvidence | null;
    /**
     * The privileged status.
     */
    isPrivileged?: boolean | null;
    /**
     * The container name.
     */
    name?: string | null;
    /**
     * The pod that this container belongs to.
     */
    pod?: KubernetesPodEvidence | null;
}
export interface ContainerImageEvidence extends AlertEvidence, Parsable {
    /**
     * The digest image entity, in case this is a tag image.
     */
    digestImage?: ContainerImageEvidence | null;
    /**
     * The unique identifier for the container image entity.
     */
    imageId?: string | null;
    /**
     * The container registry for this image.
     */
    registry?: ContainerRegistryEvidence | null;
}
export type ContainerPortProtocol = (typeof ContainerPortProtocolObject)[keyof typeof ContainerPortProtocolObject];
export interface ContainerRegistryEvidence extends AlertEvidence, Parsable {
    /**
     * The registry URI.
     */
    registry?: string | null;
}
export type ContentAlignment = (typeof ContentAlignmentObject)[keyof typeof ContentAlignmentObject];
export type ContentFormat = (typeof ContentFormatObject)[keyof typeof ContentFormatObject];
export interface ContentInfo extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The format of the content to be labeled. Possible values are: file, email.
     */
    contentFormat?: string | null;
    /**
     * Identifier used for Azure Information Protection Analytics.
     */
    identifier?: string | null;
    /**
     * Existing Microsoft Purview Information Protection metadata is passed as key-value pairs, where the key is the MSIPLabelGUID_PropName.
     */
    metadata?: KeyValuePair[] | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The state property
     */
    state?: ContentState | null;
}
export interface ContentLabel extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The assignmentMethod property
     */
    assignmentMethod?: AssignmentMethod | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The sensitivityLabelId property
     */
    sensitivityLabelId?: string | null;
}
export type ContentState = (typeof ContentStateObject)[keyof typeof ContentStateObject];
export interface CopilotInteractionAuditRecord extends AuditData, Parsable {
}
export interface CoreReportingSettingsAuditRecord extends AuditData, Parsable {
}
export interface CortanaBriefingAuditRecord extends AuditData, Parsable {
}
export interface CpsCommonPolicyAuditRecord extends AuditData, Parsable {
}
export interface CpsPolicyConfigAuditRecord extends AuditData, Parsable {
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AadRiskDetectionAuditRecord}
 */
// @ts-ignore
export function createAadRiskDetectionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAadRiskDetectionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AddContentFooterAction}
 */
// @ts-ignore
export function createAddContentFooterActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAddContentFooterAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AddContentHeaderAction}
 */
// @ts-ignore
export function createAddContentHeaderActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAddContentHeaderAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AddWatermarkAction}
 */
// @ts-ignore
export function createAddWatermarkActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAddWatermarkAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AedAuditRecord}
 */
// @ts-ignore
export function createAedAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAedAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AiAppInteractionAuditRecord}
 */
// @ts-ignore
export function createAiAppInteractionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAiAppInteractionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AipFileDeleted}
 */
// @ts-ignore
export function createAipFileDeletedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAipFileDeleted;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AipHeartBeat}
 */
// @ts-ignore
export function createAipHeartBeatFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAipHeartBeat;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AipProtectionActionLogRequest}
 */
// @ts-ignore
export function createAipProtectionActionLogRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAipProtectionActionLogRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AipScannerDiscoverEvent}
 */
// @ts-ignore
export function createAipScannerDiscoverEventFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAipScannerDiscoverEvent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AipSensitivityLabelActionLogRequest}
 */
// @ts-ignore
export function createAipSensitivityLabelActionLogRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAipSensitivityLabelActionLogRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AirAdminActionInvestigationData}
 */
// @ts-ignore
export function createAirAdminActionInvestigationDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAirAdminActionInvestigationData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AirInvestigationData}
 */
// @ts-ignore
export function createAirInvestigationDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAirInvestigationData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AirManualInvestigationData}
 */
// @ts-ignore
export function createAirManualInvestigationDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAirManualInvestigationData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AlertCollectionResponse}
 */
// @ts-ignore
export function createAlertCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAlertCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AlertComment}
 */
// @ts-ignore
export function createAlertCommentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAlertComment;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AlertEvidence}
 */
// @ts-ignore
export function createAlertEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.amazonResourceEvidence":
                    return deserializeIntoAmazonResourceEvidence;
                case "#microsoft.graph.security.analyzedMessageEvidence":
                    return deserializeIntoAnalyzedMessageEvidence;
                case "#microsoft.graph.security.azureResourceEvidence":
                    return deserializeIntoAzureResourceEvidence;
                case "#microsoft.graph.security.blobContainerEvidence":
                    return deserializeIntoBlobContainerEvidence;
                case "#microsoft.graph.security.blobEvidence":
                    return deserializeIntoBlobEvidence;
                case "#microsoft.graph.security.cloudApplicationEvidence":
                    return deserializeIntoCloudApplicationEvidence;
                case "#microsoft.graph.security.cloudLogonRequestEvidence":
                    return deserializeIntoCloudLogonRequestEvidence;
                case "#microsoft.graph.security.cloudLogonSessionEvidence":
                    return deserializeIntoCloudLogonSessionEvidence;
                case "#microsoft.graph.security.containerEvidence":
                    return deserializeIntoContainerEvidence;
                case "#microsoft.graph.security.containerImageEvidence":
                    return deserializeIntoContainerImageEvidence;
                case "#microsoft.graph.security.containerRegistryEvidence":
                    return deserializeIntoContainerRegistryEvidence;
                case "#microsoft.graph.security.deviceEvidence":
                    return deserializeIntoDeviceEvidence;
                case "#microsoft.graph.security.dnsEvidence":
                    return deserializeIntoDnsEvidence;
                case "#microsoft.graph.security.fileEvidence":
                    return deserializeIntoFileEvidence;
                case "#microsoft.graph.security.fileHashEvidence":
                    return deserializeIntoFileHashEvidence;
                case "#microsoft.graph.security.gitHubOrganizationEvidence":
                    return deserializeIntoGitHubOrganizationEvidence;
                case "#microsoft.graph.security.gitHubRepoEvidence":
                    return deserializeIntoGitHubRepoEvidence;
                case "#microsoft.graph.security.gitHubUserEvidence":
                    return deserializeIntoGitHubUserEvidence;
                case "#microsoft.graph.security.googleCloudResourceEvidence":
                    return deserializeIntoGoogleCloudResourceEvidence;
                case "#microsoft.graph.security.hostLogonSessionEvidence":
                    return deserializeIntoHostLogonSessionEvidence;
                case "#microsoft.graph.security.ioTDeviceEvidence":
                    return deserializeIntoIoTDeviceEvidence;
                case "#microsoft.graph.security.ipEvidence":
                    return deserializeIntoIpEvidence;
                case "#microsoft.graph.security.kubernetesClusterEvidence":
                    return deserializeIntoKubernetesClusterEvidence;
                case "#microsoft.graph.security.kubernetesControllerEvidence":
                    return deserializeIntoKubernetesControllerEvidence;
                case "#microsoft.graph.security.kubernetesNamespaceEvidence":
                    return deserializeIntoKubernetesNamespaceEvidence;
                case "#microsoft.graph.security.kubernetesPodEvidence":
                    return deserializeIntoKubernetesPodEvidence;
                case "#microsoft.graph.security.kubernetesSecretEvidence":
                    return deserializeIntoKubernetesSecretEvidence;
                case "#microsoft.graph.security.kubernetesServiceAccountEvidence":
                    return deserializeIntoKubernetesServiceAccountEvidence;
                case "#microsoft.graph.security.kubernetesServiceEvidence":
                    return deserializeIntoKubernetesServiceEvidence;
                case "#microsoft.graph.security.mailboxConfigurationEvidence":
                    return deserializeIntoMailboxConfigurationEvidence;
                case "#microsoft.graph.security.mailboxEvidence":
                    return deserializeIntoMailboxEvidence;
                case "#microsoft.graph.security.mailClusterEvidence":
                    return deserializeIntoMailClusterEvidence;
                case "#microsoft.graph.security.malwareEvidence":
                    return deserializeIntoMalwareEvidence;
                case "#microsoft.graph.security.networkConnectionEvidence":
                    return deserializeIntoNetworkConnectionEvidence;
                case "#microsoft.graph.security.nicEvidence":
                    return deserializeIntoNicEvidence;
                case "#microsoft.graph.security.oauthApplicationEvidence":
                    return deserializeIntoOauthApplicationEvidence;
                case "#microsoft.graph.security.processEvidence":
                    return deserializeIntoProcessEvidence;
                case "#microsoft.graph.security.registryKeyEvidence":
                    return deserializeIntoRegistryKeyEvidence;
                case "#microsoft.graph.security.registryValueEvidence":
                    return deserializeIntoRegistryValueEvidence;
                case "#microsoft.graph.security.sasTokenEvidence":
                    return deserializeIntoSasTokenEvidence;
                case "#microsoft.graph.security.securityGroupEvidence":
                    return deserializeIntoSecurityGroupEvidence;
                case "#microsoft.graph.security.servicePrincipalEvidence":
                    return deserializeIntoServicePrincipalEvidence;
                case "#microsoft.graph.security.submissionMailEvidence":
                    return deserializeIntoSubmissionMailEvidence;
                case "#microsoft.graph.security.urlEvidence":
                    return deserializeIntoUrlEvidence;
                case "#microsoft.graph.security.userEvidence":
                    return deserializeIntoUserEvidence;
            }
        }
    }
    return deserializeIntoAlertEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Alert}
 */
// @ts-ignore
export function createAlertFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAlert;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AlertTemplate}
 */
// @ts-ignore
export function createAlertTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAlertTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AllowFileResponseAction}
 */
// @ts-ignore
export function createAllowFileResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAllowFileResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AmazonResourceEvidence}
 */
// @ts-ignore
export function createAmazonResourceEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAmazonResourceEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AnalyzedEmailAttachment}
 */
// @ts-ignore
export function createAnalyzedEmailAttachmentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAnalyzedEmailAttachment;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AnalyzedEmailAuthenticationDetail}
 */
// @ts-ignore
export function createAnalyzedEmailAuthenticationDetailFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAnalyzedEmailAuthenticationDetail;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AnalyzedEmailCollectionResponse}
 */
// @ts-ignore
export function createAnalyzedEmailCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAnalyzedEmailCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AnalyzedEmailDeliveryDetail}
 */
// @ts-ignore
export function createAnalyzedEmailDeliveryDetailFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAnalyzedEmailDeliveryDetail;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AnalyzedEmailExchangeTransportRuleInfo}
 */
// @ts-ignore
export function createAnalyzedEmailExchangeTransportRuleInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAnalyzedEmailExchangeTransportRuleInfo;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AnalyzedEmail}
 */
// @ts-ignore
export function createAnalyzedEmailFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAnalyzedEmail;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AnalyzedEmailSenderDetail}
 */
// @ts-ignore
export function createAnalyzedEmailSenderDetailFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAnalyzedEmailSenderDetail;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AnalyzedEmailUrl}
 */
// @ts-ignore
export function createAnalyzedEmailUrlFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAnalyzedEmailUrl;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AnalyzedMessageEvidence}
 */
// @ts-ignore
export function createAnalyzedMessageEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAnalyzedMessageEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ApplyLabelAction}
 */
// @ts-ignore
export function createApplyLabelActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoApplyLabelAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ArticleCollectionResponse}
 */
// @ts-ignore
export function createArticleCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoArticleCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Article}
 */
// @ts-ignore
export function createArticleFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoArticle;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ArticleIndicatorCollectionResponse}
 */
// @ts-ignore
export function createArticleIndicatorCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoArticleIndicatorCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ArticleIndicator}
 */
// @ts-ignore
export function createArticleIndicatorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoArticleIndicator;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Artifact}
 */
// @ts-ignore
export function createArtifactFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.host":
                    return deserializeIntoHost;
                case "#microsoft.graph.security.hostComponent":
                    return deserializeIntoHostComponent;
                case "#microsoft.graph.security.hostCookie":
                    return deserializeIntoHostCookie;
                case "#microsoft.graph.security.hostname":
                    return deserializeIntoHostname;
                case "#microsoft.graph.security.hostSslCertificate":
                    return deserializeIntoHostSslCertificate;
                case "#microsoft.graph.security.hostTracker":
                    return deserializeIntoHostTracker;
                case "#microsoft.graph.security.ipAddress":
                    return deserializeIntoIpAddress;
                case "#microsoft.graph.security.passiveDnsRecord":
                    return deserializeIntoPassiveDnsRecord;
                case "#microsoft.graph.security.sslCertificate":
                    return deserializeIntoSslCertificate;
                case "#microsoft.graph.security.unclassifiedArtifact":
                    return deserializeIntoUnclassifiedArtifact;
            }
        }
    }
    return deserializeIntoArtifact;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AttackSimAdminAuditRecord}
 */
// @ts-ignore
export function createAttackSimAdminAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAttackSimAdminAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AttackSimulationInfo}
 */
// @ts-ignore
export function createAttackSimulationInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAttackSimulationInfo;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditCoreRoot}
 */
// @ts-ignore
export function createAuditCoreRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditCoreRoot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditData}
 */
// @ts-ignore
export function createAuditDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.aadRiskDetectionAuditRecord":
                    return deserializeIntoAadRiskDetectionAuditRecord;
                case "#microsoft.graph.security.aedAuditRecord":
                    return deserializeIntoAedAuditRecord;
                case "#microsoft.graph.security.aiAppInteractionAuditRecord":
                    return deserializeIntoAiAppInteractionAuditRecord;
                case "#microsoft.graph.security.aipFileDeleted":
                    return deserializeIntoAipFileDeleted;
                case "#microsoft.graph.security.aipHeartBeat":
                    return deserializeIntoAipHeartBeat;
                case "#microsoft.graph.security.aipProtectionActionLogRequest":
                    return deserializeIntoAipProtectionActionLogRequest;
                case "#microsoft.graph.security.aipScannerDiscoverEvent":
                    return deserializeIntoAipScannerDiscoverEvent;
                case "#microsoft.graph.security.aipSensitivityLabelActionLogRequest":
                    return deserializeIntoAipSensitivityLabelActionLogRequest;
                case "#microsoft.graph.security.airAdminActionInvestigationData":
                    return deserializeIntoAirAdminActionInvestigationData;
                case "#microsoft.graph.security.airInvestigationData":
                    return deserializeIntoAirInvestigationData;
                case "#microsoft.graph.security.airManualInvestigationData":
                    return deserializeIntoAirManualInvestigationData;
                case "#microsoft.graph.security.attackSimAdminAuditRecord":
                    return deserializeIntoAttackSimAdminAuditRecord;
                case "#microsoft.graph.security.auditSearchAuditRecord":
                    return deserializeIntoAuditSearchAuditRecord;
                case "#microsoft.graph.security.azureActiveDirectoryAccountLogonAuditRecord":
                    return deserializeIntoAzureActiveDirectoryAccountLogonAuditRecord;
                case "#microsoft.graph.security.azureActiveDirectoryAuditRecord":
                    return deserializeIntoAzureActiveDirectoryAuditRecord;
                case "#microsoft.graph.security.azureActiveDirectoryBaseAuditRecord":
                    return deserializeIntoAzureActiveDirectoryBaseAuditRecord;
                case "#microsoft.graph.security.azureActiveDirectoryStsLogonAuditRecord":
                    return deserializeIntoAzureActiveDirectoryStsLogonAuditRecord;
                case "#microsoft.graph.security.campaignAuditRecord":
                    return deserializeIntoCampaignAuditRecord;
                case "#microsoft.graph.security.caseAuditRecord":
                    return deserializeIntoCaseAuditRecord;
                case "#microsoft.graph.security.caseInvestigation":
                    return deserializeIntoCaseInvestigation;
                case "#microsoft.graph.security.cdpColdCrawlStatusRecord":
                    return deserializeIntoCdpColdCrawlStatusRecord;
                case "#microsoft.graph.security.cdpContentExplorerAggregateRecord":
                    return deserializeIntoCdpContentExplorerAggregateRecord;
                case "#microsoft.graph.security.cdpDlpSensitiveAuditRecord":
                    return deserializeIntoCdpDlpSensitiveAuditRecord;
                case "#microsoft.graph.security.cdpDlpSensitiveEndpointAuditRecord":
                    return deserializeIntoCdpDlpSensitiveEndpointAuditRecord;
                case "#microsoft.graph.security.cdpLogRecord":
                    return deserializeIntoCdpLogRecord;
                case "#microsoft.graph.security.cdpOcrBillingRecord":
                    return deserializeIntoCdpOcrBillingRecord;
                case "#microsoft.graph.security.cdpResourceScopeChangeEventRecord":
                    return deserializeIntoCdpResourceScopeChangeEventRecord;
                case "#microsoft.graph.security.cernerSMSLinkRecord":
                    return deserializeIntoCernerSMSLinkRecord;
                case "#microsoft.graph.security.cernerSMSSettingsUpdateRecord":
                    return deserializeIntoCernerSMSSettingsUpdateRecord;
                case "#microsoft.graph.security.cernerSMSUnlinkRecord":
                    return deserializeIntoCernerSMSUnlinkRecord;
                case "#microsoft.graph.security.complianceConnectorAuditRecord":
                    return deserializeIntoComplianceConnectorAuditRecord;
                case "#microsoft.graph.security.complianceDLMExchangeAuditRecord":
                    return deserializeIntoComplianceDLMExchangeAuditRecord;
                case "#microsoft.graph.security.complianceDLMSharePointAuditRecord":
                    return deserializeIntoComplianceDLMSharePointAuditRecord;
                case "#microsoft.graph.security.complianceDlpApplicationsAuditRecord":
                    return deserializeIntoComplianceDlpApplicationsAuditRecord;
                case "#microsoft.graph.security.complianceDlpApplicationsClassificationAuditRecord":
                    return deserializeIntoComplianceDlpApplicationsClassificationAuditRecord;
                case "#microsoft.graph.security.complianceDlpBaseAuditRecord":
                    return deserializeIntoComplianceDlpBaseAuditRecord;
                case "#microsoft.graph.security.complianceDlpClassificationBaseAuditRecord":
                    return deserializeIntoComplianceDlpClassificationBaseAuditRecord;
                case "#microsoft.graph.security.complianceDlpClassificationBaseCdpRecord":
                    return deserializeIntoComplianceDlpClassificationBaseCdpRecord;
                case "#microsoft.graph.security.complianceDlpEndpointAuditRecord":
                    return deserializeIntoComplianceDlpEndpointAuditRecord;
                case "#microsoft.graph.security.complianceDlpEndpointDiscoveryAuditRecord":
                    return deserializeIntoComplianceDlpEndpointDiscoveryAuditRecord;
                case "#microsoft.graph.security.complianceDlpExchangeAuditRecord":
                    return deserializeIntoComplianceDlpExchangeAuditRecord;
                case "#microsoft.graph.security.complianceDlpExchangeClassificationAuditRecord":
                    return deserializeIntoComplianceDlpExchangeClassificationAuditRecord;
                case "#microsoft.graph.security.complianceDlpExchangeClassificationCdpRecord":
                    return deserializeIntoComplianceDlpExchangeClassificationCdpRecord;
                case "#microsoft.graph.security.complianceDlpExchangeDiscoveryAuditRecord":
                    return deserializeIntoComplianceDlpExchangeDiscoveryAuditRecord;
                case "#microsoft.graph.security.complianceDlpSharePointAuditRecord":
                    return deserializeIntoComplianceDlpSharePointAuditRecord;
                case "#microsoft.graph.security.complianceDlpSharePointClassificationAuditRecord":
                    return deserializeIntoComplianceDlpSharePointClassificationAuditRecord;
                case "#microsoft.graph.security.complianceDlpSharePointClassificationExtendedAuditRecord":
                    return deserializeIntoComplianceDlpSharePointClassificationExtendedAuditRecord;
                case "#microsoft.graph.security.complianceManagerActionRecord":
                    return deserializeIntoComplianceManagerActionRecord;
                case "#microsoft.graph.security.complianceSupervisionBaseAuditRecord":
                    return deserializeIntoComplianceSupervisionBaseAuditRecord;
                case "#microsoft.graph.security.complianceSupervisionExchangeAuditRecord":
                    return deserializeIntoComplianceSupervisionExchangeAuditRecord;
                case "#microsoft.graph.security.consumptionResourceAuditRecord":
                    return deserializeIntoConsumptionResourceAuditRecord;
                case "#microsoft.graph.security.copilotInteractionAuditRecord":
                    return deserializeIntoCopilotInteractionAuditRecord;
                case "#microsoft.graph.security.coreReportingSettingsAuditRecord":
                    return deserializeIntoCoreReportingSettingsAuditRecord;
                case "#microsoft.graph.security.cortanaBriefingAuditRecord":
                    return deserializeIntoCortanaBriefingAuditRecord;
                case "#microsoft.graph.security.cpsCommonPolicyAuditRecord":
                    return deserializeIntoCpsCommonPolicyAuditRecord;
                case "#microsoft.graph.security.cpsPolicyConfigAuditRecord":
                    return deserializeIntoCpsPolicyConfigAuditRecord;
                case "#microsoft.graph.security.crmBaseAuditRecord":
                    return deserializeIntoCrmBaseAuditRecord;
                case "#microsoft.graph.security.crmEntityOperationAuditRecord":
                    return deserializeIntoCrmEntityOperationAuditRecord;
                case "#microsoft.graph.security.customerKeyServiceEncryptionAuditRecord":
                    return deserializeIntoCustomerKeyServiceEncryptionAuditRecord;
                case "#microsoft.graph.security.dataCenterSecurityBaseAuditRecord":
                    return deserializeIntoDataCenterSecurityBaseAuditRecord;
                case "#microsoft.graph.security.dataCenterSecurityCmdletAuditRecord":
                    return deserializeIntoDataCenterSecurityCmdletAuditRecord;
                case "#microsoft.graph.security.dataGovernanceAuditRecord":
                    return deserializeIntoDataGovernanceAuditRecord;
                case "#microsoft.graph.security.dataInsightsRestApiAuditRecord":
                    return deserializeIntoDataInsightsRestApiAuditRecord;
                case "#microsoft.graph.security.dataLakeExportOperationAuditRecord":
                    return deserializeIntoDataLakeExportOperationAuditRecord;
                case "#microsoft.graph.security.dataShareOperationAuditRecord":
                    return deserializeIntoDataShareOperationAuditRecord;
                case "#microsoft.graph.security.defaultAuditData":
                    return deserializeIntoDefaultAuditData;
                case "#microsoft.graph.security.defenderSecurityAlertBaseRecord":
                    return deserializeIntoDefenderSecurityAlertBaseRecord;
                case "#microsoft.graph.security.deleteCertificateRecord":
                    return deserializeIntoDeleteCertificateRecord;
                case "#microsoft.graph.security.disableConsentRecord":
                    return deserializeIntoDisableConsentRecord;
                case "#microsoft.graph.security.discoveryAuditRecord":
                    return deserializeIntoDiscoveryAuditRecord;
                case "#microsoft.graph.security.dlpEndpointAuditRecord":
                    return deserializeIntoDlpEndpointAuditRecord;
                case "#microsoft.graph.security.dlpSensitiveInformationTypeCmdletRecord":
                    return deserializeIntoDlpSensitiveInformationTypeCmdletRecord;
                case "#microsoft.graph.security.dlpSensitiveInformationTypeRulePackageCmdletRecord":
                    return deserializeIntoDlpSensitiveInformationTypeRulePackageCmdletRecord;
                case "#microsoft.graph.security.downloadCertificateRecord":
                    return deserializeIntoDownloadCertificateRecord;
                case "#microsoft.graph.security.dynamics365BusinessCentralAuditRecord":
                    return deserializeIntoDynamics365BusinessCentralAuditRecord;
                case "#microsoft.graph.security.enableConsentRecord":
                    return deserializeIntoEnableConsentRecord;
                case "#microsoft.graph.security.epicSMSLinkRecord":
                    return deserializeIntoEpicSMSLinkRecord;
                case "#microsoft.graph.security.epicSMSSettingsUpdateRecord":
                    return deserializeIntoEpicSMSSettingsUpdateRecord;
                case "#microsoft.graph.security.epicSMSUnlinkRecord":
                    return deserializeIntoEpicSMSUnlinkRecord;
                case "#microsoft.graph.security.exchangeAdminAuditRecord":
                    return deserializeIntoExchangeAdminAuditRecord;
                case "#microsoft.graph.security.exchangeAggregatedMailboxAuditRecord":
                    return deserializeIntoExchangeAggregatedMailboxAuditRecord;
                case "#microsoft.graph.security.exchangeAggregatedOperationRecord":
                    return deserializeIntoExchangeAggregatedOperationRecord;
                case "#microsoft.graph.security.exchangeMailboxAuditBaseRecord":
                    return deserializeIntoExchangeMailboxAuditBaseRecord;
                case "#microsoft.graph.security.exchangeMailboxAuditGroupRecord":
                    return deserializeIntoExchangeMailboxAuditGroupRecord;
                case "#microsoft.graph.security.exchangeMailboxAuditRecord":
                    return deserializeIntoExchangeMailboxAuditRecord;
                case "#microsoft.graph.security.fhirBaseUrlAddRecord":
                    return deserializeIntoFhirBaseUrlAddRecord;
                case "#microsoft.graph.security.fhirBaseUrlApproveRecord":
                    return deserializeIntoFhirBaseUrlApproveRecord;
                case "#microsoft.graph.security.fhirBaseUrlDeleteRecord":
                    return deserializeIntoFhirBaseUrlDeleteRecord;
                case "#microsoft.graph.security.fhirBaseUrlUpdateRecord":
                    return deserializeIntoFhirBaseUrlUpdateRecord;
                case "#microsoft.graph.security.healthcareSignalRecord":
                    return deserializeIntoHealthcareSignalRecord;
                case "#microsoft.graph.security.hostedRpaAuditRecord":
                    return deserializeIntoHostedRpaAuditRecord;
                case "#microsoft.graph.security.hrSignalAuditRecord":
                    return deserializeIntoHrSignalAuditRecord;
                case "#microsoft.graph.security.hygieneEventRecord":
                    return deserializeIntoHygieneEventRecord;
                case "#microsoft.graph.security.informationBarrierPolicyApplicationAuditRecord":
                    return deserializeIntoInformationBarrierPolicyApplicationAuditRecord;
                case "#microsoft.graph.security.informationWorkerProtectionAuditRecord":
                    return deserializeIntoInformationWorkerProtectionAuditRecord;
                case "#microsoft.graph.security.insiderRiskScopedUserInsightsRecord":
                    return deserializeIntoInsiderRiskScopedUserInsightsRecord;
                case "#microsoft.graph.security.insiderRiskScopedUsersRecord":
                    return deserializeIntoInsiderRiskScopedUsersRecord;
                case "#microsoft.graph.security.irmSecurityAlertRecord":
                    return deserializeIntoIrmSecurityAlertRecord;
                case "#microsoft.graph.security.irmUserDefinedDetectionRecord":
                    return deserializeIntoIrmUserDefinedDetectionRecord;
                case "#microsoft.graph.security.kaizalaAuditRecord":
                    return deserializeIntoKaizalaAuditRecord;
                case "#microsoft.graph.security.labelAnalyticsAggregateAuditRecord":
                    return deserializeIntoLabelAnalyticsAggregateAuditRecord;
                case "#microsoft.graph.security.labelContentExplorerAuditRecord":
                    return deserializeIntoLabelContentExplorerAuditRecord;
                case "#microsoft.graph.security.largeContentMetadataAuditRecord":
                    return deserializeIntoLargeContentMetadataAuditRecord;
                case "#microsoft.graph.security.m365ComplianceConnectorAuditRecord":
                    return deserializeIntoM365ComplianceConnectorAuditRecord;
                case "#microsoft.graph.security.m365DAADAuditRecord":
                    return deserializeIntoM365DAADAuditRecord;
                case "#microsoft.graph.security.mailSubmissionData":
                    return deserializeIntoMailSubmissionData;
                case "#microsoft.graph.security.managedServicesAuditRecord":
                    return deserializeIntoManagedServicesAuditRecord;
                case "#microsoft.graph.security.managedTenantsAuditRecord":
                    return deserializeIntoManagedTenantsAuditRecord;
                case "#microsoft.graph.security.mapgAlertsAuditRecord":
                    return deserializeIntoMapgAlertsAuditRecord;
                case "#microsoft.graph.security.mapgOnboardAuditRecord":
                    return deserializeIntoMapgOnboardAuditRecord;
                case "#microsoft.graph.security.mapgPolicyAuditRecord":
                    return deserializeIntoMapgPolicyAuditRecord;
                case "#microsoft.graph.security.mcasAlertsAuditRecord":
                    return deserializeIntoMcasAlertsAuditRecord;
                case "#microsoft.graph.security.mdaDataSecuritySignalRecord":
                    return deserializeIntoMdaDataSecuritySignalRecord;
                case "#microsoft.graph.security.mdatpAuditRecord":
                    return deserializeIntoMdatpAuditRecord;
                case "#microsoft.graph.security.mdcEventsRecord":
                    return deserializeIntoMdcEventsRecord;
                case "#microsoft.graph.security.mdiAuditRecord":
                    return deserializeIntoMdiAuditRecord;
                case "#microsoft.graph.security.meshWorldsAuditRecord":
                    return deserializeIntoMeshWorldsAuditRecord;
                case "#microsoft.graph.security.microsoft365BackupBackupItemAuditRecord":
                    return deserializeIntoMicrosoft365BackupBackupItemAuditRecord;
                case "#microsoft.graph.security.microsoft365BackupBackupPolicyAuditRecord":
                    return deserializeIntoMicrosoft365BackupBackupPolicyAuditRecord;
                case "#microsoft.graph.security.microsoft365BackupRestoreItemAuditRecord":
                    return deserializeIntoMicrosoft365BackupRestoreItemAuditRecord;
                case "#microsoft.graph.security.microsoft365BackupRestoreTaskAuditRecord":
                    return deserializeIntoMicrosoft365BackupRestoreTaskAuditRecord;
                case "#microsoft.graph.security.microsoftDefenderExpertsBaseAuditRecord":
                    return deserializeIntoMicrosoftDefenderExpertsBaseAuditRecord;
                case "#microsoft.graph.security.microsoftDefenderExpertsXDRAuditRecord":
                    return deserializeIntoMicrosoftDefenderExpertsXDRAuditRecord;
                case "#microsoft.graph.security.microsoftFlowAuditRecord":
                    return deserializeIntoMicrosoftFlowAuditRecord;
                case "#microsoft.graph.security.microsoftFormsAuditRecord":
                    return deserializeIntoMicrosoftFormsAuditRecord;
                case "#microsoft.graph.security.microsoftGraphDataConnectConsent":
                    return deserializeIntoMicrosoftGraphDataConnectConsent;
                case "#microsoft.graph.security.microsoftGraphDataConnectOperation":
                    return deserializeIntoMicrosoftGraphDataConnectOperation;
                case "#microsoft.graph.security.microsoftPurviewDataMapOperationRecord":
                    return deserializeIntoMicrosoftPurviewDataMapOperationRecord;
                case "#microsoft.graph.security.microsoftPurviewMetadataPolicyOperationRecord":
                    return deserializeIntoMicrosoftPurviewMetadataPolicyOperationRecord;
                case "#microsoft.graph.security.microsoftPurviewPolicyOperationRecord":
                    return deserializeIntoMicrosoftPurviewPolicyOperationRecord;
                case "#microsoft.graph.security.microsoftPurviewPrivacyAuditEvent":
                    return deserializeIntoMicrosoftPurviewPrivacyAuditEvent;
                case "#microsoft.graph.security.microsoftStreamAuditRecord":
                    return deserializeIntoMicrosoftStreamAuditRecord;
                case "#microsoft.graph.security.microsoftTeamsAdminAuditRecord":
                    return deserializeIntoMicrosoftTeamsAdminAuditRecord;
                case "#microsoft.graph.security.microsoftTeamsAnalyticsAuditRecord":
                    return deserializeIntoMicrosoftTeamsAnalyticsAuditRecord;
                case "#microsoft.graph.security.microsoftTeamsAuditRecord":
                    return deserializeIntoMicrosoftTeamsAuditRecord;
                case "#microsoft.graph.security.microsoftTeamsDeviceAuditRecord":
                    return deserializeIntoMicrosoftTeamsDeviceAuditRecord;
                case "#microsoft.graph.security.microsoftTeamsRetentionLabelActionAuditRecord":
                    return deserializeIntoMicrosoftTeamsRetentionLabelActionAuditRecord;
                case "#microsoft.graph.security.microsoftTeamsSensitivityLabelActionAuditRecord":
                    return deserializeIntoMicrosoftTeamsSensitivityLabelActionAuditRecord;
                case "#microsoft.graph.security.microsoftTeamsShiftsAuditRecord":
                    return deserializeIntoMicrosoftTeamsShiftsAuditRecord;
                case "#microsoft.graph.security.mipAutoLabelExchangeItemAuditRecord":
                    return deserializeIntoMipAutoLabelExchangeItemAuditRecord;
                case "#microsoft.graph.security.mipAutoLabelItemAuditRecord":
                    return deserializeIntoMipAutoLabelItemAuditRecord;
                case "#microsoft.graph.security.mipAutoLabelPolicyAuditRecord":
                    return deserializeIntoMipAutoLabelPolicyAuditRecord;
                case "#microsoft.graph.security.mipAutoLabelProgressFeedbackAuditRecord":
                    return deserializeIntoMipAutoLabelProgressFeedbackAuditRecord;
                case "#microsoft.graph.security.mipAutoLabelSharePointItemAuditRecord":
                    return deserializeIntoMipAutoLabelSharePointItemAuditRecord;
                case "#microsoft.graph.security.mipAutoLabelSharePointPolicyLocationAuditRecord":
                    return deserializeIntoMipAutoLabelSharePointPolicyLocationAuditRecord;
                case "#microsoft.graph.security.mipAutoLabelSimulationSharePointCompletionRecord":
                    return deserializeIntoMipAutoLabelSimulationSharePointCompletionRecord;
                case "#microsoft.graph.security.mipAutoLabelSimulationSharePointProgressRecord":
                    return deserializeIntoMipAutoLabelSimulationSharePointProgressRecord;
                case "#microsoft.graph.security.mipAutoLabelSimulationStatisticsRecord":
                    return deserializeIntoMipAutoLabelSimulationStatisticsRecord;
                case "#microsoft.graph.security.mipAutoLabelSimulationStatusRecord":
                    return deserializeIntoMipAutoLabelSimulationStatusRecord;
                case "#microsoft.graph.security.mipExactDataMatchAuditRecord":
                    return deserializeIntoMipExactDataMatchAuditRecord;
                case "#microsoft.graph.security.mipLabelAnalyticsAuditRecord":
                    return deserializeIntoMipLabelAnalyticsAuditRecord;
                case "#microsoft.graph.security.mipLabelAuditRecord":
                    return deserializeIntoMipLabelAuditRecord;
                case "#microsoft.graph.security.mS365DCustomDetectionAuditRecord":
                    return deserializeIntoMS365DCustomDetectionAuditRecord;
                case "#microsoft.graph.security.mS365DIncidentAuditRecord":
                    return deserializeIntoMS365DIncidentAuditRecord;
                case "#microsoft.graph.security.mS365DSuppressionRuleAuditRecord":
                    return deserializeIntoMS365DSuppressionRuleAuditRecord;
                case "#microsoft.graph.security.msdeGeneralSettingsAuditRecord":
                    return deserializeIntoMsdeGeneralSettingsAuditRecord;
                case "#microsoft.graph.security.msdeIndicatorsSettingsAuditRecord":
                    return deserializeIntoMsdeIndicatorsSettingsAuditRecord;
                case "#microsoft.graph.security.msdeResponseActionsAuditRecord":
                    return deserializeIntoMsdeResponseActionsAuditRecord;
                case "#microsoft.graph.security.msdeRolesSettingsAuditRecord":
                    return deserializeIntoMsdeRolesSettingsAuditRecord;
                case "#microsoft.graph.security.msticNationStateNotificationRecord":
                    return deserializeIntoMsticNationStateNotificationRecord;
                case "#microsoft.graph.security.multiStageDispositionAuditRecord":
                    return deserializeIntoMultiStageDispositionAuditRecord;
                case "#microsoft.graph.security.myAnalyticsSettingsAuditRecord":
                    return deserializeIntoMyAnalyticsSettingsAuditRecord;
                case "#microsoft.graph.security.officeNativeAuditRecord":
                    return deserializeIntoOfficeNativeAuditRecord;
                case "#microsoft.graph.security.omePortalAuditRecord":
                    return deserializeIntoOmePortalAuditRecord;
                case "#microsoft.graph.security.oneDriveAuditRecord":
                    return deserializeIntoOneDriveAuditRecord;
                case "#microsoft.graph.security.onPremisesFileShareScannerDlpAuditRecord":
                    return deserializeIntoOnPremisesFileShareScannerDlpAuditRecord;
                case "#microsoft.graph.security.onPremisesScannerDlpAuditRecord":
                    return deserializeIntoOnPremisesScannerDlpAuditRecord;
                case "#microsoft.graph.security.onPremisesSharePointScannerDlpAuditRecord":
                    return deserializeIntoOnPremisesSharePointScannerDlpAuditRecord;
                case "#microsoft.graph.security.owaGetAccessTokenForResourceAuditRecord":
                    return deserializeIntoOwaGetAccessTokenForResourceAuditRecord;
                case "#microsoft.graph.security.peopleAdminSettingsAuditRecord":
                    return deserializeIntoPeopleAdminSettingsAuditRecord;
                case "#microsoft.graph.security.physicalBadgingSignalAuditRecord":
                    return deserializeIntoPhysicalBadgingSignalAuditRecord;
                case "#microsoft.graph.security.plannerCopyPlanAuditRecord":
                    return deserializeIntoPlannerCopyPlanAuditRecord;
                case "#microsoft.graph.security.plannerPlanAuditRecord":
                    return deserializeIntoPlannerPlanAuditRecord;
                case "#microsoft.graph.security.plannerPlanListAuditRecord":
                    return deserializeIntoPlannerPlanListAuditRecord;
                case "#microsoft.graph.security.plannerRosterAuditRecord":
                    return deserializeIntoPlannerRosterAuditRecord;
                case "#microsoft.graph.security.plannerRosterSensitivityLabelAuditRecord":
                    return deserializeIntoPlannerRosterSensitivityLabelAuditRecord;
                case "#microsoft.graph.security.plannerTaskAuditRecord":
                    return deserializeIntoPlannerTaskAuditRecord;
                case "#microsoft.graph.security.plannerTaskListAuditRecord":
                    return deserializeIntoPlannerTaskListAuditRecord;
                case "#microsoft.graph.security.plannerTenantSettingsAuditRecord":
                    return deserializeIntoPlannerTenantSettingsAuditRecord;
                case "#microsoft.graph.security.powerAppsAuditAppRecord":
                    return deserializeIntoPowerAppsAuditAppRecord;
                case "#microsoft.graph.security.powerAppsAuditPlanRecord":
                    return deserializeIntoPowerAppsAuditPlanRecord;
                case "#microsoft.graph.security.powerAppsAuditResourceRecord":
                    return deserializeIntoPowerAppsAuditResourceRecord;
                case "#microsoft.graph.security.powerBiAuditRecord":
                    return deserializeIntoPowerBiAuditRecord;
                case "#microsoft.graph.security.powerBiDlpAuditRecord":
                    return deserializeIntoPowerBiDlpAuditRecord;
                case "#microsoft.graph.security.powerPagesSiteAuditRecord":
                    return deserializeIntoPowerPagesSiteAuditRecord;
                case "#microsoft.graph.security.powerPlatformAdminDlpAuditRecord":
                    return deserializeIntoPowerPlatformAdminDlpAuditRecord;
                case "#microsoft.graph.security.powerPlatformAdminEnvironmentAuditRecord":
                    return deserializeIntoPowerPlatformAdminEnvironmentAuditRecord;
                case "#microsoft.graph.security.powerPlatformAdministratorActivityRecord":
                    return deserializeIntoPowerPlatformAdministratorActivityRecord;
                case "#microsoft.graph.security.powerPlatformLockboxResourceAccessRequestAuditRecord":
                    return deserializeIntoPowerPlatformLockboxResourceAccessRequestAuditRecord;
                case "#microsoft.graph.security.powerPlatformLockboxResourceCommandAuditRecord":
                    return deserializeIntoPowerPlatformLockboxResourceCommandAuditRecord;
                case "#microsoft.graph.security.powerPlatformServiceActivityAuditRecord":
                    return deserializeIntoPowerPlatformServiceActivityAuditRecord;
                case "#microsoft.graph.security.privacyDataMatchAuditRecord":
                    return deserializeIntoPrivacyDataMatchAuditRecord;
                case "#microsoft.graph.security.privacyDataMinimizationRecord":
                    return deserializeIntoPrivacyDataMinimizationRecord;
                case "#microsoft.graph.security.privacyDigestEmailRecord":
                    return deserializeIntoPrivacyDigestEmailRecord;
                case "#microsoft.graph.security.privacyOpenAccessAuditRecord":
                    return deserializeIntoPrivacyOpenAccessAuditRecord;
                case "#microsoft.graph.security.privacyPortalAuditRecord":
                    return deserializeIntoPrivacyPortalAuditRecord;
                case "#microsoft.graph.security.privacyRemediationActionRecord":
                    return deserializeIntoPrivacyRemediationActionRecord;
                case "#microsoft.graph.security.privacyRemediationRecord":
                    return deserializeIntoPrivacyRemediationRecord;
                case "#microsoft.graph.security.privacyTenantAuditHistoryRecord":
                    return deserializeIntoPrivacyTenantAuditHistoryRecord;
                case "#microsoft.graph.security.projectAuditRecord":
                    return deserializeIntoProjectAuditRecord;
                case "#microsoft.graph.security.projectForTheWebAssignedToMeSettingsAuditRecord":
                    return deserializeIntoProjectForTheWebAssignedToMeSettingsAuditRecord;
                case "#microsoft.graph.security.projectForTheWebProjectAuditRecord":
                    return deserializeIntoProjectForTheWebProjectAuditRecord;
                case "#microsoft.graph.security.projectForTheWebProjectSettingsAuditRecord":
                    return deserializeIntoProjectForTheWebProjectSettingsAuditRecord;
                case "#microsoft.graph.security.projectForTheWebRoadmapAuditRecord":
                    return deserializeIntoProjectForTheWebRoadmapAuditRecord;
                case "#microsoft.graph.security.projectForTheWebRoadmapItemAuditRecord":
                    return deserializeIntoProjectForTheWebRoadmapItemAuditRecord;
                case "#microsoft.graph.security.projectForTheWebRoadmapSettingsAuditRecord":
                    return deserializeIntoProjectForTheWebRoadmapSettingsAuditRecord;
                case "#microsoft.graph.security.projectForTheWebTaskAuditRecord":
                    return deserializeIntoProjectForTheWebTaskAuditRecord;
                case "#microsoft.graph.security.publicFolderAuditRecord":
                    return deserializeIntoPublicFolderAuditRecord;
                case "#microsoft.graph.security.purviewInsiderRiskAlertsRecord":
                    return deserializeIntoPurviewInsiderRiskAlertsRecord;
                case "#microsoft.graph.security.purviewInsiderRiskCasesRecord":
                    return deserializeIntoPurviewInsiderRiskCasesRecord;
                case "#microsoft.graph.security.quarantineAuditRecord":
                    return deserializeIntoQuarantineAuditRecord;
                case "#microsoft.graph.security.recordsManagementAuditRecord":
                    return deserializeIntoRecordsManagementAuditRecord;
                case "#microsoft.graph.security.retentionPolicyAuditRecord":
                    return deserializeIntoRetentionPolicyAuditRecord;
                case "#microsoft.graph.security.scoreEvidence":
                    return deserializeIntoScoreEvidence;
                case "#microsoft.graph.security.scorePlatformGenericAuditRecord":
                    return deserializeIntoScorePlatformGenericAuditRecord;
                case "#microsoft.graph.security.scriptRunAuditRecord":
                    return deserializeIntoScriptRunAuditRecord;
                case "#microsoft.graph.security.searchAuditRecord":
                    return deserializeIntoSearchAuditRecord;
                case "#microsoft.graph.security.securityComplianceAlertRecord":
                    return deserializeIntoSecurityComplianceAlertRecord;
                case "#microsoft.graph.security.securityComplianceCenterEOPCmdletAuditRecord":
                    return deserializeIntoSecurityComplianceCenterEOPCmdletAuditRecord;
                case "#microsoft.graph.security.securityComplianceInsightsAuditRecord":
                    return deserializeIntoSecurityComplianceInsightsAuditRecord;
                case "#microsoft.graph.security.securityComplianceRBACAuditRecord":
                    return deserializeIntoSecurityComplianceRBACAuditRecord;
                case "#microsoft.graph.security.securityComplianceUserChangeAuditRecord":
                    return deserializeIntoSecurityComplianceUserChangeAuditRecord;
                case "#microsoft.graph.security.sharePointAppPermissionOperationAuditRecord":
                    return deserializeIntoSharePointAppPermissionOperationAuditRecord;
                case "#microsoft.graph.security.sharePointAuditRecord":
                    return deserializeIntoSharePointAuditRecord;
                case "#microsoft.graph.security.sharePointCommentOperationAuditRecord":
                    return deserializeIntoSharePointCommentOperationAuditRecord;
                case "#microsoft.graph.security.sharePointContentTypeOperationAuditRecord":
                    return deserializeIntoSharePointContentTypeOperationAuditRecord;
                case "#microsoft.graph.security.sharePointESignatureAuditRecord":
                    return deserializeIntoSharePointESignatureAuditRecord;
                case "#microsoft.graph.security.sharePointFieldOperationAuditRecord":
                    return deserializeIntoSharePointFieldOperationAuditRecord;
                case "#microsoft.graph.security.sharePointFileOperationAuditRecord":
                    return deserializeIntoSharePointFileOperationAuditRecord;
                case "#microsoft.graph.security.sharePointListOperationAuditRecord":
                    return deserializeIntoSharePointListOperationAuditRecord;
                case "#microsoft.graph.security.sharePointSharingOperationAuditRecord":
                    return deserializeIntoSharePointSharingOperationAuditRecord;
                case "#microsoft.graph.security.skypeForBusinessBaseAuditRecord":
                    return deserializeIntoSkypeForBusinessBaseAuditRecord;
                case "#microsoft.graph.security.skypeForBusinessCmdletsAuditRecord":
                    return deserializeIntoSkypeForBusinessCmdletsAuditRecord;
                case "#microsoft.graph.security.skypeForBusinessPSTNUsageAuditRecord":
                    return deserializeIntoSkypeForBusinessPSTNUsageAuditRecord;
                case "#microsoft.graph.security.skypeForBusinessUsersBlockedAuditRecord":
                    return deserializeIntoSkypeForBusinessUsersBlockedAuditRecord;
                case "#microsoft.graph.security.smsCreatePhoneNumberRecord":
                    return deserializeIntoSmsCreatePhoneNumberRecord;
                case "#microsoft.graph.security.smsDeletePhoneNumberRecord":
                    return deserializeIntoSmsDeletePhoneNumberRecord;
                case "#microsoft.graph.security.supervisoryReviewDayXInsightsAuditRecord":
                    return deserializeIntoSupervisoryReviewDayXInsightsAuditRecord;
                case "#microsoft.graph.security.syntheticProbeAuditRecord":
                    return deserializeIntoSyntheticProbeAuditRecord;
                case "#microsoft.graph.security.teamsEasyApprovalsAuditRecord":
                    return deserializeIntoTeamsEasyApprovalsAuditRecord;
                case "#microsoft.graph.security.teamsHealthcareAuditRecord":
                    return deserializeIntoTeamsHealthcareAuditRecord;
                case "#microsoft.graph.security.teamsUpdatesAuditRecord":
                    return deserializeIntoTeamsUpdatesAuditRecord;
                case "#microsoft.graph.security.tenantAllowBlockListAuditRecord":
                    return deserializeIntoTenantAllowBlockListAuditRecord;
                case "#microsoft.graph.security.threatFinderAuditRecord":
                    return deserializeIntoThreatFinderAuditRecord;
                case "#microsoft.graph.security.threatIntelligenceAtpContentData":
                    return deserializeIntoThreatIntelligenceAtpContentData;
                case "#microsoft.graph.security.threatIntelligenceMailData":
                    return deserializeIntoThreatIntelligenceMailData;
                case "#microsoft.graph.security.threatIntelligenceUrlClickData":
                    return deserializeIntoThreatIntelligenceUrlClickData;
                case "#microsoft.graph.security.todoAuditRecord":
                    return deserializeIntoTodoAuditRecord;
                case "#microsoft.graph.security.uamOperationAuditRecord":
                    return deserializeIntoUamOperationAuditRecord;
                case "#microsoft.graph.security.unifiedGroupAuditRecord":
                    return deserializeIntoUnifiedGroupAuditRecord;
                case "#microsoft.graph.security.unifiedSimulationMatchedItemAuditRecord":
                    return deserializeIntoUnifiedSimulationMatchedItemAuditRecord;
                case "#microsoft.graph.security.unifiedSimulationSummaryAuditRecord":
                    return deserializeIntoUnifiedSimulationSummaryAuditRecord;
                case "#microsoft.graph.security.uploadCertificateRecord":
                    return deserializeIntoUploadCertificateRecord;
                case "#microsoft.graph.security.urbacAssignmentAuditRecord":
                    return deserializeIntoUrbacAssignmentAuditRecord;
                case "#microsoft.graph.security.urbacEnableStateAuditRecord":
                    return deserializeIntoUrbacEnableStateAuditRecord;
                case "#microsoft.graph.security.urbacRoleAuditRecord":
                    return deserializeIntoUrbacRoleAuditRecord;
                case "#microsoft.graph.security.userTrainingAuditRecord":
                    return deserializeIntoUserTrainingAuditRecord;
                case "#microsoft.graph.security.vfamBasePolicyAuditRecord":
                    return deserializeIntoVfamBasePolicyAuditRecord;
                case "#microsoft.graph.security.vfamCreatePolicyAuditRecord":
                    return deserializeIntoVfamCreatePolicyAuditRecord;
                case "#microsoft.graph.security.vfamDeletePolicyAuditRecord":
                    return deserializeIntoVfamDeletePolicyAuditRecord;
                case "#microsoft.graph.security.vfamUpdatePolicyAuditRecord":
                    return deserializeIntoVfamUpdatePolicyAuditRecord;
                case "#microsoft.graph.security.vivaGoalsAuditRecord":
                    return deserializeIntoVivaGoalsAuditRecord;
                case "#microsoft.graph.security.vivaLearningAdminAuditRecord":
                    return deserializeIntoVivaLearningAdminAuditRecord;
                case "#microsoft.graph.security.vivaLearningAuditRecord":
                    return deserializeIntoVivaLearningAuditRecord;
                case "#microsoft.graph.security.vivaPulseAdminAuditRecord":
                    return deserializeIntoVivaPulseAdminAuditRecord;
                case "#microsoft.graph.security.vivaPulseOrganizerAuditRecord":
                    return deserializeIntoVivaPulseOrganizerAuditRecord;
                case "#microsoft.graph.security.vivaPulseReportAuditRecord":
                    return deserializeIntoVivaPulseReportAuditRecord;
                case "#microsoft.graph.security.vivaPulseResponseAuditRecord":
                    return deserializeIntoVivaPulseResponseAuditRecord;
                case "#microsoft.graph.security.wdatpAlertsAuditRecord":
                    return deserializeIntoWdatpAlertsAuditRecord;
                case "#microsoft.graph.security.windows365CustomerLockboxAuditRecord":
                    return deserializeIntoWindows365CustomerLockboxAuditRecord;
                case "#microsoft.graph.security.workplaceAnalyticsAuditRecord":
                    return deserializeIntoWorkplaceAnalyticsAuditRecord;
                case "#microsoft.graph.security.yammerAuditRecord":
                    return deserializeIntoYammerAuditRecord;
            }
        }
    }
    return deserializeIntoAuditData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditLogQueryCollectionResponse}
 */
// @ts-ignore
export function createAuditLogQueryCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditLogQueryCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditLogQuery}
 */
// @ts-ignore
export function createAuditLogQueryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditLogQuery;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditLogRecordCollectionResponse}
 */
// @ts-ignore
export function createAuditLogRecordCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditLogRecordCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditLogRecord}
 */
// @ts-ignore
export function createAuditLogRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditLogRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditSearchAuditRecord}
 */
// @ts-ignore
export function createAuditSearchAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditSearchAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuthorityTemplateCollectionResponse}
 */
// @ts-ignore
export function createAuthorityTemplateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuthorityTemplateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuthorityTemplate}
 */
// @ts-ignore
export function createAuthorityTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuthorityTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AutonomousSystem}
 */
// @ts-ignore
export function createAutonomousSystemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAutonomousSystem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AzureActiveDirectoryAccountLogonAuditRecord}
 */
// @ts-ignore
export function createAzureActiveDirectoryAccountLogonAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAzureActiveDirectoryAccountLogonAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AzureActiveDirectoryAuditRecord}
 */
// @ts-ignore
export function createAzureActiveDirectoryAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAzureActiveDirectoryAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AzureActiveDirectoryBaseAuditRecord}
 */
// @ts-ignore
export function createAzureActiveDirectoryBaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAzureActiveDirectoryBaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AzureActiveDirectoryStsLogonAuditRecord}
 */
// @ts-ignore
export function createAzureActiveDirectoryStsLogonAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAzureActiveDirectoryStsLogonAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AzureResourceEvidence}
 */
// @ts-ignore
export function createAzureResourceEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAzureResourceEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BlobContainerEvidence}
 */
// @ts-ignore
export function createBlobContainerEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBlobContainerEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BlobEvidence}
 */
// @ts-ignore
export function createBlobEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBlobEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BlockFileResponseAction}
 */
// @ts-ignore
export function createBlockFileResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBlockFileResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CampaignAuditRecord}
 */
// @ts-ignore
export function createCampaignAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCampaignAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CaseAuditRecord}
 */
// @ts-ignore
export function createCaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CaseEscaped}
 */
// @ts-ignore
export function createCaseEscapedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.ediscoveryCase":
                    return deserializeIntoEdiscoveryCase;
            }
        }
    }
    return deserializeIntoCaseEscaped;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CaseInvestigation}
 */
// @ts-ignore
export function createCaseInvestigationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCaseInvestigation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CaseOperationCollectionResponse}
 */
// @ts-ignore
export function createCaseOperationCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCaseOperationCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CaseOperation}
 */
// @ts-ignore
export function createCaseOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.ediscoveryAddToReviewSetOperation":
                    return deserializeIntoEdiscoveryAddToReviewSetOperation;
                case "#microsoft.graph.security.ediscoveryEstimateOperation":
                    return deserializeIntoEdiscoveryEstimateOperation;
                case "#microsoft.graph.security.ediscoveryExportOperation":
                    return deserializeIntoEdiscoveryExportOperation;
                case "#microsoft.graph.security.ediscoveryHoldOperation":
                    return deserializeIntoEdiscoveryHoldOperation;
                case "#microsoft.graph.security.ediscoveryIndexOperation":
                    return deserializeIntoEdiscoveryIndexOperation;
                case "#microsoft.graph.security.ediscoveryPurgeDataOperation":
                    return deserializeIntoEdiscoveryPurgeDataOperation;
                case "#microsoft.graph.security.ediscoverySearchExportOperation":
                    return deserializeIntoEdiscoverySearchExportOperation;
                case "#microsoft.graph.security.ediscoveryTagOperation":
                    return deserializeIntoEdiscoveryTagOperation;
            }
        }
    }
    return deserializeIntoCaseOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CasesRoot}
 */
// @ts-ignore
export function createCasesRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCasesRoot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CategoryTemplateCollectionResponse}
 */
// @ts-ignore
export function createCategoryTemplateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCategoryTemplateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CategoryTemplate}
 */
// @ts-ignore
export function createCategoryTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCategoryTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CdpColdCrawlStatusRecord}
 */
// @ts-ignore
export function createCdpColdCrawlStatusRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCdpColdCrawlStatusRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CdpContentExplorerAggregateRecord}
 */
// @ts-ignore
export function createCdpContentExplorerAggregateRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCdpContentExplorerAggregateRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CdpDlpSensitiveAuditRecord}
 */
// @ts-ignore
export function createCdpDlpSensitiveAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCdpDlpSensitiveAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CdpDlpSensitiveEndpointAuditRecord}
 */
// @ts-ignore
export function createCdpDlpSensitiveEndpointAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCdpDlpSensitiveEndpointAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CdpLogRecord}
 */
// @ts-ignore
export function createCdpLogRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCdpLogRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CdpOcrBillingRecord}
 */
// @ts-ignore
export function createCdpOcrBillingRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCdpOcrBillingRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CdpResourceScopeChangeEventRecord}
 */
// @ts-ignore
export function createCdpResourceScopeChangeEventRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCdpResourceScopeChangeEventRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CernerSMSLinkRecord}
 */
// @ts-ignore
export function createCernerSMSLinkRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCernerSMSLinkRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CernerSMSSettingsUpdateRecord}
 */
// @ts-ignore
export function createCernerSMSSettingsUpdateRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCernerSMSSettingsUpdateRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CernerSMSUnlinkRecord}
 */
// @ts-ignore
export function createCernerSMSUnlinkRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCernerSMSUnlinkRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CitationTemplateCollectionResponse}
 */
// @ts-ignore
export function createCitationTemplateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCitationTemplateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CitationTemplate}
 */
// @ts-ignore
export function createCitationTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCitationTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ClassificationResult}
 */
// @ts-ignore
export function createClassificationResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoClassificationResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CloudApplicationEvidence}
 */
// @ts-ignore
export function createCloudApplicationEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCloudApplicationEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CloudLogonRequestEvidence}
 */
// @ts-ignore
export function createCloudLogonRequestEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCloudLogonRequestEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CloudLogonSessionEvidence}
 */
// @ts-ignore
export function createCloudLogonSessionEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCloudLogonSessionEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CollaborationRoot}
 */
// @ts-ignore
export function createCollaborationRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCollaborationRoot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CollectInvestigationPackageResponseAction}
 */
// @ts-ignore
export function createCollectInvestigationPackageResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCollectInvestigationPackageResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceConnectorAuditRecord}
 */
// @ts-ignore
export function createComplianceConnectorAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceConnectorAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDLMExchangeAuditRecord}
 */
// @ts-ignore
export function createComplianceDLMExchangeAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDLMExchangeAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDLMSharePointAuditRecord}
 */
// @ts-ignore
export function createComplianceDLMSharePointAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDLMSharePointAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpApplicationsAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpApplicationsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpApplicationsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpApplicationsClassificationAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpApplicationsClassificationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpApplicationsClassificationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpBaseAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpBaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpBaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpClassificationBaseAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpClassificationBaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpClassificationBaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpClassificationBaseCdpRecord}
 */
// @ts-ignore
export function createComplianceDlpClassificationBaseCdpRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpClassificationBaseCdpRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpEndpointAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpEndpointAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpEndpointAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpEndpointDiscoveryAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpEndpointDiscoveryAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpEndpointDiscoveryAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpExchangeAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpExchangeAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpExchangeAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpExchangeClassificationAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpExchangeClassificationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpExchangeClassificationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpExchangeClassificationCdpRecord}
 */
// @ts-ignore
export function createComplianceDlpExchangeClassificationCdpRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpExchangeClassificationCdpRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpExchangeDiscoveryAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpExchangeDiscoveryAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpExchangeDiscoveryAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpSharePointAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpSharePointAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpSharePointAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpSharePointClassificationAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpSharePointClassificationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpSharePointClassificationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpSharePointClassificationExtendedAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpSharePointClassificationExtendedAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpSharePointClassificationExtendedAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceManagerActionRecord}
 */
// @ts-ignore
export function createComplianceManagerActionRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceManagerActionRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceSupervisionBaseAuditRecord}
 */
// @ts-ignore
export function createComplianceSupervisionBaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceSupervisionBaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceSupervisionExchangeAuditRecord}
 */
// @ts-ignore
export function createComplianceSupervisionExchangeAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceSupervisionExchangeAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ConsumptionResourceAuditRecord}
 */
// @ts-ignore
export function createConsumptionResourceAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoConsumptionResourceAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ContainerEvidence}
 */
// @ts-ignore
export function createContainerEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoContainerEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ContainerImageEvidence}
 */
// @ts-ignore
export function createContainerImageEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoContainerImageEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ContainerRegistryEvidence}
 */
// @ts-ignore
export function createContainerRegistryEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoContainerRegistryEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ContentInfo}
 */
// @ts-ignore
export function createContentInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoContentInfo;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ContentLabel}
 */
// @ts-ignore
export function createContentLabelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoContentLabel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CopilotInteractionAuditRecord}
 */
// @ts-ignore
export function createCopilotInteractionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCopilotInteractionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CoreReportingSettingsAuditRecord}
 */
// @ts-ignore
export function createCoreReportingSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCoreReportingSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CortanaBriefingAuditRecord}
 */
// @ts-ignore
export function createCortanaBriefingAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCortanaBriefingAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CpsCommonPolicyAuditRecord}
 */
// @ts-ignore
export function createCpsCommonPolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCpsCommonPolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CpsPolicyConfigAuditRecord}
 */
// @ts-ignore
export function createCpsPolicyConfigAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCpsPolicyConfigAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CrmBaseAuditRecord}
 */
// @ts-ignore
export function createCrmBaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCrmBaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CrmEntityOperationAuditRecord}
 */
// @ts-ignore
export function createCrmEntityOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCrmEntityOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CustomAction}
 */
// @ts-ignore
export function createCustomActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCustomAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CustomerKeyServiceEncryptionAuditRecord}
 */
// @ts-ignore
export function createCustomerKeyServiceEncryptionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCustomerKeyServiceEncryptionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CvssSummary}
 */
// @ts-ignore
export function createCvssSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCvssSummary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataCenterSecurityBaseAuditRecord}
 */
// @ts-ignore
export function createDataCenterSecurityBaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDataCenterSecurityBaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataCenterSecurityCmdletAuditRecord}
 */
// @ts-ignore
export function createDataCenterSecurityCmdletAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDataCenterSecurityCmdletAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataGovernanceAuditRecord}
 */
// @ts-ignore
export function createDataGovernanceAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDataGovernanceAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataInsightsRestApiAuditRecord}
 */
// @ts-ignore
export function createDataInsightsRestApiAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDataInsightsRestApiAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataLakeExportOperationAuditRecord}
 */
// @ts-ignore
export function createDataLakeExportOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDataLakeExportOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataSet}
 */
// @ts-ignore
export function createDataSetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.ediscoveryReviewSet":
                    return deserializeIntoEdiscoveryReviewSet;
            }
        }
    }
    return deserializeIntoDataSet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataShareOperationAuditRecord}
 */
// @ts-ignore
export function createDataShareOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDataShareOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataSourceCollectionResponse}
 */
// @ts-ignore
export function createDataSourceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDataSourceCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataSourceContainer}
 */
// @ts-ignore
export function createDataSourceContainerFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.ediscoveryCustodian":
                    return deserializeIntoEdiscoveryCustodian;
                case "#microsoft.graph.security.ediscoveryNoncustodialDataSource":
                    return deserializeIntoEdiscoveryNoncustodialDataSource;
            }
        }
    }
    return deserializeIntoDataSourceContainer;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataSource}
 */
// @ts-ignore
export function createDataSourceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.siteSource":
                    return deserializeIntoSiteSource;
                case "#microsoft.graph.security.unifiedGroupSource":
                    return deserializeIntoUnifiedGroupSource;
                case "#microsoft.graph.security.userSource":
                    return deserializeIntoUserSource;
            }
        }
    }
    return deserializeIntoDataSource;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DefaultAuditData}
 */
// @ts-ignore
export function createDefaultAuditDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDefaultAuditData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DefenderSecurityAlertBaseRecord}
 */
// @ts-ignore
export function createDefenderSecurityAlertBaseRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDefenderSecurityAlertBaseRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeleteCertificateRecord}
 */
// @ts-ignore
export function createDeleteCertificateRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeleteCertificateRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DepartmentTemplateCollectionResponse}
 */
// @ts-ignore
export function createDepartmentTemplateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDepartmentTemplateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DepartmentTemplate}
 */
// @ts-ignore
export function createDepartmentTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDepartmentTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeploymentAccessKeyType}
 */
// @ts-ignore
export function createDeploymentAccessKeyTypeFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeploymentAccessKeyType;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DetectionAction}
 */
// @ts-ignore
export function createDetectionActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDetectionAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DetectionRuleCollectionResponse}
 */
// @ts-ignore
export function createDetectionRuleCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDetectionRuleCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DetectionRule}
 */
// @ts-ignore
export function createDetectionRuleFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDetectionRule;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DetonationChain}
 */
// @ts-ignore
export function createDetonationChainFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDetonationChain;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DetonationDetails}
 */
// @ts-ignore
export function createDetonationDetailsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDetonationDetails;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DetonationObservables}
 */
// @ts-ignore
export function createDetonationObservablesFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDetonationObservables;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeviceEvidence}
 */
// @ts-ignore
export function createDeviceEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeviceEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Dictionary}
 */
// @ts-ignore
export function createDictionaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDictionary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DisableConsentRecord}
 */
// @ts-ignore
export function createDisableConsentRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDisableConsentRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DisableUserResponseAction}
 */
// @ts-ignore
export function createDisableUserResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDisableUserResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DiscoveryAuditRecord}
 */
// @ts-ignore
export function createDiscoveryAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDiscoveryAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DispositionReviewStageCollectionResponse}
 */
// @ts-ignore
export function createDispositionReviewStageCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDispositionReviewStageCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DispositionReviewStage}
 */
// @ts-ignore
export function createDispositionReviewStageFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDispositionReviewStage;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DlpEndpointAuditRecord}
 */
// @ts-ignore
export function createDlpEndpointAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDlpEndpointAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DlpSensitiveInformationTypeCmdletRecord}
 */
// @ts-ignore
export function createDlpSensitiveInformationTypeCmdletRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDlpSensitiveInformationTypeCmdletRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DlpSensitiveInformationTypeRulePackageCmdletRecord}
 */
// @ts-ignore
export function createDlpSensitiveInformationTypeRulePackageCmdletRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDlpSensitiveInformationTypeRulePackageCmdletRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DnsEvidence}
 */
// @ts-ignore
export function createDnsEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDnsEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DowngradeJustification}
 */
// @ts-ignore
export function createDowngradeJustificationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDowngradeJustification;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DownloadCertificateRecord}
 */
// @ts-ignore
export function createDownloadCertificateRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDownloadCertificateRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Dynamics365BusinessCentralAuditRecord}
 */
// @ts-ignore
export function createDynamics365BusinessCentralAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDynamics365BusinessCentralAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryAddToReviewSetOperation}
 */
// @ts-ignore
export function createEdiscoveryAddToReviewSetOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryAddToReviewSetOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryCaseCollectionResponse}
 */
// @ts-ignore
export function createEdiscoveryCaseCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryCaseCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryCase}
 */
// @ts-ignore
export function createEdiscoveryCaseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryCase;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryCaseSettings}
 */
// @ts-ignore
export function createEdiscoveryCaseSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryCaseSettings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryCustodianCollectionResponse}
 */
// @ts-ignore
export function createEdiscoveryCustodianCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryCustodianCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryCustodian}
 */
// @ts-ignore
export function createEdiscoveryCustodianFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryCustodian;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryEstimateOperation}
 */
// @ts-ignore
export function createEdiscoveryEstimateOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryEstimateOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryExportOperation}
 */
// @ts-ignore
export function createEdiscoveryExportOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryExportOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryFileCollectionResponse}
 */
// @ts-ignore
export function createEdiscoveryFileCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryFileCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryFile}
 */
// @ts-ignore
export function createEdiscoveryFileFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryFile;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryHoldOperation}
 */
// @ts-ignore
export function createEdiscoveryHoldOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryHoldOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryHoldPolicyCollectionResponse}
 */
// @ts-ignore
export function createEdiscoveryHoldPolicyCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryHoldPolicyCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryHoldPolicy}
 */
// @ts-ignore
export function createEdiscoveryHoldPolicyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryHoldPolicy;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryIndexOperation}
 */
// @ts-ignore
export function createEdiscoveryIndexOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryIndexOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryNoncustodialDataSourceCollectionResponse}
 */
// @ts-ignore
export function createEdiscoveryNoncustodialDataSourceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryNoncustodialDataSourceCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryNoncustodialDataSource}
 */
// @ts-ignore
export function createEdiscoveryNoncustodialDataSourceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryNoncustodialDataSource;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryPurgeDataOperation}
 */
// @ts-ignore
export function createEdiscoveryPurgeDataOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryPurgeDataOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryReviewSetCollectionResponse}
 */
// @ts-ignore
export function createEdiscoveryReviewSetCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryReviewSetCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryReviewSet}
 */
// @ts-ignore
export function createEdiscoveryReviewSetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryReviewSet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryReviewSetQueryCollectionResponse}
 */
// @ts-ignore
export function createEdiscoveryReviewSetQueryCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryReviewSetQueryCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryReviewSetQuery}
 */
// @ts-ignore
export function createEdiscoveryReviewSetQueryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryReviewSetQuery;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryReviewTagCollectionResponse}
 */
// @ts-ignore
export function createEdiscoveryReviewTagCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryReviewTagCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryReviewTag}
 */
// @ts-ignore
export function createEdiscoveryReviewTagFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryReviewTag;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoverySearchCollectionResponse}
 */
// @ts-ignore
export function createEdiscoverySearchCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoverySearchCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoverySearchExportOperation}
 */
// @ts-ignore
export function createEdiscoverySearchExportOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoverySearchExportOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoverySearch}
 */
// @ts-ignore
export function createEdiscoverySearchFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoverySearch;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryTagOperation}
 */
// @ts-ignore
export function createEdiscoveryTagOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryTagOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EmailContentThreatSubmission}
 */
// @ts-ignore
export function createEmailContentThreatSubmissionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEmailContentThreatSubmission;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EmailSender}
 */
// @ts-ignore
export function createEmailSenderFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEmailSender;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EmailThreatSubmissionCollectionResponse}
 */
// @ts-ignore
export function createEmailThreatSubmissionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEmailThreatSubmissionCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EmailThreatSubmission}
 */
// @ts-ignore
export function createEmailThreatSubmissionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.emailContentThreatSubmission":
                    return deserializeIntoEmailContentThreatSubmission;
                case "#microsoft.graph.security.emailUrlThreatSubmission":
                    return deserializeIntoEmailUrlThreatSubmission;
            }
        }
    }
    return deserializeIntoEmailThreatSubmission;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EmailThreatSubmissionPolicyCollectionResponse}
 */
// @ts-ignore
export function createEmailThreatSubmissionPolicyCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEmailThreatSubmissionPolicyCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EmailThreatSubmissionPolicy}
 */
// @ts-ignore
export function createEmailThreatSubmissionPolicyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEmailThreatSubmissionPolicy;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EmailUrlThreatSubmission}
 */
// @ts-ignore
export function createEmailUrlThreatSubmissionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEmailUrlThreatSubmission;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EnableConsentRecord}
 */
// @ts-ignore
export function createEnableConsentRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEnableConsentRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EpicSMSLinkRecord}
 */
// @ts-ignore
export function createEpicSMSLinkRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEpicSMSLinkRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EpicSMSSettingsUpdateRecord}
 */
// @ts-ignore
export function createEpicSMSSettingsUpdateRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEpicSMSSettingsUpdateRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EpicSMSUnlinkRecord}
 */
// @ts-ignore
export function createEpicSMSUnlinkRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEpicSMSUnlinkRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EventPropagationResult}
 */
// @ts-ignore
export function createEventPropagationResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEventPropagationResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EventQuery}
 */
// @ts-ignore
export function createEventQueryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEventQuery;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ExchangeAdminAuditRecord}
 */
// @ts-ignore
export function createExchangeAdminAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoExchangeAdminAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ExchangeAggregatedMailboxAuditRecord}
 */
// @ts-ignore
export function createExchangeAggregatedMailboxAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoExchangeAggregatedMailboxAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ExchangeAggregatedOperationRecord}
 */
// @ts-ignore
export function createExchangeAggregatedOperationRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoExchangeAggregatedOperationRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ExchangeMailboxAuditBaseRecord}
 */
// @ts-ignore
export function createExchangeMailboxAuditBaseRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoExchangeMailboxAuditBaseRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ExchangeMailboxAuditGroupRecord}
 */
// @ts-ignore
export function createExchangeMailboxAuditGroupRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoExchangeMailboxAuditGroupRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ExchangeMailboxAuditRecord}
 */
// @ts-ignore
export function createExchangeMailboxAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoExchangeMailboxAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ExportFileMetadata}
 */
// @ts-ignore
export function createExportFileMetadataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoExportFileMetadata;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FhirBaseUrlAddRecord}
 */
// @ts-ignore
export function createFhirBaseUrlAddRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFhirBaseUrlAddRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FhirBaseUrlApproveRecord}
 */
// @ts-ignore
export function createFhirBaseUrlApproveRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFhirBaseUrlApproveRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FhirBaseUrlDeleteRecord}
 */
// @ts-ignore
export function createFhirBaseUrlDeleteRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFhirBaseUrlDeleteRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FhirBaseUrlUpdateRecord}
 */
// @ts-ignore
export function createFhirBaseUrlUpdateRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFhirBaseUrlUpdateRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileContentThreatSubmission}
 */
// @ts-ignore
export function createFileContentThreatSubmissionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileContentThreatSubmission;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileDetails}
 */
// @ts-ignore
export function createFileDetailsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileDetails;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileEvidence}
 */
// @ts-ignore
export function createFileEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {File}
 */
// @ts-ignore
export function createFileFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.ediscoveryFile":
                    return deserializeIntoEdiscoveryFile;
            }
        }
    }
    return deserializeIntoFile;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileHashEvidence}
 */
// @ts-ignore
export function createFileHashEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileHashEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileHash}
 */
// @ts-ignore
export function createFileHashFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileHash;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanAppliedCategory}
 */
// @ts-ignore
export function createFilePlanAppliedCategoryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanAppliedCategory;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanAuthority}
 */
// @ts-ignore
export function createFilePlanAuthorityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanAuthority;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanCitation}
 */
// @ts-ignore
export function createFilePlanCitationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanCitation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanDepartment}
 */
// @ts-ignore
export function createFilePlanDepartmentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanDepartment;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanDescriptorBase}
 */
// @ts-ignore
export function createFilePlanDescriptorBaseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.filePlanAppliedCategory":
                    return deserializeIntoFilePlanAppliedCategory;
                case "#microsoft.graph.security.filePlanAuthority":
                    return deserializeIntoFilePlanAuthority;
                case "#microsoft.graph.security.filePlanCitation":
                    return deserializeIntoFilePlanCitation;
                case "#microsoft.graph.security.filePlanDepartment":
                    return deserializeIntoFilePlanDepartment;
                case "#microsoft.graph.security.filePlanReference":
                    return deserializeIntoFilePlanReference;
                case "#microsoft.graph.security.filePlanSubcategory":
                    return deserializeIntoFilePlanSubcategory;
            }
        }
    }
    return deserializeIntoFilePlanDescriptorBase;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanDescriptor}
 */
// @ts-ignore
export function createFilePlanDescriptorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanDescriptor;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanDescriptorTemplate}
 */
// @ts-ignore
export function createFilePlanDescriptorTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.authorityTemplate":
                    return deserializeIntoAuthorityTemplate;
                case "#microsoft.graph.security.categoryTemplate":
                    return deserializeIntoCategoryTemplate;
                case "#microsoft.graph.security.citationTemplate":
                    return deserializeIntoCitationTemplate;
                case "#microsoft.graph.security.departmentTemplate":
                    return deserializeIntoDepartmentTemplate;
                case "#microsoft.graph.security.filePlanReferenceTemplate":
                    return deserializeIntoFilePlanReferenceTemplate;
                case "#microsoft.graph.security.subcategoryTemplate":
                    return deserializeIntoSubcategoryTemplate;
            }
        }
    }
    return deserializeIntoFilePlanDescriptorTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanReference}
 */
// @ts-ignore
export function createFilePlanReferenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanReference;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanReferenceTemplateCollectionResponse}
 */
// @ts-ignore
export function createFilePlanReferenceTemplateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanReferenceTemplateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanReferenceTemplate}
 */
// @ts-ignore
export function createFilePlanReferenceTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanReferenceTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanSubcategory}
 */
// @ts-ignore
export function createFilePlanSubcategoryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanSubcategory;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileThreatSubmissionCollectionResponse}
 */
// @ts-ignore
export function createFileThreatSubmissionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileThreatSubmissionCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileThreatSubmission}
 */
// @ts-ignore
export function createFileThreatSubmissionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.fileContentThreatSubmission":
                    return deserializeIntoFileContentThreatSubmission;
                case "#microsoft.graph.security.fileUrlThreatSubmission":
                    return deserializeIntoFileUrlThreatSubmission;
            }
        }
    }
    return deserializeIntoFileThreatSubmission;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileUrlThreatSubmission}
 */
// @ts-ignore
export function createFileUrlThreatSubmissionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileUrlThreatSubmission;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ForceUserPasswordResetResponseAction}
 */
// @ts-ignore
export function createForceUserPasswordResetResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoForceUserPasswordResetResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FormattedContent}
 */
// @ts-ignore
export function createFormattedContentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFormattedContent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GeoLocation}
 */
// @ts-ignore
export function createGeoLocationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGeoLocation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GitHubOrganizationEvidence}
 */
// @ts-ignore
export function createGitHubOrganizationEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGitHubOrganizationEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GitHubRepoEvidence}
 */
// @ts-ignore
export function createGitHubRepoEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGitHubRepoEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GitHubUserEvidence}
 */
// @ts-ignore
export function createGitHubUserEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGitHubUserEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GoogleCloudResourceEvidence}
 */
// @ts-ignore
export function createGoogleCloudResourceEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGoogleCloudResourceEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HardDeleteResponseAction}
 */
// @ts-ignore
export function createHardDeleteResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHardDeleteResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HealthcareSignalRecord}
 */
// @ts-ignore
export function createHealthcareSignalRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHealthcareSignalRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HealthIssueCollectionResponse}
 */
// @ts-ignore
export function createHealthIssueCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHealthIssueCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HealthIssue}
 */
// @ts-ignore
export function createHealthIssueFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHealthIssue;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostCollectionResponse}
 */
// @ts-ignore
export function createHostCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostComponentCollectionResponse}
 */
// @ts-ignore
export function createHostComponentCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostComponentCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostComponent}
 */
// @ts-ignore
export function createHostComponentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostComponent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostCookieCollectionResponse}
 */
// @ts-ignore
export function createHostCookieCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostCookieCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostCookie}
 */
// @ts-ignore
export function createHostCookieFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostCookie;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostedRpaAuditRecord}
 */
// @ts-ignore
export function createHostedRpaAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostedRpaAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Host}
 */
// @ts-ignore
export function createHostFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.hostname":
                    return deserializeIntoHostname;
                case "#microsoft.graph.security.ipAddress":
                    return deserializeIntoIpAddress;
            }
        }
    }
    return deserializeIntoHost;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostLogonSessionEvidence}
 */
// @ts-ignore
export function createHostLogonSessionEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostLogonSessionEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Hostname}
 */
// @ts-ignore
export function createHostnameFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostname;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostPairCollectionResponse}
 */
// @ts-ignore
export function createHostPairCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostPairCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostPair}
 */
// @ts-ignore
export function createHostPairFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostPair;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostPortBanner}
 */
// @ts-ignore
export function createHostPortBannerFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostPortBanner;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostPortCollectionResponse}
 */
// @ts-ignore
export function createHostPortCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostPortCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostPortComponent}
 */
// @ts-ignore
export function createHostPortComponentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostPortComponent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostPort}
 */
// @ts-ignore
export function createHostPortFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostPort;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostReputation}
 */
// @ts-ignore
export function createHostReputationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostReputation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostReputationRule}
 */
// @ts-ignore
export function createHostReputationRuleFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostReputationRule;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostSslCertificateCollectionResponse}
 */
// @ts-ignore
export function createHostSslCertificateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostSslCertificateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostSslCertificate}
 */
// @ts-ignore
export function createHostSslCertificateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostSslCertificate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostSslCertificatePort}
 */
// @ts-ignore
export function createHostSslCertificatePortFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostSslCertificatePort;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostTrackerCollectionResponse}
 */
// @ts-ignore
export function createHostTrackerCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostTrackerCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostTracker}
 */
// @ts-ignore
export function createHostTrackerFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostTracker;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HrSignalAuditRecord}
 */
// @ts-ignore
export function createHrSignalAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHrSignalAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HuntingQueryResults}
 */
// @ts-ignore
export function createHuntingQueryResultsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHuntingQueryResults;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HuntingRowResult}
 */
// @ts-ignore
export function createHuntingRowResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHuntingRowResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HygieneEventRecord}
 */
// @ts-ignore
export function createHygieneEventRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHygieneEventRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Hyperlink}
 */
// @ts-ignore
export function createHyperlinkFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHyperlink;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IdentityContainer}
 */
// @ts-ignore
export function createIdentityContainerFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIdentityContainer;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ImpactedAsset}
 */
// @ts-ignore
export function createImpactedAssetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.impactedDeviceAsset":
                    return deserializeIntoImpactedDeviceAsset;
                case "#microsoft.graph.security.impactedMailboxAsset":
                    return deserializeIntoImpactedMailboxAsset;
                case "#microsoft.graph.security.impactedUserAsset":
                    return deserializeIntoImpactedUserAsset;
            }
        }
    }
    return deserializeIntoImpactedAsset;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ImpactedDeviceAsset}
 */
// @ts-ignore
export function createImpactedDeviceAssetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoImpactedDeviceAsset;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ImpactedMailboxAsset}
 */
// @ts-ignore
export function createImpactedMailboxAssetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoImpactedMailboxAsset;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ImpactedUserAsset}
 */
// @ts-ignore
export function createImpactedUserAssetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoImpactedUserAsset;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IncidentCollectionResponse}
 */
// @ts-ignore
export function createIncidentCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIncidentCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Incident}
 */
// @ts-ignore
export function createIncidentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIncident;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Indicator}
 */
// @ts-ignore
export function createIndicatorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.articleIndicator":
                    return deserializeIntoArticleIndicator;
                case "#microsoft.graph.security.intelligenceProfileIndicator":
                    return deserializeIntoIntelligenceProfileIndicator;
            }
        }
    }
    return deserializeIntoIndicator;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InformationBarrierPolicyApplicationAuditRecord}
 */
// @ts-ignore
export function createInformationBarrierPolicyApplicationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInformationBarrierPolicyApplicationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InformationProtectionAction}
 */
// @ts-ignore
export function createInformationProtectionActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.addContentFooterAction":
                    return deserializeIntoAddContentFooterAction;
                case "#microsoft.graph.security.addContentHeaderAction":
                    return deserializeIntoAddContentHeaderAction;
                case "#microsoft.graph.security.addWatermarkAction":
                    return deserializeIntoAddWatermarkAction;
                case "#microsoft.graph.security.applyLabelAction":
                    return deserializeIntoApplyLabelAction;
                case "#microsoft.graph.security.customAction":
                    return deserializeIntoCustomAction;
                case "#microsoft.graph.security.justifyAction":
                    return deserializeIntoJustifyAction;
                case "#microsoft.graph.security.metadataAction":
                    return deserializeIntoMetadataAction;
                case "#microsoft.graph.security.protectAdhocAction":
                    return deserializeIntoProtectAdhocAction;
                case "#microsoft.graph.security.protectByTemplateAction":
                    return deserializeIntoProtectByTemplateAction;
                case "#microsoft.graph.security.protectDoNotForwardAction":
                    return deserializeIntoProtectDoNotForwardAction;
                case "#microsoft.graph.security.recommendLabelAction":
                    return deserializeIntoRecommendLabelAction;
                case "#microsoft.graph.security.removeContentFooterAction":
                    return deserializeIntoRemoveContentFooterAction;
                case "#microsoft.graph.security.removeContentHeaderAction":
                    return deserializeIntoRemoveContentHeaderAction;
                case "#microsoft.graph.security.removeProtectionAction":
                    return deserializeIntoRemoveProtectionAction;
                case "#microsoft.graph.security.removeWatermarkAction":
                    return deserializeIntoRemoveWatermarkAction;
            }
        }
    }
    return deserializeIntoInformationProtectionAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InformationProtection}
 */
// @ts-ignore
export function createInformationProtectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInformationProtection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InformationProtectionPolicySetting}
 */
// @ts-ignore
export function createInformationProtectionPolicySettingFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInformationProtectionPolicySetting;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InformationWorkerProtectionAuditRecord}
 */
// @ts-ignore
export function createInformationWorkerProtectionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInformationWorkerProtectionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InitiateInvestigationResponseAction}
 */
// @ts-ignore
export function createInitiateInvestigationResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInitiateInvestigationResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InsiderRiskScopedUserInsightsRecord}
 */
// @ts-ignore
export function createInsiderRiskScopedUserInsightsRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInsiderRiskScopedUserInsightsRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InsiderRiskScopedUsersRecord}
 */
// @ts-ignore
export function createInsiderRiskScopedUsersRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInsiderRiskScopedUsersRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IntelligenceProfileCollectionResponse}
 */
// @ts-ignore
export function createIntelligenceProfileCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIntelligenceProfileCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IntelligenceProfileCountryOrRegionOfOrigin}
 */
// @ts-ignore
export function createIntelligenceProfileCountryOrRegionOfOriginFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIntelligenceProfileCountryOrRegionOfOrigin;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IntelligenceProfile}
 */
// @ts-ignore
export function createIntelligenceProfileFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIntelligenceProfile;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IntelligenceProfileIndicatorCollectionResponse}
 */
// @ts-ignore
export function createIntelligenceProfileIndicatorCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIntelligenceProfileIndicatorCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IntelligenceProfileIndicator}
 */
// @ts-ignore
export function createIntelligenceProfileIndicatorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIntelligenceProfileIndicator;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IoTDeviceEvidence}
 */
// @ts-ignore
export function createIoTDeviceEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIoTDeviceEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IpAddress}
 */
// @ts-ignore
export function createIpAddressFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIpAddress;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IpEvidence}
 */
// @ts-ignore
export function createIpEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIpEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IrmSecurityAlertRecord}
 */
// @ts-ignore
export function createIrmSecurityAlertRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIrmSecurityAlertRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IrmUserDefinedDetectionRecord}
 */
// @ts-ignore
export function createIrmUserDefinedDetectionRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIrmUserDefinedDetectionRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IsolateDeviceResponseAction}
 */
// @ts-ignore
export function createIsolateDeviceResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIsolateDeviceResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {JustifyAction}
 */
// @ts-ignore
export function createJustifyActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoJustifyAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KaizalaAuditRecord}
 */
// @ts-ignore
export function createKaizalaAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKaizalaAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KeyValuePair}
 */
// @ts-ignore
export function createKeyValuePairFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKeyValuePair;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesClusterEvidence}
 */
// @ts-ignore
export function createKubernetesClusterEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesClusterEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesControllerEvidence}
 */
// @ts-ignore
export function createKubernetesControllerEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesControllerEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesNamespaceEvidence}
 */
// @ts-ignore
export function createKubernetesNamespaceEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesNamespaceEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesPodEvidence}
 */
// @ts-ignore
export function createKubernetesPodEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesPodEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesSecretEvidence}
 */
// @ts-ignore
export function createKubernetesSecretEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesSecretEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesServiceAccountEvidence}
 */
// @ts-ignore
export function createKubernetesServiceAccountEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesServiceAccountEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesServiceEvidence}
 */
// @ts-ignore
export function createKubernetesServiceEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesServiceEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesServicePort}
 */
// @ts-ignore
export function createKubernetesServicePortFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesServicePort;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LabelAnalyticsAggregateAuditRecord}
 */
// @ts-ignore
export function createLabelAnalyticsAggregateAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLabelAnalyticsAggregateAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LabelContentExplorerAuditRecord}
 */
// @ts-ignore
export function createLabelContentExplorerAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLabelContentExplorerAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LabelingOptions}
 */
// @ts-ignore
export function createLabelingOptionsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLabelingOptions;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LabelsRoot}
 */
// @ts-ignore
export function createLabelsRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLabelsRoot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LargeContentMetadataAuditRecord}
 */
// @ts-ignore
export function createLargeContentMetadataAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLargeContentMetadataAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LoggedOnUser}
 */
// @ts-ignore
export function createLoggedOnUserFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLoggedOnUser;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {M365ComplianceConnectorAuditRecord}
 */
// @ts-ignore
export function createM365ComplianceConnectorAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoM365ComplianceConnectorAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {M365DAADAuditRecord}
 */
// @ts-ignore
export function createM365DAADAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoM365DAADAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MailboxConfigurationEvidence}
 */
// @ts-ignore
export function createMailboxConfigurationEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMailboxConfigurationEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MailboxEvidence}
 */
// @ts-ignore
export function createMailboxEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMailboxEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MailClusterEvidence}
 */
// @ts-ignore
export function createMailClusterEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMailClusterEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MailSubmissionData}
 */
// @ts-ignore
export function createMailSubmissionDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMailSubmissionData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MalwareEvidence}
 */
// @ts-ignore
export function createMalwareEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMalwareEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedServicesAuditRecord}
 */
// @ts-ignore
export function createManagedServicesAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedServicesAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenantsAuditRecord}
 */
// @ts-ignore
export function createManagedTenantsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenantsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MapgAlertsAuditRecord}
 */
// @ts-ignore
export function createMapgAlertsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMapgAlertsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MapgOnboardAuditRecord}
 */
// @ts-ignore
export function createMapgOnboardAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMapgOnboardAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MapgPolicyAuditRecord}
 */
// @ts-ignore
export function createMapgPolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMapgPolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MarkUserAsCompromisedResponseAction}
 */
// @ts-ignore
export function createMarkUserAsCompromisedResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMarkUserAsCompromisedResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {McasAlertsAuditRecord}
 */
// @ts-ignore
export function createMcasAlertsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMcasAlertsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MdaDataSecuritySignalRecord}
 */
// @ts-ignore
export function createMdaDataSecuritySignalRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMdaDataSecuritySignalRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MdatpAuditRecord}
 */
// @ts-ignore
export function createMdatpAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMdatpAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MdcEventsRecord}
 */
// @ts-ignore
export function createMdcEventsRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMdcEventsRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MdiAuditRecord}
 */
// @ts-ignore
export function createMdiAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMdiAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MeshWorldsAuditRecord}
 */
// @ts-ignore
export function createMeshWorldsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMeshWorldsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MetadataAction}
 */
// @ts-ignore
export function createMetadataActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMetadataAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Microsoft365BackupBackupItemAuditRecord}
 */
// @ts-ignore
export function createMicrosoft365BackupBackupItemAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoft365BackupBackupItemAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Microsoft365BackupBackupPolicyAuditRecord}
 */
// @ts-ignore
export function createMicrosoft365BackupBackupPolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoft365BackupBackupPolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Microsoft365BackupRestoreItemAuditRecord}
 */
// @ts-ignore
export function createMicrosoft365BackupRestoreItemAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoft365BackupRestoreItemAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Microsoft365BackupRestoreTaskAuditRecord}
 */
// @ts-ignore
export function createMicrosoft365BackupRestoreTaskAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoft365BackupRestoreTaskAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftDefenderExpertsBaseAuditRecord}
 */
// @ts-ignore
export function createMicrosoftDefenderExpertsBaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftDefenderExpertsBaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftDefenderExpertsXDRAuditRecord}
 */
// @ts-ignore
export function createMicrosoftDefenderExpertsXDRAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftDefenderExpertsXDRAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftFlowAuditRecord}
 */
// @ts-ignore
export function createMicrosoftFlowAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftFlowAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftFormsAuditRecord}
 */
// @ts-ignore
export function createMicrosoftFormsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftFormsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftGraphDataConnectConsent}
 */
// @ts-ignore
export function createMicrosoftGraphDataConnectConsentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftGraphDataConnectConsent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftGraphDataConnectOperation}
 */
// @ts-ignore
export function createMicrosoftGraphDataConnectOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftGraphDataConnectOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftPurviewDataMapOperationRecord}
 */
// @ts-ignore
export function createMicrosoftPurviewDataMapOperationRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftPurviewDataMapOperationRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftPurviewMetadataPolicyOperationRecord}
 */
// @ts-ignore
export function createMicrosoftPurviewMetadataPolicyOperationRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftPurviewMetadataPolicyOperationRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftPurviewPolicyOperationRecord}
 */
// @ts-ignore
export function createMicrosoftPurviewPolicyOperationRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftPurviewPolicyOperationRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftPurviewPrivacyAuditEvent}
 */
// @ts-ignore
export function createMicrosoftPurviewPrivacyAuditEventFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftPurviewPrivacyAuditEvent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftStreamAuditRecord}
 */
// @ts-ignore
export function createMicrosoftStreamAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftStreamAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftTeamsAdminAuditRecord}
 */
// @ts-ignore
export function createMicrosoftTeamsAdminAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftTeamsAdminAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftTeamsAnalyticsAuditRecord}
 */
// @ts-ignore
export function createMicrosoftTeamsAnalyticsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftTeamsAnalyticsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftTeamsAuditRecord}
 */
// @ts-ignore
export function createMicrosoftTeamsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftTeamsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftTeamsDeviceAuditRecord}
 */
// @ts-ignore
export function createMicrosoftTeamsDeviceAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftTeamsDeviceAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftTeamsRetentionLabelActionAuditRecord}
 */
// @ts-ignore
export function createMicrosoftTeamsRetentionLabelActionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftTeamsRetentionLabelActionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftTeamsSensitivityLabelActionAuditRecord}
 */
// @ts-ignore
export function createMicrosoftTeamsSensitivityLabelActionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftTeamsSensitivityLabelActionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftTeamsShiftsAuditRecord}
 */
// @ts-ignore
export function createMicrosoftTeamsShiftsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftTeamsShiftsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelExchangeItemAuditRecord}
 */
// @ts-ignore
export function createMipAutoLabelExchangeItemAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelExchangeItemAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelItemAuditRecord}
 */
// @ts-ignore
export function createMipAutoLabelItemAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelItemAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelPolicyAuditRecord}
 */
// @ts-ignore
export function createMipAutoLabelPolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelPolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelProgressFeedbackAuditRecord}
 */
// @ts-ignore
export function createMipAutoLabelProgressFeedbackAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelProgressFeedbackAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelSharePointItemAuditRecord}
 */
// @ts-ignore
export function createMipAutoLabelSharePointItemAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelSharePointItemAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelSharePointPolicyLocationAuditRecord}
 */
// @ts-ignore
export function createMipAutoLabelSharePointPolicyLocationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelSharePointPolicyLocationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelSimulationSharePointCompletionRecord}
 */
// @ts-ignore
export function createMipAutoLabelSimulationSharePointCompletionRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelSimulationSharePointCompletionRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelSimulationSharePointProgressRecord}
 */
// @ts-ignore
export function createMipAutoLabelSimulationSharePointProgressRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelSimulationSharePointProgressRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelSimulationStatisticsRecord}
 */
// @ts-ignore
export function createMipAutoLabelSimulationStatisticsRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelSimulationStatisticsRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelSimulationStatusRecord}
 */
// @ts-ignore
export function createMipAutoLabelSimulationStatusRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelSimulationStatusRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipExactDataMatchAuditRecord}
 */
// @ts-ignore
export function createMipExactDataMatchAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipExactDataMatchAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipLabelAnalyticsAuditRecord}
 */
// @ts-ignore
export function createMipLabelAnalyticsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipLabelAnalyticsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipLabelAuditRecord}
 */
// @ts-ignore
export function createMipLabelAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipLabelAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MoveToDeletedItemsResponseAction}
 */
// @ts-ignore
export function createMoveToDeletedItemsResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMoveToDeletedItemsResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MoveToInboxResponseAction}
 */
// @ts-ignore
export function createMoveToInboxResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMoveToInboxResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MoveToJunkResponseAction}
 */
// @ts-ignore
export function createMoveToJunkResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMoveToJunkResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MS365DCustomDetectionAuditRecord}
 */
// @ts-ignore
export function createMS365DCustomDetectionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMS365DCustomDetectionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MS365DIncidentAuditRecord}
 */
// @ts-ignore
export function createMS365DIncidentAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMS365DIncidentAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MS365DSuppressionRuleAuditRecord}
 */
// @ts-ignore
export function createMS365DSuppressionRuleAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMS365DSuppressionRuleAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MsdeGeneralSettingsAuditRecord}
 */
// @ts-ignore
export function createMsdeGeneralSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMsdeGeneralSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MsdeIndicatorsSettingsAuditRecord}
 */
// @ts-ignore
export function createMsdeIndicatorsSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMsdeIndicatorsSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MsdeResponseActionsAuditRecord}
 */
// @ts-ignore
export function createMsdeResponseActionsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMsdeResponseActionsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MsdeRolesSettingsAuditRecord}
 */
// @ts-ignore
export function createMsdeRolesSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMsdeRolesSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MsticNationStateNotificationRecord}
 */
// @ts-ignore
export function createMsticNationStateNotificationRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMsticNationStateNotificationRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MultiStageDispositionAuditRecord}
 */
// @ts-ignore
export function createMultiStageDispositionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMultiStageDispositionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MyAnalyticsSettingsAuditRecord}
 */
// @ts-ignore
export function createMyAnalyticsSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMyAnalyticsSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {NetworkAdapter}
 */
// @ts-ignore
export function createNetworkAdapterFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoNetworkAdapter;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {NetworkConnectionEvidence}
 */
// @ts-ignore
export function createNetworkConnectionEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoNetworkConnectionEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {NicEvidence}
 */
// @ts-ignore
export function createNicEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoNicEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OauthApplicationEvidence}
 */
// @ts-ignore
export function createOauthApplicationEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOauthApplicationEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OcrSettings}
 */
// @ts-ignore
export function createOcrSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOcrSettings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OfficeNativeAuditRecord}
 */
// @ts-ignore
export function createOfficeNativeAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOfficeNativeAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OmePortalAuditRecord}
 */
// @ts-ignore
export function createOmePortalAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOmePortalAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OneDriveAuditRecord}
 */
// @ts-ignore
export function createOneDriveAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOneDriveAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OnPremisesFileShareScannerDlpAuditRecord}
 */
// @ts-ignore
export function createOnPremisesFileShareScannerDlpAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOnPremisesFileShareScannerDlpAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OnPremisesScannerDlpAuditRecord}
 */
// @ts-ignore
export function createOnPremisesScannerDlpAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOnPremisesScannerDlpAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OnPremisesSharePointScannerDlpAuditRecord}
 */
// @ts-ignore
export function createOnPremisesSharePointScannerDlpAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOnPremisesSharePointScannerDlpAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OrganizationalScope}
 */
// @ts-ignore
export function createOrganizationalScopeFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOrganizationalScope;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OwaGetAccessTokenForResourceAuditRecord}
 */
// @ts-ignore
export function createOwaGetAccessTokenForResourceAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOwaGetAccessTokenForResourceAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PassiveDnsRecordCollectionResponse}
 */
// @ts-ignore
export function createPassiveDnsRecordCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPassiveDnsRecordCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PassiveDnsRecord}
 */
// @ts-ignore
export function createPassiveDnsRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPassiveDnsRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PeopleAdminSettingsAuditRecord}
 */
// @ts-ignore
export function createPeopleAdminSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPeopleAdminSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PhysicalBadgingSignalAuditRecord}
 */
// @ts-ignore
export function createPhysicalBadgingSignalAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPhysicalBadgingSignalAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlannerCopyPlanAuditRecord}
 */
// @ts-ignore
export function createPlannerCopyPlanAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlannerCopyPlanAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlannerPlanAuditRecord}
 */
// @ts-ignore
export function createPlannerPlanAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlannerPlanAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlannerPlanListAuditRecord}
 */
// @ts-ignore
export function createPlannerPlanListAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlannerPlanListAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlannerRosterAuditRecord}
 */
// @ts-ignore
export function createPlannerRosterAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlannerRosterAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlannerRosterSensitivityLabelAuditRecord}
 */
// @ts-ignore
export function createPlannerRosterSensitivityLabelAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlannerRosterSensitivityLabelAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlannerTaskAuditRecord}
 */
// @ts-ignore
export function createPlannerTaskAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlannerTaskAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlannerTaskListAuditRecord}
 */
// @ts-ignore
export function createPlannerTaskListAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlannerTaskListAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlannerTenantSettingsAuditRecord}
 */
// @ts-ignore
export function createPlannerTenantSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlannerTenantSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PolicyBase}
 */
// @ts-ignore
export function createPolicyBaseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.ediscoveryHoldPolicy":
                    return deserializeIntoEdiscoveryHoldPolicy;
            }
        }
    }
    return deserializeIntoPolicyBase;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerAppsAuditAppRecord}
 */
// @ts-ignore
export function createPowerAppsAuditAppRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerAppsAuditAppRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerAppsAuditPlanRecord}
 */
// @ts-ignore
export function createPowerAppsAuditPlanRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerAppsAuditPlanRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerAppsAuditResourceRecord}
 */
// @ts-ignore
export function createPowerAppsAuditResourceRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerAppsAuditResourceRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerBiAuditRecord}
 */
// @ts-ignore
export function createPowerBiAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerBiAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerBiDlpAuditRecord}
 */
// @ts-ignore
export function createPowerBiDlpAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerBiDlpAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerPagesSiteAuditRecord}
 */
// @ts-ignore
export function createPowerPagesSiteAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerPagesSiteAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerPlatformAdminDlpAuditRecord}
 */
// @ts-ignore
export function createPowerPlatformAdminDlpAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerPlatformAdminDlpAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerPlatformAdminEnvironmentAuditRecord}
 */
// @ts-ignore
export function createPowerPlatformAdminEnvironmentAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerPlatformAdminEnvironmentAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerPlatformAdministratorActivityRecord}
 */
// @ts-ignore
export function createPowerPlatformAdministratorActivityRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerPlatformAdministratorActivityRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerPlatformLockboxResourceAccessRequestAuditRecord}
 */
// @ts-ignore
export function createPowerPlatformLockboxResourceAccessRequestAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerPlatformLockboxResourceAccessRequestAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerPlatformLockboxResourceCommandAuditRecord}
 */
// @ts-ignore
export function createPowerPlatformLockboxResourceCommandAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerPlatformLockboxResourceCommandAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerPlatformServiceActivityAuditRecord}
 */
// @ts-ignore
export function createPowerPlatformServiceActivityAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerPlatformServiceActivityAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PrivacyDataMatchAuditRecord}
 */
// @ts-ignore
export function createPrivacyDataMatchAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrivacyDataMatchAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PrivacyDataMinimizationRecord}
 */
// @ts-ignore
export function createPrivacyDataMinimizationRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrivacyDataMinimizationRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PrivacyDigestEmailRecord}
 */
// @ts-ignore
export function createPrivacyDigestEmailRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrivacyDigestEmailRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PrivacyOpenAccessAuditRecord}
 */
// @ts-ignore
export function createPrivacyOpenAccessAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrivacyOpenAccessAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PrivacyPortalAuditRecord}
 */
// @ts-ignore
export function createPrivacyPortalAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrivacyPortalAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PrivacyRemediationActionRecord}
 */
// @ts-ignore
export function createPrivacyRemediationActionRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrivacyRemediationActionRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PrivacyRemediationRecord}
 */
// @ts-ignore
export function createPrivacyRemediationRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrivacyRemediationRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PrivacyTenantAuditHistoryRecord}
 */
// @ts-ignore
export function createPrivacyTenantAuditHistoryRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrivacyTenantAuditHistoryRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProcessEvidence}
 */
// @ts-ignore
export function createProcessEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProcessEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProjectAuditRecord}
 */
// @ts-ignore
export function createProjectAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProjectAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProjectForTheWebAssignedToMeSettingsAuditRecord}
 */
// @ts-ignore
export function createProjectForTheWebAssignedToMeSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProjectForTheWebAssignedToMeSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProjectForTheWebProjectAuditRecord}
 */
// @ts-ignore
export function createProjectForTheWebProjectAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProjectForTheWebProjectAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProjectForTheWebProjectSettingsAuditRecord}
 */
// @ts-ignore
export function createProjectForTheWebProjectSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProjectForTheWebProjectSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProjectForTheWebRoadmapAuditRecord}
 */
// @ts-ignore
export function createProjectForTheWebRoadmapAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProjectForTheWebRoadmapAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProjectForTheWebRoadmapItemAuditRecord}
 */
// @ts-ignore
export function createProjectForTheWebRoadmapItemAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProjectForTheWebRoadmapItemAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProjectForTheWebRoadmapSettingsAuditRecord}
 */
// @ts-ignore
export function createProjectForTheWebRoadmapSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProjectForTheWebRoadmapSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProjectForTheWebTaskAuditRecord}
 */
// @ts-ignore
export function createProjectForTheWebTaskAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProjectForTheWebTaskAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProtectAdhocAction}
 */
// @ts-ignore
export function createProtectAdhocActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProtectAdhocAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProtectByTemplateAction}
 */
// @ts-ignore
export function createProtectByTemplateActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProtectByTemplateAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProtectDoNotForwardAction}
 */
// @ts-ignore
export function createProtectDoNotForwardActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProtectDoNotForwardAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProtectionRule}
 */
// @ts-ignore
export function createProtectionRuleFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.detectionRule":
                    return deserializeIntoDetectionRule;
            }
        }
    }
    return deserializeIntoProtectionRule;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PublicFolderAuditRecord}
 */
// @ts-ignore
export function createPublicFolderAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPublicFolderAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PurviewInsiderRiskAlertsRecord}
 */
// @ts-ignore
export function createPurviewInsiderRiskAlertsRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPurviewInsiderRiskAlertsRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PurviewInsiderRiskCasesRecord}
 */
// @ts-ignore
export function createPurviewInsiderRiskCasesRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPurviewInsiderRiskCasesRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QuarantineAuditRecord}
 */
// @ts-ignore
export function createQuarantineAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQuarantineAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryCondition}
 */
// @ts-ignore
export function createQueryConditionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryCondition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RecommendedHuntingQuery}
 */
// @ts-ignore
export function createRecommendedHuntingQueryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRecommendedHuntingQuery;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RecommendLabelAction}
 */
// @ts-ignore
export function createRecommendLabelActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRecommendLabelAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RecordsManagementAuditRecord}
 */
// @ts-ignore
export function createRecordsManagementAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRecordsManagementAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RedundancyDetectionSettings}
 */
// @ts-ignore
export function createRedundancyDetectionSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRedundancyDetectionSettings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RegistryKeyEvidence}
 */
// @ts-ignore
export function createRegistryKeyEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRegistryKeyEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RegistryValueEvidence}
 */
// @ts-ignore
export function createRegistryValueEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRegistryValueEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RemoveContentFooterAction}
 */
// @ts-ignore
export function createRemoveContentFooterActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRemoveContentFooterAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RemoveContentHeaderAction}
 */
// @ts-ignore
export function createRemoveContentHeaderActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRemoveContentHeaderAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RemoveProtectionAction}
 */
// @ts-ignore
export function createRemoveProtectionActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRemoveProtectionAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RemoveWatermarkAction}
 */
// @ts-ignore
export function createRemoveWatermarkActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRemoveWatermarkAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ResponseAction}
 */
// @ts-ignore
export function createResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.allowFileResponseAction":
                    return deserializeIntoAllowFileResponseAction;
                case "#microsoft.graph.security.blockFileResponseAction":
                    return deserializeIntoBlockFileResponseAction;
                case "#microsoft.graph.security.collectInvestigationPackageResponseAction":
                    return deserializeIntoCollectInvestigationPackageResponseAction;
                case "#microsoft.graph.security.disableUserResponseAction":
                    return deserializeIntoDisableUserResponseAction;
                case "#microsoft.graph.security.forceUserPasswordResetResponseAction":
                    return deserializeIntoForceUserPasswordResetResponseAction;
                case "#microsoft.graph.security.hardDeleteResponseAction":
                    return deserializeIntoHardDeleteResponseAction;
                case "#microsoft.graph.security.initiateInvestigationResponseAction":
                    return deserializeIntoInitiateInvestigationResponseAction;
                case "#microsoft.graph.security.isolateDeviceResponseAction":
                    return deserializeIntoIsolateDeviceResponseAction;
                case "#microsoft.graph.security.markUserAsCompromisedResponseAction":
                    return deserializeIntoMarkUserAsCompromisedResponseAction;
                case "#microsoft.graph.security.moveToDeletedItemsResponseAction":
                    return deserializeIntoMoveToDeletedItemsResponseAction;
                case "#microsoft.graph.security.moveToInboxResponseAction":
                    return deserializeIntoMoveToInboxResponseAction;
                case "#microsoft.graph.security.moveToJunkResponseAction":
                    return deserializeIntoMoveToJunkResponseAction;
                case "#microsoft.graph.security.restrictAppExecutionResponseAction":
                    return deserializeIntoRestrictAppExecutionResponseAction;
                case "#microsoft.graph.security.runAntivirusScanResponseAction":
                    return deserializeIntoRunAntivirusScanResponseAction;
                case "#microsoft.graph.security.softDeleteResponseAction":
                    return deserializeIntoSoftDeleteResponseAction;
                case "#microsoft.graph.security.stopAndQuarantineFileResponseAction":
                    return deserializeIntoStopAndQuarantineFileResponseAction;
            }
        }
    }
    return deserializeIntoResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RestrictAppExecutionResponseAction}
 */
// @ts-ignore
export function createRestrictAppExecutionResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRestrictAppExecutionResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionDurationForever}
 */
// @ts-ignore
export function createRetentionDurationForeverFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionDurationForever;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionDuration}
 */
// @ts-ignore
export function createRetentionDurationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.retentionDurationForever":
                    return deserializeIntoRetentionDurationForever;
                case "#microsoft.graph.security.retentionDurationInDays":
                    return deserializeIntoRetentionDurationInDays;
            }
        }
    }
    return deserializeIntoRetentionDuration;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionDurationInDays}
 */
// @ts-ignore
export function createRetentionDurationInDaysFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionDurationInDays;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionEventCollectionResponse}
 */
// @ts-ignore
export function createRetentionEventCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionEventCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionEvent}
 */
// @ts-ignore
export function createRetentionEventFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionEvent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionEventStatus}
 */
// @ts-ignore
export function createRetentionEventStatusFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionEventStatus;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionEventTypeCollectionResponse}
 */
// @ts-ignore
export function createRetentionEventTypeCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionEventTypeCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionEventType}
 */
// @ts-ignore
export function createRetentionEventTypeFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionEventType;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionLabelCollectionResponse}
 */
// @ts-ignore
export function createRetentionLabelCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionLabelCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionLabel}
 */
// @ts-ignore
export function createRetentionLabelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionLabel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionPolicyAuditRecord}
 */
// @ts-ignore
export function createRetentionPolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionPolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RuleSchedule}
 */
// @ts-ignore
export function createRuleScheduleFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRuleSchedule;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RulesRoot}
 */
// @ts-ignore
export function createRulesRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRulesRoot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RunAntivirusScanResponseAction}
 */
// @ts-ignore
export function createRunAntivirusScanResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRunAntivirusScanResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RunDetails}
 */
// @ts-ignore
export function createRunDetailsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRunDetails;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SasTokenEvidence}
 */
// @ts-ignore
export function createSasTokenEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSasTokenEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ScoreEvidence}
 */
// @ts-ignore
export function createScoreEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoScoreEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ScorePlatformGenericAuditRecord}
 */
// @ts-ignore
export function createScorePlatformGenericAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoScorePlatformGenericAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ScriptRunAuditRecord}
 */
// @ts-ignore
export function createScriptRunAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoScriptRunAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchAuditRecord}
 */
// @ts-ignore
export function createSearchAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Search}
 */
// @ts-ignore
export function createSearchFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.ediscoveryReviewSetQuery":
                    return deserializeIntoEdiscoveryReviewSetQuery;
                case "#microsoft.graph.security.ediscoverySearch":
                    return deserializeIntoEdiscoverySearch;
            }
        }
    }
    return deserializeIntoSearch;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SecurityComplianceAlertRecord}
 */
// @ts-ignore
export function createSecurityComplianceAlertRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecurityComplianceAlertRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SecurityComplianceCenterEOPCmdletAuditRecord}
 */
// @ts-ignore
export function createSecurityComplianceCenterEOPCmdletAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecurityComplianceCenterEOPCmdletAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SecurityComplianceInsightsAuditRecord}
 */
// @ts-ignore
export function createSecurityComplianceInsightsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecurityComplianceInsightsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SecurityComplianceRBACAuditRecord}
 */
// @ts-ignore
export function createSecurityComplianceRBACAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecurityComplianceRBACAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SecurityComplianceUserChangeAuditRecord}
 */
// @ts-ignore
export function createSecurityComplianceUserChangeAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecurityComplianceUserChangeAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Security}
 */
// @ts-ignore
export function createSecurityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecurity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SecurityGroupEvidence}
 */
// @ts-ignore
export function createSecurityGroupEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecurityGroupEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SensitivityLabelCollectionResponse}
 */
// @ts-ignore
export function createSensitivityLabelCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSensitivityLabelCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SensitivityLabel}
 */
// @ts-ignore
export function createSensitivityLabelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSensitivityLabel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SensorCollectionResponse}
 */
// @ts-ignore
export function createSensorCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSensorCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SensorDeploymentPackage}
 */
// @ts-ignore
export function createSensorDeploymentPackageFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSensorDeploymentPackage;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Sensor}
 */
// @ts-ignore
export function createSensorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSensor;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SensorSettings}
 */
// @ts-ignore
export function createSensorSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSensorSettings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServicePrincipalEvidence}
 */
// @ts-ignore
export function createServicePrincipalEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServicePrincipalEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointAppPermissionOperationAuditRecord}
 */
// @ts-ignore
export function createSharePointAppPermissionOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointAppPermissionOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointAuditRecord}
 */
// @ts-ignore
export function createSharePointAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointCommentOperationAuditRecord}
 */
// @ts-ignore
export function createSharePointCommentOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointCommentOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointContentTypeOperationAuditRecord}
 */
// @ts-ignore
export function createSharePointContentTypeOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointContentTypeOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointESignatureAuditRecord}
 */
// @ts-ignore
export function createSharePointESignatureAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointESignatureAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointFieldOperationAuditRecord}
 */
// @ts-ignore
export function createSharePointFieldOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointFieldOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointFileOperationAuditRecord}
 */
// @ts-ignore
export function createSharePointFileOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointFileOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointListOperationAuditRecord}
 */
// @ts-ignore
export function createSharePointListOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointListOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointSharingOperationAuditRecord}
 */
// @ts-ignore
export function createSharePointSharingOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointSharingOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SinglePropertySchema}
 */
// @ts-ignore
export function createSinglePropertySchemaFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSinglePropertySchema;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SiteSourceCollectionResponse}
 */
// @ts-ignore
export function createSiteSourceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSiteSourceCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SiteSource}
 */
// @ts-ignore
export function createSiteSourceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSiteSource;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SkypeForBusinessBaseAuditRecord}
 */
// @ts-ignore
export function createSkypeForBusinessBaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSkypeForBusinessBaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SkypeForBusinessCmdletsAuditRecord}
 */
// @ts-ignore
export function createSkypeForBusinessCmdletsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSkypeForBusinessCmdletsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SkypeForBusinessPSTNUsageAuditRecord}
 */
// @ts-ignore
export function createSkypeForBusinessPSTNUsageAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSkypeForBusinessPSTNUsageAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SkypeForBusinessUsersBlockedAuditRecord}
 */
// @ts-ignore
export function createSkypeForBusinessUsersBlockedAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSkypeForBusinessUsersBlockedAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SmsCreatePhoneNumberRecord}
 */
// @ts-ignore
export function createSmsCreatePhoneNumberRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSmsCreatePhoneNumberRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SmsDeletePhoneNumberRecord}
 */
// @ts-ignore
export function createSmsDeletePhoneNumberRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSmsDeletePhoneNumberRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SoftDeleteResponseAction}
 */
// @ts-ignore
export function createSoftDeleteResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSoftDeleteResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SslCertificateCollectionResponse}
 */
// @ts-ignore
export function createSslCertificateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSslCertificateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SslCertificateEntity}
 */
// @ts-ignore
export function createSslCertificateEntityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSslCertificateEntity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SslCertificate}
 */
// @ts-ignore
export function createSslCertificateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSslCertificate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {StopAndQuarantineFileResponseAction}
 */
// @ts-ignore
export function createStopAndQuarantineFileResponseActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoStopAndQuarantineFileResponseAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Stream}
 */
// @ts-ignore
export function createStreamFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoStream;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {StringValueDictionary}
 */
// @ts-ignore
export function createStringValueDictionaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoStringValueDictionary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SubcategoryTemplateCollectionResponse}
 */
// @ts-ignore
export function createSubcategoryTemplateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubcategoryTemplateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SubcategoryTemplate}
 */
// @ts-ignore
export function createSubcategoryTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubcategoryTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SubdomainCollectionResponse}
 */
// @ts-ignore
export function createSubdomainCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubdomainCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Subdomain}
 */
// @ts-ignore
export function createSubdomainFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubdomain;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SubmissionAdminReview}
 */
// @ts-ignore
export function createSubmissionAdminReviewFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubmissionAdminReview;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SubmissionDetectedFile}
 */
// @ts-ignore
export function createSubmissionDetectedFileFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubmissionDetectedFile;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SubmissionMailEvidence}
 */
// @ts-ignore
export function createSubmissionMailEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubmissionMailEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SubmissionResult}
 */
// @ts-ignore
export function createSubmissionResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubmissionResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SubmissionUserIdentity}
 */
// @ts-ignore
export function createSubmissionUserIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubmissionUserIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SupervisoryReviewDayXInsightsAuditRecord}
 */
// @ts-ignore
export function createSupervisoryReviewDayXInsightsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSupervisoryReviewDayXInsightsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SyntheticProbeAuditRecord}
 */
// @ts-ignore
export function createSyntheticProbeAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSyntheticProbeAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Tag}
 */
// @ts-ignore
export function createTagFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.ediscoveryReviewTag":
                    return deserializeIntoEdiscoveryReviewTag;
            }
        }
    }
    return deserializeIntoTag;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamsEasyApprovalsAuditRecord}
 */
// @ts-ignore
export function createTeamsEasyApprovalsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamsEasyApprovalsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamsHealthcareAuditRecord}
 */
// @ts-ignore
export function createTeamsHealthcareAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamsHealthcareAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamsUpdatesAuditRecord}
 */
// @ts-ignore
export function createTeamsUpdatesAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamsUpdatesAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantAllowBlockListAuditRecord}
 */
// @ts-ignore
export function createTenantAllowBlockListAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantAllowBlockListAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantAllowBlockListEntryResult}
 */
// @ts-ignore
export function createTenantAllowBlockListEntryResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantAllowBlockListEntryResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantAllowOrBlockListAction}
 */
// @ts-ignore
export function createTenantAllowOrBlockListActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantAllowOrBlockListAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ThreatFinderAuditRecord}
 */
// @ts-ignore
export function createThreatFinderAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoThreatFinderAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ThreatIntelligenceAtpContentData}
 */
// @ts-ignore
export function createThreatIntelligenceAtpContentDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoThreatIntelligenceAtpContentData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ThreatIntelligence}
 */
// @ts-ignore
export function createThreatIntelligenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoThreatIntelligence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ThreatIntelligenceMailData}
 */
// @ts-ignore
export function createThreatIntelligenceMailDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoThreatIntelligenceMailData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ThreatIntelligenceUrlClickData}
 */
// @ts-ignore
export function createThreatIntelligenceUrlClickDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoThreatIntelligenceUrlClickData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ThreatSubmission}
 */
// @ts-ignore
export function createThreatSubmissionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.emailContentThreatSubmission":
                    return deserializeIntoEmailContentThreatSubmission;
                case "#microsoft.graph.security.emailThreatSubmission":
                    return deserializeIntoEmailThreatSubmission;
                case "#microsoft.graph.security.emailUrlThreatSubmission":
                    return deserializeIntoEmailUrlThreatSubmission;
                case "#microsoft.graph.security.fileContentThreatSubmission":
                    return deserializeIntoFileContentThreatSubmission;
                case "#microsoft.graph.security.fileThreatSubmission":
                    return deserializeIntoFileThreatSubmission;
                case "#microsoft.graph.security.fileUrlThreatSubmission":
                    return deserializeIntoFileUrlThreatSubmission;
                case "#microsoft.graph.security.urlThreatSubmission":
                    return deserializeIntoUrlThreatSubmission;
            }
        }
    }
    return deserializeIntoThreatSubmission;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ThreatSubmissionRoot}
 */
// @ts-ignore
export function createThreatSubmissionRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoThreatSubmissionRoot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TodoAuditRecord}
 */
// @ts-ignore
export function createTodoAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTodoAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TopicModelingSettings}
 */
// @ts-ignore
export function createTopicModelingSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTopicModelingSettings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TriggersRoot}
 */
// @ts-ignore
export function createTriggersRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTriggersRoot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TriggerTypesRoot}
 */
// @ts-ignore
export function createTriggerTypesRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTriggerTypesRoot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UamOperationAuditRecord}
 */
// @ts-ignore
export function createUamOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUamOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UnclassifiedArtifact}
 */
// @ts-ignore
export function createUnclassifiedArtifactFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnclassifiedArtifact;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UnifiedGroupAuditRecord}
 */
// @ts-ignore
export function createUnifiedGroupAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedGroupAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UnifiedGroupSourceCollectionResponse}
 */
// @ts-ignore
export function createUnifiedGroupSourceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedGroupSourceCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UnifiedGroupSource}
 */
// @ts-ignore
export function createUnifiedGroupSourceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedGroupSource;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UnifiedSimulationMatchedItemAuditRecord}
 */
// @ts-ignore
export function createUnifiedSimulationMatchedItemAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedSimulationMatchedItemAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UnifiedSimulationSummaryAuditRecord}
 */
// @ts-ignore
export function createUnifiedSimulationSummaryAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedSimulationSummaryAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UploadCertificateRecord}
 */
// @ts-ignore
export function createUploadCertificateRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUploadCertificateRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UrbacAssignmentAuditRecord}
 */
// @ts-ignore
export function createUrbacAssignmentAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUrbacAssignmentAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UrbacEnableStateAuditRecord}
 */
// @ts-ignore
export function createUrbacEnableStateAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUrbacEnableStateAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UrbacRoleAuditRecord}
 */
// @ts-ignore
export function createUrbacRoleAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUrbacRoleAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UrlEvidence}
 */
// @ts-ignore
export function createUrlEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUrlEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UrlThreatSubmissionCollectionResponse}
 */
// @ts-ignore
export function createUrlThreatSubmissionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUrlThreatSubmissionCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UrlThreatSubmission}
 */
// @ts-ignore
export function createUrlThreatSubmissionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUrlThreatSubmission;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserAccount}
 */
// @ts-ignore
export function createUserAccountFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserAccount;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserEvidence}
 */
// @ts-ignore
export function createUserEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserSourceCollectionResponse}
 */
// @ts-ignore
export function createUserSourceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserSourceCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserSource}
 */
// @ts-ignore
export function createUserSourceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserSource;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserTrainingAuditRecord}
 */
// @ts-ignore
export function createUserTrainingAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserTrainingAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VfamBasePolicyAuditRecord}
 */
// @ts-ignore
export function createVfamBasePolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVfamBasePolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VfamCreatePolicyAuditRecord}
 */
// @ts-ignore
export function createVfamCreatePolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVfamCreatePolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VfamDeletePolicyAuditRecord}
 */
// @ts-ignore
export function createVfamDeletePolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVfamDeletePolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VfamUpdatePolicyAuditRecord}
 */
// @ts-ignore
export function createVfamUpdatePolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVfamUpdatePolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VivaGoalsAuditRecord}
 */
// @ts-ignore
export function createVivaGoalsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVivaGoalsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VivaLearningAdminAuditRecord}
 */
// @ts-ignore
export function createVivaLearningAdminAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVivaLearningAdminAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VivaLearningAuditRecord}
 */
// @ts-ignore
export function createVivaLearningAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVivaLearningAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VivaPulseAdminAuditRecord}
 */
// @ts-ignore
export function createVivaPulseAdminAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVivaPulseAdminAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VivaPulseOrganizerAuditRecord}
 */
// @ts-ignore
export function createVivaPulseOrganizerAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVivaPulseOrganizerAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VivaPulseReportAuditRecord}
 */
// @ts-ignore
export function createVivaPulseReportAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVivaPulseReportAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VivaPulseResponseAuditRecord}
 */
// @ts-ignore
export function createVivaPulseResponseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVivaPulseResponseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VmMetadata}
 */
// @ts-ignore
export function createVmMetadataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVmMetadata;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VulnerabilityCollectionResponse}
 */
// @ts-ignore
export function createVulnerabilityCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVulnerabilityCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VulnerabilityComponentCollectionResponse}
 */
// @ts-ignore
export function createVulnerabilityComponentCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVulnerabilityComponentCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VulnerabilityComponent}
 */
// @ts-ignore
export function createVulnerabilityComponentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVulnerabilityComponent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Vulnerability}
 */
// @ts-ignore
export function createVulnerabilityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVulnerability;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WdatpAlertsAuditRecord}
 */
// @ts-ignore
export function createWdatpAlertsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWdatpAlertsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WhoisBaseRecord}
 */
// @ts-ignore
export function createWhoisBaseRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.whoisHistoryRecord":
                    return deserializeIntoWhoisHistoryRecord;
                case "#microsoft.graph.security.whoisRecord":
                    return deserializeIntoWhoisRecord;
            }
        }
    }
    return deserializeIntoWhoisBaseRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WhoisContact}
 */
// @ts-ignore
export function createWhoisContactFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWhoisContact;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WhoisHistoryRecordCollectionResponse}
 */
// @ts-ignore
export function createWhoisHistoryRecordCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWhoisHistoryRecordCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WhoisHistoryRecord}
 */
// @ts-ignore
export function createWhoisHistoryRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWhoisHistoryRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WhoisNameserver}
 */
// @ts-ignore
export function createWhoisNameserverFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWhoisNameserver;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WhoisRecordCollectionResponse}
 */
// @ts-ignore
export function createWhoisRecordCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWhoisRecordCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WhoisRecord}
 */
// @ts-ignore
export function createWhoisRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWhoisRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Windows365CustomerLockboxAuditRecord}
 */
// @ts-ignore
export function createWindows365CustomerLockboxAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWindows365CustomerLockboxAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WorkplaceAnalyticsAuditRecord}
 */
// @ts-ignore
export function createWorkplaceAnalyticsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWorkplaceAnalyticsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {YammerAuditRecord}
 */
// @ts-ignore
export function createYammerAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoYammerAuditRecord;
}
export interface CrmBaseAuditRecord extends AuditData, Parsable {
}
export interface CrmEntityOperationAuditRecord extends AuditData, Parsable {
}
export interface CustomAction extends InformationProtectionAction, Parsable {
    /**
     * Name of the custom action.
     */
    name?: string | null;
    /**
     * Properties, in key-value pair format, of the action.
     */
    properties?: KeyValuePair[] | null;
}
export interface CustomerKeyServiceEncryptionAuditRecord extends AuditData, Parsable {
}
export interface CvssSummary extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The CVSS score about this vulnerability.
     */
    score?: number | null;
    /**
     * The CVSS severity rating for this vulnerability. The possible values are: none, low, medium, high, critical, unknownFutureValue.
     */
    severity?: VulnerabilitySeverity | null;
    /**
     * The CVSS vector string for this vulnerability.
     */
    vectorString?: string | null;
}
export interface DataCenterSecurityBaseAuditRecord extends AuditData, Parsable {
}
export interface DataCenterSecurityCmdletAuditRecord extends AuditData, Parsable {
}
export interface DataGovernanceAuditRecord extends AuditData, Parsable {
}
export interface DataInsightsRestApiAuditRecord extends AuditData, Parsable {
}
export interface DataLakeExportOperationAuditRecord extends AuditData, Parsable {
}
export interface DataSet extends Entity, Parsable {
    /**
     * The createdBy property
     */
    createdBy?: IdentitySet | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
}
export interface DataShareOperationAuditRecord extends AuditData, Parsable {
}
export interface DataSource extends Entity, Parsable {
    /**
     * The user who created the dataSource.
     */
    createdBy?: IdentitySet | null;
    /**
     * The date and time the dataSource was created.
     */
    createdDateTime?: Date | null;
    /**
     * The display name of the dataSource and is the name of the SharePoint site.
     */
    displayName?: string | null;
    /**
     * The hold status of the dataSource.The possible values are: notApplied, applied, applying, removing, partial
     */
    holdStatus?: DataSourceHoldStatus | null;
}
export interface DataSourceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: DataSource[] | null;
}
export interface DataSourceContainer extends Entity, Parsable {
    /**
     * Created date and time of the dataSourceContainer entity.
     */
    createdDateTime?: Date | null;
    /**
     * Display name of the dataSourceContainer entity.
     */
    displayName?: string | null;
    /**
     * The hold status of the dataSourceContainer. The possible values are: notApplied, applied, applying, removing, partial
     */
    holdStatus?: DataSourceHoldStatus | null;
    /**
     * Last modified date and time of the dataSourceContainer.
     */
    lastModifiedDateTime?: Date | null;
    /**
     * Date and time that the dataSourceContainer was released from the case.
     */
    releasedDateTime?: Date | null;
    /**
     * Latest status of the dataSourceContainer. Possible values are: Active, Released.
     */
    status?: DataSourceContainerStatus | null;
}
export type DataSourceContainerStatus = (typeof DataSourceContainerStatusObject)[keyof typeof DataSourceContainerStatusObject];
export type DataSourceHoldStatus = (typeof DataSourceHoldStatusObject)[keyof typeof DataSourceHoldStatusObject];
export type DataSourceScopes = (typeof DataSourceScopesObject)[keyof typeof DataSourceScopesObject];
export interface DefaultAuditData extends AuditData, Parsable {
}
export type DefaultRecordBehavior = (typeof DefaultRecordBehaviorObject)[keyof typeof DefaultRecordBehaviorObject];
export type DefenderAvStatus = (typeof DefenderAvStatusObject)[keyof typeof DefenderAvStatusObject];
export interface DefenderSecurityAlertBaseRecord extends AuditData, Parsable {
}
export interface DeleteCertificateRecord extends AuditData, Parsable {
}
export type DeliveryAction = (typeof DeliveryActionObject)[keyof typeof DeliveryActionObject];
export type DeliveryLocation = (typeof DeliveryLocationObject)[keyof typeof DeliveryLocationObject];
export interface DepartmentTemplate extends FilePlanDescriptorTemplate, Parsable {
}
export interface DepartmentTemplateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: DepartmentTemplate[] | null;
}
export interface DeploymentAccessKeyType extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The deployment access key.
     */
    deploymentAccessKey?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type DeploymentStatus = (typeof DeploymentStatusObject)[keyof typeof DeploymentStatusObject];
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAadRiskDetectionAuditRecord(aadRiskDetectionAuditRecord: Partial<AadRiskDetectionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(aadRiskDetectionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAddContentFooterAction(addContentFooterAction: Partial<AddContentFooterAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInformationProtectionAction(addContentFooterAction),
        "alignment": n => { addContentFooterAction.alignment = n.getEnumValue<ContentAlignment>(ContentAlignmentObject); },
        "fontColor": n => { addContentFooterAction.fontColor = n.getStringValue(); },
        "fontName": n => { addContentFooterAction.fontName = n.getStringValue(); },
        "fontSize": n => { addContentFooterAction.fontSize = n.getNumberValue(); },
        "margin": n => { addContentFooterAction.margin = n.getNumberValue(); },
        "text": n => { addContentFooterAction.text = n.getStringValue(); },
        "uiElementName": n => { addContentFooterAction.uiElementName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAddContentHeaderAction(addContentHeaderAction: Partial<AddContentHeaderAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInformationProtectionAction(addContentHeaderAction),
        "alignment": n => { addContentHeaderAction.alignment = n.getEnumValue<ContentAlignment>(ContentAlignmentObject); },
        "fontColor": n => { addContentHeaderAction.fontColor = n.getStringValue(); },
        "fontName": n => { addContentHeaderAction.fontName = n.getStringValue(); },
        "fontSize": n => { addContentHeaderAction.fontSize = n.getNumberValue(); },
        "margin": n => { addContentHeaderAction.margin = n.getNumberValue(); },
        "text": n => { addContentHeaderAction.text = n.getStringValue(); },
        "uiElementName": n => { addContentHeaderAction.uiElementName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAddWatermarkAction(addWatermarkAction: Partial<AddWatermarkAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInformationProtectionAction(addWatermarkAction),
        "fontColor": n => { addWatermarkAction.fontColor = n.getStringValue(); },
        "fontName": n => { addWatermarkAction.fontName = n.getStringValue(); },
        "fontSize": n => { addWatermarkAction.fontSize = n.getNumberValue(); },
        "layout": n => { addWatermarkAction.layout = n.getEnumValue<WatermarkLayout>(WatermarkLayoutObject); },
        "text": n => { addWatermarkAction.text = n.getStringValue(); },
        "uiElementName": n => { addWatermarkAction.uiElementName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAedAuditRecord(aedAuditRecord: Partial<AedAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(aedAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAiAppInteractionAuditRecord(aiAppInteractionAuditRecord: Partial<AiAppInteractionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(aiAppInteractionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAipFileDeleted(aipFileDeleted: Partial<AipFileDeleted> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(aipFileDeleted),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAipHeartBeat(aipHeartBeat: Partial<AipHeartBeat> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(aipHeartBeat),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAipProtectionActionLogRequest(aipProtectionActionLogRequest: Partial<AipProtectionActionLogRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(aipProtectionActionLogRequest),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAipScannerDiscoverEvent(aipScannerDiscoverEvent: Partial<AipScannerDiscoverEvent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(aipScannerDiscoverEvent),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAipSensitivityLabelActionLogRequest(aipSensitivityLabelActionLogRequest: Partial<AipSensitivityLabelActionLogRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(aipSensitivityLabelActionLogRequest),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAirAdminActionInvestigationData(airAdminActionInvestigationData: Partial<AirAdminActionInvestigationData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(airAdminActionInvestigationData),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAirInvestigationData(airInvestigationData: Partial<AirInvestigationData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(airInvestigationData),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAirManualInvestigationData(airManualInvestigationData: Partial<AirManualInvestigationData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(airManualInvestigationData),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlert(alert: Partial<Alert> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(alert),
        "actorDisplayName": n => { alert.actorDisplayName = n.getStringValue(); },
        "additionalData": n => { alert.additionalDataProperty = n.getObjectValue<Dictionary>(createDictionaryFromDiscriminatorValue); },
        "alertPolicyId": n => { alert.alertPolicyId = n.getStringValue(); },
        "alertWebUrl": n => { alert.alertWebUrl = n.getStringValue(); },
        "assignedTo": n => { alert.assignedTo = n.getStringValue(); },
        "category": n => { alert.category = n.getStringValue(); },
        "classification": n => { alert.classification = n.getEnumValue<AlertClassification>(AlertClassificationObject); },
        "comments": n => { alert.comments = n.getCollectionOfObjectValues<AlertComment>(createAlertCommentFromDiscriminatorValue); },
        "createdDateTime": n => { alert.createdDateTime = n.getDateValue(); },
        "description": n => { alert.description = n.getStringValue(); },
        "detectionSource": n => { alert.detectionSource = n.getEnumValue<DetectionSource>(DetectionSourceObject); },
        "detectorId": n => { alert.detectorId = n.getStringValue(); },
        "determination": n => { alert.determination = n.getEnumValue<AlertDetermination>(AlertDeterminationObject); },
        "evidence": n => { alert.evidence = n.getCollectionOfObjectValues<AlertEvidence>(createAlertEvidenceFromDiscriminatorValue); },
        "firstActivityDateTime": n => { alert.firstActivityDateTime = n.getDateValue(); },
        "incidentId": n => { alert.incidentId = n.getStringValue(); },
        "incidentWebUrl": n => { alert.incidentWebUrl = n.getStringValue(); },
        "lastActivityDateTime": n => { alert.lastActivityDateTime = n.getDateValue(); },
        "lastUpdateDateTime": n => { alert.lastUpdateDateTime = n.getDateValue(); },
        "mitreTechniques": n => { alert.mitreTechniques = n.getCollectionOfPrimitiveValues<string>(); },
        "productName": n => { alert.productName = n.getStringValue(); },
        "providerAlertId": n => { alert.providerAlertId = n.getStringValue(); },
        "recommendedActions": n => { alert.recommendedActions = n.getStringValue(); },
        "resolvedDateTime": n => { alert.resolvedDateTime = n.getDateValue(); },
        "serviceSource": n => { alert.serviceSource = n.getEnumValue<ServiceSource>(ServiceSourceObject); },
        "severity": n => { alert.severity = n.getEnumValue<AlertSeverity>(AlertSeverityObject); },
        "status": n => { alert.status = n.getEnumValue<AlertStatus>(AlertStatusObject); },
        "systemTags": n => { alert.systemTags = n.getCollectionOfPrimitiveValues<string>(); },
        "tenantId": n => { alert.tenantId = n.getStringValue(); },
        "threatDisplayName": n => { alert.threatDisplayName = n.getStringValue(); },
        "threatFamilyName": n => { alert.threatFamilyName = n.getStringValue(); },
        "title": n => { alert.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlertCollectionResponse(alertCollectionResponse: Partial<AlertCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(alertCollectionResponse),
        "value": n => { alertCollectionResponse.value = n.getCollectionOfObjectValues<Alert>(createAlertFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlertComment(alertComment: Partial<AlertComment> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { alertComment.backingStoreEnabled = true; },
        "comment": n => { alertComment.comment = n.getStringValue(); },
        "createdByDisplayName": n => { alertComment.createdByDisplayName = n.getStringValue(); },
        "createdDateTime": n => { alertComment.createdDateTime = n.getDateValue(); },
        "@odata.type": n => { alertComment.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlertEvidence(alertEvidence: Partial<AlertEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { alertEvidence.backingStoreEnabled = true; },
        "createdDateTime": n => { alertEvidence.createdDateTime = n.getDateValue(); },
        "detailedRoles": n => { alertEvidence.detailedRoles = n.getCollectionOfPrimitiveValues<string>(); },
        "@odata.type": n => { alertEvidence.odataType = n.getStringValue(); },
        "remediationStatus": n => { alertEvidence.remediationStatus = n.getEnumValue<EvidenceRemediationStatus>(EvidenceRemediationStatusObject); },
        "remediationStatusDetails": n => { alertEvidence.remediationStatusDetails = n.getStringValue(); },
        "roles": n => { alertEvidence.roles = n.getCollectionOfEnumValues<EvidenceRole>(EvidenceRoleObject); },
        "tags": n => { alertEvidence.tags = n.getCollectionOfPrimitiveValues<string>(); },
        "verdict": n => { alertEvidence.verdict = n.getEnumValue<EvidenceVerdict>(EvidenceVerdictObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlertTemplate(alertTemplate: Partial<AlertTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { alertTemplate.backingStoreEnabled = true; },
        "category": n => { alertTemplate.category = n.getStringValue(); },
        "description": n => { alertTemplate.description = n.getStringValue(); },
        "impactedAssets": n => { alertTemplate.impactedAssets = n.getCollectionOfObjectValues<ImpactedAsset>(createImpactedAssetFromDiscriminatorValue); },
        "mitreTechniques": n => { alertTemplate.mitreTechniques = n.getCollectionOfPrimitiveValues<string>(); },
        "@odata.type": n => { alertTemplate.odataType = n.getStringValue(); },
        "recommendedActions": n => { alertTemplate.recommendedActions = n.getStringValue(); },
        "severity": n => { alertTemplate.severity = n.getEnumValue<AlertSeverity>(AlertSeverityObject); },
        "title": n => { alertTemplate.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAllowFileResponseAction(allowFileResponseAction: Partial<AllowFileResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResponseAction(allowFileResponseAction),
        "deviceGroupNames": n => { allowFileResponseAction.deviceGroupNames = n.getCollectionOfPrimitiveValues<string>(); },
        "identifier": n => { allowFileResponseAction.identifier = n.getCollectionOfEnumValues<FileEntityIdentifier>(FileEntityIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAmazonResourceEvidence(amazonResourceEvidence: Partial<AmazonResourceEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(amazonResourceEvidence),
        "amazonAccountId": n => { amazonResourceEvidence.amazonAccountId = n.getStringValue(); },
        "amazonResourceId": n => { amazonResourceEvidence.amazonResourceId = n.getStringValue(); },
        "resourceName": n => { amazonResourceEvidence.resourceName = n.getStringValue(); },
        "resourceType": n => { amazonResourceEvidence.resourceType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAnalyzedEmail(analyzedEmail: Partial<AnalyzedEmail> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(analyzedEmail),
        "alertIds": n => { analyzedEmail.alertIds = n.getCollectionOfPrimitiveValues<string>(); },
        "attachments": n => { analyzedEmail.attachments = n.getCollectionOfObjectValues<AnalyzedEmailAttachment>(createAnalyzedEmailAttachmentFromDiscriminatorValue); },
        "attachmentsCount": n => { analyzedEmail.attachmentsCount = n.getNumberValue(); },
        "authenticationDetails": n => { analyzedEmail.authenticationDetails = n.getObjectValue<AnalyzedEmailAuthenticationDetail>(createAnalyzedEmailAuthenticationDetailFromDiscriminatorValue); },
        "bulkComplaintLevel": n => { analyzedEmail.bulkComplaintLevel = n.getStringValue(); },
        "contexts": n => { analyzedEmail.contexts = n.getCollectionOfPrimitiveValues<string>(); },
        "detectionMethods": n => { analyzedEmail.detectionMethods = n.getCollectionOfPrimitiveValues<string>(); },
        "directionality": n => { analyzedEmail.directionality = n.getEnumValue<AntispamDirectionality>(AntispamDirectionalityObject); },
        "distributionList": n => { analyzedEmail.distributionList = n.getStringValue(); },
        "emailClusterId": n => { analyzedEmail.emailClusterId = n.getStringValue(); },
        "exchangeTransportRules": n => { analyzedEmail.exchangeTransportRules = n.getCollectionOfObjectValues<AnalyzedEmailExchangeTransportRuleInfo>(createAnalyzedEmailExchangeTransportRuleInfoFromDiscriminatorValue); },
        "internetMessageId": n => { analyzedEmail.internetMessageId = n.getStringValue(); },
        "language": n => { analyzedEmail.language = n.getStringValue(); },
        "latestDelivery": n => { analyzedEmail.latestDelivery = n.getObjectValue<AnalyzedEmailDeliveryDetail>(createAnalyzedEmailDeliveryDetailFromDiscriminatorValue); },
        "loggedDateTime": n => { analyzedEmail.loggedDateTime = n.getDateValue(); },
        "networkMessageId": n => { analyzedEmail.networkMessageId = n.getStringValue(); },
        "originalDelivery": n => { analyzedEmail.originalDelivery = n.getObjectValue<AnalyzedEmailDeliveryDetail>(createAnalyzedEmailDeliveryDetailFromDiscriminatorValue); },
        "overrideSources": n => { analyzedEmail.overrideSources = n.getCollectionOfPrimitiveValues<string>(); },
        "phishConfidenceLevel": n => { analyzedEmail.phishConfidenceLevel = n.getStringValue(); },
        "policy": n => { analyzedEmail.policy = n.getStringValue(); },
        "policyAction": n => { analyzedEmail.policyAction = n.getStringValue(); },
        "recipientEmailAddress": n => { analyzedEmail.recipientEmailAddress = n.getStringValue(); },
        "returnPath": n => { analyzedEmail.returnPath = n.getStringValue(); },
        "senderDetail": n => { analyzedEmail.senderDetail = n.getObjectValue<AnalyzedEmailSenderDetail>(createAnalyzedEmailSenderDetailFromDiscriminatorValue); },
        "sizeInBytes": n => { analyzedEmail.sizeInBytes = n.getNumberValue(); },
        "spamConfidenceLevel": n => { analyzedEmail.spamConfidenceLevel = n.getStringValue(); },
        "subject": n => { analyzedEmail.subject = n.getStringValue(); },
        "threatTypes": n => { analyzedEmail.threatTypes = n.getCollectionOfEnumValues<ThreatType>(ThreatTypeObject); },
        "urls": n => { analyzedEmail.urls = n.getCollectionOfObjectValues<AnalyzedEmailUrl>(createAnalyzedEmailUrlFromDiscriminatorValue); },
        "urlsCount": n => { analyzedEmail.urlsCount = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAnalyzedEmailAttachment(analyzedEmailAttachment: Partial<AnalyzedEmailAttachment> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { analyzedEmailAttachment.backingStoreEnabled = true; },
        "detonationDetails": n => { analyzedEmailAttachment.detonationDetails = n.getObjectValue<DetonationDetails>(createDetonationDetailsFromDiscriminatorValue); },
        "fileName": n => { analyzedEmailAttachment.fileName = n.getStringValue(); },
        "fileType": n => { analyzedEmailAttachment.fileType = n.getStringValue(); },
        "@odata.type": n => { analyzedEmailAttachment.odataType = n.getStringValue(); },
        "sha256": n => { analyzedEmailAttachment.sha256 = n.getStringValue(); },
        "threatName": n => { analyzedEmailAttachment.threatName = n.getStringValue(); },
        "threatType": n => { analyzedEmailAttachment.threatType = n.getEnumValue<ThreatType>(ThreatTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAnalyzedEmailAuthenticationDetail(analyzedEmailAuthenticationDetail: Partial<AnalyzedEmailAuthenticationDetail> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { analyzedEmailAuthenticationDetail.backingStoreEnabled = true; },
        "compositeAuthentication": n => { analyzedEmailAuthenticationDetail.compositeAuthentication = n.getStringValue(); },
        "dkim": n => { analyzedEmailAuthenticationDetail.dkim = n.getStringValue(); },
        "dmarc": n => { analyzedEmailAuthenticationDetail.dmarc = n.getStringValue(); },
        "@odata.type": n => { analyzedEmailAuthenticationDetail.odataType = n.getStringValue(); },
        "senderPolicyFramework": n => { analyzedEmailAuthenticationDetail.senderPolicyFramework = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAnalyzedEmailCollectionResponse(analyzedEmailCollectionResponse: Partial<AnalyzedEmailCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(analyzedEmailCollectionResponse),
        "value": n => { analyzedEmailCollectionResponse.value = n.getCollectionOfObjectValues<AnalyzedEmail>(createAnalyzedEmailFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAnalyzedEmailDeliveryDetail(analyzedEmailDeliveryDetail: Partial<AnalyzedEmailDeliveryDetail> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "action": n => { analyzedEmailDeliveryDetail.action = n.getEnumValue<DeliveryAction>(DeliveryActionObject); },
        "backingStoreEnabled": n => { analyzedEmailDeliveryDetail.backingStoreEnabled = true; },
        "location": n => { analyzedEmailDeliveryDetail.location = n.getEnumValue<DeliveryLocation>(DeliveryLocationObject); },
        "@odata.type": n => { analyzedEmailDeliveryDetail.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAnalyzedEmailExchangeTransportRuleInfo(analyzedEmailExchangeTransportRuleInfo: Partial<AnalyzedEmailExchangeTransportRuleInfo> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { analyzedEmailExchangeTransportRuleInfo.backingStoreEnabled = true; },
        "name": n => { analyzedEmailExchangeTransportRuleInfo.name = n.getStringValue(); },
        "@odata.type": n => { analyzedEmailExchangeTransportRuleInfo.odataType = n.getStringValue(); },
        "ruleId": n => { analyzedEmailExchangeTransportRuleInfo.ruleId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAnalyzedEmailSenderDetail(analyzedEmailSenderDetail: Partial<AnalyzedEmailSenderDetail> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { analyzedEmailSenderDetail.backingStoreEnabled = true; },
        "fromAddress": n => { analyzedEmailSenderDetail.fromAddress = n.getStringValue(); },
        "ipv4": n => { analyzedEmailSenderDetail.ipv4 = n.getStringValue(); },
        "mailFromAddress": n => { analyzedEmailSenderDetail.mailFromAddress = n.getStringValue(); },
        "@odata.type": n => { analyzedEmailSenderDetail.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAnalyzedEmailUrl(analyzedEmailUrl: Partial<AnalyzedEmailUrl> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { analyzedEmailUrl.backingStoreEnabled = true; },
        "detectionMethod": n => { analyzedEmailUrl.detectionMethod = n.getStringValue(); },
        "detonationDetails": n => { analyzedEmailUrl.detonationDetails = n.getObjectValue<DetonationDetails>(createDetonationDetailsFromDiscriminatorValue); },
        "@odata.type": n => { analyzedEmailUrl.odataType = n.getStringValue(); },
        "threatType": n => { analyzedEmailUrl.threatType = n.getEnumValue<ThreatType>(ThreatTypeObject); },
        "url": n => { analyzedEmailUrl.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAnalyzedMessageEvidence(analyzedMessageEvidence: Partial<AnalyzedMessageEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(analyzedMessageEvidence),
        "antiSpamDirection": n => { analyzedMessageEvidence.antiSpamDirection = n.getStringValue(); },
        "attachmentsCount": n => { analyzedMessageEvidence.attachmentsCount = n.getNumberValue(); },
        "deliveryAction": n => { analyzedMessageEvidence.deliveryAction = n.getStringValue(); },
        "deliveryLocation": n => { analyzedMessageEvidence.deliveryLocation = n.getStringValue(); },
        "internetMessageId": n => { analyzedMessageEvidence.internetMessageId = n.getStringValue(); },
        "language": n => { analyzedMessageEvidence.language = n.getStringValue(); },
        "networkMessageId": n => { analyzedMessageEvidence.networkMessageId = n.getStringValue(); },
        "p1Sender": n => { analyzedMessageEvidence.p1Sender = n.getObjectValue<EmailSender>(createEmailSenderFromDiscriminatorValue); },
        "p2Sender": n => { analyzedMessageEvidence.p2Sender = n.getObjectValue<EmailSender>(createEmailSenderFromDiscriminatorValue); },
        "receivedDateTime": n => { analyzedMessageEvidence.receivedDateTime = n.getDateValue(); },
        "recipientEmailAddress": n => { analyzedMessageEvidence.recipientEmailAddress = n.getStringValue(); },
        "senderIp": n => { analyzedMessageEvidence.senderIp = n.getStringValue(); },
        "subject": n => { analyzedMessageEvidence.subject = n.getStringValue(); },
        "threatDetectionMethods": n => { analyzedMessageEvidence.threatDetectionMethods = n.getCollectionOfPrimitiveValues<string>(); },
        "threats": n => { analyzedMessageEvidence.threats = n.getCollectionOfPrimitiveValues<string>(); },
        "urlCount": n => { analyzedMessageEvidence.urlCount = n.getNumberValue(); },
        "urls": n => { analyzedMessageEvidence.urls = n.getCollectionOfPrimitiveValues<string>(); },
        "urn": n => { analyzedMessageEvidence.urn = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoApplyLabelAction(applyLabelAction: Partial<ApplyLabelAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInformationProtectionAction(applyLabelAction),
        "actions": n => { applyLabelAction.actions = n.getCollectionOfObjectValues<InformationProtectionAction>(createInformationProtectionActionFromDiscriminatorValue); },
        "actionSource": n => { applyLabelAction.actionSource = n.getEnumValue<ActionSource>(ActionSourceObject); },
        "responsibleSensitiveTypeIds": n => { applyLabelAction.responsibleSensitiveTypeIds = n.getCollectionOfPrimitiveValues<string>(); },
        "sensitivityLabelId": n => { applyLabelAction.sensitivityLabelId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoArticle(article: Partial<Article> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(article),
        "body": n => { article.body = n.getObjectValue<FormattedContent>(createFormattedContentFromDiscriminatorValue); },
        "createdDateTime": n => { article.createdDateTime = n.getDateValue(); },
        "imageUrl": n => { article.imageUrl = n.getStringValue(); },
        "indicators": n => { article.indicators = n.getCollectionOfObjectValues<ArticleIndicator>(createArticleIndicatorFromDiscriminatorValue); },
        "isFeatured": n => { article.isFeatured = n.getBooleanValue(); },
        "lastUpdatedDateTime": n => { article.lastUpdatedDateTime = n.getDateValue(); },
        "summary": n => { article.summary = n.getObjectValue<FormattedContent>(createFormattedContentFromDiscriminatorValue); },
        "tags": n => { article.tags = n.getCollectionOfPrimitiveValues<string>(); },
        "title": n => { article.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoArticleCollectionResponse(articleCollectionResponse: Partial<ArticleCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(articleCollectionResponse),
        "value": n => { articleCollectionResponse.value = n.getCollectionOfObjectValues<Article>(createArticleFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoArticleIndicator(articleIndicator: Partial<ArticleIndicator> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIndicator(articleIndicator),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoArticleIndicatorCollectionResponse(articleIndicatorCollectionResponse: Partial<ArticleIndicatorCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(articleIndicatorCollectionResponse),
        "value": n => { articleIndicatorCollectionResponse.value = n.getCollectionOfObjectValues<ArticleIndicator>(createArticleIndicatorFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoArtifact(artifact: Partial<Artifact> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(artifact),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAttackSimAdminAuditRecord(attackSimAdminAuditRecord: Partial<AttackSimAdminAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(attackSimAdminAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAttackSimulationInfo(attackSimulationInfo: Partial<AttackSimulationInfo> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "attackSimDateTime": n => { attackSimulationInfo.attackSimDateTime = n.getDateValue(); },
        "attackSimDurationTime": n => { attackSimulationInfo.attackSimDurationTime = n.getDurationValue(); },
        "attackSimId": n => { attackSimulationInfo.attackSimId = n.getGuidValue(); },
        "attackSimUserId": n => { attackSimulationInfo.attackSimUserId = n.getStringValue(); },
        "backingStoreEnabled": n => { attackSimulationInfo.backingStoreEnabled = true; },
        "@odata.type": n => { attackSimulationInfo.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditCoreRoot(auditCoreRoot: Partial<AuditCoreRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(auditCoreRoot),
        "queries": n => { auditCoreRoot.queries = n.getCollectionOfObjectValues<AuditLogQuery>(createAuditLogQueryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditData(auditData: Partial<AuditData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { auditData.backingStoreEnabled = true; },
        "@odata.type": n => { auditData.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditLogQuery(auditLogQuery: Partial<AuditLogQuery> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(auditLogQuery),
        "administrativeUnitIdFilters": n => { auditLogQuery.administrativeUnitIdFilters = n.getCollectionOfPrimitiveValues<string>(); },
        "displayName": n => { auditLogQuery.displayName = n.getStringValue(); },
        "filterEndDateTime": n => { auditLogQuery.filterEndDateTime = n.getDateValue(); },
        "filterStartDateTime": n => { auditLogQuery.filterStartDateTime = n.getDateValue(); },
        "ipAddressFilters": n => { auditLogQuery.ipAddressFilters = n.getCollectionOfPrimitiveValues<string>(); },
        "keywordFilter": n => { auditLogQuery.keywordFilter = n.getStringValue(); },
        "objectIdFilters": n => { auditLogQuery.objectIdFilters = n.getCollectionOfPrimitiveValues<string>(); },
        "operationFilters": n => { auditLogQuery.operationFilters = n.getCollectionOfPrimitiveValues<string>(); },
        "records": n => { auditLogQuery.records = n.getCollectionOfObjectValues<AuditLogRecord>(createAuditLogRecordFromDiscriminatorValue); },
        "recordTypeFilters": n => { auditLogQuery.recordTypeFilters = n.getCollectionOfEnumValues<AuditLogRecordType>(AuditLogRecordTypeObject); },
        "serviceFilters": n => { auditLogQuery.serviceFilters = n.getCollectionOfPrimitiveValues<string>(); },
        "status": n => { auditLogQuery.status = n.getEnumValue<AuditLogQueryStatus>(AuditLogQueryStatusObject); },
        "userPrincipalNameFilters": n => { auditLogQuery.userPrincipalNameFilters = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditLogQueryCollectionResponse(auditLogQueryCollectionResponse: Partial<AuditLogQueryCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(auditLogQueryCollectionResponse),
        "value": n => { auditLogQueryCollectionResponse.value = n.getCollectionOfObjectValues<AuditLogQuery>(createAuditLogQueryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditLogRecord(auditLogRecord: Partial<AuditLogRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(auditLogRecord),
        "administrativeUnits": n => { auditLogRecord.administrativeUnits = n.getCollectionOfPrimitiveValues<string>(); },
        "auditData": n => { auditLogRecord.auditData = n.getObjectValue<AuditData>(createAuditDataFromDiscriminatorValue); },
        "auditLogRecordType": n => { auditLogRecord.auditLogRecordType = n.getEnumValue<AuditLogRecordType>(AuditLogRecordTypeObject); },
        "clientIp": n => { auditLogRecord.clientIp = n.getStringValue(); },
        "createdDateTime": n => { auditLogRecord.createdDateTime = n.getDateValue(); },
        "objectId": n => { auditLogRecord.objectId = n.getStringValue(); },
        "operation": n => { auditLogRecord.operation = n.getStringValue(); },
        "organizationId": n => { auditLogRecord.organizationId = n.getStringValue(); },
        "service": n => { auditLogRecord.service = n.getStringValue(); },
        "userId": n => { auditLogRecord.userId = n.getStringValue(); },
        "userPrincipalName": n => { auditLogRecord.userPrincipalName = n.getStringValue(); },
        "userType": n => { auditLogRecord.userType = n.getEnumValue<AuditLogUserType>(AuditLogUserTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditLogRecordCollectionResponse(auditLogRecordCollectionResponse: Partial<AuditLogRecordCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(auditLogRecordCollectionResponse),
        "value": n => { auditLogRecordCollectionResponse.value = n.getCollectionOfObjectValues<AuditLogRecord>(createAuditLogRecordFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditSearchAuditRecord(auditSearchAuditRecord: Partial<AuditSearchAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(auditSearchAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuthorityTemplate(authorityTemplate: Partial<AuthorityTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorTemplate(authorityTemplate),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuthorityTemplateCollectionResponse(authorityTemplateCollectionResponse: Partial<AuthorityTemplateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(authorityTemplateCollectionResponse),
        "value": n => { authorityTemplateCollectionResponse.value = n.getCollectionOfObjectValues<AuthorityTemplate>(createAuthorityTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAutonomousSystem(autonomousSystem: Partial<AutonomousSystem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { autonomousSystem.backingStoreEnabled = true; },
        "name": n => { autonomousSystem.name = n.getStringValue(); },
        "number": n => { autonomousSystem.number = n.getNumberValue(); },
        "@odata.type": n => { autonomousSystem.odataType = n.getStringValue(); },
        "organization": n => { autonomousSystem.organization = n.getStringValue(); },
        "value": n => { autonomousSystem.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAzureActiveDirectoryAccountLogonAuditRecord(azureActiveDirectoryAccountLogonAuditRecord: Partial<AzureActiveDirectoryAccountLogonAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(azureActiveDirectoryAccountLogonAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAzureActiveDirectoryAuditRecord(azureActiveDirectoryAuditRecord: Partial<AzureActiveDirectoryAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(azureActiveDirectoryAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAzureActiveDirectoryBaseAuditRecord(azureActiveDirectoryBaseAuditRecord: Partial<AzureActiveDirectoryBaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(azureActiveDirectoryBaseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAzureActiveDirectoryStsLogonAuditRecord(azureActiveDirectoryStsLogonAuditRecord: Partial<AzureActiveDirectoryStsLogonAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(azureActiveDirectoryStsLogonAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAzureResourceEvidence(azureResourceEvidence: Partial<AzureResourceEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(azureResourceEvidence),
        "resourceId": n => { azureResourceEvidence.resourceId = n.getStringValue(); },
        "resourceName": n => { azureResourceEvidence.resourceName = n.getStringValue(); },
        "resourceType": n => { azureResourceEvidence.resourceType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBlobContainerEvidence(blobContainerEvidence: Partial<BlobContainerEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(blobContainerEvidence),
        "name": n => { blobContainerEvidence.name = n.getStringValue(); },
        "storageResource": n => { blobContainerEvidence.storageResource = n.getObjectValue<AzureResourceEvidence>(createAzureResourceEvidenceFromDiscriminatorValue); },
        "url": n => { blobContainerEvidence.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBlobEvidence(blobEvidence: Partial<BlobEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(blobEvidence),
        "blobContainer": n => { blobEvidence.blobContainer = n.getObjectValue<BlobContainerEvidence>(createBlobContainerEvidenceFromDiscriminatorValue); },
        "etag": n => { blobEvidence.etag = n.getStringValue(); },
        "fileHashes": n => { blobEvidence.fileHashes = n.getCollectionOfObjectValues<FileHash>(createFileHashFromDiscriminatorValue); },
        "name": n => { blobEvidence.name = n.getStringValue(); },
        "url": n => { blobEvidence.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBlockFileResponseAction(blockFileResponseAction: Partial<BlockFileResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResponseAction(blockFileResponseAction),
        "deviceGroupNames": n => { blockFileResponseAction.deviceGroupNames = n.getCollectionOfPrimitiveValues<string>(); },
        "identifier": n => { blockFileResponseAction.identifier = n.getCollectionOfEnumValues<FileEntityIdentifier>(FileEntityIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCampaignAuditRecord(campaignAuditRecord: Partial<CampaignAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(campaignAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCaseAuditRecord(caseAuditRecord: Partial<CaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(caseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCaseEscaped(caseEscaped: Partial<CaseEscaped> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(caseEscaped),
        "createdDateTime": n => { caseEscaped.createdDateTime = n.getDateValue(); },
        "description": n => { caseEscaped.description = n.getStringValue(); },
        "displayName": n => { caseEscaped.displayName = n.getStringValue(); },
        "lastModifiedBy": n => { caseEscaped.lastModifiedBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "lastModifiedDateTime": n => { caseEscaped.lastModifiedDateTime = n.getDateValue(); },
        "status": n => { caseEscaped.status = n.getEnumValue<CaseStatus>(CaseStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCaseInvestigation(caseInvestigation: Partial<CaseInvestigation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(caseInvestigation),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCaseOperation(caseOperation: Partial<CaseOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(caseOperation),
        "action": n => { caseOperation.action = n.getEnumValue<CaseAction>(CaseActionObject); },
        "completedDateTime": n => { caseOperation.completedDateTime = n.getDateValue(); },
        "createdBy": n => { caseOperation.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { caseOperation.createdDateTime = n.getDateValue(); },
        "percentProgress": n => { caseOperation.percentProgress = n.getNumberValue(); },
        "resultInfo": n => { caseOperation.resultInfo = n.getObjectValue<ResultInfo>(createResultInfoFromDiscriminatorValue); },
        "status": n => { caseOperation.status = n.getEnumValue<CaseOperationStatus>(CaseOperationStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCaseOperationCollectionResponse(caseOperationCollectionResponse: Partial<CaseOperationCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(caseOperationCollectionResponse),
        "value": n => { caseOperationCollectionResponse.value = n.getCollectionOfObjectValues<CaseOperation>(createCaseOperationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCasesRoot(casesRoot: Partial<CasesRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(casesRoot),
        "ediscoveryCases": n => { casesRoot.ediscoveryCases = n.getCollectionOfObjectValues<EdiscoveryCase>(createEdiscoveryCaseFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCategoryTemplate(categoryTemplate: Partial<CategoryTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorTemplate(categoryTemplate),
        "subcategories": n => { categoryTemplate.subcategories = n.getCollectionOfObjectValues<SubcategoryTemplate>(createSubcategoryTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCategoryTemplateCollectionResponse(categoryTemplateCollectionResponse: Partial<CategoryTemplateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(categoryTemplateCollectionResponse),
        "value": n => { categoryTemplateCollectionResponse.value = n.getCollectionOfObjectValues<CategoryTemplate>(createCategoryTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCdpColdCrawlStatusRecord(cdpColdCrawlStatusRecord: Partial<CdpColdCrawlStatusRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cdpColdCrawlStatusRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCdpContentExplorerAggregateRecord(cdpContentExplorerAggregateRecord: Partial<CdpContentExplorerAggregateRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cdpContentExplorerAggregateRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCdpDlpSensitiveAuditRecord(cdpDlpSensitiveAuditRecord: Partial<CdpDlpSensitiveAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cdpDlpSensitiveAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCdpDlpSensitiveEndpointAuditRecord(cdpDlpSensitiveEndpointAuditRecord: Partial<CdpDlpSensitiveEndpointAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cdpDlpSensitiveEndpointAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCdpLogRecord(cdpLogRecord: Partial<CdpLogRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cdpLogRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCdpOcrBillingRecord(cdpOcrBillingRecord: Partial<CdpOcrBillingRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cdpOcrBillingRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCdpResourceScopeChangeEventRecord(cdpResourceScopeChangeEventRecord: Partial<CdpResourceScopeChangeEventRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cdpResourceScopeChangeEventRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCernerSMSLinkRecord(cernerSMSLinkRecord: Partial<CernerSMSLinkRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cernerSMSLinkRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCernerSMSSettingsUpdateRecord(cernerSMSSettingsUpdateRecord: Partial<CernerSMSSettingsUpdateRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cernerSMSSettingsUpdateRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCernerSMSUnlinkRecord(cernerSMSUnlinkRecord: Partial<CernerSMSUnlinkRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cernerSMSUnlinkRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCitationTemplate(citationTemplate: Partial<CitationTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorTemplate(citationTemplate),
        "citationJurisdiction": n => { citationTemplate.citationJurisdiction = n.getStringValue(); },
        "citationUrl": n => { citationTemplate.citationUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCitationTemplateCollectionResponse(citationTemplateCollectionResponse: Partial<CitationTemplateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(citationTemplateCollectionResponse),
        "value": n => { citationTemplateCollectionResponse.value = n.getCollectionOfObjectValues<CitationTemplate>(createCitationTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoClassificationResult(classificationResult: Partial<ClassificationResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { classificationResult.backingStoreEnabled = true; },
        "confidenceLevel": n => { classificationResult.confidenceLevel = n.getNumberValue(); },
        "count": n => { classificationResult.count = n.getNumberValue(); },
        "@odata.type": n => { classificationResult.odataType = n.getStringValue(); },
        "sensitiveTypeId": n => { classificationResult.sensitiveTypeId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCloudApplicationEvidence(cloudApplicationEvidence: Partial<CloudApplicationEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(cloudApplicationEvidence),
        "appId": n => { cloudApplicationEvidence.appId = n.getNumberValue(); },
        "displayName": n => { cloudApplicationEvidence.displayName = n.getStringValue(); },
        "instanceId": n => { cloudApplicationEvidence.instanceId = n.getNumberValue(); },
        "instanceName": n => { cloudApplicationEvidence.instanceName = n.getStringValue(); },
        "saasAppId": n => { cloudApplicationEvidence.saasAppId = n.getNumberValue(); },
        "stream": n => { cloudApplicationEvidence.stream = n.getObjectValue<Stream>(createStreamFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCloudLogonRequestEvidence(cloudLogonRequestEvidence: Partial<CloudLogonRequestEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(cloudLogonRequestEvidence),
        "requestId": n => { cloudLogonRequestEvidence.requestId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCloudLogonSessionEvidence(cloudLogonSessionEvidence: Partial<CloudLogonSessionEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(cloudLogonSessionEvidence),
        "account": n => { cloudLogonSessionEvidence.account = n.getObjectValue<UserEvidence>(createUserEvidenceFromDiscriminatorValue); },
        "browser": n => { cloudLogonSessionEvidence.browser = n.getStringValue(); },
        "deviceName": n => { cloudLogonSessionEvidence.deviceName = n.getStringValue(); },
        "operatingSystem": n => { cloudLogonSessionEvidence.operatingSystem = n.getStringValue(); },
        "previousLogonDateTime": n => { cloudLogonSessionEvidence.previousLogonDateTime = n.getDateValue(); },
        "protocol": n => { cloudLogonSessionEvidence.protocol = n.getStringValue(); },
        "sessionId": n => { cloudLogonSessionEvidence.sessionId = n.getStringValue(); },
        "startUtcDateTime": n => { cloudLogonSessionEvidence.startUtcDateTime = n.getDateValue(); },
        "userAgent": n => { cloudLogonSessionEvidence.userAgent = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCollaborationRoot(collaborationRoot: Partial<CollaborationRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(collaborationRoot),
        "analyzedEmails": n => { collaborationRoot.analyzedEmails = n.getCollectionOfObjectValues<AnalyzedEmail>(createAnalyzedEmailFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCollectInvestigationPackageResponseAction(collectInvestigationPackageResponseAction: Partial<CollectInvestigationPackageResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResponseAction(collectInvestigationPackageResponseAction),
        "identifier": n => { collectInvestigationPackageResponseAction.identifier = n.getCollectionOfEnumValues<DeviceIdEntityIdentifier>(DeviceIdEntityIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceConnectorAuditRecord(complianceConnectorAuditRecord: Partial<ComplianceConnectorAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceConnectorAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDLMExchangeAuditRecord(complianceDLMExchangeAuditRecord: Partial<ComplianceDLMExchangeAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDLMExchangeAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDLMSharePointAuditRecord(complianceDLMSharePointAuditRecord: Partial<ComplianceDLMSharePointAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDLMSharePointAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpApplicationsAuditRecord(complianceDlpApplicationsAuditRecord: Partial<ComplianceDlpApplicationsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpApplicationsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpApplicationsClassificationAuditRecord(complianceDlpApplicationsClassificationAuditRecord: Partial<ComplianceDlpApplicationsClassificationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpApplicationsClassificationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpBaseAuditRecord(complianceDlpBaseAuditRecord: Partial<ComplianceDlpBaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpBaseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpClassificationBaseAuditRecord(complianceDlpClassificationBaseAuditRecord: Partial<ComplianceDlpClassificationBaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpClassificationBaseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpClassificationBaseCdpRecord(complianceDlpClassificationBaseCdpRecord: Partial<ComplianceDlpClassificationBaseCdpRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpClassificationBaseCdpRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpEndpointAuditRecord(complianceDlpEndpointAuditRecord: Partial<ComplianceDlpEndpointAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpEndpointAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpEndpointDiscoveryAuditRecord(complianceDlpEndpointDiscoveryAuditRecord: Partial<ComplianceDlpEndpointDiscoveryAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpEndpointDiscoveryAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpExchangeAuditRecord(complianceDlpExchangeAuditRecord: Partial<ComplianceDlpExchangeAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpExchangeAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpExchangeClassificationAuditRecord(complianceDlpExchangeClassificationAuditRecord: Partial<ComplianceDlpExchangeClassificationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpExchangeClassificationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpExchangeClassificationCdpRecord(complianceDlpExchangeClassificationCdpRecord: Partial<ComplianceDlpExchangeClassificationCdpRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpExchangeClassificationCdpRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpExchangeDiscoveryAuditRecord(complianceDlpExchangeDiscoveryAuditRecord: Partial<ComplianceDlpExchangeDiscoveryAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpExchangeDiscoveryAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpSharePointAuditRecord(complianceDlpSharePointAuditRecord: Partial<ComplianceDlpSharePointAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpSharePointAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpSharePointClassificationAuditRecord(complianceDlpSharePointClassificationAuditRecord: Partial<ComplianceDlpSharePointClassificationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpSharePointClassificationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpSharePointClassificationExtendedAuditRecord(complianceDlpSharePointClassificationExtendedAuditRecord: Partial<ComplianceDlpSharePointClassificationExtendedAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpSharePointClassificationExtendedAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceManagerActionRecord(complianceManagerActionRecord: Partial<ComplianceManagerActionRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceManagerActionRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceSupervisionBaseAuditRecord(complianceSupervisionBaseAuditRecord: Partial<ComplianceSupervisionBaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceSupervisionBaseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceSupervisionExchangeAuditRecord(complianceSupervisionExchangeAuditRecord: Partial<ComplianceSupervisionExchangeAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceSupervisionExchangeAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoConsumptionResourceAuditRecord(consumptionResourceAuditRecord: Partial<ConsumptionResourceAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(consumptionResourceAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoContainerEvidence(containerEvidence: Partial<ContainerEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(containerEvidence),
        "args": n => { containerEvidence.args = n.getCollectionOfPrimitiveValues<string>(); },
        "command": n => { containerEvidence.command = n.getCollectionOfPrimitiveValues<string>(); },
        "containerId": n => { containerEvidence.containerId = n.getStringValue(); },
        "image": n => { containerEvidence.image = n.getObjectValue<ContainerImageEvidence>(createContainerImageEvidenceFromDiscriminatorValue); },
        "isPrivileged": n => { containerEvidence.isPrivileged = n.getBooleanValue(); },
        "name": n => { containerEvidence.name = n.getStringValue(); },
        "pod": n => { containerEvidence.pod = n.getObjectValue<KubernetesPodEvidence>(createKubernetesPodEvidenceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoContainerImageEvidence(containerImageEvidence: Partial<ContainerImageEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(containerImageEvidence),
        "digestImage": n => { containerImageEvidence.digestImage = n.getObjectValue<ContainerImageEvidence>(createContainerImageEvidenceFromDiscriminatorValue); },
        "imageId": n => { containerImageEvidence.imageId = n.getStringValue(); },
        "registry": n => { containerImageEvidence.registry = n.getObjectValue<ContainerRegistryEvidence>(createContainerRegistryEvidenceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoContainerRegistryEvidence(containerRegistryEvidence: Partial<ContainerRegistryEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(containerRegistryEvidence),
        "registry": n => { containerRegistryEvidence.registry = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoContentInfo(contentInfo: Partial<ContentInfo> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { contentInfo.backingStoreEnabled = true; },
        "contentFormat": n => { contentInfo.contentFormat = n.getStringValue(); },
        "identifier": n => { contentInfo.identifier = n.getStringValue(); },
        "metadata": n => { contentInfo.metadata = n.getCollectionOfObjectValues<KeyValuePair>(createKeyValuePairFromDiscriminatorValue); },
        "@odata.type": n => { contentInfo.odataType = n.getStringValue(); },
        "state": n => { contentInfo.state = n.getEnumValue<ContentState>(ContentStateObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoContentLabel(contentLabel: Partial<ContentLabel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "assignmentMethod": n => { contentLabel.assignmentMethod = n.getEnumValue<AssignmentMethod>(AssignmentMethodObject); },
        "backingStoreEnabled": n => { contentLabel.backingStoreEnabled = true; },
        "createdDateTime": n => { contentLabel.createdDateTime = n.getDateValue(); },
        "@odata.type": n => { contentLabel.odataType = n.getStringValue(); },
        "sensitivityLabelId": n => { contentLabel.sensitivityLabelId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCopilotInteractionAuditRecord(copilotInteractionAuditRecord: Partial<CopilotInteractionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(copilotInteractionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCoreReportingSettingsAuditRecord(coreReportingSettingsAuditRecord: Partial<CoreReportingSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(coreReportingSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCortanaBriefingAuditRecord(cortanaBriefingAuditRecord: Partial<CortanaBriefingAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cortanaBriefingAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCpsCommonPolicyAuditRecord(cpsCommonPolicyAuditRecord: Partial<CpsCommonPolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cpsCommonPolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCpsPolicyConfigAuditRecord(cpsPolicyConfigAuditRecord: Partial<CpsPolicyConfigAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cpsPolicyConfigAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCrmBaseAuditRecord(crmBaseAuditRecord: Partial<CrmBaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(crmBaseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCrmEntityOperationAuditRecord(crmEntityOperationAuditRecord: Partial<CrmEntityOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(crmEntityOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCustomAction(customAction: Partial<CustomAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInformationProtectionAction(customAction),
        "name": n => { customAction.name = n.getStringValue(); },
        "properties": n => { customAction.properties = n.getCollectionOfObjectValues<KeyValuePair>(createKeyValuePairFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCustomerKeyServiceEncryptionAuditRecord(customerKeyServiceEncryptionAuditRecord: Partial<CustomerKeyServiceEncryptionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(customerKeyServiceEncryptionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCvssSummary(cvssSummary: Partial<CvssSummary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { cvssSummary.backingStoreEnabled = true; },
        "@odata.type": n => { cvssSummary.odataType = n.getStringValue(); },
        "score": n => { cvssSummary.score = n.getNumberValue(); },
        "severity": n => { cvssSummary.severity = n.getEnumValue<VulnerabilitySeverity>(VulnerabilitySeverityObject); },
        "vectorString": n => { cvssSummary.vectorString = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataCenterSecurityBaseAuditRecord(dataCenterSecurityBaseAuditRecord: Partial<DataCenterSecurityBaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dataCenterSecurityBaseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataCenterSecurityCmdletAuditRecord(dataCenterSecurityCmdletAuditRecord: Partial<DataCenterSecurityCmdletAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dataCenterSecurityCmdletAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataGovernanceAuditRecord(dataGovernanceAuditRecord: Partial<DataGovernanceAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dataGovernanceAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataInsightsRestApiAuditRecord(dataInsightsRestApiAuditRecord: Partial<DataInsightsRestApiAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dataInsightsRestApiAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataLakeExportOperationAuditRecord(dataLakeExportOperationAuditRecord: Partial<DataLakeExportOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dataLakeExportOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataSet(dataSet: Partial<DataSet> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(dataSet),
        "createdBy": n => { dataSet.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { dataSet.createdDateTime = n.getDateValue(); },
        "displayName": n => { dataSet.displayName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataShareOperationAuditRecord(dataShareOperationAuditRecord: Partial<DataShareOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dataShareOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataSource(dataSource: Partial<DataSource> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(dataSource),
        "createdBy": n => { dataSource.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { dataSource.createdDateTime = n.getDateValue(); },
        "displayName": n => { dataSource.displayName = n.getStringValue(); },
        "holdStatus": n => { dataSource.holdStatus = n.getEnumValue<DataSourceHoldStatus>(DataSourceHoldStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataSourceCollectionResponse(dataSourceCollectionResponse: Partial<DataSourceCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(dataSourceCollectionResponse),
        "value": n => { dataSourceCollectionResponse.value = n.getCollectionOfObjectValues<DataSource>(createDataSourceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataSourceContainer(dataSourceContainer: Partial<DataSourceContainer> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(dataSourceContainer),
        "createdDateTime": n => { dataSourceContainer.createdDateTime = n.getDateValue(); },
        "displayName": n => { dataSourceContainer.displayName = n.getStringValue(); },
        "holdStatus": n => { dataSourceContainer.holdStatus = n.getEnumValue<DataSourceHoldStatus>(DataSourceHoldStatusObject); },
        "lastModifiedDateTime": n => { dataSourceContainer.lastModifiedDateTime = n.getDateValue(); },
        "releasedDateTime": n => { dataSourceContainer.releasedDateTime = n.getDateValue(); },
        "status": n => { dataSourceContainer.status = n.getEnumValue<DataSourceContainerStatus>(DataSourceContainerStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDefaultAuditData(defaultAuditData: Partial<DefaultAuditData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(defaultAuditData),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDefenderSecurityAlertBaseRecord(defenderSecurityAlertBaseRecord: Partial<DefenderSecurityAlertBaseRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(defenderSecurityAlertBaseRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeleteCertificateRecord(deleteCertificateRecord: Partial<DeleteCertificateRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(deleteCertificateRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDepartmentTemplate(departmentTemplate: Partial<DepartmentTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorTemplate(departmentTemplate),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDepartmentTemplateCollectionResponse(departmentTemplateCollectionResponse: Partial<DepartmentTemplateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(departmentTemplateCollectionResponse),
        "value": n => { departmentTemplateCollectionResponse.value = n.getCollectionOfObjectValues<DepartmentTemplate>(createDepartmentTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeploymentAccessKeyType(deploymentAccessKeyType: Partial<DeploymentAccessKeyType> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { deploymentAccessKeyType.backingStoreEnabled = true; },
        "deploymentAccessKey": n => { deploymentAccessKeyType.deploymentAccessKey = n.getStringValue(); },
        "@odata.type": n => { deploymentAccessKeyType.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDetectionAction(detectionAction: Partial<DetectionAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "alertTemplate": n => { detectionAction.alertTemplate = n.getObjectValue<AlertTemplate>(createAlertTemplateFromDiscriminatorValue); },
        "backingStoreEnabled": n => { detectionAction.backingStoreEnabled = true; },
        "@odata.type": n => { detectionAction.odataType = n.getStringValue(); },
        "organizationalScope": n => { detectionAction.organizationalScope = n.getObjectValue<OrganizationalScope>(createOrganizationalScopeFromDiscriminatorValue); },
        "responseActions": n => { detectionAction.responseActions = n.getCollectionOfObjectValues<ResponseAction>(createResponseActionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDetectionRule(detectionRule: Partial<DetectionRule> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoProtectionRule(detectionRule),
        "detectionAction": n => { detectionRule.detectionAction = n.getObjectValue<DetectionAction>(createDetectionActionFromDiscriminatorValue); },
        "detectorId": n => { detectionRule.detectorId = n.getStringValue(); },
        "lastRunDetails": n => { detectionRule.lastRunDetails = n.getObjectValue<RunDetails>(createRunDetailsFromDiscriminatorValue); },
        "queryCondition": n => { detectionRule.queryCondition = n.getObjectValue<QueryCondition>(createQueryConditionFromDiscriminatorValue); },
        "schedule": n => { detectionRule.schedule = n.getObjectValue<RuleSchedule>(createRuleScheduleFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDetectionRuleCollectionResponse(detectionRuleCollectionResponse: Partial<DetectionRuleCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(detectionRuleCollectionResponse),
        "value": n => { detectionRuleCollectionResponse.value = n.getCollectionOfObjectValues<DetectionRule>(createDetectionRuleFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDetonationChain(detonationChain: Partial<DetonationChain> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { detonationChain.backingStoreEnabled = true; },
        "childNodes": n => { detonationChain.childNodes = n.getCollectionOfObjectValues<DetonationChain>(createDetonationChainFromDiscriminatorValue); },
        "@odata.type": n => { detonationChain.odataType = n.getStringValue(); },
        "value": n => { detonationChain.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDetonationDetails(detonationDetails: Partial<DetonationDetails> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "analysisDateTime": n => { detonationDetails.analysisDateTime = n.getDateValue(); },
        "backingStoreEnabled": n => { detonationDetails.backingStoreEnabled = true; },
        "detonationChain": n => { detonationDetails.detonationChain = n.getObjectValue<DetonationChain>(createDetonationChainFromDiscriminatorValue); },
        "detonationObservables": n => { detonationDetails.detonationObservables = n.getObjectValue<DetonationObservables>(createDetonationObservablesFromDiscriminatorValue); },
        "detonationVerdict": n => { detonationDetails.detonationVerdict = n.getStringValue(); },
        "detonationVerdictReason": n => { detonationDetails.detonationVerdictReason = n.getStringValue(); },
        "@odata.type": n => { detonationDetails.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDetonationObservables(detonationObservables: Partial<DetonationObservables> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { detonationObservables.backingStoreEnabled = true; },
        "contactedIps": n => { detonationObservables.contactedIps = n.getCollectionOfPrimitiveValues<string>(); },
        "contactedUrls": n => { detonationObservables.contactedUrls = n.getCollectionOfPrimitiveValues<string>(); },
        "droppedfiles": n => { detonationObservables.droppedfiles = n.getCollectionOfPrimitiveValues<string>(); },
        "@odata.type": n => { detonationObservables.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeviceEvidence(deviceEvidence: Partial<DeviceEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(deviceEvidence),
        "azureAdDeviceId": n => { deviceEvidence.azureAdDeviceId = n.getStringValue(); },
        "defenderAvStatus": n => { deviceEvidence.defenderAvStatus = n.getEnumValue<DefenderAvStatus>(DefenderAvStatusObject); },
        "deviceDnsName": n => { deviceEvidence.deviceDnsName = n.getStringValue(); },
        "firstSeenDateTime": n => { deviceEvidence.firstSeenDateTime = n.getDateValue(); },
        "healthStatus": n => { deviceEvidence.healthStatus = n.getEnumValue<DeviceHealthStatus>(DeviceHealthStatusObject); },
        "ipInterfaces": n => { deviceEvidence.ipInterfaces = n.getCollectionOfPrimitiveValues<string>(); },
        "lastExternalIpAddress": n => { deviceEvidence.lastExternalIpAddress = n.getStringValue(); },
        "lastIpAddress": n => { deviceEvidence.lastIpAddress = n.getStringValue(); },
        "loggedOnUsers": n => { deviceEvidence.loggedOnUsers = n.getCollectionOfObjectValues<LoggedOnUser>(createLoggedOnUserFromDiscriminatorValue); },
        "mdeDeviceId": n => { deviceEvidence.mdeDeviceId = n.getStringValue(); },
        "onboardingStatus": n => { deviceEvidence.onboardingStatus = n.getEnumValue<OnboardingStatus>(OnboardingStatusObject); },
        "osBuild": n => { deviceEvidence.osBuild = n.getNumberValue(); },
        "osPlatform": n => { deviceEvidence.osPlatform = n.getStringValue(); },
        "rbacGroupId": n => { deviceEvidence.rbacGroupId = n.getNumberValue(); },
        "rbacGroupName": n => { deviceEvidence.rbacGroupName = n.getStringValue(); },
        "riskScore": n => { deviceEvidence.riskScore = n.getEnumValue<DeviceRiskScore>(DeviceRiskScoreObject); },
        "version": n => { deviceEvidence.version = n.getStringValue(); },
        "vmMetadata": n => { deviceEvidence.vmMetadata = n.getObjectValue<VmMetadata>(createVmMetadataFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDictionary(dictionary: Partial<Dictionary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { dictionary.backingStoreEnabled = true; },
        "@odata.type": n => { dictionary.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDisableConsentRecord(disableConsentRecord: Partial<DisableConsentRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(disableConsentRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDisableUserResponseAction(disableUserResponseAction: Partial<DisableUserResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResponseAction(disableUserResponseAction),
        "identifier": n => { disableUserResponseAction.identifier = n.getCollectionOfEnumValues<DisableUserEntityIdentifier>(DisableUserEntityIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDiscoveryAuditRecord(discoveryAuditRecord: Partial<DiscoveryAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(discoveryAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDispositionReviewStage(dispositionReviewStage: Partial<DispositionReviewStage> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(dispositionReviewStage),
        "name": n => { dispositionReviewStage.name = n.getStringValue(); },
        "reviewersEmailAddresses": n => { dispositionReviewStage.reviewersEmailAddresses = n.getCollectionOfPrimitiveValues<string>(); },
        "stageNumber": n => { dispositionReviewStage.stageNumber = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDispositionReviewStageCollectionResponse(dispositionReviewStageCollectionResponse: Partial<DispositionReviewStageCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(dispositionReviewStageCollectionResponse),
        "value": n => { dispositionReviewStageCollectionResponse.value = n.getCollectionOfObjectValues<DispositionReviewStage>(createDispositionReviewStageFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDlpEndpointAuditRecord(dlpEndpointAuditRecord: Partial<DlpEndpointAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dlpEndpointAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDlpSensitiveInformationTypeCmdletRecord(dlpSensitiveInformationTypeCmdletRecord: Partial<DlpSensitiveInformationTypeCmdletRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dlpSensitiveInformationTypeCmdletRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDlpSensitiveInformationTypeRulePackageCmdletRecord(dlpSensitiveInformationTypeRulePackageCmdletRecord: Partial<DlpSensitiveInformationTypeRulePackageCmdletRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dlpSensitiveInformationTypeRulePackageCmdletRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDnsEvidence(dnsEvidence: Partial<DnsEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(dnsEvidence),
        "dnsServerIp": n => { dnsEvidence.dnsServerIp = n.getObjectValue<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "domainName": n => { dnsEvidence.domainName = n.getStringValue(); },
        "hostIpAddress": n => { dnsEvidence.hostIpAddress = n.getObjectValue<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "ipAddresses": n => { dnsEvidence.ipAddresses = n.getCollectionOfObjectValues<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDowngradeJustification(downgradeJustification: Partial<DowngradeJustification> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { downgradeJustification.backingStoreEnabled = true; },
        "isDowngradeJustified": n => { downgradeJustification.isDowngradeJustified = n.getBooleanValue(); },
        "justificationMessage": n => { downgradeJustification.justificationMessage = n.getStringValue(); },
        "@odata.type": n => { downgradeJustification.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDownloadCertificateRecord(downloadCertificateRecord: Partial<DownloadCertificateRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(downloadCertificateRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDynamics365BusinessCentralAuditRecord(dynamics365BusinessCentralAuditRecord: Partial<Dynamics365BusinessCentralAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dynamics365BusinessCentralAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryAddToReviewSetOperation(ediscoveryAddToReviewSetOperation: Partial<EdiscoveryAddToReviewSetOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryAddToReviewSetOperation),
        "reviewSet": n => { ediscoveryAddToReviewSetOperation.reviewSet = n.getObjectValue<EdiscoveryReviewSet>(createEdiscoveryReviewSetFromDiscriminatorValue); },
        "search": n => { ediscoveryAddToReviewSetOperation.search = n.getObjectValue<EdiscoverySearch>(createEdiscoverySearchFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryCase(ediscoveryCase: Partial<EdiscoveryCase> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseEscaped(ediscoveryCase),
        "closedBy": n => { ediscoveryCase.closedBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "closedDateTime": n => { ediscoveryCase.closedDateTime = n.getDateValue(); },
        "custodians": n => { ediscoveryCase.custodians = n.getCollectionOfObjectValues<EdiscoveryCustodian>(createEdiscoveryCustodianFromDiscriminatorValue); },
        "externalId": n => { ediscoveryCase.externalId = n.getStringValue(); },
        "legalHolds": n => { ediscoveryCase.legalHolds = n.getCollectionOfObjectValues<EdiscoveryHoldPolicy>(createEdiscoveryHoldPolicyFromDiscriminatorValue); },
        "noncustodialDataSources": n => { ediscoveryCase.noncustodialDataSources = n.getCollectionOfObjectValues<EdiscoveryNoncustodialDataSource>(createEdiscoveryNoncustodialDataSourceFromDiscriminatorValue); },
        "operations": n => { ediscoveryCase.operations = n.getCollectionOfObjectValues<CaseOperation>(createCaseOperationFromDiscriminatorValue); },
        "reviewSets": n => { ediscoveryCase.reviewSets = n.getCollectionOfObjectValues<EdiscoveryReviewSet>(createEdiscoveryReviewSetFromDiscriminatorValue); },
        "searches": n => { ediscoveryCase.searches = n.getCollectionOfObjectValues<EdiscoverySearch>(createEdiscoverySearchFromDiscriminatorValue); },
        "settings": n => { ediscoveryCase.settings = n.getObjectValue<EdiscoveryCaseSettings>(createEdiscoveryCaseSettingsFromDiscriminatorValue); },
        "tags": n => { ediscoveryCase.tags = n.getCollectionOfObjectValues<EdiscoveryReviewTag>(createEdiscoveryReviewTagFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryCaseCollectionResponse(ediscoveryCaseCollectionResponse: Partial<EdiscoveryCaseCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(ediscoveryCaseCollectionResponse),
        "value": n => { ediscoveryCaseCollectionResponse.value = n.getCollectionOfObjectValues<EdiscoveryCase>(createEdiscoveryCaseFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryCaseSettings(ediscoveryCaseSettings: Partial<EdiscoveryCaseSettings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(ediscoveryCaseSettings),
        "ocr": n => { ediscoveryCaseSettings.ocr = n.getObjectValue<OcrSettings>(createOcrSettingsFromDiscriminatorValue); },
        "redundancyDetection": n => { ediscoveryCaseSettings.redundancyDetection = n.getObjectValue<RedundancyDetectionSettings>(createRedundancyDetectionSettingsFromDiscriminatorValue); },
        "topicModeling": n => { ediscoveryCaseSettings.topicModeling = n.getObjectValue<TopicModelingSettings>(createTopicModelingSettingsFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryCustodian(ediscoveryCustodian: Partial<EdiscoveryCustodian> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDataSourceContainer(ediscoveryCustodian),
        "acknowledgedDateTime": n => { ediscoveryCustodian.acknowledgedDateTime = n.getDateValue(); },
        "email": n => { ediscoveryCustodian.email = n.getStringValue(); },
        "lastIndexOperation": n => { ediscoveryCustodian.lastIndexOperation = n.getObjectValue<EdiscoveryIndexOperation>(createEdiscoveryIndexOperationFromDiscriminatorValue); },
        "siteSources": n => { ediscoveryCustodian.siteSources = n.getCollectionOfObjectValues<SiteSource>(createSiteSourceFromDiscriminatorValue); },
        "unifiedGroupSources": n => { ediscoveryCustodian.unifiedGroupSources = n.getCollectionOfObjectValues<UnifiedGroupSource>(createUnifiedGroupSourceFromDiscriminatorValue); },
        "userSources": n => { ediscoveryCustodian.userSources = n.getCollectionOfObjectValues<UserSource>(createUserSourceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryCustodianCollectionResponse(ediscoveryCustodianCollectionResponse: Partial<EdiscoveryCustodianCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(ediscoveryCustodianCollectionResponse),
        "value": n => { ediscoveryCustodianCollectionResponse.value = n.getCollectionOfObjectValues<EdiscoveryCustodian>(createEdiscoveryCustodianFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryEstimateOperation(ediscoveryEstimateOperation: Partial<EdiscoveryEstimateOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryEstimateOperation),
        "indexedItemCount": n => { ediscoveryEstimateOperation.indexedItemCount = n.getNumberValue(); },
        "indexedItemsSize": n => { ediscoveryEstimateOperation.indexedItemsSize = n.getNumberValue(); },
        "mailboxCount": n => { ediscoveryEstimateOperation.mailboxCount = n.getNumberValue(); },
        "search": n => { ediscoveryEstimateOperation.search = n.getObjectValue<EdiscoverySearch>(createEdiscoverySearchFromDiscriminatorValue); },
        "siteCount": n => { ediscoveryEstimateOperation.siteCount = n.getNumberValue(); },
        "unindexedItemCount": n => { ediscoveryEstimateOperation.unindexedItemCount = n.getNumberValue(); },
        "unindexedItemsSize": n => { ediscoveryEstimateOperation.unindexedItemsSize = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryExportOperation(ediscoveryExportOperation: Partial<EdiscoveryExportOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryExportOperation),
        "azureBlobContainer": n => { ediscoveryExportOperation.azureBlobContainer = n.getStringValue(); },
        "azureBlobToken": n => { ediscoveryExportOperation.azureBlobToken = n.getStringValue(); },
        "description": n => { ediscoveryExportOperation.description = n.getStringValue(); },
        "exportFileMetadata": n => { ediscoveryExportOperation.exportFileMetadata = n.getCollectionOfObjectValues<ExportFileMetadata>(createExportFileMetadataFromDiscriminatorValue); },
        "exportOptions": n => { ediscoveryExportOperation.exportOptions = n.getCollectionOfEnumValues<ExportOptions>(ExportOptionsObject); },
        "exportStructure": n => { ediscoveryExportOperation.exportStructure = n.getEnumValue<ExportFileStructure>(ExportFileStructureObject); },
        "outputFolderId": n => { ediscoveryExportOperation.outputFolderId = n.getStringValue(); },
        "outputName": n => { ediscoveryExportOperation.outputName = n.getStringValue(); },
        "reviewSet": n => { ediscoveryExportOperation.reviewSet = n.getObjectValue<EdiscoveryReviewSet>(createEdiscoveryReviewSetFromDiscriminatorValue); },
        "reviewSetQuery": n => { ediscoveryExportOperation.reviewSetQuery = n.getObjectValue<EdiscoveryReviewSetQuery>(createEdiscoveryReviewSetQueryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryFile(ediscoveryFile: Partial<EdiscoveryFile> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFile(ediscoveryFile),
        "custodian": n => { ediscoveryFile.custodian = n.getObjectValue<EdiscoveryCustodian>(createEdiscoveryCustodianFromDiscriminatorValue); },
        "tags": n => { ediscoveryFile.tags = n.getCollectionOfObjectValues<EdiscoveryReviewTag>(createEdiscoveryReviewTagFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryFileCollectionResponse(ediscoveryFileCollectionResponse: Partial<EdiscoveryFileCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(ediscoveryFileCollectionResponse),
        "value": n => { ediscoveryFileCollectionResponse.value = n.getCollectionOfObjectValues<EdiscoveryFile>(createEdiscoveryFileFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryHoldOperation(ediscoveryHoldOperation: Partial<EdiscoveryHoldOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryHoldOperation),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryHoldPolicy(ediscoveryHoldPolicy: Partial<EdiscoveryHoldPolicy> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoPolicyBase(ediscoveryHoldPolicy),
        "contentQuery": n => { ediscoveryHoldPolicy.contentQuery = n.getStringValue(); },
        "errors": n => { ediscoveryHoldPolicy.errors = n.getCollectionOfPrimitiveValues<string>(); },
        "isEnabled": n => { ediscoveryHoldPolicy.isEnabled = n.getBooleanValue(); },
        "siteSources": n => { ediscoveryHoldPolicy.siteSources = n.getCollectionOfObjectValues<SiteSource>(createSiteSourceFromDiscriminatorValue); },
        "userSources": n => { ediscoveryHoldPolicy.userSources = n.getCollectionOfObjectValues<UserSource>(createUserSourceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryHoldPolicyCollectionResponse(ediscoveryHoldPolicyCollectionResponse: Partial<EdiscoveryHoldPolicyCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(ediscoveryHoldPolicyCollectionResponse),
        "value": n => { ediscoveryHoldPolicyCollectionResponse.value = n.getCollectionOfObjectValues<EdiscoveryHoldPolicy>(createEdiscoveryHoldPolicyFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryIndexOperation(ediscoveryIndexOperation: Partial<EdiscoveryIndexOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryIndexOperation),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryNoncustodialDataSource(ediscoveryNoncustodialDataSource: Partial<EdiscoveryNoncustodialDataSource> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDataSourceContainer(ediscoveryNoncustodialDataSource),
        "dataSource": n => { ediscoveryNoncustodialDataSource.dataSource = n.getObjectValue<DataSource>(createDataSourceFromDiscriminatorValue); },
        "lastIndexOperation": n => { ediscoveryNoncustodialDataSource.lastIndexOperation = n.getObjectValue<EdiscoveryIndexOperation>(createEdiscoveryIndexOperationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryNoncustodialDataSourceCollectionResponse(ediscoveryNoncustodialDataSourceCollectionResponse: Partial<EdiscoveryNoncustodialDataSourceCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(ediscoveryNoncustodialDataSourceCollectionResponse),
        "value": n => { ediscoveryNoncustodialDataSourceCollectionResponse.value = n.getCollectionOfObjectValues<EdiscoveryNoncustodialDataSource>(createEdiscoveryNoncustodialDataSourceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryPurgeDataOperation(ediscoveryPurgeDataOperation: Partial<EdiscoveryPurgeDataOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryPurgeDataOperation),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryReviewSet(ediscoveryReviewSet: Partial<EdiscoveryReviewSet> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDataSet(ediscoveryReviewSet),
        "files": n => { ediscoveryReviewSet.files = n.getCollectionOfObjectValues<EdiscoveryFile>(createEdiscoveryFileFromDiscriminatorValue); },
        "queries": n => { ediscoveryReviewSet.queries = n.getCollectionOfObjectValues<EdiscoveryReviewSetQuery>(createEdiscoveryReviewSetQueryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryReviewSetCollectionResponse(ediscoveryReviewSetCollectionResponse: Partial<EdiscoveryReviewSetCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(ediscoveryReviewSetCollectionResponse),
        "value": n => { ediscoveryReviewSetCollectionResponse.value = n.getCollectionOfObjectValues<EdiscoveryReviewSet>(createEdiscoveryReviewSetFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryReviewSetQuery(ediscoveryReviewSetQuery: Partial<EdiscoveryReviewSetQuery> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoSearch(ediscoveryReviewSetQuery),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryReviewSetQueryCollectionResponse(ediscoveryReviewSetQueryCollectionResponse: Partial<EdiscoveryReviewSetQueryCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(ediscoveryReviewSetQueryCollectionResponse),
        "value": n => { ediscoveryReviewSetQueryCollectionResponse.value = n.getCollectionOfObjectValues<EdiscoveryReviewSetQuery>(createEdiscoveryReviewSetQueryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryReviewTag(ediscoveryReviewTag: Partial<EdiscoveryReviewTag> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoTag(ediscoveryReviewTag),
        "childSelectability": n => { ediscoveryReviewTag.childSelectability = n.getEnumValue<ChildSelectability>(ChildSelectabilityObject); },
        "childTags": n => { ediscoveryReviewTag.childTags = n.getCollectionOfObjectValues<EdiscoveryReviewTag>(createEdiscoveryReviewTagFromDiscriminatorValue); },
        "parent": n => { ediscoveryReviewTag.parent = n.getObjectValue<EdiscoveryReviewTag>(createEdiscoveryReviewTagFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryReviewTagCollectionResponse(ediscoveryReviewTagCollectionResponse: Partial<EdiscoveryReviewTagCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(ediscoveryReviewTagCollectionResponse),
        "value": n => { ediscoveryReviewTagCollectionResponse.value = n.getCollectionOfObjectValues<EdiscoveryReviewTag>(createEdiscoveryReviewTagFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoverySearch(ediscoverySearch: Partial<EdiscoverySearch> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoSearch(ediscoverySearch),
        "additionalSources": n => { ediscoverySearch.additionalSources = n.getCollectionOfObjectValues<DataSource>(createDataSourceFromDiscriminatorValue); },
        "addToReviewSetOperation": n => { ediscoverySearch.addToReviewSetOperation = n.getObjectValue<EdiscoveryAddToReviewSetOperation>(createEdiscoveryAddToReviewSetOperationFromDiscriminatorValue); },
        "custodianSources": n => { ediscoverySearch.custodianSources = n.getCollectionOfObjectValues<DataSource>(createDataSourceFromDiscriminatorValue); },
        "dataSourceScopes": n => { ediscoverySearch.dataSourceScopes = n.getCollectionOfEnumValues<DataSourceScopes>(DataSourceScopesObject); },
        "lastEstimateStatisticsOperation": n => { ediscoverySearch.lastEstimateStatisticsOperation = n.getObjectValue<EdiscoveryEstimateOperation>(createEdiscoveryEstimateOperationFromDiscriminatorValue); },
        "noncustodialSources": n => { ediscoverySearch.noncustodialSources = n.getCollectionOfObjectValues<EdiscoveryNoncustodialDataSource>(createEdiscoveryNoncustodialDataSourceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoverySearchCollectionResponse(ediscoverySearchCollectionResponse: Partial<EdiscoverySearchCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(ediscoverySearchCollectionResponse),
        "value": n => { ediscoverySearchCollectionResponse.value = n.getCollectionOfObjectValues<EdiscoverySearch>(createEdiscoverySearchFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoverySearchExportOperation(ediscoverySearchExportOperation: Partial<EdiscoverySearchExportOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoverySearchExportOperation),
        "additionalOptions": n => { ediscoverySearchExportOperation.additionalOptions = n.getCollectionOfEnumValues<AdditionalOptions>(AdditionalOptionsObject); },
        "description": n => { ediscoverySearchExportOperation.description = n.getStringValue(); },
        "displayName": n => { ediscoverySearchExportOperation.displayName = n.getStringValue(); },
        "exportCriteria": n => { ediscoverySearchExportOperation.exportCriteria = n.getCollectionOfEnumValues<ExportCriteria>(ExportCriteriaObject); },
        "exportFileMetadata": n => { ediscoverySearchExportOperation.exportFileMetadata = n.getCollectionOfObjectValues<ExportFileMetadata>(createExportFileMetadataFromDiscriminatorValue); },
        "exportFormat": n => { ediscoverySearchExportOperation.exportFormat = n.getEnumValue<ExportFormat>(ExportFormatObject); },
        "exportLocation": n => { ediscoverySearchExportOperation.exportLocation = n.getCollectionOfEnumValues<ExportLocation>(ExportLocationObject); },
        "exportSingleItems": n => { ediscoverySearchExportOperation.exportSingleItems = n.getBooleanValue(); },
        "search": n => { ediscoverySearchExportOperation.search = n.getObjectValue<EdiscoverySearch>(createEdiscoverySearchFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryTagOperation(ediscoveryTagOperation: Partial<EdiscoveryTagOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryTagOperation),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEmailContentThreatSubmission(emailContentThreatSubmission: Partial<EmailContentThreatSubmission> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEmailThreatSubmission(emailContentThreatSubmission),
        "fileContent": n => { emailContentThreatSubmission.fileContent = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEmailSender(emailSender: Partial<EmailSender> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { emailSender.backingStoreEnabled = true; },
        "displayName": n => { emailSender.displayName = n.getStringValue(); },
        "domainName": n => { emailSender.domainName = n.getStringValue(); },
        "emailAddress": n => { emailSender.emailAddress = n.getStringValue(); },
        "@odata.type": n => { emailSender.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEmailThreatSubmission(emailThreatSubmission: Partial<EmailThreatSubmission> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoThreatSubmission(emailThreatSubmission),
        "attackSimulationInfo": n => { emailThreatSubmission.attackSimulationInfo = n.getObjectValue<AttackSimulationInfo>(createAttackSimulationInfoFromDiscriminatorValue); },
        "internetMessageId": n => { emailThreatSubmission.internetMessageId = n.getStringValue(); },
        "originalCategory": n => { emailThreatSubmission.originalCategory = n.getEnumValue<SubmissionCategory>(SubmissionCategoryObject); },
        "receivedDateTime": n => { emailThreatSubmission.receivedDateTime = n.getDateValue(); },
        "recipientEmailAddress": n => { emailThreatSubmission.recipientEmailAddress = n.getStringValue(); },
        "sender": n => { emailThreatSubmission.sender = n.getStringValue(); },
        "senderIP": n => { emailThreatSubmission.senderIP = n.getStringValue(); },
        "subject": n => { emailThreatSubmission.subject = n.getStringValue(); },
        "tenantAllowOrBlockListAction": n => { emailThreatSubmission.tenantAllowOrBlockListAction = n.getObjectValue<TenantAllowOrBlockListAction>(createTenantAllowOrBlockListActionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEmailThreatSubmissionCollectionResponse(emailThreatSubmissionCollectionResponse: Partial<EmailThreatSubmissionCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(emailThreatSubmissionCollectionResponse),
        "value": n => { emailThreatSubmissionCollectionResponse.value = n.getCollectionOfObjectValues<EmailThreatSubmission>(createEmailThreatSubmissionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEmailThreatSubmissionPolicy(emailThreatSubmissionPolicy: Partial<EmailThreatSubmissionPolicy> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(emailThreatSubmissionPolicy),
        "customizedNotificationSenderEmailAddress": n => { emailThreatSubmissionPolicy.customizedNotificationSenderEmailAddress = n.getStringValue(); },
        "customizedReportRecipientEmailAddress": n => { emailThreatSubmissionPolicy.customizedReportRecipientEmailAddress = n.getStringValue(); },
        "isAlwaysReportEnabledForUsers": n => { emailThreatSubmissionPolicy.isAlwaysReportEnabledForUsers = n.getBooleanValue(); },
        "isAskMeEnabledForUsers": n => { emailThreatSubmissionPolicy.isAskMeEnabledForUsers = n.getBooleanValue(); },
        "isCustomizedMessageEnabled": n => { emailThreatSubmissionPolicy.isCustomizedMessageEnabled = n.getBooleanValue(); },
        "isCustomizedMessageEnabledForPhishing": n => { emailThreatSubmissionPolicy.isCustomizedMessageEnabledForPhishing = n.getBooleanValue(); },
        "isCustomizedNotificationSenderEnabled": n => { emailThreatSubmissionPolicy.isCustomizedNotificationSenderEnabled = n.getBooleanValue(); },
        "isNeverReportEnabledForUsers": n => { emailThreatSubmissionPolicy.isNeverReportEnabledForUsers = n.getBooleanValue(); },
        "isOrganizationBrandingEnabled": n => { emailThreatSubmissionPolicy.isOrganizationBrandingEnabled = n.getBooleanValue(); },
        "isReportFromQuarantineEnabled": n => { emailThreatSubmissionPolicy.isReportFromQuarantineEnabled = n.getBooleanValue(); },
        "isReportToCustomizedEmailAddressEnabled": n => { emailThreatSubmissionPolicy.isReportToCustomizedEmailAddressEnabled = n.getBooleanValue(); },
        "isReportToMicrosoftEnabled": n => { emailThreatSubmissionPolicy.isReportToMicrosoftEnabled = n.getBooleanValue(); },
        "isReviewEmailNotificationEnabled": n => { emailThreatSubmissionPolicy.isReviewEmailNotificationEnabled = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEmailThreatSubmissionPolicyCollectionResponse(emailThreatSubmissionPolicyCollectionResponse: Partial<EmailThreatSubmissionPolicyCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(emailThreatSubmissionPolicyCollectionResponse),
        "value": n => { emailThreatSubmissionPolicyCollectionResponse.value = n.getCollectionOfObjectValues<EmailThreatSubmissionPolicy>(createEmailThreatSubmissionPolicyFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEmailUrlThreatSubmission(emailUrlThreatSubmission: Partial<EmailUrlThreatSubmission> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEmailThreatSubmission(emailUrlThreatSubmission),
        "messageUrl": n => { emailUrlThreatSubmission.messageUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEnableConsentRecord(enableConsentRecord: Partial<EnableConsentRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(enableConsentRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEpicSMSLinkRecord(epicSMSLinkRecord: Partial<EpicSMSLinkRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(epicSMSLinkRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEpicSMSSettingsUpdateRecord(epicSMSSettingsUpdateRecord: Partial<EpicSMSSettingsUpdateRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(epicSMSSettingsUpdateRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEpicSMSUnlinkRecord(epicSMSUnlinkRecord: Partial<EpicSMSUnlinkRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(epicSMSUnlinkRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEventPropagationResult(eventPropagationResult: Partial<EventPropagationResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { eventPropagationResult.backingStoreEnabled = true; },
        "location": n => { eventPropagationResult.location = n.getStringValue(); },
        "@odata.type": n => { eventPropagationResult.odataType = n.getStringValue(); },
        "serviceName": n => { eventPropagationResult.serviceName = n.getStringValue(); },
        "status": n => { eventPropagationResult.status = n.getEnumValue<EventPropagationStatus>(EventPropagationStatusObject); },
        "statusInformation": n => { eventPropagationResult.statusInformation = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEventQuery(eventQuery: Partial<EventQuery> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { eventQuery.backingStoreEnabled = true; },
        "@odata.type": n => { eventQuery.odataType = n.getStringValue(); },
        "query": n => { eventQuery.query = n.getStringValue(); },
        "queryType": n => { eventQuery.queryType = n.getEnumValue<QueryType>(QueryTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoExchangeAdminAuditRecord(exchangeAdminAuditRecord: Partial<ExchangeAdminAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(exchangeAdminAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoExchangeAggregatedMailboxAuditRecord(exchangeAggregatedMailboxAuditRecord: Partial<ExchangeAggregatedMailboxAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(exchangeAggregatedMailboxAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoExchangeAggregatedOperationRecord(exchangeAggregatedOperationRecord: Partial<ExchangeAggregatedOperationRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(exchangeAggregatedOperationRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoExchangeMailboxAuditBaseRecord(exchangeMailboxAuditBaseRecord: Partial<ExchangeMailboxAuditBaseRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(exchangeMailboxAuditBaseRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoExchangeMailboxAuditGroupRecord(exchangeMailboxAuditGroupRecord: Partial<ExchangeMailboxAuditGroupRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(exchangeMailboxAuditGroupRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoExchangeMailboxAuditRecord(exchangeMailboxAuditRecord: Partial<ExchangeMailboxAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(exchangeMailboxAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoExportFileMetadata(exportFileMetadata: Partial<ExportFileMetadata> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { exportFileMetadata.backingStoreEnabled = true; },
        "downloadUrl": n => { exportFileMetadata.downloadUrl = n.getStringValue(); },
        "fileName": n => { exportFileMetadata.fileName = n.getStringValue(); },
        "@odata.type": n => { exportFileMetadata.odataType = n.getStringValue(); },
        "size": n => { exportFileMetadata.size = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFhirBaseUrlAddRecord(fhirBaseUrlAddRecord: Partial<FhirBaseUrlAddRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(fhirBaseUrlAddRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFhirBaseUrlApproveRecord(fhirBaseUrlApproveRecord: Partial<FhirBaseUrlApproveRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(fhirBaseUrlApproveRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFhirBaseUrlDeleteRecord(fhirBaseUrlDeleteRecord: Partial<FhirBaseUrlDeleteRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(fhirBaseUrlDeleteRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFhirBaseUrlUpdateRecord(fhirBaseUrlUpdateRecord: Partial<FhirBaseUrlUpdateRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(fhirBaseUrlUpdateRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFile(file: Partial<File> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(file),
        "content": n => { file.content = n.getStringValue(); },
        "dateTime": n => { file.dateTime = n.getDateValue(); },
        "extension": n => { file.extension = n.getStringValue(); },
        "extractedTextContent": n => { file.extractedTextContent = n.getStringValue(); },
        "mediaType": n => { file.mediaType = n.getStringValue(); },
        "name": n => { file.name = n.getStringValue(); },
        "otherProperties": n => { file.otherProperties = n.getObjectValue<StringValueDictionary>(createStringValueDictionaryFromDiscriminatorValue); },
        "processingStatus": n => { file.processingStatus = n.getEnumValue<FileProcessingStatus>(FileProcessingStatusObject); },
        "senderOrAuthors": n => { file.senderOrAuthors = n.getCollectionOfPrimitiveValues<string>(); },
        "size": n => { file.size = n.getNumberValue(); },
        "sourceType": n => { file.sourceType = n.getCollectionOfEnumValues<SourceType>(SourceTypeObject); },
        "subjectTitle": n => { file.subjectTitle = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileContentThreatSubmission(fileContentThreatSubmission: Partial<FileContentThreatSubmission> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFileThreatSubmission(fileContentThreatSubmission),
        "fileContent": n => { fileContentThreatSubmission.fileContent = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileDetails(fileDetails: Partial<FileDetails> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { fileDetails.backingStoreEnabled = true; },
        "fileName": n => { fileDetails.fileName = n.getStringValue(); },
        "filePath": n => { fileDetails.filePath = n.getStringValue(); },
        "filePublisher": n => { fileDetails.filePublisher = n.getStringValue(); },
        "fileSize": n => { fileDetails.fileSize = n.getNumberValue(); },
        "issuer": n => { fileDetails.issuer = n.getStringValue(); },
        "@odata.type": n => { fileDetails.odataType = n.getStringValue(); },
        "sha1": n => { fileDetails.sha1 = n.getStringValue(); },
        "sha256": n => { fileDetails.sha256 = n.getStringValue(); },
        "signer": n => { fileDetails.signer = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileEvidence(fileEvidence: Partial<FileEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(fileEvidence),
        "detectionStatus": n => { fileEvidence.detectionStatus = n.getEnumValue<DetectionStatus>(DetectionStatusObject); },
        "fileDetails": n => { fileEvidence.fileDetails = n.getObjectValue<FileDetails>(createFileDetailsFromDiscriminatorValue); },
        "mdeDeviceId": n => { fileEvidence.mdeDeviceId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileHash(fileHash: Partial<FileHash> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "algorithm": n => { fileHash.algorithm = n.getEnumValue<FileHashAlgorithm>(FileHashAlgorithmObject); },
        "backingStoreEnabled": n => { fileHash.backingStoreEnabled = true; },
        "@odata.type": n => { fileHash.odataType = n.getStringValue(); },
        "value": n => { fileHash.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileHashEvidence(fileHashEvidence: Partial<FileHashEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(fileHashEvidence),
        "algorithm": n => { fileHashEvidence.algorithm = n.getEnumValue<FileHashAlgorithm>(FileHashAlgorithmObject); },
        "value": n => { fileHashEvidence.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanAppliedCategory(filePlanAppliedCategory: Partial<FilePlanAppliedCategory> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorBase(filePlanAppliedCategory),
        "subcategory": n => { filePlanAppliedCategory.subcategory = n.getObjectValue<FilePlanSubcategory>(createFilePlanSubcategoryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanAuthority(filePlanAuthority: Partial<FilePlanAuthority> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorBase(filePlanAuthority),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanCitation(filePlanCitation: Partial<FilePlanCitation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorBase(filePlanCitation),
        "citationJurisdiction": n => { filePlanCitation.citationJurisdiction = n.getStringValue(); },
        "citationUrl": n => { filePlanCitation.citationUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanDepartment(filePlanDepartment: Partial<FilePlanDepartment> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorBase(filePlanDepartment),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanDescriptor(filePlanDescriptor: Partial<FilePlanDescriptor> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(filePlanDescriptor),
        "authority": n => { filePlanDescriptor.authority = n.getObjectValue<FilePlanAuthority>(createFilePlanAuthorityFromDiscriminatorValue); },
        "authorityTemplate": n => { filePlanDescriptor.authorityTemplate = n.getObjectValue<AuthorityTemplate>(createAuthorityTemplateFromDiscriminatorValue); },
        "category": n => { filePlanDescriptor.category = n.getObjectValue<FilePlanAppliedCategory>(createFilePlanAppliedCategoryFromDiscriminatorValue); },
        "categoryTemplate": n => { filePlanDescriptor.categoryTemplate = n.getObjectValue<CategoryTemplate>(createCategoryTemplateFromDiscriminatorValue); },
        "citation": n => { filePlanDescriptor.citation = n.getObjectValue<FilePlanCitation>(createFilePlanCitationFromDiscriminatorValue); },
        "citationTemplate": n => { filePlanDescriptor.citationTemplate = n.getObjectValue<CitationTemplate>(createCitationTemplateFromDiscriminatorValue); },
        "department": n => { filePlanDescriptor.department = n.getObjectValue<FilePlanDepartment>(createFilePlanDepartmentFromDiscriminatorValue); },
        "departmentTemplate": n => { filePlanDescriptor.departmentTemplate = n.getObjectValue<DepartmentTemplate>(createDepartmentTemplateFromDiscriminatorValue); },
        "filePlanReference": n => { filePlanDescriptor.filePlanReference = n.getObjectValue<FilePlanReference>(createFilePlanReferenceFromDiscriminatorValue); },
        "filePlanReferenceTemplate": n => { filePlanDescriptor.filePlanReferenceTemplate = n.getObjectValue<FilePlanReferenceTemplate>(createFilePlanReferenceTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanDescriptorBase(filePlanDescriptorBase: Partial<FilePlanDescriptorBase> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { filePlanDescriptorBase.backingStoreEnabled = true; },
        "displayName": n => { filePlanDescriptorBase.displayName = n.getStringValue(); },
        "@odata.type": n => { filePlanDescriptorBase.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanDescriptorTemplate(filePlanDescriptorTemplate: Partial<FilePlanDescriptorTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(filePlanDescriptorTemplate),
        "createdBy": n => { filePlanDescriptorTemplate.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { filePlanDescriptorTemplate.createdDateTime = n.getDateValue(); },
        "displayName": n => { filePlanDescriptorTemplate.displayName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanReference(filePlanReference: Partial<FilePlanReference> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorBase(filePlanReference),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanReferenceTemplate(filePlanReferenceTemplate: Partial<FilePlanReferenceTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorTemplate(filePlanReferenceTemplate),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanReferenceTemplateCollectionResponse(filePlanReferenceTemplateCollectionResponse: Partial<FilePlanReferenceTemplateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(filePlanReferenceTemplateCollectionResponse),
        "value": n => { filePlanReferenceTemplateCollectionResponse.value = n.getCollectionOfObjectValues<FilePlanReferenceTemplate>(createFilePlanReferenceTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanSubcategory(filePlanSubcategory: Partial<FilePlanSubcategory> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorBase(filePlanSubcategory),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileThreatSubmission(fileThreatSubmission: Partial<FileThreatSubmission> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoThreatSubmission(fileThreatSubmission),
        "fileName": n => { fileThreatSubmission.fileName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileThreatSubmissionCollectionResponse(fileThreatSubmissionCollectionResponse: Partial<FileThreatSubmissionCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(fileThreatSubmissionCollectionResponse),
        "value": n => { fileThreatSubmissionCollectionResponse.value = n.getCollectionOfObjectValues<FileThreatSubmission>(createFileThreatSubmissionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileUrlThreatSubmission(fileUrlThreatSubmission: Partial<FileUrlThreatSubmission> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFileThreatSubmission(fileUrlThreatSubmission),
        "fileUrl": n => { fileUrlThreatSubmission.fileUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoForceUserPasswordResetResponseAction(forceUserPasswordResetResponseAction: Partial<ForceUserPasswordResetResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResponseAction(forceUserPasswordResetResponseAction),
        "identifier": n => { forceUserPasswordResetResponseAction.identifier = n.getCollectionOfEnumValues<ForceUserPasswordResetEntityIdentifier>(ForceUserPasswordResetEntityIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFormattedContent(formattedContent: Partial<FormattedContent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { formattedContent.backingStoreEnabled = true; },
        "content": n => { formattedContent.content = n.getStringValue(); },
        "format": n => { formattedContent.format = n.getEnumValue<ContentFormat>(ContentFormatObject); },
        "@odata.type": n => { formattedContent.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGeoLocation(geoLocation: Partial<GeoLocation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { geoLocation.backingStoreEnabled = true; },
        "city": n => { geoLocation.city = n.getStringValue(); },
        "countryName": n => { geoLocation.countryName = n.getStringValue(); },
        "latitude": n => { geoLocation.latitude = n.getNumberValue(); },
        "longitude": n => { geoLocation.longitude = n.getNumberValue(); },
        "@odata.type": n => { geoLocation.odataType = n.getStringValue(); },
        "state": n => { geoLocation.state = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGitHubOrganizationEvidence(gitHubOrganizationEvidence: Partial<GitHubOrganizationEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(gitHubOrganizationEvidence),
        "company": n => { gitHubOrganizationEvidence.company = n.getStringValue(); },
        "displayName": n => { gitHubOrganizationEvidence.displayName = n.getStringValue(); },
        "email": n => { gitHubOrganizationEvidence.email = n.getStringValue(); },
        "login": n => { gitHubOrganizationEvidence.login = n.getStringValue(); },
        "orgId": n => { gitHubOrganizationEvidence.orgId = n.getStringValue(); },
        "webUrl": n => { gitHubOrganizationEvidence.webUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGitHubRepoEvidence(gitHubRepoEvidence: Partial<GitHubRepoEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(gitHubRepoEvidence),
        "baseUrl": n => { gitHubRepoEvidence.baseUrl = n.getStringValue(); },
        "login": n => { gitHubRepoEvidence.login = n.getStringValue(); },
        "owner": n => { gitHubRepoEvidence.owner = n.getStringValue(); },
        "ownerType": n => { gitHubRepoEvidence.ownerType = n.getStringValue(); },
        "repoId": n => { gitHubRepoEvidence.repoId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGitHubUserEvidence(gitHubUserEvidence: Partial<GitHubUserEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(gitHubUserEvidence),
        "email": n => { gitHubUserEvidence.email = n.getStringValue(); },
        "login": n => { gitHubUserEvidence.login = n.getStringValue(); },
        "name": n => { gitHubUserEvidence.name = n.getStringValue(); },
        "userId": n => { gitHubUserEvidence.userId = n.getStringValue(); },
        "webUrl": n => { gitHubUserEvidence.webUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGoogleCloudResourceEvidence(googleCloudResourceEvidence: Partial<GoogleCloudResourceEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(googleCloudResourceEvidence),
        "fullResourceName": n => { googleCloudResourceEvidence.fullResourceName = n.getStringValue(); },
        "location": n => { googleCloudResourceEvidence.location = n.getStringValue(); },
        "locationType": n => { googleCloudResourceEvidence.locationType = n.getEnumValue<GoogleCloudLocationType>(GoogleCloudLocationTypeObject); },
        "projectId": n => { googleCloudResourceEvidence.projectId = n.getStringValue(); },
        "projectNumber": n => { googleCloudResourceEvidence.projectNumber = n.getNumberValue(); },
        "resourceName": n => { googleCloudResourceEvidence.resourceName = n.getStringValue(); },
        "resourceType": n => { googleCloudResourceEvidence.resourceType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHardDeleteResponseAction(hardDeleteResponseAction: Partial<HardDeleteResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResponseAction(hardDeleteResponseAction),
        "identifier": n => { hardDeleteResponseAction.identifier = n.getCollectionOfEnumValues<EmailEntityIdentifier>(EmailEntityIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHealthcareSignalRecord(healthcareSignalRecord: Partial<HealthcareSignalRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(healthcareSignalRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHealthIssue(healthIssue: Partial<HealthIssue> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(healthIssue),
        "additionalInformation": n => { healthIssue.additionalInformation = n.getCollectionOfPrimitiveValues<string>(); },
        "createdDateTime": n => { healthIssue.createdDateTime = n.getDateValue(); },
        "description": n => { healthIssue.description = n.getStringValue(); },
        "displayName": n => { healthIssue.displayName = n.getStringValue(); },
        "domainNames": n => { healthIssue.domainNames = n.getCollectionOfPrimitiveValues<string>(); },
        "healthIssueType": n => { healthIssue.healthIssueType = n.getEnumValue<HealthIssueType>(HealthIssueTypeObject); },
        "issueTypeId": n => { healthIssue.issueTypeId = n.getStringValue(); },
        "lastModifiedDateTime": n => { healthIssue.lastModifiedDateTime = n.getDateValue(); },
        "recommendations": n => { healthIssue.recommendations = n.getCollectionOfPrimitiveValues<string>(); },
        "recommendedActionCommands": n => { healthIssue.recommendedActionCommands = n.getCollectionOfPrimitiveValues<string>(); },
        "sensorDNSNames": n => { healthIssue.sensorDNSNames = n.getCollectionOfPrimitiveValues<string>(); },
        "severity": n => { healthIssue.severity = n.getEnumValue<HealthIssueSeverity>(HealthIssueSeverityObject); },
        "status": n => { healthIssue.status = n.getEnumValue<HealthIssueStatus>(HealthIssueStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHealthIssueCollectionResponse(healthIssueCollectionResponse: Partial<HealthIssueCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(healthIssueCollectionResponse),
        "value": n => { healthIssueCollectionResponse.value = n.getCollectionOfObjectValues<HealthIssue>(createHealthIssueFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHost(host: Partial<Host> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoArtifact(host),
        "childHostPairs": n => { host.childHostPairs = n.getCollectionOfObjectValues<HostPair>(createHostPairFromDiscriminatorValue); },
        "components": n => { host.components = n.getCollectionOfObjectValues<HostComponent>(createHostComponentFromDiscriminatorValue); },
        "cookies": n => { host.cookies = n.getCollectionOfObjectValues<HostCookie>(createHostCookieFromDiscriminatorValue); },
        "firstSeenDateTime": n => { host.firstSeenDateTime = n.getDateValue(); },
        "hostPairs": n => { host.hostPairs = n.getCollectionOfObjectValues<HostPair>(createHostPairFromDiscriminatorValue); },
        "lastSeenDateTime": n => { host.lastSeenDateTime = n.getDateValue(); },
        "parentHostPairs": n => { host.parentHostPairs = n.getCollectionOfObjectValues<HostPair>(createHostPairFromDiscriminatorValue); },
        "passiveDns": n => { host.passiveDns = n.getCollectionOfObjectValues<PassiveDnsRecord>(createPassiveDnsRecordFromDiscriminatorValue); },
        "passiveDnsReverse": n => { host.passiveDnsReverse = n.getCollectionOfObjectValues<PassiveDnsRecord>(createPassiveDnsRecordFromDiscriminatorValue); },
        "ports": n => { host.ports = n.getCollectionOfObjectValues<HostPort>(createHostPortFromDiscriminatorValue); },
        "reputation": n => { host.reputation = n.getObjectValue<HostReputation>(createHostReputationFromDiscriminatorValue); },
        "sslCertificates": n => { host.sslCertificates = n.getCollectionOfObjectValues<HostSslCertificate>(createHostSslCertificateFromDiscriminatorValue); },
        "subdomains": n => { host.subdomains = n.getCollectionOfObjectValues<Subdomain>(createSubdomainFromDiscriminatorValue); },
        "trackers": n => { host.trackers = n.getCollectionOfObjectValues<HostTracker>(createHostTrackerFromDiscriminatorValue); },
        "whois": n => { host.whois = n.getObjectValue<WhoisRecord>(createWhoisRecordFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostCollectionResponse(hostCollectionResponse: Partial<HostCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(hostCollectionResponse),
        "value": n => { hostCollectionResponse.value = n.getCollectionOfObjectValues<Host>(createHostFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostComponent(hostComponent: Partial<HostComponent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoArtifact(hostComponent),
        "category": n => { hostComponent.category = n.getStringValue(); },
        "firstSeenDateTime": n => { hostComponent.firstSeenDateTime = n.getDateValue(); },
        "host": n => { hostComponent.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "lastSeenDateTime": n => { hostComponent.lastSeenDateTime = n.getDateValue(); },
        "name": n => { hostComponent.name = n.getStringValue(); },
        "version": n => { hostComponent.version = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostComponentCollectionResponse(hostComponentCollectionResponse: Partial<HostComponentCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(hostComponentCollectionResponse),
        "value": n => { hostComponentCollectionResponse.value = n.getCollectionOfObjectValues<HostComponent>(createHostComponentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostCookie(hostCookie: Partial<HostCookie> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoArtifact(hostCookie),
        "domain": n => { hostCookie.domain = n.getStringValue(); },
        "firstSeenDateTime": n => { hostCookie.firstSeenDateTime = n.getDateValue(); },
        "host": n => { hostCookie.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "lastSeenDateTime": n => { hostCookie.lastSeenDateTime = n.getDateValue(); },
        "name": n => { hostCookie.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostCookieCollectionResponse(hostCookieCollectionResponse: Partial<HostCookieCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(hostCookieCollectionResponse),
        "value": n => { hostCookieCollectionResponse.value = n.getCollectionOfObjectValues<HostCookie>(createHostCookieFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostedRpaAuditRecord(hostedRpaAuditRecord: Partial<HostedRpaAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(hostedRpaAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostLogonSessionEvidence(hostLogonSessionEvidence: Partial<HostLogonSessionEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(hostLogonSessionEvidence),
        "account": n => { hostLogonSessionEvidence.account = n.getObjectValue<UserEvidence>(createUserEvidenceFromDiscriminatorValue); },
        "endUtcDateTime": n => { hostLogonSessionEvidence.endUtcDateTime = n.getDateValue(); },
        "host": n => { hostLogonSessionEvidence.host = n.getObjectValue<DeviceEvidence>(createDeviceEvidenceFromDiscriminatorValue); },
        "sessionId": n => { hostLogonSessionEvidence.sessionId = n.getStringValue(); },
        "startUtcDateTime": n => { hostLogonSessionEvidence.startUtcDateTime = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostname(hostname: Partial<Hostname> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoHost(hostname),
        "registrant": n => { hostname.registrant = n.getStringValue(); },
        "registrar": n => { hostname.registrar = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostPair(hostPair: Partial<HostPair> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(hostPair),
        "childHost": n => { hostPair.childHost = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "firstSeenDateTime": n => { hostPair.firstSeenDateTime = n.getDateValue(); },
        "lastSeenDateTime": n => { hostPair.lastSeenDateTime = n.getDateValue(); },
        "linkKind": n => { hostPair.linkKind = n.getStringValue(); },
        "parentHost": n => { hostPair.parentHost = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostPairCollectionResponse(hostPairCollectionResponse: Partial<HostPairCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(hostPairCollectionResponse),
        "value": n => { hostPairCollectionResponse.value = n.getCollectionOfObjectValues<HostPair>(createHostPairFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostPort(hostPort: Partial<HostPort> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(hostPort),
        "banners": n => { hostPort.banners = n.getCollectionOfObjectValues<HostPortBanner>(createHostPortBannerFromDiscriminatorValue); },
        "firstSeenDateTime": n => { hostPort.firstSeenDateTime = n.getDateValue(); },
        "host": n => { hostPort.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "lastScanDateTime": n => { hostPort.lastScanDateTime = n.getDateValue(); },
        "lastSeenDateTime": n => { hostPort.lastSeenDateTime = n.getDateValue(); },
        "mostRecentSslCertificate": n => { hostPort.mostRecentSslCertificate = n.getObjectValue<SslCertificate>(createSslCertificateFromDiscriminatorValue); },
        "port": n => { hostPort.port = n.getNumberValue(); },
        "protocol": n => { hostPort.protocol = n.getEnumValue<HostPortProtocol>(HostPortProtocolObject); },
        "services": n => { hostPort.services = n.getCollectionOfObjectValues<HostPortComponent>(createHostPortComponentFromDiscriminatorValue); },
        "status": n => { hostPort.status = n.getEnumValue<HostPortStatus>(HostPortStatusObject); },
        "timesObserved": n => { hostPort.timesObserved = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostPortBanner(hostPortBanner: Partial<HostPortBanner> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { hostPortBanner.backingStoreEnabled = true; },
        "banner": n => { hostPortBanner.banner = n.getStringValue(); },
        "firstSeenDateTime": n => { hostPortBanner.firstSeenDateTime = n.getDateValue(); },
        "lastSeenDateTime": n => { hostPortBanner.lastSeenDateTime = n.getDateValue(); },
        "@odata.type": n => { hostPortBanner.odataType = n.getStringValue(); },
        "scanProtocol": n => { hostPortBanner.scanProtocol = n.getStringValue(); },
        "timesObserved": n => { hostPortBanner.timesObserved = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostPortCollectionResponse(hostPortCollectionResponse: Partial<HostPortCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(hostPortCollectionResponse),
        "value": n => { hostPortCollectionResponse.value = n.getCollectionOfObjectValues<HostPort>(createHostPortFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostPortComponent(hostPortComponent: Partial<HostPortComponent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { hostPortComponent.backingStoreEnabled = true; },
        "component": n => { hostPortComponent.component = n.getObjectValue<HostComponent>(createHostComponentFromDiscriminatorValue); },
        "firstSeenDateTime": n => { hostPortComponent.firstSeenDateTime = n.getDateValue(); },
        "isRecent": n => { hostPortComponent.isRecent = n.getBooleanValue(); },
        "lastSeenDateTime": n => { hostPortComponent.lastSeenDateTime = n.getDateValue(); },
        "@odata.type": n => { hostPortComponent.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostReputation(hostReputation: Partial<HostReputation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(hostReputation),
        "classification": n => { hostReputation.classification = n.getEnumValue<HostReputationClassification>(HostReputationClassificationObject); },
        "rules": n => { hostReputation.rules = n.getCollectionOfObjectValues<HostReputationRule>(createHostReputationRuleFromDiscriminatorValue); },
        "score": n => { hostReputation.score = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostReputationRule(hostReputationRule: Partial<HostReputationRule> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { hostReputationRule.backingStoreEnabled = true; },
        "description": n => { hostReputationRule.description = n.getStringValue(); },
        "name": n => { hostReputationRule.name = n.getStringValue(); },
        "@odata.type": n => { hostReputationRule.odataType = n.getStringValue(); },
        "relatedDetailsUrl": n => { hostReputationRule.relatedDetailsUrl = n.getStringValue(); },
        "severity": n => { hostReputationRule.severity = n.getEnumValue<HostReputationRuleSeverity>(HostReputationRuleSeverityObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostSslCertificate(hostSslCertificate: Partial<HostSslCertificate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoArtifact(hostSslCertificate),
        "firstSeenDateTime": n => { hostSslCertificate.firstSeenDateTime = n.getDateValue(); },
        "host": n => { hostSslCertificate.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "lastSeenDateTime": n => { hostSslCertificate.lastSeenDateTime = n.getDateValue(); },
        "ports": n => { hostSslCertificate.ports = n.getCollectionOfObjectValues<HostSslCertificatePort>(createHostSslCertificatePortFromDiscriminatorValue); },
        "sslCertificate": n => { hostSslCertificate.sslCertificate = n.getObjectValue<SslCertificate>(createSslCertificateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostSslCertificateCollectionResponse(hostSslCertificateCollectionResponse: Partial<HostSslCertificateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(hostSslCertificateCollectionResponse),
        "value": n => { hostSslCertificateCollectionResponse.value = n.getCollectionOfObjectValues<HostSslCertificate>(createHostSslCertificateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostSslCertificatePort(hostSslCertificatePort: Partial<HostSslCertificatePort> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { hostSslCertificatePort.backingStoreEnabled = true; },
        "firstSeenDateTime": n => { hostSslCertificatePort.firstSeenDateTime = n.getDateValue(); },
        "lastSeenDateTime": n => { hostSslCertificatePort.lastSeenDateTime = n.getDateValue(); },
        "@odata.type": n => { hostSslCertificatePort.odataType = n.getStringValue(); },
        "port": n => { hostSslCertificatePort.port = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostTracker(hostTracker: Partial<HostTracker> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoArtifact(hostTracker),
        "firstSeenDateTime": n => { hostTracker.firstSeenDateTime = n.getDateValue(); },
        "host": n => { hostTracker.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "kind": n => { hostTracker.kind = n.getStringValue(); },
        "lastSeenDateTime": n => { hostTracker.lastSeenDateTime = n.getDateValue(); },
        "value": n => { hostTracker.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostTrackerCollectionResponse(hostTrackerCollectionResponse: Partial<HostTrackerCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(hostTrackerCollectionResponse),
        "value": n => { hostTrackerCollectionResponse.value = n.getCollectionOfObjectValues<HostTracker>(createHostTrackerFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHrSignalAuditRecord(hrSignalAuditRecord: Partial<HrSignalAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(hrSignalAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHuntingQueryResults(huntingQueryResults: Partial<HuntingQueryResults> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { huntingQueryResults.backingStoreEnabled = true; },
        "@odata.type": n => { huntingQueryResults.odataType = n.getStringValue(); },
        "results": n => { huntingQueryResults.results = n.getCollectionOfObjectValues<HuntingRowResult>(createHuntingRowResultFromDiscriminatorValue); },
        "schema": n => { huntingQueryResults.schema = n.getCollectionOfObjectValues<SinglePropertySchema>(createSinglePropertySchemaFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHuntingRowResult(huntingRowResult: Partial<HuntingRowResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { huntingRowResult.backingStoreEnabled = true; },
        "@odata.type": n => { huntingRowResult.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHygieneEventRecord(hygieneEventRecord: Partial<HygieneEventRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(hygieneEventRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHyperlink(hyperlink: Partial<Hyperlink> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { hyperlink.backingStoreEnabled = true; },
        "name": n => { hyperlink.name = n.getStringValue(); },
        "@odata.type": n => { hyperlink.odataType = n.getStringValue(); },
        "url": n => { hyperlink.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIdentityContainer(identityContainer: Partial<IdentityContainer> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(identityContainer),
        "healthIssues": n => { identityContainer.healthIssues = n.getCollectionOfObjectValues<HealthIssue>(createHealthIssueFromDiscriminatorValue); },
        "sensors": n => { identityContainer.sensors = n.getCollectionOfObjectValues<Sensor>(createSensorFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoImpactedAsset(impactedAsset: Partial<ImpactedAsset> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { impactedAsset.backingStoreEnabled = true; },
        "@odata.type": n => { impactedAsset.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoImpactedDeviceAsset(impactedDeviceAsset: Partial<ImpactedDeviceAsset> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoImpactedAsset(impactedDeviceAsset),
        "identifier": n => { impactedDeviceAsset.identifier = n.getEnumValue<DeviceAssetIdentifier>(DeviceAssetIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoImpactedMailboxAsset(impactedMailboxAsset: Partial<ImpactedMailboxAsset> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoImpactedAsset(impactedMailboxAsset),
        "identifier": n => { impactedMailboxAsset.identifier = n.getEnumValue<MailboxAssetIdentifier>(MailboxAssetIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoImpactedUserAsset(impactedUserAsset: Partial<ImpactedUserAsset> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoImpactedAsset(impactedUserAsset),
        "identifier": n => { impactedUserAsset.identifier = n.getEnumValue<UserAssetIdentifier>(UserAssetIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIncident(incident: Partial<Incident> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(incident),
        "alerts": n => { incident.alerts = n.getCollectionOfObjectValues<Alert>(createAlertFromDiscriminatorValue); },
        "assignedTo": n => { incident.assignedTo = n.getStringValue(); },
        "classification": n => { incident.classification = n.getEnumValue<AlertClassification>(AlertClassificationObject); },
        "comments": n => { incident.comments = n.getCollectionOfObjectValues<AlertComment>(createAlertCommentFromDiscriminatorValue); },
        "createdDateTime": n => { incident.createdDateTime = n.getDateValue(); },
        "customTags": n => { incident.customTags = n.getCollectionOfPrimitiveValues<string>(); },
        "description": n => { incident.description = n.getStringValue(); },
        "determination": n => { incident.determination = n.getEnumValue<AlertDetermination>(AlertDeterminationObject); },
        "displayName": n => { incident.displayName = n.getStringValue(); },
        "incidentWebUrl": n => { incident.incidentWebUrl = n.getStringValue(); },
        "lastModifiedBy": n => { incident.lastModifiedBy = n.getStringValue(); },
        "lastUpdateDateTime": n => { incident.lastUpdateDateTime = n.getDateValue(); },
        "recommendedActions": n => { incident.recommendedActions = n.getStringValue(); },
        "recommendedHuntingQueries": n => { incident.recommendedHuntingQueries = n.getCollectionOfObjectValues<RecommendedHuntingQuery>(createRecommendedHuntingQueryFromDiscriminatorValue); },
        "redirectIncidentId": n => { incident.redirectIncidentId = n.getStringValue(); },
        "resolvingComment": n => { incident.resolvingComment = n.getStringValue(); },
        "severity": n => { incident.severity = n.getEnumValue<AlertSeverity>(AlertSeverityObject); },
        "status": n => { incident.status = n.getEnumValue<IncidentStatus>(IncidentStatusObject); },
        "summary": n => { incident.summary = n.getStringValue(); },
        "systemTags": n => { incident.systemTags = n.getCollectionOfPrimitiveValues<string>(); },
        "tenantId": n => { incident.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIncidentCollectionResponse(incidentCollectionResponse: Partial<IncidentCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(incidentCollectionResponse),
        "value": n => { incidentCollectionResponse.value = n.getCollectionOfObjectValues<Incident>(createIncidentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIndicator(indicator: Partial<Indicator> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(indicator),
        "artifact": n => { indicator.artifact = n.getObjectValue<Artifact>(createArtifactFromDiscriminatorValue); },
        "source": n => { indicator.source = n.getEnumValue<IndicatorSource>(IndicatorSourceObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInformationBarrierPolicyApplicationAuditRecord(informationBarrierPolicyApplicationAuditRecord: Partial<InformationBarrierPolicyApplicationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(informationBarrierPolicyApplicationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInformationProtection(informationProtection: Partial<InformationProtection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(informationProtection),
        "labelPolicySettings": n => { informationProtection.labelPolicySettings = n.getObjectValue<InformationProtectionPolicySetting>(createInformationProtectionPolicySettingFromDiscriminatorValue); },
        "sensitivityLabels": n => { informationProtection.sensitivityLabels = n.getCollectionOfObjectValues<SensitivityLabel>(createSensitivityLabelFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInformationProtectionAction(informationProtectionAction: Partial<InformationProtectionAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { informationProtectionAction.backingStoreEnabled = true; },
        "@odata.type": n => { informationProtectionAction.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInformationProtectionPolicySetting(informationProtectionPolicySetting: Partial<InformationProtectionPolicySetting> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(informationProtectionPolicySetting),
        "defaultLabelId": n => { informationProtectionPolicySetting.defaultLabelId = n.getStringValue(); },
        "isDowngradeJustificationRequired": n => { informationProtectionPolicySetting.isDowngradeJustificationRequired = n.getBooleanValue(); },
        "isMandatory": n => { informationProtectionPolicySetting.isMandatory = n.getBooleanValue(); },
        "moreInfoUrl": n => { informationProtectionPolicySetting.moreInfoUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInformationWorkerProtectionAuditRecord(informationWorkerProtectionAuditRecord: Partial<InformationWorkerProtectionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(informationWorkerProtectionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInitiateInvestigationResponseAction(initiateInvestigationResponseAction: Partial<InitiateInvestigationResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResponseAction(initiateInvestigationResponseAction),
        "identifier": n => { initiateInvestigationResponseAction.identifier = n.getCollectionOfEnumValues<DeviceIdEntityIdentifier>(DeviceIdEntityIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInsiderRiskScopedUserInsightsRecord(insiderRiskScopedUserInsightsRecord: Partial<InsiderRiskScopedUserInsightsRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(insiderRiskScopedUserInsightsRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInsiderRiskScopedUsersRecord(insiderRiskScopedUsersRecord: Partial<InsiderRiskScopedUsersRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(insiderRiskScopedUsersRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIntelligenceProfile(intelligenceProfile: Partial<IntelligenceProfile> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(intelligenceProfile),
        "aliases": n => { intelligenceProfile.aliases = n.getCollectionOfPrimitiveValues<string>(); },
        "countriesOrRegionsOfOrigin": n => { intelligenceProfile.countriesOrRegionsOfOrigin = n.getCollectionOfObjectValues<IntelligenceProfileCountryOrRegionOfOrigin>(createIntelligenceProfileCountryOrRegionOfOriginFromDiscriminatorValue); },
        "description": n => { intelligenceProfile.description = n.getObjectValue<FormattedContent>(createFormattedContentFromDiscriminatorValue); },
        "firstActiveDateTime": n => { intelligenceProfile.firstActiveDateTime = n.getDateValue(); },
        "indicators": n => { intelligenceProfile.indicators = n.getCollectionOfObjectValues<IntelligenceProfileIndicator>(createIntelligenceProfileIndicatorFromDiscriminatorValue); },
        "kind": n => { intelligenceProfile.kind = n.getEnumValue<IntelligenceProfileKind>(IntelligenceProfileKindObject); },
        "summary": n => { intelligenceProfile.summary = n.getObjectValue<FormattedContent>(createFormattedContentFromDiscriminatorValue); },
        "targets": n => { intelligenceProfile.targets = n.getCollectionOfPrimitiveValues<string>(); },
        "title": n => { intelligenceProfile.title = n.getStringValue(); },
        "tradecraft": n => { intelligenceProfile.tradecraft = n.getObjectValue<FormattedContent>(createFormattedContentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIntelligenceProfileCollectionResponse(intelligenceProfileCollectionResponse: Partial<IntelligenceProfileCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(intelligenceProfileCollectionResponse),
        "value": n => { intelligenceProfileCollectionResponse.value = n.getCollectionOfObjectValues<IntelligenceProfile>(createIntelligenceProfileFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIntelligenceProfileCountryOrRegionOfOrigin(intelligenceProfileCountryOrRegionOfOrigin: Partial<IntelligenceProfileCountryOrRegionOfOrigin> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { intelligenceProfileCountryOrRegionOfOrigin.backingStoreEnabled = true; },
        "code": n => { intelligenceProfileCountryOrRegionOfOrigin.code = n.getStringValue(); },
        "label": n => { intelligenceProfileCountryOrRegionOfOrigin.label = n.getStringValue(); },
        "@odata.type": n => { intelligenceProfileCountryOrRegionOfOrigin.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIntelligenceProfileIndicator(intelligenceProfileIndicator: Partial<IntelligenceProfileIndicator> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIndicator(intelligenceProfileIndicator),
        "firstSeenDateTime": n => { intelligenceProfileIndicator.firstSeenDateTime = n.getDateValue(); },
        "lastSeenDateTime": n => { intelligenceProfileIndicator.lastSeenDateTime = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIntelligenceProfileIndicatorCollectionResponse(intelligenceProfileIndicatorCollectionResponse: Partial<IntelligenceProfileIndicatorCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(intelligenceProfileIndicatorCollectionResponse),
        "value": n => { intelligenceProfileIndicatorCollectionResponse.value = n.getCollectionOfObjectValues<IntelligenceProfileIndicator>(createIntelligenceProfileIndicatorFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIoTDeviceEvidence(ioTDeviceEvidence: Partial<IoTDeviceEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(ioTDeviceEvidence),
        "deviceId": n => { ioTDeviceEvidence.deviceId = n.getStringValue(); },
        "deviceName": n => { ioTDeviceEvidence.deviceName = n.getStringValue(); },
        "devicePageLink": n => { ioTDeviceEvidence.devicePageLink = n.getStringValue(); },
        "deviceSubType": n => { ioTDeviceEvidence.deviceSubType = n.getStringValue(); },
        "deviceType": n => { ioTDeviceEvidence.deviceType = n.getStringValue(); },
        "importance": n => { ioTDeviceEvidence.importance = n.getEnumValue<IoTDeviceImportanceType>(IoTDeviceImportanceTypeObject); },
        "ioTHub": n => { ioTDeviceEvidence.ioTHub = n.getObjectValue<AzureResourceEvidence>(createAzureResourceEvidenceFromDiscriminatorValue); },
        "ioTSecurityAgentId": n => { ioTDeviceEvidence.ioTSecurityAgentId = n.getStringValue(); },
        "ipAddress": n => { ioTDeviceEvidence.ipAddress = n.getObjectValue<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "isAuthorized": n => { ioTDeviceEvidence.isAuthorized = n.getBooleanValue(); },
        "isProgramming": n => { ioTDeviceEvidence.isProgramming = n.getBooleanValue(); },
        "isScanner": n => { ioTDeviceEvidence.isScanner = n.getBooleanValue(); },
        "macAddress": n => { ioTDeviceEvidence.macAddress = n.getStringValue(); },
        "manufacturer": n => { ioTDeviceEvidence.manufacturer = n.getStringValue(); },
        "model": n => { ioTDeviceEvidence.model = n.getStringValue(); },
        "nics": n => { ioTDeviceEvidence.nics = n.getObjectValue<NicEvidence>(createNicEvidenceFromDiscriminatorValue); },
        "operatingSystem": n => { ioTDeviceEvidence.operatingSystem = n.getStringValue(); },
        "owners": n => { ioTDeviceEvidence.owners = n.getCollectionOfPrimitiveValues<string>(); },
        "protocols": n => { ioTDeviceEvidence.protocols = n.getCollectionOfPrimitiveValues<string>(); },
        "purdueLayer": n => { ioTDeviceEvidence.purdueLayer = n.getStringValue(); },
        "sensor": n => { ioTDeviceEvidence.sensor = n.getStringValue(); },
        "serialNumber": n => { ioTDeviceEvidence.serialNumber = n.getStringValue(); },
        "site": n => { ioTDeviceEvidence.site = n.getStringValue(); },
        "source": n => { ioTDeviceEvidence.source = n.getStringValue(); },
        "sourceRef": n => { ioTDeviceEvidence.sourceRef = n.getObjectValue<UrlEvidence>(createUrlEvidenceFromDiscriminatorValue); },
        "zone": n => { ioTDeviceEvidence.zone = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIpAddress(ipAddress: Partial<IpAddress> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoHost(ipAddress),
        "autonomousSystem": n => { ipAddress.autonomousSystem = n.getObjectValue<AutonomousSystem>(createAutonomousSystemFromDiscriminatorValue); },
        "countryOrRegion": n => { ipAddress.countryOrRegion = n.getStringValue(); },
        "hostingProvider": n => { ipAddress.hostingProvider = n.getStringValue(); },
        "netblock": n => { ipAddress.netblock = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIpEvidence(ipEvidence: Partial<IpEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(ipEvidence),
        "countryLetterCode": n => { ipEvidence.countryLetterCode = n.getStringValue(); },
        "ipAddress": n => { ipEvidence.ipAddress = n.getStringValue(); },
        "location": n => { ipEvidence.location = n.getObjectValue<GeoLocation>(createGeoLocationFromDiscriminatorValue); },
        "stream": n => { ipEvidence.stream = n.getObjectValue<Stream>(createStreamFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIrmSecurityAlertRecord(irmSecurityAlertRecord: Partial<IrmSecurityAlertRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(irmSecurityAlertRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIrmUserDefinedDetectionRecord(irmUserDefinedDetectionRecord: Partial<IrmUserDefinedDetectionRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(irmUserDefinedDetectionRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIsolateDeviceResponseAction(isolateDeviceResponseAction: Partial<IsolateDeviceResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResponseAction(isolateDeviceResponseAction),
        "identifier": n => { isolateDeviceResponseAction.identifier = n.getCollectionOfEnumValues<DeviceIdEntityIdentifier>(DeviceIdEntityIdentifierObject); },
        "isolationType": n => { isolateDeviceResponseAction.isolationType = n.getEnumValue<IsolationType>(IsolationTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoJustifyAction(justifyAction: Partial<JustifyAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInformationProtectionAction(justifyAction),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKaizalaAuditRecord(kaizalaAuditRecord: Partial<KaizalaAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(kaizalaAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKeyValuePair(keyValuePair: Partial<KeyValuePair> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { keyValuePair.backingStoreEnabled = true; },
        "name": n => { keyValuePair.name = n.getStringValue(); },
        "@odata.type": n => { keyValuePair.odataType = n.getStringValue(); },
        "value": n => { keyValuePair.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesClusterEvidence(kubernetesClusterEvidence: Partial<KubernetesClusterEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(kubernetesClusterEvidence),
        "cloudResource": n => { kubernetesClusterEvidence.cloudResource = n.getObjectValue<AlertEvidence>(createAlertEvidenceFromDiscriminatorValue); },
        "distribution": n => { kubernetesClusterEvidence.distribution = n.getStringValue(); },
        "name": n => { kubernetesClusterEvidence.name = n.getStringValue(); },
        "platform": n => { kubernetesClusterEvidence.platform = n.getEnumValue<KubernetesPlatform>(KubernetesPlatformObject); },
        "version": n => { kubernetesClusterEvidence.version = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesControllerEvidence(kubernetesControllerEvidence: Partial<KubernetesControllerEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(kubernetesControllerEvidence),
        "labels": n => { kubernetesControllerEvidence.labels = n.getObjectValue<Dictionary>(createDictionaryFromDiscriminatorValue); },
        "name": n => { kubernetesControllerEvidence.name = n.getStringValue(); },
        "namespace": n => { kubernetesControllerEvidence.namespace = n.getObjectValue<KubernetesNamespaceEvidence>(createKubernetesNamespaceEvidenceFromDiscriminatorValue); },
        "type": n => { kubernetesControllerEvidence.type = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesNamespaceEvidence(kubernetesNamespaceEvidence: Partial<KubernetesNamespaceEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(kubernetesNamespaceEvidence),
        "cluster": n => { kubernetesNamespaceEvidence.cluster = n.getObjectValue<KubernetesClusterEvidence>(createKubernetesClusterEvidenceFromDiscriminatorValue); },
        "labels": n => { kubernetesNamespaceEvidence.labels = n.getObjectValue<Dictionary>(createDictionaryFromDiscriminatorValue); },
        "name": n => { kubernetesNamespaceEvidence.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesPodEvidence(kubernetesPodEvidence: Partial<KubernetesPodEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(kubernetesPodEvidence),
        "containers": n => { kubernetesPodEvidence.containers = n.getCollectionOfObjectValues<ContainerEvidence>(createContainerEvidenceFromDiscriminatorValue); },
        "controller": n => { kubernetesPodEvidence.controller = n.getObjectValue<KubernetesControllerEvidence>(createKubernetesControllerEvidenceFromDiscriminatorValue); },
        "ephemeralContainers": n => { kubernetesPodEvidence.ephemeralContainers = n.getCollectionOfObjectValues<ContainerEvidence>(createContainerEvidenceFromDiscriminatorValue); },
        "initContainers": n => { kubernetesPodEvidence.initContainers = n.getCollectionOfObjectValues<ContainerEvidence>(createContainerEvidenceFromDiscriminatorValue); },
        "labels": n => { kubernetesPodEvidence.labels = n.getObjectValue<Dictionary>(createDictionaryFromDiscriminatorValue); },
        "name": n => { kubernetesPodEvidence.name = n.getStringValue(); },
        "namespace": n => { kubernetesPodEvidence.namespace = n.getObjectValue<KubernetesNamespaceEvidence>(createKubernetesNamespaceEvidenceFromDiscriminatorValue); },
        "podIp": n => { kubernetesPodEvidence.podIp = n.getObjectValue<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "serviceAccount": n => { kubernetesPodEvidence.serviceAccount = n.getObjectValue<KubernetesServiceAccountEvidence>(createKubernetesServiceAccountEvidenceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesSecretEvidence(kubernetesSecretEvidence: Partial<KubernetesSecretEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(kubernetesSecretEvidence),
        "name": n => { kubernetesSecretEvidence.name = n.getStringValue(); },
        "namespace": n => { kubernetesSecretEvidence.namespace = n.getObjectValue<KubernetesNamespaceEvidence>(createKubernetesNamespaceEvidenceFromDiscriminatorValue); },
        "secretType": n => { kubernetesSecretEvidence.secretType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesServiceAccountEvidence(kubernetesServiceAccountEvidence: Partial<KubernetesServiceAccountEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(kubernetesServiceAccountEvidence),
        "name": n => { kubernetesServiceAccountEvidence.name = n.getStringValue(); },
        "namespace": n => { kubernetesServiceAccountEvidence.namespace = n.getObjectValue<KubernetesNamespaceEvidence>(createKubernetesNamespaceEvidenceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesServiceEvidence(kubernetesServiceEvidence: Partial<KubernetesServiceEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(kubernetesServiceEvidence),
        "clusterIP": n => { kubernetesServiceEvidence.clusterIP = n.getObjectValue<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "externalIPs": n => { kubernetesServiceEvidence.externalIPs = n.getCollectionOfObjectValues<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "labels": n => { kubernetesServiceEvidence.labels = n.getObjectValue<Dictionary>(createDictionaryFromDiscriminatorValue); },
        "name": n => { kubernetesServiceEvidence.name = n.getStringValue(); },
        "namespace": n => { kubernetesServiceEvidence.namespace = n.getObjectValue<KubernetesNamespaceEvidence>(createKubernetesNamespaceEvidenceFromDiscriminatorValue); },
        "selector": n => { kubernetesServiceEvidence.selector = n.getObjectValue<Dictionary>(createDictionaryFromDiscriminatorValue); },
        "servicePorts": n => { kubernetesServiceEvidence.servicePorts = n.getCollectionOfObjectValues<KubernetesServicePort>(createKubernetesServicePortFromDiscriminatorValue); },
        "serviceType": n => { kubernetesServiceEvidence.serviceType = n.getEnumValue<KubernetesServiceType>(KubernetesServiceTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesServicePort(kubernetesServicePort: Partial<KubernetesServicePort> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "appProtocol": n => { kubernetesServicePort.appProtocol = n.getStringValue(); },
        "backingStoreEnabled": n => { kubernetesServicePort.backingStoreEnabled = true; },
        "name": n => { kubernetesServicePort.name = n.getStringValue(); },
        "nodePort": n => { kubernetesServicePort.nodePort = n.getNumberValue(); },
        "@odata.type": n => { kubernetesServicePort.odataType = n.getStringValue(); },
        "port": n => { kubernetesServicePort.port = n.getNumberValue(); },
        "protocol": n => { kubernetesServicePort.protocol = n.getEnumValue<ContainerPortProtocol>(ContainerPortProtocolObject); },
        "targetPort": n => { kubernetesServicePort.targetPort = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLabelAnalyticsAggregateAuditRecord(labelAnalyticsAggregateAuditRecord: Partial<LabelAnalyticsAggregateAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(labelAnalyticsAggregateAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLabelContentExplorerAuditRecord(labelContentExplorerAuditRecord: Partial<LabelContentExplorerAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(labelContentExplorerAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLabelingOptions(labelingOptions: Partial<LabelingOptions> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "assignmentMethod": n => { labelingOptions.assignmentMethod = n.getEnumValue<AssignmentMethod>(AssignmentMethodObject); },
        "backingStoreEnabled": n => { labelingOptions.backingStoreEnabled = true; },
        "downgradeJustification": n => { labelingOptions.downgradeJustification = n.getObjectValue<DowngradeJustification>(createDowngradeJustificationFromDiscriminatorValue); },
        "extendedProperties": n => { labelingOptions.extendedProperties = n.getCollectionOfObjectValues<KeyValuePair>(createKeyValuePairFromDiscriminatorValue); },
        "labelId": n => { labelingOptions.labelId = n.getStringValue(); },
        "@odata.type": n => { labelingOptions.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLabelsRoot(labelsRoot: Partial<LabelsRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(labelsRoot),
        "authorities": n => { labelsRoot.authorities = n.getCollectionOfObjectValues<AuthorityTemplate>(createAuthorityTemplateFromDiscriminatorValue); },
        "categories": n => { labelsRoot.categories = n.getCollectionOfObjectValues<CategoryTemplate>(createCategoryTemplateFromDiscriminatorValue); },
        "citations": n => { labelsRoot.citations = n.getCollectionOfObjectValues<CitationTemplate>(createCitationTemplateFromDiscriminatorValue); },
        "departments": n => { labelsRoot.departments = n.getCollectionOfObjectValues<DepartmentTemplate>(createDepartmentTemplateFromDiscriminatorValue); },
        "filePlanReferences": n => { labelsRoot.filePlanReferences = n.getCollectionOfObjectValues<FilePlanReferenceTemplate>(createFilePlanReferenceTemplateFromDiscriminatorValue); },
        "retentionLabels": n => { labelsRoot.retentionLabels = n.getCollectionOfObjectValues<RetentionLabel>(createRetentionLabelFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLargeContentMetadataAuditRecord(largeContentMetadataAuditRecord: Partial<LargeContentMetadataAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(largeContentMetadataAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLoggedOnUser(loggedOnUser: Partial<LoggedOnUser> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountName": n => { loggedOnUser.accountName = n.getStringValue(); },
        "backingStoreEnabled": n => { loggedOnUser.backingStoreEnabled = true; },
        "domainName": n => { loggedOnUser.domainName = n.getStringValue(); },
        "@odata.type": n => { loggedOnUser.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoM365ComplianceConnectorAuditRecord(m365ComplianceConnectorAuditRecord: Partial<M365ComplianceConnectorAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(m365ComplianceConnectorAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoM365DAADAuditRecord(m365DAADAuditRecord: Partial<M365DAADAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(m365DAADAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMailboxConfigurationEvidence(mailboxConfigurationEvidence: Partial<MailboxConfigurationEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(mailboxConfigurationEvidence),
        "configurationId": n => { mailboxConfigurationEvidence.configurationId = n.getStringValue(); },
        "configurationType": n => { mailboxConfigurationEvidence.configurationType = n.getEnumValue<MailboxConfigurationType>(MailboxConfigurationTypeObject); },
        "displayName": n => { mailboxConfigurationEvidence.displayName = n.getStringValue(); },
        "externalDirectoryObjectId": n => { mailboxConfigurationEvidence.externalDirectoryObjectId = n.getGuidValue(); },
        "mailboxPrimaryAddress": n => { mailboxConfigurationEvidence.mailboxPrimaryAddress = n.getStringValue(); },
        "upn": n => { mailboxConfigurationEvidence.upn = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMailboxEvidence(mailboxEvidence: Partial<MailboxEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(mailboxEvidence),
        "displayName": n => { mailboxEvidence.displayName = n.getStringValue(); },
        "primaryAddress": n => { mailboxEvidence.primaryAddress = n.getStringValue(); },
        "userAccount": n => { mailboxEvidence.userAccount = n.getObjectValue<UserAccount>(createUserAccountFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMailClusterEvidence(mailClusterEvidence: Partial<MailClusterEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(mailClusterEvidence),
        "clusterBy": n => { mailClusterEvidence.clusterBy = n.getStringValue(); },
        "clusterByValue": n => { mailClusterEvidence.clusterByValue = n.getStringValue(); },
        "emailCount": n => { mailClusterEvidence.emailCount = n.getNumberValue(); },
        "networkMessageIds": n => { mailClusterEvidence.networkMessageIds = n.getCollectionOfPrimitiveValues<string>(); },
        "query": n => { mailClusterEvidence.query = n.getStringValue(); },
        "urn": n => { mailClusterEvidence.urn = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMailSubmissionData(mailSubmissionData: Partial<MailSubmissionData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mailSubmissionData),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMalwareEvidence(malwareEvidence: Partial<MalwareEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(malwareEvidence),
        "category": n => { malwareEvidence.category = n.getStringValue(); },
        "files": n => { malwareEvidence.files = n.getCollectionOfObjectValues<FileEvidence>(createFileEvidenceFromDiscriminatorValue); },
        "name": n => { malwareEvidence.name = n.getStringValue(); },
        "processes": n => { malwareEvidence.processes = n.getCollectionOfObjectValues<ProcessEvidence>(createProcessEvidenceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedServicesAuditRecord(managedServicesAuditRecord: Partial<ManagedServicesAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(managedServicesAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenantsAuditRecord(managedTenantsAuditRecord: Partial<ManagedTenantsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(managedTenantsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMapgAlertsAuditRecord(mapgAlertsAuditRecord: Partial<MapgAlertsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mapgAlertsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMapgOnboardAuditRecord(mapgOnboardAuditRecord: Partial<MapgOnboardAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mapgOnboardAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMapgPolicyAuditRecord(mapgPolicyAuditRecord: Partial<MapgPolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mapgPolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMarkUserAsCompromisedResponseAction(markUserAsCompromisedResponseAction: Partial<MarkUserAsCompromisedResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResponseAction(markUserAsCompromisedResponseAction),
        "identifier": n => { markUserAsCompromisedResponseAction.identifier = n.getCollectionOfEnumValues<MarkUserAsCompromisedEntityIdentifier>(MarkUserAsCompromisedEntityIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMcasAlertsAuditRecord(mcasAlertsAuditRecord: Partial<McasAlertsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mcasAlertsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMdaDataSecuritySignalRecord(mdaDataSecuritySignalRecord: Partial<MdaDataSecuritySignalRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mdaDataSecuritySignalRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMdatpAuditRecord(mdatpAuditRecord: Partial<MdatpAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mdatpAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMdcEventsRecord(mdcEventsRecord: Partial<MdcEventsRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mdcEventsRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMdiAuditRecord(mdiAuditRecord: Partial<MdiAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mdiAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMeshWorldsAuditRecord(meshWorldsAuditRecord: Partial<MeshWorldsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(meshWorldsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMetadataAction(metadataAction: Partial<MetadataAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInformationProtectionAction(metadataAction),
        "metadataToAdd": n => { metadataAction.metadataToAdd = n.getCollectionOfObjectValues<KeyValuePair>(createKeyValuePairFromDiscriminatorValue); },
        "metadataToRemove": n => { metadataAction.metadataToRemove = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoft365BackupBackupItemAuditRecord(microsoft365BackupBackupItemAuditRecord: Partial<Microsoft365BackupBackupItemAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoft365BackupBackupItemAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoft365BackupBackupPolicyAuditRecord(microsoft365BackupBackupPolicyAuditRecord: Partial<Microsoft365BackupBackupPolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoft365BackupBackupPolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoft365BackupRestoreItemAuditRecord(microsoft365BackupRestoreItemAuditRecord: Partial<Microsoft365BackupRestoreItemAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoft365BackupRestoreItemAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoft365BackupRestoreTaskAuditRecord(microsoft365BackupRestoreTaskAuditRecord: Partial<Microsoft365BackupRestoreTaskAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoft365BackupRestoreTaskAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftDefenderExpertsBaseAuditRecord(microsoftDefenderExpertsBaseAuditRecord: Partial<MicrosoftDefenderExpertsBaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftDefenderExpertsBaseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftDefenderExpertsXDRAuditRecord(microsoftDefenderExpertsXDRAuditRecord: Partial<MicrosoftDefenderExpertsXDRAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftDefenderExpertsXDRAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftFlowAuditRecord(microsoftFlowAuditRecord: Partial<MicrosoftFlowAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftFlowAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftFormsAuditRecord(microsoftFormsAuditRecord: Partial<MicrosoftFormsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftFormsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftGraphDataConnectConsent(microsoftGraphDataConnectConsent: Partial<MicrosoftGraphDataConnectConsent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftGraphDataConnectConsent),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftGraphDataConnectOperation(microsoftGraphDataConnectOperation: Partial<MicrosoftGraphDataConnectOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftGraphDataConnectOperation),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftPurviewDataMapOperationRecord(microsoftPurviewDataMapOperationRecord: Partial<MicrosoftPurviewDataMapOperationRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftPurviewDataMapOperationRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftPurviewMetadataPolicyOperationRecord(microsoftPurviewMetadataPolicyOperationRecord: Partial<MicrosoftPurviewMetadataPolicyOperationRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftPurviewMetadataPolicyOperationRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftPurviewPolicyOperationRecord(microsoftPurviewPolicyOperationRecord: Partial<MicrosoftPurviewPolicyOperationRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftPurviewPolicyOperationRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftPurviewPrivacyAuditEvent(microsoftPurviewPrivacyAuditEvent: Partial<MicrosoftPurviewPrivacyAuditEvent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftPurviewPrivacyAuditEvent),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftStreamAuditRecord(microsoftStreamAuditRecord: Partial<MicrosoftStreamAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftStreamAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftTeamsAdminAuditRecord(microsoftTeamsAdminAuditRecord: Partial<MicrosoftTeamsAdminAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftTeamsAdminAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftTeamsAnalyticsAuditRecord(microsoftTeamsAnalyticsAuditRecord: Partial<MicrosoftTeamsAnalyticsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftTeamsAnalyticsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftTeamsAuditRecord(microsoftTeamsAuditRecord: Partial<MicrosoftTeamsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftTeamsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftTeamsDeviceAuditRecord(microsoftTeamsDeviceAuditRecord: Partial<MicrosoftTeamsDeviceAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftTeamsDeviceAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftTeamsRetentionLabelActionAuditRecord(microsoftTeamsRetentionLabelActionAuditRecord: Partial<MicrosoftTeamsRetentionLabelActionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftTeamsRetentionLabelActionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftTeamsSensitivityLabelActionAuditRecord(microsoftTeamsSensitivityLabelActionAuditRecord: Partial<MicrosoftTeamsSensitivityLabelActionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftTeamsSensitivityLabelActionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftTeamsShiftsAuditRecord(microsoftTeamsShiftsAuditRecord: Partial<MicrosoftTeamsShiftsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftTeamsShiftsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelExchangeItemAuditRecord(mipAutoLabelExchangeItemAuditRecord: Partial<MipAutoLabelExchangeItemAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelExchangeItemAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelItemAuditRecord(mipAutoLabelItemAuditRecord: Partial<MipAutoLabelItemAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelItemAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelPolicyAuditRecord(mipAutoLabelPolicyAuditRecord: Partial<MipAutoLabelPolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelPolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelProgressFeedbackAuditRecord(mipAutoLabelProgressFeedbackAuditRecord: Partial<MipAutoLabelProgressFeedbackAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelProgressFeedbackAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelSharePointItemAuditRecord(mipAutoLabelSharePointItemAuditRecord: Partial<MipAutoLabelSharePointItemAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelSharePointItemAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelSharePointPolicyLocationAuditRecord(mipAutoLabelSharePointPolicyLocationAuditRecord: Partial<MipAutoLabelSharePointPolicyLocationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelSharePointPolicyLocationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelSimulationSharePointCompletionRecord(mipAutoLabelSimulationSharePointCompletionRecord: Partial<MipAutoLabelSimulationSharePointCompletionRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelSimulationSharePointCompletionRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelSimulationSharePointProgressRecord(mipAutoLabelSimulationSharePointProgressRecord: Partial<MipAutoLabelSimulationSharePointProgressRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelSimulationSharePointProgressRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelSimulationStatisticsRecord(mipAutoLabelSimulationStatisticsRecord: Partial<MipAutoLabelSimulationStatisticsRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelSimulationStatisticsRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelSimulationStatusRecord(mipAutoLabelSimulationStatusRecord: Partial<MipAutoLabelSimulationStatusRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelSimulationStatusRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipExactDataMatchAuditRecord(mipExactDataMatchAuditRecord: Partial<MipExactDataMatchAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipExactDataMatchAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipLabelAnalyticsAuditRecord(mipLabelAnalyticsAuditRecord: Partial<MipLabelAnalyticsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipLabelAnalyticsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipLabelAuditRecord(mipLabelAuditRecord: Partial<MipLabelAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipLabelAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMoveToDeletedItemsResponseAction(moveToDeletedItemsResponseAction: Partial<MoveToDeletedItemsResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResponseAction(moveToDeletedItemsResponseAction),
        "identifier": n => { moveToDeletedItemsResponseAction.identifier = n.getCollectionOfEnumValues<EmailEntityIdentifier>(EmailEntityIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMoveToInboxResponseAction(moveToInboxResponseAction: Partial<MoveToInboxResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResponseAction(moveToInboxResponseAction),
        "identifier": n => { moveToInboxResponseAction.identifier = n.getCollectionOfEnumValues<EmailEntityIdentifier>(EmailEntityIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMoveToJunkResponseAction(moveToJunkResponseAction: Partial<MoveToJunkResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResponseAction(moveToJunkResponseAction),
        "identifier": n => { moveToJunkResponseAction.identifier = n.getCollectionOfEnumValues<EmailEntityIdentifier>(EmailEntityIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMS365DCustomDetectionAuditRecord(mS365DCustomDetectionAuditRecord: Partial<MS365DCustomDetectionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mS365DCustomDetectionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMS365DIncidentAuditRecord(mS365DIncidentAuditRecord: Partial<MS365DIncidentAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mS365DIncidentAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMS365DSuppressionRuleAuditRecord(mS365DSuppressionRuleAuditRecord: Partial<MS365DSuppressionRuleAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mS365DSuppressionRuleAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMsdeGeneralSettingsAuditRecord(msdeGeneralSettingsAuditRecord: Partial<MsdeGeneralSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(msdeGeneralSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMsdeIndicatorsSettingsAuditRecord(msdeIndicatorsSettingsAuditRecord: Partial<MsdeIndicatorsSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(msdeIndicatorsSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMsdeResponseActionsAuditRecord(msdeResponseActionsAuditRecord: Partial<MsdeResponseActionsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(msdeResponseActionsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMsdeRolesSettingsAuditRecord(msdeRolesSettingsAuditRecord: Partial<MsdeRolesSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(msdeRolesSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMsticNationStateNotificationRecord(msticNationStateNotificationRecord: Partial<MsticNationStateNotificationRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(msticNationStateNotificationRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMultiStageDispositionAuditRecord(multiStageDispositionAuditRecord: Partial<MultiStageDispositionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(multiStageDispositionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMyAnalyticsSettingsAuditRecord(myAnalyticsSettingsAuditRecord: Partial<MyAnalyticsSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(myAnalyticsSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoNetworkAdapter(networkAdapter: Partial<NetworkAdapter> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(networkAdapter),
        "isEnabled": n => { networkAdapter.isEnabled = n.getBooleanValue(); },
        "name": n => { networkAdapter.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoNetworkConnectionEvidence(networkConnectionEvidence: Partial<NetworkConnectionEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(networkConnectionEvidence),
        "destinationAddress": n => { networkConnectionEvidence.destinationAddress = n.getObjectValue<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "destinationPort": n => { networkConnectionEvidence.destinationPort = n.getNumberValue(); },
        "protocol": n => { networkConnectionEvidence.protocol = n.getEnumValue<ProtocolType>(ProtocolTypeObject); },
        "sourceAddress": n => { networkConnectionEvidence.sourceAddress = n.getObjectValue<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "sourcePort": n => { networkConnectionEvidence.sourcePort = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoNicEvidence(nicEvidence: Partial<NicEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(nicEvidence),
        "ipAddress": n => { nicEvidence.ipAddress = n.getObjectValue<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "macAddress": n => { nicEvidence.macAddress = n.getStringValue(); },
        "vlans": n => { nicEvidence.vlans = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOauthApplicationEvidence(oauthApplicationEvidence: Partial<OauthApplicationEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(oauthApplicationEvidence),
        "appId": n => { oauthApplicationEvidence.appId = n.getStringValue(); },
        "displayName": n => { oauthApplicationEvidence.displayName = n.getStringValue(); },
        "objectId": n => { oauthApplicationEvidence.objectId = n.getStringValue(); },
        "publisher": n => { oauthApplicationEvidence.publisher = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOcrSettings(ocrSettings: Partial<OcrSettings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { ocrSettings.backingStoreEnabled = true; },
        "isEnabled": n => { ocrSettings.isEnabled = n.getBooleanValue(); },
        "maxImageSize": n => { ocrSettings.maxImageSize = n.getNumberValue(); },
        "@odata.type": n => { ocrSettings.odataType = n.getStringValue(); },
        "timeout": n => { ocrSettings.timeout = n.getDurationValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOfficeNativeAuditRecord(officeNativeAuditRecord: Partial<OfficeNativeAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(officeNativeAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOmePortalAuditRecord(omePortalAuditRecord: Partial<OmePortalAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(omePortalAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOneDriveAuditRecord(oneDriveAuditRecord: Partial<OneDriveAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(oneDriveAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOnPremisesFileShareScannerDlpAuditRecord(onPremisesFileShareScannerDlpAuditRecord: Partial<OnPremisesFileShareScannerDlpAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(onPremisesFileShareScannerDlpAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOnPremisesScannerDlpAuditRecord(onPremisesScannerDlpAuditRecord: Partial<OnPremisesScannerDlpAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(onPremisesScannerDlpAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOnPremisesSharePointScannerDlpAuditRecord(onPremisesSharePointScannerDlpAuditRecord: Partial<OnPremisesSharePointScannerDlpAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(onPremisesSharePointScannerDlpAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOrganizationalScope(organizationalScope: Partial<OrganizationalScope> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { organizationalScope.backingStoreEnabled = true; },
        "@odata.type": n => { organizationalScope.odataType = n.getStringValue(); },
        "scopeNames": n => { organizationalScope.scopeNames = n.getCollectionOfPrimitiveValues<string>(); },
        "scopeType": n => { organizationalScope.scopeType = n.getEnumValue<ScopeType>(ScopeTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOwaGetAccessTokenForResourceAuditRecord(owaGetAccessTokenForResourceAuditRecord: Partial<OwaGetAccessTokenForResourceAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(owaGetAccessTokenForResourceAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPassiveDnsRecord(passiveDnsRecord: Partial<PassiveDnsRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoArtifact(passiveDnsRecord),
        "artifact": n => { passiveDnsRecord.artifact = n.getObjectValue<Artifact>(createArtifactFromDiscriminatorValue); },
        "collectedDateTime": n => { passiveDnsRecord.collectedDateTime = n.getDateValue(); },
        "firstSeenDateTime": n => { passiveDnsRecord.firstSeenDateTime = n.getDateValue(); },
        "lastSeenDateTime": n => { passiveDnsRecord.lastSeenDateTime = n.getDateValue(); },
        "parentHost": n => { passiveDnsRecord.parentHost = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "recordType": n => { passiveDnsRecord.recordType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPassiveDnsRecordCollectionResponse(passiveDnsRecordCollectionResponse: Partial<PassiveDnsRecordCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(passiveDnsRecordCollectionResponse),
        "value": n => { passiveDnsRecordCollectionResponse.value = n.getCollectionOfObjectValues<PassiveDnsRecord>(createPassiveDnsRecordFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPeopleAdminSettingsAuditRecord(peopleAdminSettingsAuditRecord: Partial<PeopleAdminSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(peopleAdminSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPhysicalBadgingSignalAuditRecord(physicalBadgingSignalAuditRecord: Partial<PhysicalBadgingSignalAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(physicalBadgingSignalAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlannerCopyPlanAuditRecord(plannerCopyPlanAuditRecord: Partial<PlannerCopyPlanAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(plannerCopyPlanAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlannerPlanAuditRecord(plannerPlanAuditRecord: Partial<PlannerPlanAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(plannerPlanAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlannerPlanListAuditRecord(plannerPlanListAuditRecord: Partial<PlannerPlanListAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(plannerPlanListAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlannerRosterAuditRecord(plannerRosterAuditRecord: Partial<PlannerRosterAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(plannerRosterAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlannerRosterSensitivityLabelAuditRecord(plannerRosterSensitivityLabelAuditRecord: Partial<PlannerRosterSensitivityLabelAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(plannerRosterSensitivityLabelAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlannerTaskAuditRecord(plannerTaskAuditRecord: Partial<PlannerTaskAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(plannerTaskAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlannerTaskListAuditRecord(plannerTaskListAuditRecord: Partial<PlannerTaskListAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(plannerTaskListAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlannerTenantSettingsAuditRecord(plannerTenantSettingsAuditRecord: Partial<PlannerTenantSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(plannerTenantSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPolicyBase(policyBase: Partial<PolicyBase> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(policyBase),
        "createdBy": n => { policyBase.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { policyBase.createdDateTime = n.getDateValue(); },
        "description": n => { policyBase.description = n.getStringValue(); },
        "displayName": n => { policyBase.displayName = n.getStringValue(); },
        "lastModifiedBy": n => { policyBase.lastModifiedBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "lastModifiedDateTime": n => { policyBase.lastModifiedDateTime = n.getDateValue(); },
        "status": n => { policyBase.status = n.getEnumValue<PolicyStatus>(PolicyStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerAppsAuditAppRecord(powerAppsAuditAppRecord: Partial<PowerAppsAuditAppRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerAppsAuditAppRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerAppsAuditPlanRecord(powerAppsAuditPlanRecord: Partial<PowerAppsAuditPlanRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerAppsAuditPlanRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerAppsAuditResourceRecord(powerAppsAuditResourceRecord: Partial<PowerAppsAuditResourceRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerAppsAuditResourceRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerBiAuditRecord(powerBiAuditRecord: Partial<PowerBiAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerBiAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerBiDlpAuditRecord(powerBiDlpAuditRecord: Partial<PowerBiDlpAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerBiDlpAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerPagesSiteAuditRecord(powerPagesSiteAuditRecord: Partial<PowerPagesSiteAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerPagesSiteAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerPlatformAdminDlpAuditRecord(powerPlatformAdminDlpAuditRecord: Partial<PowerPlatformAdminDlpAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerPlatformAdminDlpAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerPlatformAdminEnvironmentAuditRecord(powerPlatformAdminEnvironmentAuditRecord: Partial<PowerPlatformAdminEnvironmentAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerPlatformAdminEnvironmentAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerPlatformAdministratorActivityRecord(powerPlatformAdministratorActivityRecord: Partial<PowerPlatformAdministratorActivityRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerPlatformAdministratorActivityRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerPlatformLockboxResourceAccessRequestAuditRecord(powerPlatformLockboxResourceAccessRequestAuditRecord: Partial<PowerPlatformLockboxResourceAccessRequestAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerPlatformLockboxResourceAccessRequestAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerPlatformLockboxResourceCommandAuditRecord(powerPlatformLockboxResourceCommandAuditRecord: Partial<PowerPlatformLockboxResourceCommandAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerPlatformLockboxResourceCommandAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerPlatformServiceActivityAuditRecord(powerPlatformServiceActivityAuditRecord: Partial<PowerPlatformServiceActivityAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerPlatformServiceActivityAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrivacyDataMatchAuditRecord(privacyDataMatchAuditRecord: Partial<PrivacyDataMatchAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(privacyDataMatchAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrivacyDataMinimizationRecord(privacyDataMinimizationRecord: Partial<PrivacyDataMinimizationRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(privacyDataMinimizationRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrivacyDigestEmailRecord(privacyDigestEmailRecord: Partial<PrivacyDigestEmailRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(privacyDigestEmailRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrivacyOpenAccessAuditRecord(privacyOpenAccessAuditRecord: Partial<PrivacyOpenAccessAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(privacyOpenAccessAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrivacyPortalAuditRecord(privacyPortalAuditRecord: Partial<PrivacyPortalAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(privacyPortalAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrivacyRemediationActionRecord(privacyRemediationActionRecord: Partial<PrivacyRemediationActionRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(privacyRemediationActionRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrivacyRemediationRecord(privacyRemediationRecord: Partial<PrivacyRemediationRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(privacyRemediationRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrivacyTenantAuditHistoryRecord(privacyTenantAuditHistoryRecord: Partial<PrivacyTenantAuditHistoryRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(privacyTenantAuditHistoryRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProcessEvidence(processEvidence: Partial<ProcessEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(processEvidence),
        "detectionStatus": n => { processEvidence.detectionStatus = n.getEnumValue<DetectionStatus>(DetectionStatusObject); },
        "imageFile": n => { processEvidence.imageFile = n.getObjectValue<FileDetails>(createFileDetailsFromDiscriminatorValue); },
        "mdeDeviceId": n => { processEvidence.mdeDeviceId = n.getStringValue(); },
        "parentProcessCreationDateTime": n => { processEvidence.parentProcessCreationDateTime = n.getDateValue(); },
        "parentProcessId": n => { processEvidence.parentProcessId = n.getNumberValue(); },
        "parentProcessImageFile": n => { processEvidence.parentProcessImageFile = n.getObjectValue<FileDetails>(createFileDetailsFromDiscriminatorValue); },
        "processCommandLine": n => { processEvidence.processCommandLine = n.getStringValue(); },
        "processCreationDateTime": n => { processEvidence.processCreationDateTime = n.getDateValue(); },
        "processId": n => { processEvidence.processId = n.getNumberValue(); },
        "userAccount": n => { processEvidence.userAccount = n.getObjectValue<UserAccount>(createUserAccountFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProjectAuditRecord(projectAuditRecord: Partial<ProjectAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(projectAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProjectForTheWebAssignedToMeSettingsAuditRecord(projectForTheWebAssignedToMeSettingsAuditRecord: Partial<ProjectForTheWebAssignedToMeSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(projectForTheWebAssignedToMeSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProjectForTheWebProjectAuditRecord(projectForTheWebProjectAuditRecord: Partial<ProjectForTheWebProjectAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(projectForTheWebProjectAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProjectForTheWebProjectSettingsAuditRecord(projectForTheWebProjectSettingsAuditRecord: Partial<ProjectForTheWebProjectSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(projectForTheWebProjectSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProjectForTheWebRoadmapAuditRecord(projectForTheWebRoadmapAuditRecord: Partial<ProjectForTheWebRoadmapAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(projectForTheWebRoadmapAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProjectForTheWebRoadmapItemAuditRecord(projectForTheWebRoadmapItemAuditRecord: Partial<ProjectForTheWebRoadmapItemAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(projectForTheWebRoadmapItemAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProjectForTheWebRoadmapSettingsAuditRecord(projectForTheWebRoadmapSettingsAuditRecord: Partial<ProjectForTheWebRoadmapSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(projectForTheWebRoadmapSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProjectForTheWebTaskAuditRecord(projectForTheWebTaskAuditRecord: Partial<ProjectForTheWebTaskAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(projectForTheWebTaskAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProtectAdhocAction(protectAdhocAction: Partial<ProtectAdhocAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInformationProtectionAction(protectAdhocAction),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProtectByTemplateAction(protectByTemplateAction: Partial<ProtectByTemplateAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInformationProtectionAction(protectByTemplateAction),
        "templateId": n => { protectByTemplateAction.templateId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProtectDoNotForwardAction(protectDoNotForwardAction: Partial<ProtectDoNotForwardAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInformationProtectionAction(protectDoNotForwardAction),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProtectionRule(protectionRule: Partial<ProtectionRule> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(protectionRule),
        "createdBy": n => { protectionRule.createdBy = n.getStringValue(); },
        "createdDateTime": n => { protectionRule.createdDateTime = n.getDateValue(); },
        "displayName": n => { protectionRule.displayName = n.getStringValue(); },
        "isEnabled": n => { protectionRule.isEnabled = n.getBooleanValue(); },
        "lastModifiedBy": n => { protectionRule.lastModifiedBy = n.getStringValue(); },
        "lastModifiedDateTime": n => { protectionRule.lastModifiedDateTime = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPublicFolderAuditRecord(publicFolderAuditRecord: Partial<PublicFolderAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(publicFolderAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPurviewInsiderRiskAlertsRecord(purviewInsiderRiskAlertsRecord: Partial<PurviewInsiderRiskAlertsRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(purviewInsiderRiskAlertsRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPurviewInsiderRiskCasesRecord(purviewInsiderRiskCasesRecord: Partial<PurviewInsiderRiskCasesRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(purviewInsiderRiskCasesRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQuarantineAuditRecord(quarantineAuditRecord: Partial<QuarantineAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(quarantineAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryCondition(queryCondition: Partial<QueryCondition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { queryCondition.backingStoreEnabled = true; },
        "lastModifiedDateTime": n => { queryCondition.lastModifiedDateTime = n.getDateValue(); },
        "@odata.type": n => { queryCondition.odataType = n.getStringValue(); },
        "queryText": n => { queryCondition.queryText = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRecommendedHuntingQuery(recommendedHuntingQuery: Partial<RecommendedHuntingQuery> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { recommendedHuntingQuery.backingStoreEnabled = true; },
        "kqlText": n => { recommendedHuntingQuery.kqlText = n.getStringValue(); },
        "@odata.type": n => { recommendedHuntingQuery.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRecommendLabelAction(recommendLabelAction: Partial<RecommendLabelAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInformationProtectionAction(recommendLabelAction),
        "actions": n => { recommendLabelAction.actions = n.getCollectionOfObjectValues<InformationProtectionAction>(createInformationProtectionActionFromDiscriminatorValue); },
        "actionSource": n => { recommendLabelAction.actionSource = n.getEnumValue<ActionSource>(ActionSourceObject); },
        "responsibleSensitiveTypeIds": n => { recommendLabelAction.responsibleSensitiveTypeIds = n.getCollectionOfPrimitiveValues<string>(); },
        "sensitivityLabelId": n => { recommendLabelAction.sensitivityLabelId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRecordsManagementAuditRecord(recordsManagementAuditRecord: Partial<RecordsManagementAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(recordsManagementAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRedundancyDetectionSettings(redundancyDetectionSettings: Partial<RedundancyDetectionSettings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { redundancyDetectionSettings.backingStoreEnabled = true; },
        "isEnabled": n => { redundancyDetectionSettings.isEnabled = n.getBooleanValue(); },
        "maxWords": n => { redundancyDetectionSettings.maxWords = n.getNumberValue(); },
        "minWords": n => { redundancyDetectionSettings.minWords = n.getNumberValue(); },
        "@odata.type": n => { redundancyDetectionSettings.odataType = n.getStringValue(); },
        "similarityThreshold": n => { redundancyDetectionSettings.similarityThreshold = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRegistryKeyEvidence(registryKeyEvidence: Partial<RegistryKeyEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(registryKeyEvidence),
        "registryHive": n => { registryKeyEvidence.registryHive = n.getStringValue(); },
        "registryKey": n => { registryKeyEvidence.registryKey = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRegistryValueEvidence(registryValueEvidence: Partial<RegistryValueEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(registryValueEvidence),
        "mdeDeviceId": n => { registryValueEvidence.mdeDeviceId = n.getStringValue(); },
        "registryHive": n => { registryValueEvidence.registryHive = n.getStringValue(); },
        "registryKey": n => { registryValueEvidence.registryKey = n.getStringValue(); },
        "registryValue": n => { registryValueEvidence.registryValue = n.getStringValue(); },
        "registryValueName": n => { registryValueEvidence.registryValueName = n.getStringValue(); },
        "registryValueType": n => { registryValueEvidence.registryValueType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRemoveContentFooterAction(removeContentFooterAction: Partial<RemoveContentFooterAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInformationProtectionAction(removeContentFooterAction),
        "uiElementNames": n => { removeContentFooterAction.uiElementNames = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRemoveContentHeaderAction(removeContentHeaderAction: Partial<RemoveContentHeaderAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInformationProtectionAction(removeContentHeaderAction),
        "uiElementNames": n => { removeContentHeaderAction.uiElementNames = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRemoveProtectionAction(removeProtectionAction: Partial<RemoveProtectionAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInformationProtectionAction(removeProtectionAction),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRemoveWatermarkAction(removeWatermarkAction: Partial<RemoveWatermarkAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInformationProtectionAction(removeWatermarkAction),
        "uiElementNames": n => { removeWatermarkAction.uiElementNames = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoResponseAction(responseAction: Partial<ResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { responseAction.backingStoreEnabled = true; },
        "@odata.type": n => { responseAction.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRestrictAppExecutionResponseAction(restrictAppExecutionResponseAction: Partial<RestrictAppExecutionResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResponseAction(restrictAppExecutionResponseAction),
        "identifier": n => { restrictAppExecutionResponseAction.identifier = n.getCollectionOfEnumValues<DeviceIdEntityIdentifier>(DeviceIdEntityIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionDuration(retentionDuration: Partial<RetentionDuration> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { retentionDuration.backingStoreEnabled = true; },
        "@odata.type": n => { retentionDuration.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionDurationForever(retentionDurationForever: Partial<RetentionDurationForever> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoRetentionDuration(retentionDurationForever),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionDurationInDays(retentionDurationInDays: Partial<RetentionDurationInDays> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoRetentionDuration(retentionDurationInDays),
        "days": n => { retentionDurationInDays.days = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionEvent(retentionEvent: Partial<RetentionEvent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(retentionEvent),
        "createdBy": n => { retentionEvent.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { retentionEvent.createdDateTime = n.getDateValue(); },
        "description": n => { retentionEvent.description = n.getStringValue(); },
        "displayName": n => { retentionEvent.displayName = n.getStringValue(); },
        "eventPropagationResults": n => { retentionEvent.eventPropagationResults = n.getCollectionOfObjectValues<EventPropagationResult>(createEventPropagationResultFromDiscriminatorValue); },
        "eventQueries": n => { retentionEvent.eventQueries = n.getCollectionOfObjectValues<EventQuery>(createEventQueryFromDiscriminatorValue); },
        "eventStatus": n => { retentionEvent.eventStatus = n.getObjectValue<RetentionEventStatus>(createRetentionEventStatusFromDiscriminatorValue); },
        "eventTriggerDateTime": n => { retentionEvent.eventTriggerDateTime = n.getDateValue(); },
        "lastModifiedBy": n => { retentionEvent.lastModifiedBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "lastModifiedDateTime": n => { retentionEvent.lastModifiedDateTime = n.getDateValue(); },
        "lastStatusUpdateDateTime": n => { retentionEvent.lastStatusUpdateDateTime = n.getDateValue(); },
        "retentionEventType": n => { retentionEvent.retentionEventType = n.getObjectValue<RetentionEventType>(createRetentionEventTypeFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionEventCollectionResponse(retentionEventCollectionResponse: Partial<RetentionEventCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(retentionEventCollectionResponse),
        "value": n => { retentionEventCollectionResponse.value = n.getCollectionOfObjectValues<RetentionEvent>(createRetentionEventFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionEventStatus(retentionEventStatus: Partial<RetentionEventStatus> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { retentionEventStatus.backingStoreEnabled = true; },
        "error": n => { retentionEventStatus.errorEscaped = n.getObjectValue<PublicError>(createPublicErrorFromDiscriminatorValue); },
        "@odata.type": n => { retentionEventStatus.odataType = n.getStringValue(); },
        "status": n => { retentionEventStatus.status = n.getEnumValue<EventStatusType>(EventStatusTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionEventType(retentionEventType: Partial<RetentionEventType> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(retentionEventType),
        "createdBy": n => { retentionEventType.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { retentionEventType.createdDateTime = n.getDateValue(); },
        "description": n => { retentionEventType.description = n.getStringValue(); },
        "displayName": n => { retentionEventType.displayName = n.getStringValue(); },
        "lastModifiedBy": n => { retentionEventType.lastModifiedBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "lastModifiedDateTime": n => { retentionEventType.lastModifiedDateTime = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionEventTypeCollectionResponse(retentionEventTypeCollectionResponse: Partial<RetentionEventTypeCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(retentionEventTypeCollectionResponse),
        "value": n => { retentionEventTypeCollectionResponse.value = n.getCollectionOfObjectValues<RetentionEventType>(createRetentionEventTypeFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionLabel(retentionLabel: Partial<RetentionLabel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(retentionLabel),
        "actionAfterRetentionPeriod": n => { retentionLabel.actionAfterRetentionPeriod = n.getEnumValue<ActionAfterRetentionPeriod>(ActionAfterRetentionPeriodObject); },
        "behaviorDuringRetentionPeriod": n => { retentionLabel.behaviorDuringRetentionPeriod = n.getEnumValue<BehaviorDuringRetentionPeriod>(BehaviorDuringRetentionPeriodObject); },
        "createdBy": n => { retentionLabel.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { retentionLabel.createdDateTime = n.getDateValue(); },
        "defaultRecordBehavior": n => { retentionLabel.defaultRecordBehavior = n.getEnumValue<DefaultRecordBehavior>(DefaultRecordBehaviorObject); },
        "descriptionForAdmins": n => { retentionLabel.descriptionForAdmins = n.getStringValue(); },
        "descriptionForUsers": n => { retentionLabel.descriptionForUsers = n.getStringValue(); },
        "descriptors": n => { retentionLabel.descriptors = n.getObjectValue<FilePlanDescriptor>(createFilePlanDescriptorFromDiscriminatorValue); },
        "displayName": n => { retentionLabel.displayName = n.getStringValue(); },
        "dispositionReviewStages": n => { retentionLabel.dispositionReviewStages = n.getCollectionOfObjectValues<DispositionReviewStage>(createDispositionReviewStageFromDiscriminatorValue); },
        "isInUse": n => { retentionLabel.isInUse = n.getBooleanValue(); },
        "labelToBeApplied": n => { retentionLabel.labelToBeApplied = n.getStringValue(); },
        "lastModifiedBy": n => { retentionLabel.lastModifiedBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "lastModifiedDateTime": n => { retentionLabel.lastModifiedDateTime = n.getDateValue(); },
        "retentionDuration": n => { retentionLabel.retentionDuration = n.getObjectValue<RetentionDuration>(createRetentionDurationFromDiscriminatorValue); },
        "retentionEventType": n => { retentionLabel.retentionEventType = n.getObjectValue<RetentionEventType>(createRetentionEventTypeFromDiscriminatorValue); },
        "retentionTrigger": n => { retentionLabel.retentionTrigger = n.getEnumValue<RetentionTrigger>(RetentionTriggerObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionLabelCollectionResponse(retentionLabelCollectionResponse: Partial<RetentionLabelCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(retentionLabelCollectionResponse),
        "value": n => { retentionLabelCollectionResponse.value = n.getCollectionOfObjectValues<RetentionLabel>(createRetentionLabelFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionPolicyAuditRecord(retentionPolicyAuditRecord: Partial<RetentionPolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(retentionPolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRuleSchedule(ruleSchedule: Partial<RuleSchedule> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { ruleSchedule.backingStoreEnabled = true; },
        "nextRunDateTime": n => { ruleSchedule.nextRunDateTime = n.getDateValue(); },
        "@odata.type": n => { ruleSchedule.odataType = n.getStringValue(); },
        "period": n => { ruleSchedule.period = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRulesRoot(rulesRoot: Partial<RulesRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(rulesRoot),
        "detectionRules": n => { rulesRoot.detectionRules = n.getCollectionOfObjectValues<DetectionRule>(createDetectionRuleFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRunAntivirusScanResponseAction(runAntivirusScanResponseAction: Partial<RunAntivirusScanResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResponseAction(runAntivirusScanResponseAction),
        "identifier": n => { runAntivirusScanResponseAction.identifier = n.getCollectionOfEnumValues<DeviceIdEntityIdentifier>(DeviceIdEntityIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRunDetails(runDetails: Partial<RunDetails> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { runDetails.backingStoreEnabled = true; },
        "errorCode": n => { runDetails.errorCode = n.getEnumValue<HuntingRuleErrorCode>(HuntingRuleErrorCodeObject); },
        "failureReason": n => { runDetails.failureReason = n.getStringValue(); },
        "lastRunDateTime": n => { runDetails.lastRunDateTime = n.getDateValue(); },
        "@odata.type": n => { runDetails.odataType = n.getStringValue(); },
        "status": n => { runDetails.status = n.getEnumValue<HuntingRuleRunStatus>(HuntingRuleRunStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSasTokenEvidence(sasTokenEvidence: Partial<SasTokenEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(sasTokenEvidence),
        "allowedIpAddresses": n => { sasTokenEvidence.allowedIpAddresses = n.getStringValue(); },
        "allowedResourceTypes": n => { sasTokenEvidence.allowedResourceTypes = n.getCollectionOfPrimitiveValues<string>(); },
        "allowedServices": n => { sasTokenEvidence.allowedServices = n.getCollectionOfPrimitiveValues<string>(); },
        "expiryDateTime": n => { sasTokenEvidence.expiryDateTime = n.getDateValue(); },
        "permissions": n => { sasTokenEvidence.permissions = n.getCollectionOfPrimitiveValues<string>(); },
        "protocol": n => { sasTokenEvidence.protocol = n.getStringValue(); },
        "signatureHash": n => { sasTokenEvidence.signatureHash = n.getStringValue(); },
        "signedWith": n => { sasTokenEvidence.signedWith = n.getStringValue(); },
        "startDateTime": n => { sasTokenEvidence.startDateTime = n.getDateValue(); },
        "storageResource": n => { sasTokenEvidence.storageResource = n.getObjectValue<AzureResourceEvidence>(createAzureResourceEvidenceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoScoreEvidence(scoreEvidence: Partial<ScoreEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(scoreEvidence),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoScorePlatformGenericAuditRecord(scorePlatformGenericAuditRecord: Partial<ScorePlatformGenericAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(scorePlatformGenericAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoScriptRunAuditRecord(scriptRunAuditRecord: Partial<ScriptRunAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(scriptRunAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearch(search: Partial<Search> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(search),
        "contentQuery": n => { search.contentQuery = n.getStringValue(); },
        "createdBy": n => { search.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { search.createdDateTime = n.getDateValue(); },
        "description": n => { search.description = n.getStringValue(); },
        "displayName": n => { search.displayName = n.getStringValue(); },
        "lastModifiedBy": n => { search.lastModifiedBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "lastModifiedDateTime": n => { search.lastModifiedDateTime = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchAuditRecord(searchAuditRecord: Partial<SearchAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(searchAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecurity(security: Partial<Security> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(security),
        "informationProtection": n => { security.informationProtection = n.getObjectValue<InformationProtection>(createInformationProtectionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecurityComplianceAlertRecord(securityComplianceAlertRecord: Partial<SecurityComplianceAlertRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(securityComplianceAlertRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecurityComplianceCenterEOPCmdletAuditRecord(securityComplianceCenterEOPCmdletAuditRecord: Partial<SecurityComplianceCenterEOPCmdletAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(securityComplianceCenterEOPCmdletAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecurityComplianceInsightsAuditRecord(securityComplianceInsightsAuditRecord: Partial<SecurityComplianceInsightsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(securityComplianceInsightsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecurityComplianceRBACAuditRecord(securityComplianceRBACAuditRecord: Partial<SecurityComplianceRBACAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(securityComplianceRBACAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecurityComplianceUserChangeAuditRecord(securityComplianceUserChangeAuditRecord: Partial<SecurityComplianceUserChangeAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(securityComplianceUserChangeAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecurityGroupEvidence(securityGroupEvidence: Partial<SecurityGroupEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(securityGroupEvidence),
        "displayName": n => { securityGroupEvidence.displayName = n.getStringValue(); },
        "securityGroupId": n => { securityGroupEvidence.securityGroupId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSensitivityLabel(sensitivityLabel: Partial<SensitivityLabel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(sensitivityLabel),
        "color": n => { sensitivityLabel.color = n.getStringValue(); },
        "contentFormats": n => { sensitivityLabel.contentFormats = n.getCollectionOfPrimitiveValues<string>(); },
        "description": n => { sensitivityLabel.description = n.getStringValue(); },
        "hasProtection": n => { sensitivityLabel.hasProtection = n.getBooleanValue(); },
        "isActive": n => { sensitivityLabel.isActive = n.getBooleanValue(); },
        "isAppliable": n => { sensitivityLabel.isAppliable = n.getBooleanValue(); },
        "name": n => { sensitivityLabel.name = n.getStringValue(); },
        "parent": n => { sensitivityLabel.parent = n.getObjectValue<SensitivityLabel>(createSensitivityLabelFromDiscriminatorValue); },
        "sensitivity": n => { sensitivityLabel.sensitivity = n.getNumberValue(); },
        "tooltip": n => { sensitivityLabel.tooltip = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSensitivityLabelCollectionResponse(sensitivityLabelCollectionResponse: Partial<SensitivityLabelCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(sensitivityLabelCollectionResponse),
        "value": n => { sensitivityLabelCollectionResponse.value = n.getCollectionOfObjectValues<SensitivityLabel>(createSensitivityLabelFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSensor(sensor: Partial<Sensor> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(sensor),
        "createdDateTime": n => { sensor.createdDateTime = n.getDateValue(); },
        "deploymentStatus": n => { sensor.deploymentStatus = n.getEnumValue<DeploymentStatus>(DeploymentStatusObject); },
        "displayName": n => { sensor.displayName = n.getStringValue(); },
        "domainName": n => { sensor.domainName = n.getStringValue(); },
        "healthIssues": n => { sensor.healthIssues = n.getCollectionOfObjectValues<HealthIssue>(createHealthIssueFromDiscriminatorValue); },
        "healthStatus": n => { sensor.healthStatus = n.getEnumValue<SensorHealthStatus>(SensorHealthStatusObject); },
        "openHealthIssuesCount": n => { sensor.openHealthIssuesCount = n.getNumberValue(); },
        "sensorType": n => { sensor.sensorType = n.getEnumValue<SensorType>(SensorTypeObject); },
        "settings": n => { sensor.settings = n.getObjectValue<SensorSettings>(createSensorSettingsFromDiscriminatorValue); },
        "version": n => { sensor.version = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSensorCollectionResponse(sensorCollectionResponse: Partial<SensorCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(sensorCollectionResponse),
        "value": n => { sensorCollectionResponse.value = n.getCollectionOfObjectValues<Sensor>(createSensorFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSensorDeploymentPackage(sensorDeploymentPackage: Partial<SensorDeploymentPackage> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { sensorDeploymentPackage.backingStoreEnabled = true; },
        "downloadUrl": n => { sensorDeploymentPackage.downloadUrl = n.getStringValue(); },
        "@odata.type": n => { sensorDeploymentPackage.odataType = n.getStringValue(); },
        "version": n => { sensorDeploymentPackage.version = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSensorSettings(sensorSettings: Partial<SensorSettings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { sensorSettings.backingStoreEnabled = true; },
        "description": n => { sensorSettings.description = n.getStringValue(); },
        "domainControllerDnsNames": n => { sensorSettings.domainControllerDnsNames = n.getCollectionOfPrimitiveValues<string>(); },
        "isDelayedDeploymentEnabled": n => { sensorSettings.isDelayedDeploymentEnabled = n.getBooleanValue(); },
        "networkAdapters": n => { sensorSettings.networkAdapters = n.getCollectionOfObjectValues<NetworkAdapter>(createNetworkAdapterFromDiscriminatorValue); },
        "@odata.type": n => { sensorSettings.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServicePrincipalEvidence(servicePrincipalEvidence: Partial<ServicePrincipalEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(servicePrincipalEvidence),
        "appId": n => { servicePrincipalEvidence.appId = n.getStringValue(); },
        "appOwnerTenantId": n => { servicePrincipalEvidence.appOwnerTenantId = n.getStringValue(); },
        "servicePrincipalName": n => { servicePrincipalEvidence.servicePrincipalName = n.getStringValue(); },
        "servicePrincipalObjectId": n => { servicePrincipalEvidence.servicePrincipalObjectId = n.getStringValue(); },
        "servicePrincipalType": n => { servicePrincipalEvidence.servicePrincipalType = n.getEnumValue<ServicePrincipalType>(ServicePrincipalTypeObject); },
        "tenantId": n => { servicePrincipalEvidence.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointAppPermissionOperationAuditRecord(sharePointAppPermissionOperationAuditRecord: Partial<SharePointAppPermissionOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointAppPermissionOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointAuditRecord(sharePointAuditRecord: Partial<SharePointAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointCommentOperationAuditRecord(sharePointCommentOperationAuditRecord: Partial<SharePointCommentOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointCommentOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointContentTypeOperationAuditRecord(sharePointContentTypeOperationAuditRecord: Partial<SharePointContentTypeOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointContentTypeOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointESignatureAuditRecord(sharePointESignatureAuditRecord: Partial<SharePointESignatureAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointESignatureAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointFieldOperationAuditRecord(sharePointFieldOperationAuditRecord: Partial<SharePointFieldOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointFieldOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointFileOperationAuditRecord(sharePointFileOperationAuditRecord: Partial<SharePointFileOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointFileOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointListOperationAuditRecord(sharePointListOperationAuditRecord: Partial<SharePointListOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointListOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointSharingOperationAuditRecord(sharePointSharingOperationAuditRecord: Partial<SharePointSharingOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointSharingOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSinglePropertySchema(singlePropertySchema: Partial<SinglePropertySchema> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { singlePropertySchema.backingStoreEnabled = true; },
        "name": n => { singlePropertySchema.name = n.getStringValue(); },
        "@odata.type": n => { singlePropertySchema.odataType = n.getStringValue(); },
        "type": n => { singlePropertySchema.type = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSiteSource(siteSource: Partial<SiteSource> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDataSource(siteSource),
        "site": n => { siteSource.site = n.getObjectValue<Site>(createSiteFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSiteSourceCollectionResponse(siteSourceCollectionResponse: Partial<SiteSourceCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(siteSourceCollectionResponse),
        "value": n => { siteSourceCollectionResponse.value = n.getCollectionOfObjectValues<SiteSource>(createSiteSourceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSkypeForBusinessBaseAuditRecord(skypeForBusinessBaseAuditRecord: Partial<SkypeForBusinessBaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(skypeForBusinessBaseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSkypeForBusinessCmdletsAuditRecord(skypeForBusinessCmdletsAuditRecord: Partial<SkypeForBusinessCmdletsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(skypeForBusinessCmdletsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSkypeForBusinessPSTNUsageAuditRecord(skypeForBusinessPSTNUsageAuditRecord: Partial<SkypeForBusinessPSTNUsageAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(skypeForBusinessPSTNUsageAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSkypeForBusinessUsersBlockedAuditRecord(skypeForBusinessUsersBlockedAuditRecord: Partial<SkypeForBusinessUsersBlockedAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(skypeForBusinessUsersBlockedAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSmsCreatePhoneNumberRecord(smsCreatePhoneNumberRecord: Partial<SmsCreatePhoneNumberRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(smsCreatePhoneNumberRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSmsDeletePhoneNumberRecord(smsDeletePhoneNumberRecord: Partial<SmsDeletePhoneNumberRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(smsDeletePhoneNumberRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSoftDeleteResponseAction(softDeleteResponseAction: Partial<SoftDeleteResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResponseAction(softDeleteResponseAction),
        "identifier": n => { softDeleteResponseAction.identifier = n.getCollectionOfEnumValues<EmailEntityIdentifier>(EmailEntityIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSslCertificate(sslCertificate: Partial<SslCertificate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoArtifact(sslCertificate),
        "expirationDateTime": n => { sslCertificate.expirationDateTime = n.getDateValue(); },
        "fingerprint": n => { sslCertificate.fingerprint = n.getStringValue(); },
        "firstSeenDateTime": n => { sslCertificate.firstSeenDateTime = n.getDateValue(); },
        "issueDateTime": n => { sslCertificate.issueDateTime = n.getDateValue(); },
        "issuer": n => { sslCertificate.issuer = n.getObjectValue<SslCertificateEntity>(createSslCertificateEntityFromDiscriminatorValue); },
        "lastSeenDateTime": n => { sslCertificate.lastSeenDateTime = n.getDateValue(); },
        "relatedHosts": n => { sslCertificate.relatedHosts = n.getCollectionOfObjectValues<Host>(createHostFromDiscriminatorValue); },
        "serialNumber": n => { sslCertificate.serialNumber = n.getStringValue(); },
        "sha1": n => { sslCertificate.sha1 = n.getStringValue(); },
        "subject": n => { sslCertificate.subject = n.getObjectValue<SslCertificateEntity>(createSslCertificateEntityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSslCertificateCollectionResponse(sslCertificateCollectionResponse: Partial<SslCertificateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(sslCertificateCollectionResponse),
        "value": n => { sslCertificateCollectionResponse.value = n.getCollectionOfObjectValues<SslCertificate>(createSslCertificateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSslCertificateEntity(sslCertificateEntity: Partial<SslCertificateEntity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "address": n => { sslCertificateEntity.address = n.getObjectValue<PhysicalAddress>(createPhysicalAddressFromDiscriminatorValue); },
        "alternateNames": n => { sslCertificateEntity.alternateNames = n.getCollectionOfPrimitiveValues<string>(); },
        "backingStoreEnabled": n => { sslCertificateEntity.backingStoreEnabled = true; },
        "commonName": n => { sslCertificateEntity.commonName = n.getStringValue(); },
        "email": n => { sslCertificateEntity.email = n.getStringValue(); },
        "givenName": n => { sslCertificateEntity.givenName = n.getStringValue(); },
        "@odata.type": n => { sslCertificateEntity.odataType = n.getStringValue(); },
        "organizationName": n => { sslCertificateEntity.organizationName = n.getStringValue(); },
        "organizationUnitName": n => { sslCertificateEntity.organizationUnitName = n.getStringValue(); },
        "serialNumber": n => { sslCertificateEntity.serialNumber = n.getStringValue(); },
        "surname": n => { sslCertificateEntity.surname = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoStopAndQuarantineFileResponseAction(stopAndQuarantineFileResponseAction: Partial<StopAndQuarantineFileResponseAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResponseAction(stopAndQuarantineFileResponseAction),
        "identifier": n => { stopAndQuarantineFileResponseAction.identifier = n.getCollectionOfEnumValues<StopAndQuarantineFileEntityIdentifier>(StopAndQuarantineFileEntityIdentifierObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoStream(stream: Partial<Stream> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { stream.backingStoreEnabled = true; },
        "name": n => { stream.name = n.getStringValue(); },
        "@odata.type": n => { stream.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoStringValueDictionary(stringValueDictionary: Partial<StringValueDictionary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { stringValueDictionary.backingStoreEnabled = true; },
        "@odata.type": n => { stringValueDictionary.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSubcategoryTemplate(subcategoryTemplate: Partial<SubcategoryTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorTemplate(subcategoryTemplate),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSubcategoryTemplateCollectionResponse(subcategoryTemplateCollectionResponse: Partial<SubcategoryTemplateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(subcategoryTemplateCollectionResponse),
        "value": n => { subcategoryTemplateCollectionResponse.value = n.getCollectionOfObjectValues<SubcategoryTemplate>(createSubcategoryTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSubdomain(subdomain: Partial<Subdomain> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(subdomain),
        "firstSeenDateTime": n => { subdomain.firstSeenDateTime = n.getDateValue(); },
        "host": n => { subdomain.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSubdomainCollectionResponse(subdomainCollectionResponse: Partial<SubdomainCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(subdomainCollectionResponse),
        "value": n => { subdomainCollectionResponse.value = n.getCollectionOfObjectValues<Subdomain>(createSubdomainFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSubmissionAdminReview(submissionAdminReview: Partial<SubmissionAdminReview> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { submissionAdminReview.backingStoreEnabled = true; },
        "@odata.type": n => { submissionAdminReview.odataType = n.getStringValue(); },
        "reviewBy": n => { submissionAdminReview.reviewBy = n.getStringValue(); },
        "reviewDateTime": n => { submissionAdminReview.reviewDateTime = n.getDateValue(); },
        "reviewResult": n => { submissionAdminReview.reviewResult = n.getEnumValue<SubmissionResultCategory>(SubmissionResultCategoryObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSubmissionDetectedFile(submissionDetectedFile: Partial<SubmissionDetectedFile> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { submissionDetectedFile.backingStoreEnabled = true; },
        "fileHash": n => { submissionDetectedFile.fileHash = n.getStringValue(); },
        "fileName": n => { submissionDetectedFile.fileName = n.getStringValue(); },
        "@odata.type": n => { submissionDetectedFile.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSubmissionMailEvidence(submissionMailEvidence: Partial<SubmissionMailEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(submissionMailEvidence),
        "networkMessageId": n => { submissionMailEvidence.networkMessageId = n.getStringValue(); },
        "recipient": n => { submissionMailEvidence.recipient = n.getStringValue(); },
        "reportType": n => { submissionMailEvidence.reportType = n.getStringValue(); },
        "sender": n => { submissionMailEvidence.sender = n.getStringValue(); },
        "senderIp": n => { submissionMailEvidence.senderIp = n.getStringValue(); },
        "subject": n => { submissionMailEvidence.subject = n.getStringValue(); },
        "submissionDateTime": n => { submissionMailEvidence.submissionDateTime = n.getDateValue(); },
        "submissionId": n => { submissionMailEvidence.submissionId = n.getStringValue(); },
        "submitter": n => { submissionMailEvidence.submitter = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSubmissionResult(submissionResult: Partial<SubmissionResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { submissionResult.backingStoreEnabled = true; },
        "category": n => { submissionResult.category = n.getEnumValue<SubmissionResultCategory>(SubmissionResultCategoryObject); },
        "detail": n => { submissionResult.detail = n.getEnumValue<SubmissionResultDetail>(SubmissionResultDetailObject); },
        "detectedFiles": n => { submissionResult.detectedFiles = n.getCollectionOfObjectValues<SubmissionDetectedFile>(createSubmissionDetectedFileFromDiscriminatorValue); },
        "detectedUrls": n => { submissionResult.detectedUrls = n.getCollectionOfPrimitiveValues<string>(); },
        "@odata.type": n => { submissionResult.odataType = n.getStringValue(); },
        "userMailboxSetting": n => { submissionResult.userMailboxSetting = n.getCollectionOfEnumValues<UserMailboxSetting>(UserMailboxSettingObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSubmissionUserIdentity(submissionUserIdentity: Partial<SubmissionUserIdentity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(submissionUserIdentity),
        "email": n => { submissionUserIdentity.email = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSupervisoryReviewDayXInsightsAuditRecord(supervisoryReviewDayXInsightsAuditRecord: Partial<SupervisoryReviewDayXInsightsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(supervisoryReviewDayXInsightsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSyntheticProbeAuditRecord(syntheticProbeAuditRecord: Partial<SyntheticProbeAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(syntheticProbeAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTag(tag: Partial<Tag> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(tag),
        "createdBy": n => { tag.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "description": n => { tag.description = n.getStringValue(); },
        "displayName": n => { tag.displayName = n.getStringValue(); },
        "lastModifiedDateTime": n => { tag.lastModifiedDateTime = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamsEasyApprovalsAuditRecord(teamsEasyApprovalsAuditRecord: Partial<TeamsEasyApprovalsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(teamsEasyApprovalsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamsHealthcareAuditRecord(teamsHealthcareAuditRecord: Partial<TeamsHealthcareAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(teamsHealthcareAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamsUpdatesAuditRecord(teamsUpdatesAuditRecord: Partial<TeamsUpdatesAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(teamsUpdatesAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantAllowBlockListAuditRecord(tenantAllowBlockListAuditRecord: Partial<TenantAllowBlockListAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(tenantAllowBlockListAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantAllowBlockListEntryResult(tenantAllowBlockListEntryResult: Partial<TenantAllowBlockListEntryResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { tenantAllowBlockListEntryResult.backingStoreEnabled = true; },
        "entryType": n => { tenantAllowBlockListEntryResult.entryType = n.getEnumValue<TenantAllowBlockListEntryType>(TenantAllowBlockListEntryTypeObject); },
        "expirationDateTime": n => { tenantAllowBlockListEntryResult.expirationDateTime = n.getDateValue(); },
        "identity": n => { tenantAllowBlockListEntryResult.identity = n.getStringValue(); },
        "@odata.type": n => { tenantAllowBlockListEntryResult.odataType = n.getStringValue(); },
        "status": n => { tenantAllowBlockListEntryResult.status = n.getEnumValue<LongRunningOperationStatus>(LongRunningOperationStatusObject); },
        "value": n => { tenantAllowBlockListEntryResult.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantAllowOrBlockListAction(tenantAllowOrBlockListAction: Partial<TenantAllowOrBlockListAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "action": n => { tenantAllowOrBlockListAction.action = n.getEnumValue<TenantAllowBlockListAction>(TenantAllowBlockListActionObject); },
        "backingStoreEnabled": n => { tenantAllowOrBlockListAction.backingStoreEnabled = true; },
        "expirationDateTime": n => { tenantAllowOrBlockListAction.expirationDateTime = n.getDateValue(); },
        "note": n => { tenantAllowOrBlockListAction.note = n.getStringValue(); },
        "@odata.type": n => { tenantAllowOrBlockListAction.odataType = n.getStringValue(); },
        "results": n => { tenantAllowOrBlockListAction.results = n.getCollectionOfObjectValues<TenantAllowBlockListEntryResult>(createTenantAllowBlockListEntryResultFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoThreatFinderAuditRecord(threatFinderAuditRecord: Partial<ThreatFinderAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(threatFinderAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoThreatIntelligence(threatIntelligence: Partial<ThreatIntelligence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(threatIntelligence),
        "articleIndicators": n => { threatIntelligence.articleIndicators = n.getCollectionOfObjectValues<ArticleIndicator>(createArticleIndicatorFromDiscriminatorValue); },
        "articles": n => { threatIntelligence.articles = n.getCollectionOfObjectValues<Article>(createArticleFromDiscriminatorValue); },
        "hostComponents": n => { threatIntelligence.hostComponents = n.getCollectionOfObjectValues<HostComponent>(createHostComponentFromDiscriminatorValue); },
        "hostCookies": n => { threatIntelligence.hostCookies = n.getCollectionOfObjectValues<HostCookie>(createHostCookieFromDiscriminatorValue); },
        "hostPairs": n => { threatIntelligence.hostPairs = n.getCollectionOfObjectValues<HostPair>(createHostPairFromDiscriminatorValue); },
        "hostPorts": n => { threatIntelligence.hostPorts = n.getCollectionOfObjectValues<HostPort>(createHostPortFromDiscriminatorValue); },
        "hosts": n => { threatIntelligence.hosts = n.getCollectionOfObjectValues<Host>(createHostFromDiscriminatorValue); },
        "hostSslCertificates": n => { threatIntelligence.hostSslCertificates = n.getCollectionOfObjectValues<HostSslCertificate>(createHostSslCertificateFromDiscriminatorValue); },
        "hostTrackers": n => { threatIntelligence.hostTrackers = n.getCollectionOfObjectValues<HostTracker>(createHostTrackerFromDiscriminatorValue); },
        "intelligenceProfileIndicators": n => { threatIntelligence.intelligenceProfileIndicators = n.getCollectionOfObjectValues<IntelligenceProfileIndicator>(createIntelligenceProfileIndicatorFromDiscriminatorValue); },
        "intelProfiles": n => { threatIntelligence.intelProfiles = n.getCollectionOfObjectValues<IntelligenceProfile>(createIntelligenceProfileFromDiscriminatorValue); },
        "passiveDnsRecords": n => { threatIntelligence.passiveDnsRecords = n.getCollectionOfObjectValues<PassiveDnsRecord>(createPassiveDnsRecordFromDiscriminatorValue); },
        "sslCertificates": n => { threatIntelligence.sslCertificates = n.getCollectionOfObjectValues<SslCertificate>(createSslCertificateFromDiscriminatorValue); },
        "subdomains": n => { threatIntelligence.subdomains = n.getCollectionOfObjectValues<Subdomain>(createSubdomainFromDiscriminatorValue); },
        "vulnerabilities": n => { threatIntelligence.vulnerabilities = n.getCollectionOfObjectValues<Vulnerability>(createVulnerabilityFromDiscriminatorValue); },
        "whoisHistoryRecords": n => { threatIntelligence.whoisHistoryRecords = n.getCollectionOfObjectValues<WhoisHistoryRecord>(createWhoisHistoryRecordFromDiscriminatorValue); },
        "whoisRecords": n => { threatIntelligence.whoisRecords = n.getCollectionOfObjectValues<WhoisRecord>(createWhoisRecordFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoThreatIntelligenceAtpContentData(threatIntelligenceAtpContentData: Partial<ThreatIntelligenceAtpContentData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(threatIntelligenceAtpContentData),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoThreatIntelligenceMailData(threatIntelligenceMailData: Partial<ThreatIntelligenceMailData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(threatIntelligenceMailData),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoThreatIntelligenceUrlClickData(threatIntelligenceUrlClickData: Partial<ThreatIntelligenceUrlClickData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(threatIntelligenceUrlClickData),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoThreatSubmission(threatSubmission: Partial<ThreatSubmission> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(threatSubmission),
        "adminReview": n => { threatSubmission.adminReview = n.getObjectValue<SubmissionAdminReview>(createSubmissionAdminReviewFromDiscriminatorValue); },
        "category": n => { threatSubmission.category = n.getEnumValue<SubmissionCategory>(SubmissionCategoryObject); },
        "clientSource": n => { threatSubmission.clientSource = n.getEnumValue<SubmissionClientSource>(SubmissionClientSourceObject); },
        "contentType": n => { threatSubmission.contentType = n.getEnumValue<SubmissionContentType>(SubmissionContentTypeObject); },
        "createdBy": n => { threatSubmission.createdBy = n.getObjectValue<SubmissionUserIdentity>(createSubmissionUserIdentityFromDiscriminatorValue); },
        "createdDateTime": n => { threatSubmission.createdDateTime = n.getDateValue(); },
        "result": n => { threatSubmission.result = n.getObjectValue<SubmissionResult>(createSubmissionResultFromDiscriminatorValue); },
        "source": n => { threatSubmission.source = n.getEnumValue<SubmissionSource>(SubmissionSourceObject); },
        "status": n => { threatSubmission.status = n.getEnumValue<LongRunningOperationStatus>(LongRunningOperationStatusObject); },
        "tenantId": n => { threatSubmission.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoThreatSubmissionRoot(threatSubmissionRoot: Partial<ThreatSubmissionRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(threatSubmissionRoot),
        "emailThreats": n => { threatSubmissionRoot.emailThreats = n.getCollectionOfObjectValues<EmailThreatSubmission>(createEmailThreatSubmissionFromDiscriminatorValue); },
        "emailThreatSubmissionPolicies": n => { threatSubmissionRoot.emailThreatSubmissionPolicies = n.getCollectionOfObjectValues<EmailThreatSubmissionPolicy>(createEmailThreatSubmissionPolicyFromDiscriminatorValue); },
        "fileThreats": n => { threatSubmissionRoot.fileThreats = n.getCollectionOfObjectValues<FileThreatSubmission>(createFileThreatSubmissionFromDiscriminatorValue); },
        "urlThreats": n => { threatSubmissionRoot.urlThreats = n.getCollectionOfObjectValues<UrlThreatSubmission>(createUrlThreatSubmissionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTodoAuditRecord(todoAuditRecord: Partial<TodoAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(todoAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTopicModelingSettings(topicModelingSettings: Partial<TopicModelingSettings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { topicModelingSettings.backingStoreEnabled = true; },
        "dynamicallyAdjustTopicCount": n => { topicModelingSettings.dynamicallyAdjustTopicCount = n.getBooleanValue(); },
        "ignoreNumbers": n => { topicModelingSettings.ignoreNumbers = n.getBooleanValue(); },
        "isEnabled": n => { topicModelingSettings.isEnabled = n.getBooleanValue(); },
        "@odata.type": n => { topicModelingSettings.odataType = n.getStringValue(); },
        "topicCount": n => { topicModelingSettings.topicCount = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTriggersRoot(triggersRoot: Partial<TriggersRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(triggersRoot),
        "retentionEvents": n => { triggersRoot.retentionEvents = n.getCollectionOfObjectValues<RetentionEvent>(createRetentionEventFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTriggerTypesRoot(triggerTypesRoot: Partial<TriggerTypesRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(triggerTypesRoot),
        "retentionEventTypes": n => { triggerTypesRoot.retentionEventTypes = n.getCollectionOfObjectValues<RetentionEventType>(createRetentionEventTypeFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUamOperationAuditRecord(uamOperationAuditRecord: Partial<UamOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(uamOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUnclassifiedArtifact(unclassifiedArtifact: Partial<UnclassifiedArtifact> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoArtifact(unclassifiedArtifact),
        "kind": n => { unclassifiedArtifact.kind = n.getStringValue(); },
        "value": n => { unclassifiedArtifact.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUnifiedGroupAuditRecord(unifiedGroupAuditRecord: Partial<UnifiedGroupAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(unifiedGroupAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUnifiedGroupSource(unifiedGroupSource: Partial<UnifiedGroupSource> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDataSource(unifiedGroupSource),
        "group": n => { unifiedGroupSource.group = n.getObjectValue<Group>(createGroupFromDiscriminatorValue); },
        "includedSources": n => { unifiedGroupSource.includedSources = n.getCollectionOfEnumValues<SourceType>(SourceTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUnifiedGroupSourceCollectionResponse(unifiedGroupSourceCollectionResponse: Partial<UnifiedGroupSourceCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(unifiedGroupSourceCollectionResponse),
        "value": n => { unifiedGroupSourceCollectionResponse.value = n.getCollectionOfObjectValues<UnifiedGroupSource>(createUnifiedGroupSourceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUnifiedSimulationMatchedItemAuditRecord(unifiedSimulationMatchedItemAuditRecord: Partial<UnifiedSimulationMatchedItemAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(unifiedSimulationMatchedItemAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUnifiedSimulationSummaryAuditRecord(unifiedSimulationSummaryAuditRecord: Partial<UnifiedSimulationSummaryAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(unifiedSimulationSummaryAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUploadCertificateRecord(uploadCertificateRecord: Partial<UploadCertificateRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(uploadCertificateRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUrbacAssignmentAuditRecord(urbacAssignmentAuditRecord: Partial<UrbacAssignmentAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(urbacAssignmentAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUrbacEnableStateAuditRecord(urbacEnableStateAuditRecord: Partial<UrbacEnableStateAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(urbacEnableStateAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUrbacRoleAuditRecord(urbacRoleAuditRecord: Partial<UrbacRoleAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(urbacRoleAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUrlEvidence(urlEvidence: Partial<UrlEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(urlEvidence),
        "url": n => { urlEvidence.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUrlThreatSubmission(urlThreatSubmission: Partial<UrlThreatSubmission> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoThreatSubmission(urlThreatSubmission),
        "webUrl": n => { urlThreatSubmission.webUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUrlThreatSubmissionCollectionResponse(urlThreatSubmissionCollectionResponse: Partial<UrlThreatSubmissionCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(urlThreatSubmissionCollectionResponse),
        "value": n => { urlThreatSubmissionCollectionResponse.value = n.getCollectionOfObjectValues<UrlThreatSubmission>(createUrlThreatSubmissionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserAccount(userAccount: Partial<UserAccount> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountName": n => { userAccount.accountName = n.getStringValue(); },
        "azureAdUserId": n => { userAccount.azureAdUserId = n.getStringValue(); },
        "backingStoreEnabled": n => { userAccount.backingStoreEnabled = true; },
        "displayName": n => { userAccount.displayName = n.getStringValue(); },
        "domainName": n => { userAccount.domainName = n.getStringValue(); },
        "@odata.type": n => { userAccount.odataType = n.getStringValue(); },
        "userPrincipalName": n => { userAccount.userPrincipalName = n.getStringValue(); },
        "userSid": n => { userAccount.userSid = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserEvidence(userEvidence: Partial<UserEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(userEvidence),
        "stream": n => { userEvidence.stream = n.getObjectValue<Stream>(createStreamFromDiscriminatorValue); },
        "userAccount": n => { userEvidence.userAccount = n.getObjectValue<UserAccount>(createUserAccountFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserSource(userSource: Partial<UserSource> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDataSource(userSource),
        "email": n => { userSource.email = n.getStringValue(); },
        "includedSources": n => { userSource.includedSources = n.getCollectionOfEnumValues<SourceType>(SourceTypeObject); },
        "siteWebUrl": n => { userSource.siteWebUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserSourceCollectionResponse(userSourceCollectionResponse: Partial<UserSourceCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(userSourceCollectionResponse),
        "value": n => { userSourceCollectionResponse.value = n.getCollectionOfObjectValues<UserSource>(createUserSourceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserTrainingAuditRecord(userTrainingAuditRecord: Partial<UserTrainingAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(userTrainingAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVfamBasePolicyAuditRecord(vfamBasePolicyAuditRecord: Partial<VfamBasePolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vfamBasePolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVfamCreatePolicyAuditRecord(vfamCreatePolicyAuditRecord: Partial<VfamCreatePolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vfamCreatePolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVfamDeletePolicyAuditRecord(vfamDeletePolicyAuditRecord: Partial<VfamDeletePolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vfamDeletePolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVfamUpdatePolicyAuditRecord(vfamUpdatePolicyAuditRecord: Partial<VfamUpdatePolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vfamUpdatePolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVivaGoalsAuditRecord(vivaGoalsAuditRecord: Partial<VivaGoalsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vivaGoalsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVivaLearningAdminAuditRecord(vivaLearningAdminAuditRecord: Partial<VivaLearningAdminAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vivaLearningAdminAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVivaLearningAuditRecord(vivaLearningAuditRecord: Partial<VivaLearningAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vivaLearningAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVivaPulseAdminAuditRecord(vivaPulseAdminAuditRecord: Partial<VivaPulseAdminAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vivaPulseAdminAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVivaPulseOrganizerAuditRecord(vivaPulseOrganizerAuditRecord: Partial<VivaPulseOrganizerAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vivaPulseOrganizerAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVivaPulseReportAuditRecord(vivaPulseReportAuditRecord: Partial<VivaPulseReportAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vivaPulseReportAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVivaPulseResponseAuditRecord(vivaPulseResponseAuditRecord: Partial<VivaPulseResponseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vivaPulseResponseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVmMetadata(vmMetadata: Partial<VmMetadata> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { vmMetadata.backingStoreEnabled = true; },
        "cloudProvider": n => { vmMetadata.cloudProvider = n.getEnumValue<VmCloudProvider>(VmCloudProviderObject); },
        "@odata.type": n => { vmMetadata.odataType = n.getStringValue(); },
        "resourceId": n => { vmMetadata.resourceId = n.getStringValue(); },
        "subscriptionId": n => { vmMetadata.subscriptionId = n.getStringValue(); },
        "vmId": n => { vmMetadata.vmId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVulnerability(vulnerability: Partial<Vulnerability> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(vulnerability),
        "activeExploitsObserved": n => { vulnerability.activeExploitsObserved = n.getBooleanValue(); },
        "articles": n => { vulnerability.articles = n.getCollectionOfObjectValues<Article>(createArticleFromDiscriminatorValue); },
        "commonWeaknessEnumerationIds": n => { vulnerability.commonWeaknessEnumerationIds = n.getCollectionOfPrimitiveValues<string>(); },
        "components": n => { vulnerability.components = n.getCollectionOfObjectValues<VulnerabilityComponent>(createVulnerabilityComponentFromDiscriminatorValue); },
        "createdDateTime": n => { vulnerability.createdDateTime = n.getDateValue(); },
        "cvss2Summary": n => { vulnerability.cvss2Summary = n.getObjectValue<CvssSummary>(createCvssSummaryFromDiscriminatorValue); },
        "cvss3Summary": n => { vulnerability.cvss3Summary = n.getObjectValue<CvssSummary>(createCvssSummaryFromDiscriminatorValue); },
        "description": n => { vulnerability.description = n.getObjectValue<FormattedContent>(createFormattedContentFromDiscriminatorValue); },
        "exploits": n => { vulnerability.exploits = n.getCollectionOfObjectValues<Hyperlink>(createHyperlinkFromDiscriminatorValue); },
        "exploitsAvailable": n => { vulnerability.exploitsAvailable = n.getBooleanValue(); },
        "hasChatter": n => { vulnerability.hasChatter = n.getBooleanValue(); },
        "lastModifiedDateTime": n => { vulnerability.lastModifiedDateTime = n.getDateValue(); },
        "priorityScore": n => { vulnerability.priorityScore = n.getNumberValue(); },
        "publishedDateTime": n => { vulnerability.publishedDateTime = n.getDateValue(); },
        "references": n => { vulnerability.references = n.getCollectionOfObjectValues<Hyperlink>(createHyperlinkFromDiscriminatorValue); },
        "remediation": n => { vulnerability.remediation = n.getObjectValue<FormattedContent>(createFormattedContentFromDiscriminatorValue); },
        "severity": n => { vulnerability.severity = n.getEnumValue<VulnerabilitySeverity>(VulnerabilitySeverityObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVulnerabilityCollectionResponse(vulnerabilityCollectionResponse: Partial<VulnerabilityCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(vulnerabilityCollectionResponse),
        "value": n => { vulnerabilityCollectionResponse.value = n.getCollectionOfObjectValues<Vulnerability>(createVulnerabilityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVulnerabilityComponent(vulnerabilityComponent: Partial<VulnerabilityComponent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(vulnerabilityComponent),
        "name": n => { vulnerabilityComponent.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVulnerabilityComponentCollectionResponse(vulnerabilityComponentCollectionResponse: Partial<VulnerabilityComponentCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(vulnerabilityComponentCollectionResponse),
        "value": n => { vulnerabilityComponentCollectionResponse.value = n.getCollectionOfObjectValues<VulnerabilityComponent>(createVulnerabilityComponentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWdatpAlertsAuditRecord(wdatpAlertsAuditRecord: Partial<WdatpAlertsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(wdatpAlertsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWhoisBaseRecord(whoisBaseRecord: Partial<WhoisBaseRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(whoisBaseRecord),
        "abuse": n => { whoisBaseRecord.abuse = n.getObjectValue<WhoisContact>(createWhoisContactFromDiscriminatorValue); },
        "admin": n => { whoisBaseRecord.admin = n.getObjectValue<WhoisContact>(createWhoisContactFromDiscriminatorValue); },
        "billing": n => { whoisBaseRecord.billing = n.getObjectValue<WhoisContact>(createWhoisContactFromDiscriminatorValue); },
        "domainStatus": n => { whoisBaseRecord.domainStatus = n.getStringValue(); },
        "expirationDateTime": n => { whoisBaseRecord.expirationDateTime = n.getDateValue(); },
        "firstSeenDateTime": n => { whoisBaseRecord.firstSeenDateTime = n.getDateValue(); },
        "host": n => { whoisBaseRecord.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "lastSeenDateTime": n => { whoisBaseRecord.lastSeenDateTime = n.getDateValue(); },
        "lastUpdateDateTime": n => { whoisBaseRecord.lastUpdateDateTime = n.getDateValue(); },
        "nameservers": n => { whoisBaseRecord.nameservers = n.getCollectionOfObjectValues<WhoisNameserver>(createWhoisNameserverFromDiscriminatorValue); },
        "noc": n => { whoisBaseRecord.noc = n.getObjectValue<WhoisContact>(createWhoisContactFromDiscriminatorValue); },
        "rawWhoisText": n => { whoisBaseRecord.rawWhoisText = n.getStringValue(); },
        "registrant": n => { whoisBaseRecord.registrant = n.getObjectValue<WhoisContact>(createWhoisContactFromDiscriminatorValue); },
        "registrar": n => { whoisBaseRecord.registrar = n.getObjectValue<WhoisContact>(createWhoisContactFromDiscriminatorValue); },
        "registrationDateTime": n => { whoisBaseRecord.registrationDateTime = n.getDateValue(); },
        "technical": n => { whoisBaseRecord.technical = n.getObjectValue<WhoisContact>(createWhoisContactFromDiscriminatorValue); },
        "whoisServer": n => { whoisBaseRecord.whoisServer = n.getStringValue(); },
        "zone": n => { whoisBaseRecord.zone = n.getObjectValue<WhoisContact>(createWhoisContactFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWhoisContact(whoisContact: Partial<WhoisContact> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "address": n => { whoisContact.address = n.getObjectValue<PhysicalAddress>(createPhysicalAddressFromDiscriminatorValue); },
        "backingStoreEnabled": n => { whoisContact.backingStoreEnabled = true; },
        "email": n => { whoisContact.email = n.getStringValue(); },
        "fax": n => { whoisContact.fax = n.getStringValue(); },
        "name": n => { whoisContact.name = n.getStringValue(); },
        "@odata.type": n => { whoisContact.odataType = n.getStringValue(); },
        "organization": n => { whoisContact.organization = n.getStringValue(); },
        "telephone": n => { whoisContact.telephone = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWhoisHistoryRecord(whoisHistoryRecord: Partial<WhoisHistoryRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoWhoisBaseRecord(whoisHistoryRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWhoisHistoryRecordCollectionResponse(whoisHistoryRecordCollectionResponse: Partial<WhoisHistoryRecordCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(whoisHistoryRecordCollectionResponse),
        "value": n => { whoisHistoryRecordCollectionResponse.value = n.getCollectionOfObjectValues<WhoisHistoryRecord>(createWhoisHistoryRecordFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWhoisNameserver(whoisNameserver: Partial<WhoisNameserver> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { whoisNameserver.backingStoreEnabled = true; },
        "firstSeenDateTime": n => { whoisNameserver.firstSeenDateTime = n.getDateValue(); },
        "host": n => { whoisNameserver.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "lastSeenDateTime": n => { whoisNameserver.lastSeenDateTime = n.getDateValue(); },
        "@odata.type": n => { whoisNameserver.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWhoisRecord(whoisRecord: Partial<WhoisRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoWhoisBaseRecord(whoisRecord),
        "history": n => { whoisRecord.history = n.getCollectionOfObjectValues<WhoisHistoryRecord>(createWhoisHistoryRecordFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWhoisRecordCollectionResponse(whoisRecordCollectionResponse: Partial<WhoisRecordCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(whoisRecordCollectionResponse),
        "value": n => { whoisRecordCollectionResponse.value = n.getCollectionOfObjectValues<WhoisRecord>(createWhoisRecordFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWindows365CustomerLockboxAuditRecord(windows365CustomerLockboxAuditRecord: Partial<Windows365CustomerLockboxAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(windows365CustomerLockboxAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWorkplaceAnalyticsAuditRecord(workplaceAnalyticsAuditRecord: Partial<WorkplaceAnalyticsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(workplaceAnalyticsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoYammerAuditRecord(yammerAuditRecord: Partial<YammerAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(yammerAuditRecord),
    }
}
export interface DetectionAction extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The alertTemplate property
     */
    alertTemplate?: AlertTemplate | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Groups to which the custom detection rule applies.
     */
    organizationalScope?: OrganizationalScope | null;
    /**
     * Actions taken on impacted assets as set in the custom detection rule.
     */
    responseActions?: ResponseAction[] | null;
}
export interface DetectionRule extends Parsable, ProtectionRule {
    /**
     * Complex type representing the actions taken when a detection is made by this rule.
     */
    detectionAction?: DetectionAction | null;
    /**
     * The ID of the detector that triggered the alert. Also see the 'detectorId' field in microsoft.graph.security.alert.
     */
    detectorId?: string | null;
    /**
     * Complex type holding details about the last run of this rule.
     */
    lastRunDetails?: RunDetails | null;
    /**
     * Complex type holding data about the advanced hunting query of this rule.
     */
    queryCondition?: QueryCondition | null;
    /**
     * Complex type holding data about the triggering schedule of this rule.
     */
    schedule?: RuleSchedule | null;
}
export interface DetectionRuleCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: DetectionRule[] | null;
}
export type DetectionSource = (typeof DetectionSourceObject)[keyof typeof DetectionSourceObject];
export type DetectionStatus = (typeof DetectionStatusObject)[keyof typeof DetectionStatusObject];
export interface DetonationChain extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * A list of all child nodes in the chain.
     */
    childNodes?: DetonationChain[] | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The value of the chain.
     */
    value?: string | null;
}
export interface DetonationDetails extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The time of detonation.
     */
    analysisDateTime?: Date | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The chain of detonation.
     */
    detonationChain?: DetonationChain | null;
    /**
     * All observables in the detonation tree.
     */
    detonationObservables?: DetonationObservables | null;
    /**
     * The verdict of the detonation.
     */
    detonationVerdict?: string | null;
    /**
     * The reason for the verdict of the detonation.
     */
    detonationVerdictReason?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface DetonationObservables extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The list of all contacted IPs in the detonation.
     */
    contactedIps?: string[] | null;
    /**
     * The list of all URLs found in the detonation.
     */
    contactedUrls?: string[] | null;
    /**
     * The list of all dropped files in the detonation.
     */
    droppedfiles?: string[] | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type DeviceAssetIdentifier = (typeof DeviceAssetIdentifierObject)[keyof typeof DeviceAssetIdentifierObject];
export interface DeviceEvidence extends AlertEvidence, Parsable {
    /**
     * A unique identifier assigned to a device by Microsoft Entra ID when device is Microsoft Entra joined.
     */
    azureAdDeviceId?: string | null;
    /**
     * State of the Defender AntiMalware engine. The possible values are: notReporting, disabled, notUpdated, updated, unknown, notSupported, unknownFutureValue.
     */
    defenderAvStatus?: DefenderAvStatus | null;
    /**
     * The fully qualified domain name (FQDN) for the device.
     */
    deviceDnsName?: string | null;
    /**
     * The date and time when the device was first seen.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The health state of the device. The possible values are: active, inactive, impairedCommunication, noSensorData, noSensorDataImpairedCommunication, unknown, unknownFutureValue.
     */
    healthStatus?: DeviceHealthStatus | null;
    /**
     * Ip interfaces of the device during the time of the alert.
     */
    ipInterfaces?: string[] | null;
    /**
     * The lastExternalIpAddress property
     */
    lastExternalIpAddress?: string | null;
    /**
     * The lastIpAddress property
     */
    lastIpAddress?: string | null;
    /**
     * Users that were logged on the machine during the time of the alert.
     */
    loggedOnUsers?: LoggedOnUser[] | null;
    /**
     * A unique identifier assigned to a device by Microsoft Defender for Endpoint.
     */
    mdeDeviceId?: string | null;
    /**
     * The status of the machine onboarding to Microsoft Defender for Endpoint. The possible values are: insufficientInfo, onboarded, canBeOnboarded, unsupported, unknownFutureValue.
     */
    onboardingStatus?: OnboardingStatus | null;
    /**
     * The build version for the operating system the device is running.
     */
    osBuild?: number | null;
    /**
     * The operating system platform the device is running.
     */
    osPlatform?: string | null;
    /**
     * The ID of the role-based access control device group.
     */
    rbacGroupId?: number | null;
    /**
     * The name of the role-based access control device group.
     */
    rbacGroupName?: string | null;
    /**
     * Risk score as evaluated by Microsoft Defender for Endpoint. The possible values are: none, informational, low, medium, high, unknownFutureValue.
     */
    riskScore?: DeviceRiskScore | null;
    /**
     * The version of the operating system platform.
     */
    version?: string | null;
    /**
     * Metadata of the virtual machine (VM) on which Microsoft Defender for Endpoint is running.
     */
    vmMetadata?: VmMetadata | null;
}
export type DeviceHealthStatus = (typeof DeviceHealthStatusObject)[keyof typeof DeviceHealthStatusObject];
export type DeviceIdEntityIdentifier = (typeof DeviceIdEntityIdentifierObject)[keyof typeof DeviceIdEntityIdentifierObject];
export type DeviceRiskScore = (typeof DeviceRiskScoreObject)[keyof typeof DeviceRiskScoreObject];
export interface Dictionary extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface DisableConsentRecord extends AuditData, Parsable {
}
export type DisableUserEntityIdentifier = (typeof DisableUserEntityIdentifierObject)[keyof typeof DisableUserEntityIdentifierObject];
export interface DisableUserResponseAction extends Parsable, ResponseAction {
    /**
     * The identifier property
     */
    identifier?: DisableUserEntityIdentifier[] | null;
}
export interface DiscoveryAuditRecord extends AuditData, Parsable {
}
export interface DispositionReviewStage extends Entity, Parsable {
    /**
     * Name representing each stage within a collection.
     */
    name?: string | null;
    /**
     * A collection of reviewers at each stage.
     */
    reviewersEmailAddresses?: string[] | null;
    /**
     * The unique sequence number for each stage of the disposition review.
     */
    stageNumber?: string | null;
}
export interface DispositionReviewStageCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: DispositionReviewStage[] | null;
}
export interface DlpEndpointAuditRecord extends AuditData, Parsable {
}
export interface DlpSensitiveInformationTypeCmdletRecord extends AuditData, Parsable {
}
export interface DlpSensitiveInformationTypeRulePackageCmdletRecord extends AuditData, Parsable {
}
export interface DnsEvidence extends AlertEvidence, Parsable {
    /**
     * The dnsServerIp property
     */
    dnsServerIp?: IpEvidence | null;
    /**
     * The domainName property
     */
    domainName?: string | null;
    /**
     * The hostIpAddress property
     */
    hostIpAddress?: IpEvidence | null;
    /**
     * The ipAddresses property
     */
    ipAddresses?: IpEvidence[] | null;
}
export interface DowngradeJustification extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Indicates whether the downgrade is or isn't justified.
     */
    isDowngradeJustified?: boolean | null;
    /**
     * Message that indicates why a downgrade is justified. The message appears in administrative logs.
     */
    justificationMessage?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface DownloadCertificateRecord extends AuditData, Parsable {
}
export interface Dynamics365BusinessCentralAuditRecord extends AuditData, Parsable {
}
export interface EdiscoveryAddToReviewSetOperation extends CaseOperation, Parsable {
    /**
     * eDiscovery review set to which items matching source collection query gets added.
     */
    reviewSet?: EdiscoveryReviewSet | null;
    /**
     * eDiscovery search that gets added to review set.
     */
    search?: EdiscoverySearch | null;
}
export interface EdiscoveryCase extends CaseEscaped, Parsable {
    /**
     * The user who closed the case.
     */
    closedBy?: IdentitySet | null;
    /**
     * The date and time when the case was closed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
     */
    closedDateTime?: Date | null;
    /**
     * Returns a list of case ediscoveryCustodian objects for this case.
     */
    custodians?: EdiscoveryCustodian[] | null;
    /**
     * The external case number for customer reference.
     */
    externalId?: string | null;
    /**
     * Returns a list of case eDiscoveryHoldPolicy objects for this case.
     */
    legalHolds?: EdiscoveryHoldPolicy[] | null;
    /**
     * Returns a list of case ediscoveryNoncustodialDataSource objects for this case.
     */
    noncustodialDataSources?: EdiscoveryNoncustodialDataSource[] | null;
    /**
     * Returns a list of case caseOperation objects for this case.
     */
    operations?: CaseOperation[] | null;
    /**
     * Returns a list of eDiscoveryReviewSet objects in the case.
     */
    reviewSets?: EdiscoveryReviewSet[] | null;
    /**
     * Returns a list of eDiscoverySearch objects associated with this case.
     */
    searches?: EdiscoverySearch[] | null;
    /**
     * Returns a list of eDIscoverySettings objects in the case.
     */
    settings?: EdiscoveryCaseSettings | null;
    /**
     * Returns a list of ediscoveryReviewTag objects associated to this case.
     */
    tags?: EdiscoveryReviewTag[] | null;
}
export interface EdiscoveryCaseCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EdiscoveryCase[] | null;
}
export interface EdiscoveryCaseSettings extends Entity, Parsable {
    /**
     * The OCR (Optical Character Recognition) settings for the case.
     */
    ocr?: OcrSettings | null;
    /**
     * The redundancy (near duplicate and email threading) detection settings for the case.
     */
    redundancyDetection?: RedundancyDetectionSettings | null;
    /**
     * The Topic Modeling (Themes) settings for the case.
     */
    topicModeling?: TopicModelingSettings | null;
}
export interface EdiscoveryCustodian extends DataSourceContainer, Parsable {
    /**
     * Date and time the custodian acknowledged a hold notification.
     */
    acknowledgedDateTime?: Date | null;
    /**
     * Email address of the custodian.
     */
    email?: string | null;
    /**
     * Operation entity that represents the latest indexing for the custodian.
     */
    lastIndexOperation?: EdiscoveryIndexOperation | null;
    /**
     * Data source entity for SharePoint sites associated with the custodian.
     */
    siteSources?: SiteSource[] | null;
    /**
     * Data source entity for groups associated with the custodian.
     */
    unifiedGroupSources?: UnifiedGroupSource[] | null;
    /**
     * Data source entity for a custodian. This is the container for a custodian's mailbox and OneDrive for Business site.
     */
    userSources?: UserSource[] | null;
}
export interface EdiscoveryCustodianCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EdiscoveryCustodian[] | null;
}
export interface EdiscoveryEstimateOperation extends CaseOperation, Parsable {
    /**
     * The estimated count of items for the search that matched the content query.
     */
    indexedItemCount?: number | null;
    /**
     * The estimated size of items for the search that matched the content query.
     */
    indexedItemsSize?: number | null;
    /**
     * The number of mailboxes that had search hits.
     */
    mailboxCount?: number | null;
    /**
     * eDiscovery search.
     */
    search?: EdiscoverySearch | null;
    /**
     * The number of mailboxes that had search hits.
     */
    siteCount?: number | null;
    /**
     * The estimated count of unindexed items for the collection.
     */
    unindexedItemCount?: number | null;
    /**
     * The estimated size of unindexed items for the collection.
     */
    unindexedItemsSize?: number | null;
}
export interface EdiscoveryExportOperation extends CaseOperation, Parsable {
    /**
     * The name of the Azure storage location where the export is stored. This only applies to exports stored in your own Azure storage location. The azureBlobContainer property is deprecated and will stop returning data on April 30th, 2023.
     */
    azureBlobContainer?: string | null;
    /**
     * The SAS token for the Azure storage location.  This only applies to exports stored in your own Azure storage location. The azureBlobToken property is deprecated and will stop returning data on April 30, 2023.
     */
    azureBlobToken?: string | null;
    /**
     * The description provided for the export.
     */
    description?: string | null;
    /**
     * Contains the properties for an export file metadata, including downloadUrl, fileName, and size. If you export to an Azure storage location, this property returns empty.
     */
    exportFileMetadata?: ExportFileMetadata[] | null;
    /**
     * The options provided for the export. For more information, see reviewSet: export. Possible values are: originalFiles, text, pdfReplacement, fileInfo, tags. The fileInfo member is deprecated and will stop returning data on April 30, 2023. Going forward, the summary and load file are always included.
     */
    exportOptions?: ExportOptions[] | null;
    /**
     * The options provided that specify the structure of the export. For more information, see reviewSet: export. Possible values are: none, directory, pst.
     */
    exportStructure?: ExportFileStructure | null;
    /**
     * The output folder ID. The outputFolderId property is deprecated and will stop returning data on April 30, 2023.
     */
    outputFolderId?: string | null;
    /**
     * The name provided for the export.
     */
    outputName?: string | null;
    /**
     * Review set from where documents are exported.
     */
    reviewSet?: EdiscoveryReviewSet | null;
    /**
     * The review set query that is used to filter the documents for export.
     */
    reviewSetQuery?: EdiscoveryReviewSetQuery | null;
}
export interface EdiscoveryFile extends File, Parsable {
    /**
     * Custodians associated with the file.
     */
    custodian?: EdiscoveryCustodian | null;
    /**
     * Tags associated with the file.
     */
    tags?: EdiscoveryReviewTag[] | null;
}
export interface EdiscoveryFileCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EdiscoveryFile[] | null;
}
export interface EdiscoveryHoldOperation extends CaseOperation, Parsable {
}
export interface EdiscoveryHoldPolicy extends Parsable, PolicyBase {
    /**
     * KQL query that specifies content to be held in the specified locations. To learn more, see Keyword queries and search conditions for Content Search and eDiscovery.  To hold all content in the specified locations, leave contentQuery blank.
     */
    contentQuery?: string | null;
    /**
     * Lists any errors that happened while placing the hold.
     */
    errors?: string[] | null;
    /**
     * Indicates whether the hold is enabled and actively holding content.
     */
    isEnabled?: boolean | null;
    /**
     * Data sources that represent SharePoint sites.
     */
    siteSources?: SiteSource[] | null;
    /**
     * Data sources that represent Exchange mailboxes.
     */
    userSources?: UserSource[] | null;
}
export interface EdiscoveryHoldPolicyCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EdiscoveryHoldPolicy[] | null;
}
export interface EdiscoveryIndexOperation extends CaseOperation, Parsable {
}
export interface EdiscoveryNoncustodialDataSource extends DataSourceContainer, Parsable {
    /**
     * User source or SharePoint site data source as non-custodial data source.
     */
    dataSource?: DataSource | null;
    /**
     * Operation entity that represents the latest indexing for the non-custodial data source.
     */
    lastIndexOperation?: EdiscoveryIndexOperation | null;
}
export interface EdiscoveryNoncustodialDataSourceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EdiscoveryNoncustodialDataSource[] | null;
}
export interface EdiscoveryPurgeDataOperation extends CaseOperation, Parsable {
}
export interface EdiscoveryReviewSet extends DataSet, Parsable {
    /**
     * Represents files within the review set.
     */
    files?: EdiscoveryFile[] | null;
    /**
     * Represents queries within the review set.
     */
    queries?: EdiscoveryReviewSetQuery[] | null;
}
export interface EdiscoveryReviewSetCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EdiscoveryReviewSet[] | null;
}
export interface EdiscoveryReviewSetQuery extends Parsable, Search {
}
export interface EdiscoveryReviewSetQueryCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EdiscoveryReviewSetQuery[] | null;
}
export interface EdiscoveryReviewTag extends Parsable, Tag {
    /**
     * Indicates whether a single or multiple child tags can be associated with a document. Possible values are: One, Many.  This value controls whether the UX presents the tags as checkboxes or a radio button group.
     */
    childSelectability?: ChildSelectability | null;
    /**
     * Returns the tags that are a child of a tag.
     */
    childTags?: EdiscoveryReviewTag[] | null;
    /**
     * Returns the parent tag of the specified tag.
     */
    parent?: EdiscoveryReviewTag | null;
}
export interface EdiscoveryReviewTagCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EdiscoveryReviewTag[] | null;
}
export interface EdiscoverySearch extends Parsable, Search {
    /**
     * Adds an additional source to the eDiscovery search.
     */
    additionalSources?: DataSource[] | null;
    /**
     * Adds the results of the eDiscovery search to the specified reviewSet.
     */
    addToReviewSetOperation?: EdiscoveryAddToReviewSetOperation | null;
    /**
     * Custodian sources that are included in the eDiscovery search.
     */
    custodianSources?: DataSource[] | null;
    /**
     * When specified, the collection spans across a service for an entire workload. Possible values are: none, allTenantMailboxes, allTenantSites, allCaseCustodians, allCaseNoncustodialDataSources.
     */
    dataSourceScopes?: DataSourceScopes[] | null;
    /**
     * The last estimate operation associated with the eDiscovery search.
     */
    lastEstimateStatisticsOperation?: EdiscoveryEstimateOperation | null;
    /**
     * noncustodialDataSource sources that are included in the eDiscovery search
     */
    noncustodialSources?: EdiscoveryNoncustodialDataSource[] | null;
}
export interface EdiscoverySearchCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EdiscoverySearch[] | null;
}
export interface EdiscoverySearchExportOperation extends CaseOperation, Parsable {
    /**
     * The additional items to include in the export. The possible values are: none, teamsAndYammerConversations, cloudAttachments, allDocumentVersions, subfolderContents, listAttachments, unknownFutureValue.
     */
    additionalOptions?: AdditionalOptions[] | null;
    /**
     * The name of export provided by the user.
     */
    description?: string | null;
    /**
     * The description of the export by the user.
     */
    displayName?: string | null;
    /**
     * Items to be included in the export. The possible values are: searchHits, partiallyIndexed, unknownFutureValue.
     */
    exportCriteria?: ExportCriteria[] | null;
    /**
     * Contains the properties for an export file metadata, including downloadUrl, fileName, and size.
     */
    exportFileMetadata?: ExportFileMetadata[] | null;
    /**
     * Format of the emails of the export. The possible values are: pst, msg, eml, unknownFutureValue.
     */
    exportFormat?: ExportFormat | null;
    /**
     * Location scope for partially indexed items. You can choose to include partially indexed items only in responsive locations with search hits or in all targeted locations. The possible values are: responsiveLocations, nonresponsiveLocations, unknownFutureValue.
     */
    exportLocation?: ExportLocation[] | null;
    /**
     * Indicates whether to export single items.
     */
    exportSingleItems?: boolean | null;
    /**
     * The eDiscovery searches under each case.
     */
    search?: EdiscoverySearch | null;
}
export interface EdiscoveryTagOperation extends CaseOperation, Parsable {
}
export interface EmailContentThreatSubmission extends EmailThreatSubmission, Parsable {
    /**
     * Base64 encoded file content.
     */
    fileContent?: string | null;
}
export type EmailEntityIdentifier = (typeof EmailEntityIdentifierObject)[keyof typeof EmailEntityIdentifierObject];
export interface EmailSender extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name of the sender.
     */
    displayName?: string | null;
    /**
     * Sender domain.
     */
    domainName?: string | null;
    /**
     * Sender email address.
     */
    emailAddress?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface EmailThreatSubmission extends Parsable, ThreatSubmission {
    /**
     * If the email is phishing simulation, this field won't be null.
     */
    attackSimulationInfo?: AttackSimulationInfo | null;
    /**
     * Specifies the internet message ID of the email being submitted. This information is present in the email header.
     */
    internetMessageId?: string | null;
    /**
     * The original category of the submission. The possible values are: notJunk, spam, phishing, malware and unkownFutureValue.
     */
    originalCategory?: SubmissionCategory | null;
    /**
     * Specifies the date and time stamp when the email was received.
     */
    receivedDateTime?: Date | null;
    /**
     * Specifies the email address (in smtp format) of the recipient who received the email.
     */
    recipientEmailAddress?: string | null;
    /**
     * Specifies the email address of the sender.
     */
    sender?: string | null;
    /**
     * Specifies the IP address of the sender.
     */
    senderIP?: string | null;
    /**
     * Specifies the subject of the email.
     */
    subject?: string | null;
    /**
     * It's used to automatically add allows for the components such as URL, file, sender; which are deemed bad by Microsoft so that similar messages in the future can be allowed.
     */
    tenantAllowOrBlockListAction?: TenantAllowOrBlockListAction | null;
}
export interface EmailThreatSubmissionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EmailThreatSubmission[] | null;
}
export interface EmailThreatSubmissionPolicy extends Entity, Parsable {
    /**
     * Specifies the email address of the sender from which email notifications will be sent to end users to inform them whether an email is spam, phish or clean. The default value is null. Optional for creation.
     */
    customizedNotificationSenderEmailAddress?: string | null;
    /**
     * Specifies the destination where the reported messages from end users land whenever they report something as phish, junk or not junk. The default value is null. Optional for creation.
     */
    customizedReportRecipientEmailAddress?: string | null;
    /**
     * Indicates whether end users can report a message as spam, phish or junk directly without a confirmation(popup). The default value is true.  Optional for creation.
     */
    isAlwaysReportEnabledForUsers?: boolean | null;
    /**
     * Indicates whether end users can confirm using a popup before reporting messages as spam, phish or not junk. The default value is true.  Optional for creation.
     */
    isAskMeEnabledForUsers?: boolean | null;
    /**
     * Indicates whether the email notifications sent to end users to inform them if an email is a phish mail, spam or junk is customized or not. The default value is false. Optional for creation.
     */
    isCustomizedMessageEnabled?: boolean | null;
    /**
     * If enabled, customized message only shows when email is reported as phishing. The default value is false. Optional for creation.
     */
    isCustomizedMessageEnabledForPhishing?: boolean | null;
    /**
     * Indicates whether to use the sender email address set using customizedNotificationSenderEmailAddress for sending email notifications to end users. The default value is false. Optional for creation.
     */
    isCustomizedNotificationSenderEnabled?: boolean | null;
    /**
     * Indicates whether end users can move the message from one folder to another based on the action of spam, phish or not junk without actually reporting it. The default value is true. Optional for creation.
     */
    isNeverReportEnabledForUsers?: boolean | null;
    /**
     * Indicates whether the branding logo should be used in the email notifications sent to end users. The default value is false. Optional for creation.
     */
    isOrganizationBrandingEnabled?: boolean | null;
    /**
     * Indicates whether end users can submit from the quarantine page. The default value is true. Optional for creation.
     */
    isReportFromQuarantineEnabled?: boolean | null;
    /**
     * Indicates whether emails reported by end users should be sent to the custom mailbox configured using customizedReportRecipientEmailAddress.  The default value is false. Optional for creation.
     */
    isReportToCustomizedEmailAddressEnabled?: boolean | null;
    /**
     * If enabled, the email is sent to Microsoft for analysis. The default value is false. Required for creation.
     */
    isReportToMicrosoftEnabled?: boolean | null;
    /**
     * Indicates whether an email notification is sent to the end user who reported the email when it has been reviewed by the admin. The default value is false. Optional for creation.
     */
    isReviewEmailNotificationEnabled?: boolean | null;
}
export interface EmailThreatSubmissionPolicyCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EmailThreatSubmissionPolicy[] | null;
}
export interface EmailUrlThreatSubmission extends EmailThreatSubmission, Parsable {
    /**
     * Specifies the url of the message to be submitted.
     */
    messageUrl?: string | null;
}
export interface EnableConsentRecord extends AuditData, Parsable {
}
export interface EpicSMSLinkRecord extends AuditData, Parsable {
}
export interface EpicSMSSettingsUpdateRecord extends AuditData, Parsable {
}
export interface EpicSMSUnlinkRecord extends AuditData, Parsable {
}
export interface EventPropagationResult extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name of the specific location in the workload associated with the event.
     */
    location?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The name of the workload associated with the event.
     */
    serviceName?: string | null;
    /**
     * Indicates the status of the event creation request. The possible values are: none, inProcessing, failed, success.
     */
    status?: EventPropagationStatus | null;
    /**
     * Additional information about the status of the event creation request.
     */
    statusInformation?: string | null;
}
export type EventPropagationStatus = (typeof EventPropagationStatusObject)[keyof typeof EventPropagationStatusObject];
export interface EventQuery extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Represents unique identification for the  query. 'Asset ID' for SharePoint Online and OneDrive for Business, 'keywords' for Exchange Online.
     */
    query?: string | null;
    /**
     * Represents the type of query associated with an event. 'files' for SPO and ODB and 'messages' for EXO.The possible values are: files, messages, unknownFutureValue.
     */
    queryType?: QueryType | null;
}
export type EventStatusType = (typeof EventStatusTypeObject)[keyof typeof EventStatusTypeObject];
export type EvidenceRemediationStatus = (typeof EvidenceRemediationStatusObject)[keyof typeof EvidenceRemediationStatusObject];
export type EvidenceRole = (typeof EvidenceRoleObject)[keyof typeof EvidenceRoleObject];
export type EvidenceVerdict = (typeof EvidenceVerdictObject)[keyof typeof EvidenceVerdictObject];
export interface ExchangeAdminAuditRecord extends AuditData, Parsable {
}
export interface ExchangeAggregatedMailboxAuditRecord extends AuditData, Parsable {
}
export interface ExchangeAggregatedOperationRecord extends AuditData, Parsable {
}
export interface ExchangeMailboxAuditBaseRecord extends AuditData, Parsable {
}
export interface ExchangeMailboxAuditGroupRecord extends AuditData, Parsable {
}
export interface ExchangeMailboxAuditRecord extends AuditData, Parsable {
}
export type ExportCriteria = (typeof ExportCriteriaObject)[keyof typeof ExportCriteriaObject];
export interface ExportFileMetadata extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The downloadUrl property
     */
    downloadUrl?: string | null;
    /**
     * The fileName property
     */
    fileName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The size property
     */
    size?: number | null;
}
export type ExportFileStructure = (typeof ExportFileStructureObject)[keyof typeof ExportFileStructureObject];
export type ExportFormat = (typeof ExportFormatObject)[keyof typeof ExportFormatObject];
export type ExportLocation = (typeof ExportLocationObject)[keyof typeof ExportLocationObject];
export type ExportOptions = (typeof ExportOptionsObject)[keyof typeof ExportOptionsObject];
export interface FhirBaseUrlAddRecord extends AuditData, Parsable {
}
export interface FhirBaseUrlApproveRecord extends AuditData, Parsable {
}
export interface FhirBaseUrlDeleteRecord extends AuditData, Parsable {
}
export interface FhirBaseUrlUpdateRecord extends AuditData, Parsable {
}
export interface File extends Entity, Parsable {
    /**
     * The content property
     */
    content?: String | null;
    /**
     * The dateTime property
     */
    dateTime?: Date | null;
    /**
     * The extension property
     */
    extension?: string | null;
    /**
     * The extractedTextContent property
     */
    extractedTextContent?: String | null;
    /**
     * The mediaType property
     */
    mediaType?: string | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The otherProperties property
     */
    otherProperties?: StringValueDictionary | null;
    /**
     * The processingStatus property
     */
    processingStatus?: FileProcessingStatus | null;
    /**
     * The senderOrAuthors property
     */
    senderOrAuthors?: string[] | null;
    /**
     * The size property
     */
    size?: number | null;
    /**
     * The sourceType property
     */
    sourceType?: SourceType[] | null;
    /**
     * The subjectTitle property
     */
    subjectTitle?: string | null;
}
export interface FileContentThreatSubmission extends FileThreatSubmission, Parsable {
    /**
     * It specifies the file content in base 64 format.
     */
    fileContent?: string | null;
}
export interface FileDetails extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name of the file.
     */
    fileName?: string | null;
    /**
     * The file path (location) of the file instance.
     */
    filePath?: string | null;
    /**
     * The publisher of the file.
     */
    filePublisher?: string | null;
    /**
     * The size of the file in bytes.
     */
    fileSize?: number | null;
    /**
     * The certificate authority (CA) that issued the certificate.
     */
    issuer?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The Sha1 cryptographic hash of the file content.
     */
    sha1?: string | null;
    /**
     * The Sha256 cryptographic hash of the file content.
     */
    sha256?: string | null;
    /**
     * The signer of the signed file.
     */
    signer?: string | null;
}
export type FileEntityIdentifier = (typeof FileEntityIdentifierObject)[keyof typeof FileEntityIdentifierObject];
export interface FileEvidence extends AlertEvidence, Parsable {
    /**
     * The status of the detection.The possible values are: detected, blocked, prevented, unknownFutureValue.
     */
    detectionStatus?: DetectionStatus | null;
    /**
     * The file details.
     */
    fileDetails?: FileDetails | null;
    /**
     * A unique identifier assigned to a device by Microsoft Defender for Endpoint.
     */
    mdeDeviceId?: string | null;
}
export interface FileHash extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The algorithm property
     */
    algorithm?: FileHashAlgorithm | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The hash value.
     */
    value?: string | null;
}
export type FileHashAlgorithm = (typeof FileHashAlgorithmObject)[keyof typeof FileHashAlgorithmObject];
export interface FileHashEvidence extends AlertEvidence, Parsable {
    /**
     * The algorithm property
     */
    algorithm?: FileHashAlgorithm | null;
    /**
     * The value property
     */
    value?: string | null;
}
export interface FilePlanAppliedCategory extends FilePlanDescriptorBase, Parsable {
    /**
     * Represents the file plan descriptor for a subcategory under a specific category, which has been assigned to a particular retention label.
     */
    subcategory?: FilePlanSubcategory | null;
}
export interface FilePlanAuthority extends FilePlanDescriptorBase, Parsable {
}
export interface FilePlanCitation extends FilePlanDescriptorBase, Parsable {
    /**
     * Represents the jurisdiction or agency that published the filePlanCitation.
     */
    citationJurisdiction?: string | null;
    /**
     * Represents the URL to the published filePlanCitation.
     */
    citationUrl?: string | null;
}
export interface FilePlanDepartment extends FilePlanDescriptorBase, Parsable {
}
export interface FilePlanDescriptor extends Entity, Parsable {
    /**
     * Represents the file plan descriptor of type authority applied to a particular retention label.
     */
    authority?: FilePlanAuthority | null;
    /**
     * Specifies the underlying authority that describes the type of content to be retained and its retention schedule.
     */
    authorityTemplate?: AuthorityTemplate | null;
    /**
     * Represents the file plan descriptor of type category applied to a particular retention label.
     */
    category?: FilePlanAppliedCategory | null;
    /**
     * Specifies a group of similar types of content in a particular department.
     */
    categoryTemplate?: CategoryTemplate | null;
    /**
     * Represents the file plan descriptor of type citation applied to a particular retention label.
     */
    citation?: FilePlanCitation | null;
    /**
     * The specific rule or regulation created by a jurisdiction used to determine whether certain labels and content should be retained or deleted.
     */
    citationTemplate?: CitationTemplate | null;
    /**
     * Represents the file plan descriptor of type department applied to a particular retention label.
     */
    department?: FilePlanDepartment | null;
    /**
     * Specifies the  department or business unit of an organization to which a label belongs.
     */
    departmentTemplate?: DepartmentTemplate | null;
    /**
     * Represents the file plan descriptor of type filePlanReference applied to a particular retention label.
     */
    filePlanReference?: FilePlanReference | null;
    /**
     * Specifies a unique alpha-numeric identifier for an organization’s retention schedule.
     */
    filePlanReferenceTemplate?: FilePlanReferenceTemplate | null;
}
export interface FilePlanDescriptorBase extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Unique string that defines the name for the file plan descriptor associated with a particular retention label.
     */
    displayName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface FilePlanDescriptorTemplate extends Entity, Parsable {
    /**
     * Represents the user who created the filePlanDescriptorTemplate column. Read-only.
     */
    createdBy?: IdentitySet | null;
    /**
     * Represents the date and time in which the filePlanDescriptorTemplate is created. Read-only.
     */
    createdDateTime?: Date | null;
    /**
     * Unique string that defines a filePlanDescriptorTemplate name.
     */
    displayName?: string | null;
}
export interface FilePlanReference extends FilePlanDescriptorBase, Parsable {
}
export interface FilePlanReferenceTemplate extends FilePlanDescriptorTemplate, Parsable {
}
export interface FilePlanReferenceTemplateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: FilePlanReferenceTemplate[] | null;
}
export interface FilePlanSubcategory extends FilePlanDescriptorBase, Parsable {
}
export type FileProcessingStatus = (typeof FileProcessingStatusObject)[keyof typeof FileProcessingStatusObject];
export interface FileThreatSubmission extends Parsable, ThreatSubmission {
    /**
     * It specifies the file name to be submitted.
     */
    fileName?: string | null;
}
export interface FileThreatSubmissionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: FileThreatSubmission[] | null;
}
export interface FileUrlThreatSubmission extends FileThreatSubmission, Parsable {
    /**
     * It specifies the URL of the file that needs to be submitted.
     */
    fileUrl?: string | null;
}
export type ForceUserPasswordResetEntityIdentifier = (typeof ForceUserPasswordResetEntityIdentifierObject)[keyof typeof ForceUserPasswordResetEntityIdentifierObject];
export interface ForceUserPasswordResetResponseAction extends Parsable, ResponseAction {
    /**
     * The identifier property
     */
    identifier?: ForceUserPasswordResetEntityIdentifier[] | null;
}
export interface FormattedContent extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The content of this formattedContent.
     */
    content?: string | null;
    /**
     * The format of the content. The possible values are: text, html, markdown, unknownFutureValue.
     */
    format?: ContentFormat | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface GeoLocation extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The city property
     */
    city?: string | null;
    /**
     * The countryName property
     */
    countryName?: string | null;
    /**
     * The latitude property
     */
    latitude?: number | null;
    /**
     * The longitude property
     */
    longitude?: number | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The state property
     */
    state?: string | null;
}
export interface GitHubOrganizationEvidence extends AlertEvidence, Parsable {
    /**
     * The company property
     */
    company?: string | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The login property
     */
    login?: string | null;
    /**
     * The orgId property
     */
    orgId?: string | null;
    /**
     * The webUrl property
     */
    webUrl?: string | null;
}
export interface GitHubRepoEvidence extends AlertEvidence, Parsable {
    /**
     * The baseUrl property
     */
    baseUrl?: string | null;
    /**
     * The login property
     */
    login?: string | null;
    /**
     * The owner property
     */
    owner?: string | null;
    /**
     * The ownerType property
     */
    ownerType?: string | null;
    /**
     * The repoId property
     */
    repoId?: string | null;
}
export interface GitHubUserEvidence extends AlertEvidence, Parsable {
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The login property
     */
    login?: string | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The userId property
     */
    userId?: string | null;
    /**
     * The webUrl property
     */
    webUrl?: string | null;
}
export type GoogleCloudLocationType = (typeof GoogleCloudLocationTypeObject)[keyof typeof GoogleCloudLocationTypeObject];
export interface GoogleCloudResourceEvidence extends AlertEvidence, Parsable {
    /**
     * The fullResourceName property
     */
    fullResourceName?: string | null;
    /**
     * The zone or region where the resource is located.
     */
    location?: string | null;
    /**
     * The type of location. Possible values are: unknown, regional, zonal, global, unknownFutureValue.
     */
    locationType?: GoogleCloudLocationType | null;
    /**
     * The Google project ID as defined by the user.
     */
    projectId?: string | null;
    /**
     * The project number assigned by Google.
     */
    projectNumber?: number | null;
    /**
     * The name of the resource.
     */
    resourceName?: string | null;
    /**
     * The type of the resource.
     */
    resourceType?: string | null;
}
export interface HardDeleteResponseAction extends Parsable, ResponseAction {
    /**
     * The identifier property
     */
    identifier?: EmailEntityIdentifier[] | null;
}
export interface HealthcareSignalRecord extends AuditData, Parsable {
}
export interface HealthIssue extends Entity, Parsable {
    /**
     * Contains additional information about the issue, such as a list of items to fix.
     */
    additionalInformation?: string[] | null;
    /**
     * The date and time when the health issue was generated. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    createdDateTime?: Date | null;
    /**
     * Contains more detailed information about the health issue.
     */
    description?: string | null;
    /**
     * The display name of the health issue.
     */
    displayName?: string | null;
    /**
     * A list of the fully qualified domain names of the domains or the sensors the health issue is related to.
     */
    domainNames?: string[] | null;
    /**
     * The type of the health issue. The possible values are: sensor, global, unknownFutureValue. For a list of all health issues and their identifiers, see Microsoft Defender for Identity health issues.
     */
    healthIssueType?: HealthIssueType | null;
    /**
     * The type identifier of the health issue. For a list of all health issues and their identifiers, see Microsoft Defender for Identity health issues.
     */
    issueTypeId?: string | null;
    /**
     * The date and time when the health issue was last updated. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastModifiedDateTime?: Date | null;
    /**
     * A list of recommended actions that can be taken to resolve the issue effectively and efficiently. These actions might include instructions for further investigation and aren't limited to prewritten responses.
     */
    recommendations?: string[] | null;
    /**
     * A list of commands from the PowerShell module for the product that can be used to resolve the issue, if available. If no commands can be used to solve the issue, this property is empty. The commands, if present, provide a quick and efficient way to address the issue. These commands run in sequence for the single recommended fix.
     */
    recommendedActionCommands?: string[] | null;
    /**
     * A list of the DNS names of the sensors the health issue is related to.
     */
    sensorDNSNames?: string[] | null;
    /**
     * The severity of the health issue. The possible values are: low, medium, high, unknownFutureValue.
     */
    severity?: HealthIssueSeverity | null;
    /**
     * The status of the health issue. The possible values are: open, closed, suppressed, unknownFutureValue.
     */
    status?: HealthIssueStatus | null;
}
export interface HealthIssueCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: HealthIssue[] | null;
}
export type HealthIssueSeverity = (typeof HealthIssueSeverityObject)[keyof typeof HealthIssueSeverityObject];
export type HealthIssueStatus = (typeof HealthIssueStatusObject)[keyof typeof HealthIssueStatusObject];
export type HealthIssueType = (typeof HealthIssueTypeObject)[keyof typeof HealthIssueTypeObject];
export interface Host extends Artifact, Parsable {
    /**
     * The hostPairs that are resources associated with a host, where that host is the parentHost and has an outgoing pairing to a cihldHost.
     */
    childHostPairs?: HostPair[] | null;
    /**
     * The hostComponents that are associated with this host.
     */
    components?: HostComponent[] | null;
    /**
     * The hostCookies that are associated with this host.
     */
    cookies?: HostCookie[] | null;
    /**
     * The first date and time when this host was observed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The hostPairs that are associated with this host, where this host is either the parentHost or childHost.
     */
    hostPairs?: HostPair[] | null;
    /**
     * The most recent date and time when this host was observed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The hostPairs that are associated with a host, where that host is the childHost and has an incoming pairing with a parentHost.
     */
    parentHostPairs?: HostPair[] | null;
    /**
     * Passive DNS retrieval about this host.
     */
    passiveDns?: PassiveDnsRecord[] | null;
    /**
     * Reverse passive DNS retrieval about this host.
     */
    passiveDnsReverse?: PassiveDnsRecord[] | null;
    /**
     * The hostPorts associated with a host.
     */
    ports?: HostPort[] | null;
    /**
     * Represents a calculated reputation of this host.
     */
    reputation?: HostReputation | null;
    /**
     * The hostSslCertificates that are associated with this host.
     */
    sslCertificates?: HostSslCertificate[] | null;
    /**
     * The subdomains that are associated with this host.
     */
    subdomains?: Subdomain[] | null;
    /**
     * The hostTrackers that are associated with this host.
     */
    trackers?: HostTracker[] | null;
    /**
     * The most recent whoisRecord for this host.
     */
    whois?: WhoisRecord | null;
}
export interface HostCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Host[] | null;
}
export interface HostComponent extends Artifact, Parsable {
    /**
     * The type of component that was detected (for example, Operating System, Framework, Remote Access, or Server).
     */
    category?: string | null;
    /**
     * The first date and time when this web component was observed by Microsoft Defender Threat Intelligence. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The host property
     */
    host?: Host | null;
    /**
     * The most recent date and time when this web component was observed by Microsoft Defender Threat Intelligence. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * A name running on the artifact, for example, Microsoft IIS.
     */
    name?: string | null;
    /**
     * The component version running on the artifact, for example, v8.5. This shouldn't be assumed to be strictly numerical.
     */
    version?: string | null;
}
export interface HostComponentCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: HostComponent[] | null;
}
export interface HostCookie extends Artifact, Parsable {
    /**
     * The URI for which the cookie is valid.
     */
    domain?: string | null;
    /**
     * The first date and time when this hostCookie was observed by Microsoft Defender Threat Intelligence. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The host property
     */
    host?: Host | null;
    /**
     * The most recent date and time when this hostCookie was observed by Microsoft Defender Threat Intelligence. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The name of the cookie, for example, JSESSIONID or SEARCH_NAMESITE.
     */
    name?: string | null;
}
export interface HostCookieCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: HostCookie[] | null;
}
export interface HostedRpaAuditRecord extends AuditData, Parsable {
}
export interface HostLogonSessionEvidence extends AlertEvidence, Parsable {
    /**
     * The account property
     */
    account?: UserEvidence | null;
    /**
     * The endUtcDateTime property
     */
    endUtcDateTime?: Date | null;
    /**
     * The host property
     */
    host?: DeviceEvidence | null;
    /**
     * The sessionId property
     */
    sessionId?: string | null;
    /**
     * The startUtcDateTime property
     */
    startUtcDateTime?: Date | null;
}
export interface Hostname extends Host, Parsable {
    /**
     * The company or individual who registered this hostname, from WHOIS data.
     */
    registrant?: string | null;
    /**
     * The registrar for this hostname, from WHOIS data.
     */
    registrar?: string | null;
}
export interface HostPair extends Entity, Parsable {
    /**
     * The childHost property
     */
    childHost?: Host | null;
    /**
     * The first date and time when Microsoft Defender Threat Intelligence observed the hostPair. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The last date and time when Microsoft Defender Threat Intelligence observed the hostPair. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The reason that two hosts are identified as hostPair.
     */
    linkKind?: string | null;
    /**
     * The parentHost property
     */
    parentHost?: Host | null;
}
export interface HostPairCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: HostPair[] | null;
}
export interface HostPort extends Entity, Parsable {
    /**
     * The hostPortBanners retrieved from scanning the port.
     */
    banners?: HostPortBanner[] | null;
    /**
     * The first date and time when Microsoft Defender Threat Intelligence observed the hostPort. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The host property
     */
    host?: Host | null;
    /**
     * The last date and time when Microsoft Defender Threat Intelligence scanned the hostPort. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    lastScanDateTime?: Date | null;
    /**
     * The last date and time when Microsoft Defender Threat Intelligence observed the hostPort. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The most recent sslCertificate used to communicate on the port.
     */
    mostRecentSslCertificate?: SslCertificate | null;
    /**
     * The numerical identifier of the port which is standardized across the internet.
     */
    port?: number | null;
    /**
     * The general protocol used to scan the port. The possible values are: tcp, udp, unknownFutureValue.
     */
    protocol?: HostPortProtocol | null;
    /**
     * The hostPortComponents retrieved from scanning the port.
     */
    services?: HostPortComponent[] | null;
    /**
     * The status of the port. The possible values are: open, filtered, closed, unknownFutureValue.
     */
    status?: HostPortStatus | null;
    /**
     * The total amount of times that Microsoft Defender Threat Intelligence has observed the hostPort in all its scans.
     */
    timesObserved?: number | null;
}
export interface HostPortBanner extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The text response received from a web component when scanning a hostPort.
     */
    banner?: string | null;
    /**
     * The first date and time when Microsoft Defender Threat Intelligence observed the hostPortBanner. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The last date and time when Microsoft Defender Threat Intelligence observed the hostPortBanner. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The specific protocol used to scan the hostPort.
     */
    scanProtocol?: string | null;
    /**
     * The total amount of times that Microsoft Defender Threat Intelligence has observed the hostPortBanner in all its scans.
     */
    timesObserved?: number | null;
}
export interface HostPortCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: HostPort[] | null;
}
export interface HostPortComponent extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The component property
     */
    component?: HostComponent | null;
    /**
     * The first date and time when Microsoft Defender Threat Intelligence observed the hostPortComponent. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * Indicates whether this hostPortComponent is recent, which is determined by whether the hostPortComponent was observed either at the same time or after the latest hostPortBanner in the scan history, or within two days of the latest scan of the hostPort when there are no hostPortBanners in the scan history.
     */
    isRecent?: boolean | null;
    /**
     * The last date and time when Microsoft Defender Threat Intelligence observed the hostPortComponent. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type HostPortProtocol = (typeof HostPortProtocolObject)[keyof typeof HostPortProtocolObject];
export type HostPortStatus = (typeof HostPortStatusObject)[keyof typeof HostPortStatusObject];
export interface HostReputation extends Entity, Parsable {
    /**
     * The classification property
     */
    classification?: HostReputationClassification | null;
    /**
     * A collection of rules that have been used to calculate the classification and score.
     */
    rules?: HostReputationRule[] | null;
    /**
     * The calculated score (0-100) of the requested host. A higher value indicates that this host is more likely to be suspicious or malicious.
     */
    score?: number | null;
}
export type HostReputationClassification = (typeof HostReputationClassificationObject)[keyof typeof HostReputationClassificationObject];
export interface HostReputationRule extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The description of the rule that gives more context.
     */
    description?: string | null;
    /**
     * The name of the rule.
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Link to a web page with details related to this rule.
     */
    relatedDetailsUrl?: string | null;
    /**
     * The severity property
     */
    severity?: HostReputationRuleSeverity | null;
}
export type HostReputationRuleSeverity = (typeof HostReputationRuleSeverityObject)[keyof typeof HostReputationRuleSeverityObject];
export interface HostSslCertificate extends Artifact, Parsable {
    /**
     * The first date and time that this hostSslCertificate was observed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The host for this hostSslCertificate.
     */
    host?: Host | null;
    /**
     * The most recent date and time that this hostSslCertificate was observed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The ports related with this hostSslCertificate.
     */
    ports?: HostSslCertificatePort[] | null;
    /**
     * The sslCertificate for this hostSslCertificate.
     */
    sslCertificate?: SslCertificate | null;
}
export interface HostSslCertificateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: HostSslCertificate[] | null;
}
export interface HostSslCertificatePort extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The first date and time that this port was observed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The most recent date and time that this port was observed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The port number.
     */
    port?: number | null;
}
export interface HostTracker extends Artifact, Parsable {
    /**
     * The first date and time when this hostTracker was observed by Microsoft Defender Threat Intelligence. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The host property
     */
    host?: Host | null;
    /**
     * The kind of hostTracker that was detected. For example, GoogleAnalyticsID or JarmHash.
     */
    kind?: string | null;
    /**
     * The most recent date and time when this hostTracker was observed by Microsoft Defender Threat Intelligence. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The identification value for the hostTracker.
     */
    value?: string | null;
}
export interface HostTrackerCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: HostTracker[] | null;
}
export interface HrSignalAuditRecord extends AuditData, Parsable {
}
export interface HuntingQueryResults extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The results of the hunting query.
     */
    results?: HuntingRowResult[] | null;
    /**
     * The schema for the response.
     */
    schema?: SinglePropertySchema[] | null;
}
export interface HuntingRowResult extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type HuntingRuleErrorCode = (typeof HuntingRuleErrorCodeObject)[keyof typeof HuntingRuleErrorCodeObject];
export type HuntingRuleRunStatus = (typeof HuntingRuleRunStatusObject)[keyof typeof HuntingRuleRunStatusObject];
export interface HygieneEventRecord extends AuditData, Parsable {
}
export interface Hyperlink extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name for this hyperlink.
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The URL for this hyperlink.
     */
    url?: string | null;
}
export interface IdentityContainer extends Entity, Parsable {
    /**
     * Represents potential issues within a customer's Microsoft Defender for Identity configuration that Microsoft Defender for Identity identified.
     */
    healthIssues?: HealthIssue[] | null;
    /**
     * Represents a customer's Microsoft Defender for Identity sensors.
     */
    sensors?: Sensor[] | null;
}
export interface ImpactedAsset extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface ImpactedDeviceAsset extends ImpactedAsset, Parsable {
    /**
     * The identifier property
     */
    identifier?: DeviceAssetIdentifier | null;
}
export interface ImpactedMailboxAsset extends ImpactedAsset, Parsable {
    /**
     * The identifier property
     */
    identifier?: MailboxAssetIdentifier | null;
}
export interface ImpactedUserAsset extends ImpactedAsset, Parsable {
    /**
     * The identifier property
     */
    identifier?: UserAssetIdentifier | null;
}
export interface Incident extends Entity, Parsable {
    /**
     * The list of related alerts. Supports $expand.
     */
    alerts?: Alert[] | null;
    /**
     * Owner of the incident, or null if no owner is assigned. Free editable text.
     */
    assignedTo?: string | null;
    /**
     * The specification for the incident. Possible values are: unknown, falsePositive, truePositive, informationalExpectedActivity, unknownFutureValue.
     */
    classification?: AlertClassification | null;
    /**
     * Array of comments created by the Security Operations (SecOps) team when the incident is managed.
     */
    comments?: AlertComment[] | null;
    /**
     * Time when the incident was first created.
     */
    createdDateTime?: Date | null;
    /**
     * The collection of custom tags that are associated with an incident.
     */
    customTags?: string[] | null;
    /**
     * Description of the incident.
     */
    description?: string | null;
    /**
     * Specifies the determination of the incident. Possible values are: unknown, apt, malware, securityPersonnel, securityTesting, unwantedSoftware, other, multiStagedAttack, compromisedUser, phishing, maliciousUserActivity, clean, insufficientData, confirmedUserActivity, lineOfBusinessApplication, unknownFutureValue.
     */
    determination?: AlertDetermination | null;
    /**
     * The incident name.
     */
    displayName?: string | null;
    /**
     * The URL for the incident page in the Microsoft 365 Defender portal.
     */
    incidentWebUrl?: string | null;
    /**
     * The identity that last modified the incident.
     */
    lastModifiedBy?: string | null;
    /**
     * Time when the incident was last updated.
     */
    lastUpdateDateTime?: Date | null;
    /**
     * A rich text string that represents the actions that are reccomnded to take in order to resolve the incident.
     */
    recommendedActions?: string | null;
    /**
     * List of hunting Kusto Query Language (KQL) queries related to the incident.
     */
    recommendedHuntingQueries?: RecommendedHuntingQuery[] | null;
    /**
     * Only populated in case an incident is grouped together with another incident, as part of the logic that processes incidents. In such a case, the status property is redirected.
     */
    redirectIncidentId?: string | null;
    /**
     * User input that explains the resolution of the incident and the classification choice. This property contains free editable text.
     */
    resolvingComment?: string | null;
    /**
     * The severity property
     */
    severity?: AlertSeverity | null;
    /**
     * The status property
     */
    status?: IncidentStatus | null;
    /**
     * The overview of an attack. When applicable, the summary contains details of what occurred, impacted assets, and the type of attack.
     */
    summary?: string | null;
    /**
     * The collection of system tags that are associated with the incident.
     */
    systemTags?: string[] | null;
    /**
     * The Microsoft Entra tenant in which the alert was created.
     */
    tenantId?: string | null;
}
export interface IncidentCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Incident[] | null;
}
export type IncidentStatus = (typeof IncidentStatusObject)[keyof typeof IncidentStatusObject];
export interface Indicator extends Entity, Parsable {
    /**
     * The artifact property
     */
    artifact?: Artifact | null;
    /**
     * The source property
     */
    source?: IndicatorSource | null;
}
export type IndicatorSource = (typeof IndicatorSourceObject)[keyof typeof IndicatorSourceObject];
export interface InformationBarrierPolicyApplicationAuditRecord extends AuditData, Parsable {
}
export interface InformationProtection extends Entity, Parsable {
    /**
     * Read the Microsoft Purview Information Protection policy settings for the user or organization.
     */
    labelPolicySettings?: InformationProtectionPolicySetting | null;
    /**
     * Read the Microsoft Purview Information Protection labels for the user or organization.
     */
    sensitivityLabels?: SensitivityLabel[] | null;
}
export interface InformationProtectionAction extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface InformationProtectionPolicySetting extends Entity, Parsable {
    /**
     * The defaultLabelId property
     */
    defaultLabelId?: string | null;
    /**
     * Exposes whether justification input is required on label downgrade.
     */
    isDowngradeJustificationRequired?: boolean | null;
    /**
     * Exposes whether mandatory labeling is enabled.
     */
    isMandatory?: boolean | null;
    /**
     * Exposes the more information URL that can be configured by the administrator.
     */
    moreInfoUrl?: string | null;
}
export interface InformationWorkerProtectionAuditRecord extends AuditData, Parsable {
}
export interface InitiateInvestigationResponseAction extends Parsable, ResponseAction {
    /**
     * The identifier property
     */
    identifier?: DeviceIdEntityIdentifier[] | null;
}
export interface InsiderRiskScopedUserInsightsRecord extends AuditData, Parsable {
}
export interface InsiderRiskScopedUsersRecord extends AuditData, Parsable {
}
export interface IntelligenceProfile extends Entity, Parsable {
    /**
     * A list of commonly-known aliases for the threat intelligence included in the intelligenceProfile.
     */
    aliases?: string[] | null;
    /**
     * The country/region of origin for the given actor or threat associated with this intelligenceProfile.
     */
    countriesOrRegionsOfOrigin?: IntelligenceProfileCountryOrRegionOfOrigin[] | null;
    /**
     * The description property
     */
    description?: FormattedContent | null;
    /**
     * The date and time when this intelligenceProfile was first active.  The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstActiveDateTime?: Date | null;
    /**
     * Includes an assemblage of high-fidelity network indicators of compromise.
     */
    indicators?: IntelligenceProfileIndicator[] | null;
    /**
     * The kind property
     */
    kind?: IntelligenceProfileKind | null;
    /**
     * The summary property
     */
    summary?: FormattedContent | null;
    /**
     * Known targets related to this intelligenceProfile.
     */
    targets?: string[] | null;
    /**
     * The title of this intelligenceProfile.
     */
    title?: string | null;
    /**
     * Formatted information featuring a description of the distinctive tactics, techniques, and procedures (TTP) of the group, followed by a list of all known custom, commodity, and publicly available implants used by the group.
     */
    tradecraft?: FormattedContent | null;
}
export interface IntelligenceProfileCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: IntelligenceProfile[] | null;
}
export interface IntelligenceProfileCountryOrRegionOfOrigin extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * A codified representation for this country/region of origin.
     */
    code?: string | null;
    /**
     * A display label for this ountry/region of origin.
     */
    label?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface IntelligenceProfileIndicator extends Indicator, Parsable {
    /**
     * Designate when an artifact was first used actively in an attack, when a particular sample was compiled, or if neither of those could be ascertained when the file was first seen in public repositories (for example, VirusTotal, ANY.RUN, Hybrid Analysis) or reported publicly.
     */
    firstSeenDateTime?: Date | null;
    /**
     * Designate when an artifact was most recently used actively in an attack, when a particular sample was compiled, or if neither of those could be ascertained when the file was first seen in public repositories (for example, VirusTotal, ANY.RUN, Hybrid Analysis) or reported publicly.
     */
    lastSeenDateTime?: Date | null;
}
export interface IntelligenceProfileIndicatorCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: IntelligenceProfileIndicator[] | null;
}
export type IntelligenceProfileKind = (typeof IntelligenceProfileKindObject)[keyof typeof IntelligenceProfileKindObject];
export interface IoTDeviceEvidence extends AlertEvidence, Parsable {
    /**
     * The deviceId property
     */
    deviceId?: string | null;
    /**
     * The deviceName property
     */
    deviceName?: string | null;
    /**
     * The devicePageLink property
     */
    devicePageLink?: string | null;
    /**
     * The deviceSubType property
     */
    deviceSubType?: string | null;
    /**
     * The deviceType property
     */
    deviceType?: string | null;
    /**
     * The importance property
     */
    importance?: IoTDeviceImportanceType | null;
    /**
     * The ioTHub property
     */
    ioTHub?: AzureResourceEvidence | null;
    /**
     * The ioTSecurityAgentId property
     */
    ioTSecurityAgentId?: string | null;
    /**
     * The ipAddress property
     */
    ipAddress?: IpEvidence | null;
    /**
     * The isAuthorized property
     */
    isAuthorized?: boolean | null;
    /**
     * The isProgramming property
     */
    isProgramming?: boolean | null;
    /**
     * The isScanner property
     */
    isScanner?: boolean | null;
    /**
     * The macAddress property
     */
    macAddress?: string | null;
    /**
     * The manufacturer property
     */
    manufacturer?: string | null;
    /**
     * The model property
     */
    model?: string | null;
    /**
     * The nics property
     */
    nics?: NicEvidence | null;
    /**
     * The operatingSystem property
     */
    operatingSystem?: string | null;
    /**
     * The owners property
     */
    owners?: string[] | null;
    /**
     * The protocols property
     */
    protocols?: string[] | null;
    /**
     * The purdueLayer property
     */
    purdueLayer?: string | null;
    /**
     * The sensor property
     */
    sensor?: string | null;
    /**
     * The serialNumber property
     */
    serialNumber?: string | null;
    /**
     * The site property
     */
    site?: string | null;
    /**
     * The source property
     */
    source?: string | null;
    /**
     * The sourceRef property
     */
    sourceRef?: UrlEvidence | null;
    /**
     * The zone property
     */
    zone?: string | null;
}
export type IoTDeviceImportanceType = (typeof IoTDeviceImportanceTypeObject)[keyof typeof IoTDeviceImportanceTypeObject];
export interface IpAddress extends Host, Parsable {
    /**
     * The details about the autonomous system to which this IP address belongs.
     */
    autonomousSystem?: AutonomousSystem | null;
    /**
     * The country/region for this IP address.
     */
    countryOrRegion?: string | null;
    /**
     * The hosting company listed for this host.
     */
    hostingProvider?: string | null;
    /**
     * The block of IP addresses this IP address belongs to.
     */
    netblock?: string | null;
}
export interface IpEvidence extends AlertEvidence, Parsable {
    /**
     * The two-letter country code according to ISO 3166 format, for example: US, UK, or CA.).
     */
    countryLetterCode?: string | null;
    /**
     * The value of the IP Address can be either in V4 address or V6 address format.
     */
    ipAddress?: string | null;
    /**
     * The location property
     */
    location?: GeoLocation | null;
    /**
     * The stream property
     */
    stream?: Stream | null;
}
export interface IrmSecurityAlertRecord extends AuditData, Parsable {
}
export interface IrmUserDefinedDetectionRecord extends AuditData, Parsable {
}
export interface IsolateDeviceResponseAction extends Parsable, ResponseAction {
    /**
     * The identifier property
     */
    identifier?: DeviceIdEntityIdentifier[] | null;
    /**
     * The isolationType property
     */
    isolationType?: IsolationType | null;
}
export type IsolationType = (typeof IsolationTypeObject)[keyof typeof IsolationTypeObject];
export interface JustifyAction extends InformationProtectionAction, Parsable {
}
export interface KaizalaAuditRecord extends AuditData, Parsable {
}
export interface KeyValuePair extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Name for this key-value pair.
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Value for this key-value pair.
     */
    value?: string | null;
}
export interface KubernetesClusterEvidence extends AlertEvidence, Parsable {
    /**
     * The cloud identifier of the cluster. Can be either an amazonResourceEvidence, azureResourceEvidence, or googleCloudResourceEvidence object.
     */
    cloudResource?: AlertEvidence | null;
    /**
     * The distribution type of the cluster.
     */
    distribution?: string | null;
    /**
     * The cluster name.
     */
    name?: string | null;
    /**
     * The platform the cluster runs on. Possible values are: unknown, aks, eks, gke, arc, unknownFutureValue.
     */
    platform?: KubernetesPlatform | null;
    /**
     * The kubernetes version of the cluster.
     */
    version?: string | null;
}
export interface KubernetesControllerEvidence extends AlertEvidence, Parsable {
    /**
     * The labels for the Kubernetes pod.
     */
    labels?: Dictionary | null;
    /**
     * The controller name.
     */
    name?: string | null;
    /**
     * The service account namespace.
     */
    namespace?: KubernetesNamespaceEvidence | null;
    /**
     * The controller type.
     */
    type?: string | null;
}
export interface KubernetesNamespaceEvidence extends AlertEvidence, Parsable {
    /**
     * The namespace cluster.
     */
    cluster?: KubernetesClusterEvidence | null;
    /**
     * The labels for the Kubernetes pod.
     */
    labels?: Dictionary | null;
    /**
     * The namespace name.
     */
    name?: string | null;
}
export type KubernetesPlatform = (typeof KubernetesPlatformObject)[keyof typeof KubernetesPlatformObject];
export interface KubernetesPodEvidence extends AlertEvidence, Parsable {
    /**
     * The list of pod containers which are not init or ephemeral containers.
     */
    containers?: ContainerEvidence[] | null;
    /**
     * The pod controller.
     */
    controller?: KubernetesControllerEvidence | null;
    /**
     * The list of pod ephemeral containers.
     */
    ephemeralContainers?: ContainerEvidence[] | null;
    /**
     * The list of pod init containers.
     */
    initContainers?: ContainerEvidence[] | null;
    /**
     * The pod labels.
     */
    labels?: Dictionary | null;
    /**
     * The pod name.
     */
    name?: string | null;
    /**
     * The pod namespace.
     */
    namespace?: KubernetesNamespaceEvidence | null;
    /**
     * The pod IP.
     */
    podIp?: IpEvidence | null;
    /**
     * The pod service account.
     */
    serviceAccount?: KubernetesServiceAccountEvidence | null;
}
export interface KubernetesSecretEvidence extends AlertEvidence, Parsable {
    /**
     * The secret name.
     */
    name?: string | null;
    /**
     * The secret namespace.
     */
    namespace?: KubernetesNamespaceEvidence | null;
    /**
     * The secret type can include both built-in types and custom ones. Examples of built-in types are: Opaque, kubernetes.io/service-account-token, kubernetes.io/dockercfg, kubernetes.io/dockerconfigjson, kubernetes.io/basic-auth, kubernetes.io/ssh-auth, kubernetes.io/tls, bootstrap.kubernetes.io/token.
     */
    secretType?: string | null;
}
export interface KubernetesServiceAccountEvidence extends AlertEvidence, Parsable {
    /**
     * The service account name.
     */
    name?: string | null;
    /**
     * The service account namespace.
     */
    namespace?: KubernetesNamespaceEvidence | null;
}
export interface KubernetesServiceEvidence extends AlertEvidence, Parsable {
    /**
     * The service cluster IP.
     */
    clusterIP?: IpEvidence | null;
    /**
     * The service external IPs.
     */
    externalIPs?: IpEvidence[] | null;
    /**
     * The service labels.
     */
    labels?: Dictionary | null;
    /**
     * The service name.
     */
    name?: string | null;
    /**
     * The service namespace.
     */
    namespace?: KubernetesNamespaceEvidence | null;
    /**
     * The service selector.
     */
    selector?: Dictionary | null;
    /**
     * The list of service ports.
     */
    servicePorts?: KubernetesServicePort[] | null;
    /**
     * The serviceType property
     */
    serviceType?: KubernetesServiceType | null;
}
export interface KubernetesServicePort extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The application protocol for this port.
     */
    appProtocol?: string | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name of this port within the service.
     */
    name?: string | null;
    /**
     * The port on each node on which this service is exposed when the type is either NodePort or LoadBalancer.
     */
    nodePort?: number | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The port that this service exposes.
     */
    port?: number | null;
    /**
     * The protocol name. Possible values are: udp, tcp, sctp, unknownFutureValue.
     */
    protocol?: ContainerPortProtocol | null;
    /**
     * The name or number of the port to access on the pods targeted by the service. The port number must be in the range 1 to 65535. The name must be an IANASVCNAME.
     */
    targetPort?: string | null;
}
export type KubernetesServiceType = (typeof KubernetesServiceTypeObject)[keyof typeof KubernetesServiceTypeObject];
export interface LabelAnalyticsAggregateAuditRecord extends AuditData, Parsable {
}
export interface LabelContentExplorerAuditRecord extends AuditData, Parsable {
}
export interface LabelingOptions extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The assignmentMethod property
     */
    assignmentMethod?: AssignmentMethod | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The downgrade justification object that indicates if downgrade was justified and, if so, the reason.
     */
    downgradeJustification?: DowngradeJustification | null;
    /**
     * Extended properties will be parsed and returned in the standard Microsoft Purview Information Protection labeled metadata format as part of the label information.
     */
    extendedProperties?: KeyValuePair[] | null;
    /**
     * The GUID of the label that should be applied to the information.
     */
    labelId?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface LabelsRoot extends Entity, Parsable {
    /**
     * Specifies the underlying authority that describes the type of content to be retained and its retention schedule.
     */
    authorities?: AuthorityTemplate[] | null;
    /**
     * Specifies a group of similar types of content in a particular department.
     */
    categories?: CategoryTemplate[] | null;
    /**
     * The specific rule or regulation created by a jurisdiction used to determine whether certain labels and content should be retained or deleted.
     */
    citations?: CitationTemplate[] | null;
    /**
     * Specifies the department or business unit of an organization to which a label belongs.
     */
    departments?: DepartmentTemplate[] | null;
    /**
     * Specifies a unique alpha-numeric identifier for an organization’s retention schedule.
     */
    filePlanReferences?: FilePlanReferenceTemplate[] | null;
    /**
     * Represents how customers can manage their data, whether and for how long to retain or delete it.
     */
    retentionLabels?: RetentionLabel[] | null;
}
export interface LargeContentMetadataAuditRecord extends AuditData, Parsable {
}
export interface LoggedOnUser extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * User account name of the logged-on user.
     */
    accountName?: string | null;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * User account domain of the logged-on user.
     */
    domainName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type LongRunningOperationStatus = (typeof LongRunningOperationStatusObject)[keyof typeof LongRunningOperationStatusObject];
export interface M365ComplianceConnectorAuditRecord extends AuditData, Parsable {
}
export interface M365DAADAuditRecord extends AuditData, Parsable {
}
export type MailboxAssetIdentifier = (typeof MailboxAssetIdentifierObject)[keyof typeof MailboxAssetIdentifierObject];
export interface MailboxConfigurationEvidence extends AlertEvidence, Parsable {
    /**
     * The configurationId property
     */
    configurationId?: string | null;
    /**
     * The configurationType property
     */
    configurationType?: MailboxConfigurationType | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The externalDirectoryObjectId property
     */
    externalDirectoryObjectId?: Guid | null;
    /**
     * The mailboxPrimaryAddress property
     */
    mailboxPrimaryAddress?: string | null;
    /**
     * The upn property
     */
    upn?: string | null;
}
export type MailboxConfigurationType = (typeof MailboxConfigurationTypeObject)[keyof typeof MailboxConfigurationTypeObject];
export interface MailboxEvidence extends AlertEvidence, Parsable {
    /**
     * The name associated with the mailbox.
     */
    displayName?: string | null;
    /**
     * The primary email address of the mailbox.
     */
    primaryAddress?: string | null;
    /**
     * The user account of the mailbox.
     */
    userAccount?: UserAccount | null;
}
export interface MailClusterEvidence extends AlertEvidence, Parsable {
    /**
     * The clustering logic of the emails inside the cluster.
     */
    clusterBy?: string | null;
    /**
     * The value utilized to cluster the similar emails.
     */
    clusterByValue?: string | null;
    /**
     * Count of emails in the email cluster.
     */
    emailCount?: number | null;
    /**
     * Unique identifiers for the emails in the cluster, generated by Microsoft 365.
     */
    networkMessageIds?: string[] | null;
    /**
     * The query used to identify the email cluster.
     */
    query?: string | null;
    /**
     * Uniform resource name (URN) of the automated investigation where the cluster was identified.
     */
    urn?: string | null;
}
export interface MailSubmissionData extends AuditData, Parsable {
}
export interface MalwareEvidence extends AlertEvidence, Parsable {
    /**
     * The category property
     */
    category?: string | null;
    /**
     * The files property
     */
    files?: FileEvidence[] | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The processes property
     */
    processes?: ProcessEvidence[] | null;
}
export interface ManagedServicesAuditRecord extends AuditData, Parsable {
}
export interface ManagedTenantsAuditRecord extends AuditData, Parsable {
}
export interface MapgAlertsAuditRecord extends AuditData, Parsable {
}
export interface MapgOnboardAuditRecord extends AuditData, Parsable {
}
export interface MapgPolicyAuditRecord extends AuditData, Parsable {
}
export type MarkUserAsCompromisedEntityIdentifier = (typeof MarkUserAsCompromisedEntityIdentifierObject)[keyof typeof MarkUserAsCompromisedEntityIdentifierObject];
export interface MarkUserAsCompromisedResponseAction extends Parsable, ResponseAction {
    /**
     * The identifier property
     */
    identifier?: MarkUserAsCompromisedEntityIdentifier[] | null;
}
export interface McasAlertsAuditRecord extends AuditData, Parsable {
}
export interface MdaDataSecuritySignalRecord extends AuditData, Parsable {
}
export interface MdatpAuditRecord extends AuditData, Parsable {
}
export interface MdcEventsRecord extends AuditData, Parsable {
}
export interface MdiAuditRecord extends AuditData, Parsable {
}
export interface MeshWorldsAuditRecord extends AuditData, Parsable {
}
export interface MetadataAction extends InformationProtectionAction, Parsable {
    /**
     * A collection of key-value pairs that should be added to the file.
     */
    metadataToAdd?: KeyValuePair[] | null;
    /**
     * A collection of strings that indicate which keys to remove from the file metadata.
     */
    metadataToRemove?: string[] | null;
}
export interface Microsoft365BackupBackupItemAuditRecord extends AuditData, Parsable {
}
export interface Microsoft365BackupBackupPolicyAuditRecord extends AuditData, Parsable {
}
export interface Microsoft365BackupRestoreItemAuditRecord extends AuditData, Parsable {
}
export interface Microsoft365BackupRestoreTaskAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftDefenderExpertsBaseAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftDefenderExpertsXDRAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftFlowAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftFormsAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftGraphDataConnectConsent extends AuditData, Parsable {
}
export interface MicrosoftGraphDataConnectOperation extends AuditData, Parsable {
}
export interface MicrosoftPurviewDataMapOperationRecord extends AuditData, Parsable {
}
export interface MicrosoftPurviewMetadataPolicyOperationRecord extends AuditData, Parsable {
}
export interface MicrosoftPurviewPolicyOperationRecord extends AuditData, Parsable {
}
export interface MicrosoftPurviewPrivacyAuditEvent extends AuditData, Parsable {
}
export interface MicrosoftStreamAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftTeamsAdminAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftTeamsAnalyticsAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftTeamsAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftTeamsDeviceAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftTeamsRetentionLabelActionAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftTeamsSensitivityLabelActionAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftTeamsShiftsAuditRecord extends AuditData, Parsable {
}
export interface MipAutoLabelExchangeItemAuditRecord extends AuditData, Parsable {
}
export interface MipAutoLabelItemAuditRecord extends AuditData, Parsable {
}
export interface MipAutoLabelPolicyAuditRecord extends AuditData, Parsable {
}
export interface MipAutoLabelProgressFeedbackAuditRecord extends AuditData, Parsable {
}
export interface MipAutoLabelSharePointItemAuditRecord extends AuditData, Parsable {
}
export interface MipAutoLabelSharePointPolicyLocationAuditRecord extends AuditData, Parsable {
}
export interface MipAutoLabelSimulationSharePointCompletionRecord extends AuditData, Parsable {
}
export interface MipAutoLabelSimulationSharePointProgressRecord extends AuditData, Parsable {
}
export interface MipAutoLabelSimulationStatisticsRecord extends AuditData, Parsable {
}
export interface MipAutoLabelSimulationStatusRecord extends AuditData, Parsable {
}
export interface MipExactDataMatchAuditRecord extends AuditData, Parsable {
}
export interface MipLabelAnalyticsAuditRecord extends AuditData, Parsable {
}
export interface MipLabelAuditRecord extends AuditData, Parsable {
}
export interface MoveToDeletedItemsResponseAction extends Parsable, ResponseAction {
    /**
     * The identifier property
     */
    identifier?: EmailEntityIdentifier[] | null;
}
export interface MoveToInboxResponseAction extends Parsable, ResponseAction {
    /**
     * The identifier property
     */
    identifier?: EmailEntityIdentifier[] | null;
}
export interface MoveToJunkResponseAction extends Parsable, ResponseAction {
    /**
     * The identifier property
     */
    identifier?: EmailEntityIdentifier[] | null;
}
export interface MS365DCustomDetectionAuditRecord extends AuditData, Parsable {
}
export interface MS365DIncidentAuditRecord extends AuditData, Parsable {
}
export interface MS365DSuppressionRuleAuditRecord extends AuditData, Parsable {
}
export interface MsdeGeneralSettingsAuditRecord extends AuditData, Parsable {
}
export interface MsdeIndicatorsSettingsAuditRecord extends AuditData, Parsable {
}
export interface MsdeResponseActionsAuditRecord extends AuditData, Parsable {
}
export interface MsdeRolesSettingsAuditRecord extends AuditData, Parsable {
}
export interface MsticNationStateNotificationRecord extends AuditData, Parsable {
}
export interface MultiStageDispositionAuditRecord extends AuditData, Parsable {
}
export interface MyAnalyticsSettingsAuditRecord extends AuditData, Parsable {
}
export interface NetworkAdapter extends Entity, Parsable {
    /**
     * Indicates whether the network adapter is selected for capturing and analyzing network traffic.
     */
    isEnabled?: boolean | null;
    /**
     * The name of the network adapter.
     */
    name?: string | null;
}
export interface NetworkConnectionEvidence extends AlertEvidence, Parsable {
    /**
     * The destinationAddress property
     */
    destinationAddress?: IpEvidence | null;
    /**
     * The destinationPort property
     */
    destinationPort?: number | null;
    /**
     * The protocol property
     */
    protocol?: ProtocolType | null;
    /**
     * The sourceAddress property
     */
    sourceAddress?: IpEvidence | null;
    /**
     * The sourcePort property
     */
    sourcePort?: number | null;
}
export interface NicEvidence extends AlertEvidence, Parsable {
    /**
     * The ipAddress property
     */
    ipAddress?: IpEvidence | null;
    /**
     * The macAddress property
     */
    macAddress?: string | null;
    /**
     * The vlans property
     */
    vlans?: string[] | null;
}
export interface OauthApplicationEvidence extends AlertEvidence, Parsable {
    /**
     * Unique identifier of the application.
     */
    appId?: string | null;
    /**
     * Name of the application.
     */
    displayName?: string | null;
    /**
     * The unique identifier of the application object in Azure AD.
     */
    objectId?: string | null;
    /**
     * The name of the application publisher.
     */
    publisher?: string | null;
}
export interface OcrSettings extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Indicates whether or not OCR is enabled for the case.
     */
    isEnabled?: boolean | null;
    /**
     * Maximum image size that will be processed in KB).
     */
    maxImageSize?: number | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The timeout duration for the OCR engine. A longer timeout might increase success of OCR, but might add to the total processing time.
     */
    timeout?: Duration | null;
}
export interface OfficeNativeAuditRecord extends AuditData, Parsable {
}
export interface OmePortalAuditRecord extends AuditData, Parsable {
}
export type OnboardingStatus = (typeof OnboardingStatusObject)[keyof typeof OnboardingStatusObject];
export interface OneDriveAuditRecord extends AuditData, Parsable {
}
export interface OnPremisesFileShareScannerDlpAuditRecord extends AuditData, Parsable {
}
export interface OnPremisesScannerDlpAuditRecord extends AuditData, Parsable {
}
export interface OnPremisesSharePointScannerDlpAuditRecord extends AuditData, Parsable {
}
export interface OrganizationalScope extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * List of groups to which the custom detection rule applies.
     */
    scopeNames?: string[] | null;
    /**
     * The scopeType property
     */
    scopeType?: ScopeType | null;
}
export interface OwaGetAccessTokenForResourceAuditRecord extends AuditData, Parsable {
}
export interface PassiveDnsRecord extends Artifact, Parsable {
    /**
     * The artifact property
     */
    artifact?: Artifact | null;
    /**
     * The date and time that this passiveDnsRecord entry was collected by Microsoft. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    collectedDateTime?: Date | null;
    /**
     * The date and time when this passiveDnsRecord entry was first seen. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The date and time when this passiveDnsRecord entry was most recently seen. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The parentHost property
     */
    parentHost?: Host | null;
    /**
     * The DNS record type for this passiveDnsRecord entry.
     */
    recordType?: string | null;
}
export interface PassiveDnsRecordCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: PassiveDnsRecord[] | null;
}
export interface PeopleAdminSettingsAuditRecord extends AuditData, Parsable {
}
export interface PhysicalBadgingSignalAuditRecord extends AuditData, Parsable {
}
export interface PlannerCopyPlanAuditRecord extends AuditData, Parsable {
}
export interface PlannerPlanAuditRecord extends AuditData, Parsable {
}
export interface PlannerPlanListAuditRecord extends AuditData, Parsable {
}
export interface PlannerRosterAuditRecord extends AuditData, Parsable {
}
export interface PlannerRosterSensitivityLabelAuditRecord extends AuditData, Parsable {
}
export interface PlannerTaskAuditRecord extends AuditData, Parsable {
}
export interface PlannerTaskListAuditRecord extends AuditData, Parsable {
}
export interface PlannerTenantSettingsAuditRecord extends AuditData, Parsable {
}
export interface PolicyBase extends Entity, Parsable {
    /**
     * The createdBy property
     */
    createdBy?: IdentitySet | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The lastModifiedBy property
     */
    lastModifiedBy?: IdentitySet | null;
    /**
     * The lastModifiedDateTime property
     */
    lastModifiedDateTime?: Date | null;
    /**
     * The status property
     */
    status?: PolicyStatus | null;
}
export type PolicyStatus = (typeof PolicyStatusObject)[keyof typeof PolicyStatusObject];
export interface PowerAppsAuditAppRecord extends AuditData, Parsable {
}
export interface PowerAppsAuditPlanRecord extends AuditData, Parsable {
}
export interface PowerAppsAuditResourceRecord extends AuditData, Parsable {
}
export interface PowerBiAuditRecord extends AuditData, Parsable {
}
export interface PowerBiDlpAuditRecord extends AuditData, Parsable {
}
export interface PowerPagesSiteAuditRecord extends AuditData, Parsable {
}
export interface PowerPlatformAdminDlpAuditRecord extends AuditData, Parsable {
}
export interface PowerPlatformAdminEnvironmentAuditRecord extends AuditData, Parsable {
}
export interface PowerPlatformAdministratorActivityRecord extends AuditData, Parsable {
}
export interface PowerPlatformLockboxResourceAccessRequestAuditRecord extends AuditData, Parsable {
}
export interface PowerPlatformLockboxResourceCommandAuditRecord extends AuditData, Parsable {
}
export interface PowerPlatformServiceActivityAuditRecord extends AuditData, Parsable {
}
export interface PrivacyDataMatchAuditRecord extends AuditData, Parsable {
}
export interface PrivacyDataMinimizationRecord extends AuditData, Parsable {
}
export interface PrivacyDigestEmailRecord extends AuditData, Parsable {
}
export interface PrivacyOpenAccessAuditRecord extends AuditData, Parsable {
}
export interface PrivacyPortalAuditRecord extends AuditData, Parsable {
}
export interface PrivacyRemediationActionRecord extends AuditData, Parsable {
}
export interface PrivacyRemediationRecord extends AuditData, Parsable {
}
export interface PrivacyTenantAuditHistoryRecord extends AuditData, Parsable {
}
export interface ProcessEvidence extends AlertEvidence, Parsable {
    /**
     * The status of the detection. The possible values are: detected, blocked, prevented, unknownFutureValue.
     */
    detectionStatus?: DetectionStatus | null;
    /**
     * Image file details.
     */
    imageFile?: FileDetails | null;
    /**
     * A unique identifier assigned to a device by Microsoft Defender for Endpoint.
     */
    mdeDeviceId?: string | null;
    /**
     * Date and time when the parent of the process was created. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    parentProcessCreationDateTime?: Date | null;
    /**
     * Process ID (PID) of the parent process that spawned the process.
     */
    parentProcessId?: number | null;
    /**
     * Parent process image file details.
     */
    parentProcessImageFile?: FileDetails | null;
    /**
     * Command line used to create the new process.
     */
    processCommandLine?: string | null;
    /**
     * Date and time when the process was created. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    processCreationDateTime?: Date | null;
    /**
     * Process ID (PID) of the newly created process.
     */
    processId?: number | null;
    /**
     * User details of the user that ran the process.
     */
    userAccount?: UserAccount | null;
}
export interface ProjectAuditRecord extends AuditData, Parsable {
}
export interface ProjectForTheWebAssignedToMeSettingsAuditRecord extends AuditData, Parsable {
}
export interface ProjectForTheWebProjectAuditRecord extends AuditData, Parsable {
}
export interface ProjectForTheWebProjectSettingsAuditRecord extends AuditData, Parsable {
}
export interface ProjectForTheWebRoadmapAuditRecord extends AuditData, Parsable {
}
export interface ProjectForTheWebRoadmapItemAuditRecord extends AuditData, Parsable {
}
export interface ProjectForTheWebRoadmapSettingsAuditRecord extends AuditData, Parsable {
}
export interface ProjectForTheWebTaskAuditRecord extends AuditData, Parsable {
}
export interface ProtectAdhocAction extends InformationProtectionAction, Parsable {
}
export interface ProtectByTemplateAction extends InformationProtectionAction, Parsable {
    /**
     * The unique identifier for a protection template in Microsoft Purview Information Protection to apply to the content.
     */
    templateId?: string | null;
}
export interface ProtectDoNotForwardAction extends InformationProtectionAction, Parsable {
}
export interface ProtectionRule extends Entity, Parsable {
    /**
     * Name of the user or application that created the rule.
     */
    createdBy?: string | null;
    /**
     * Timestamp of rule creation.
     */
    createdDateTime?: Date | null;
    /**
     * Name of the rule.
     */
    displayName?: string | null;
    /**
     * Whether rule is turned on for the tenant.
     */
    isEnabled?: boolean | null;
    /**
     * Name of the user or application who last updated the rule.
     */
    lastModifiedBy?: string | null;
    /**
     * Timestamp of when the rule was last updated.
     */
    lastModifiedDateTime?: Date | null;
}
export type ProtocolType = (typeof ProtocolTypeObject)[keyof typeof ProtocolTypeObject];
export interface PublicFolderAuditRecord extends AuditData, Parsable {
}
export type PurgeAreas = (typeof PurgeAreasObject)[keyof typeof PurgeAreasObject];
export type PurgeType = (typeof PurgeTypeObject)[keyof typeof PurgeTypeObject];
export interface PurviewInsiderRiskAlertsRecord extends AuditData, Parsable {
}
export interface PurviewInsiderRiskCasesRecord extends AuditData, Parsable {
}
export interface QuarantineAuditRecord extends AuditData, Parsable {
}
export interface QueryCondition extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Timestamp of when the query in the custom detection rule was last updated.
     */
    lastModifiedDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Contents of the query.
     */
    queryText?: string | null;
}
export type QueryType = (typeof QueryTypeObject)[keyof typeof QueryTypeObject];
export interface RecommendedHuntingQuery extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The query string.
     */
    kqlText?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface RecommendLabelAction extends InformationProtectionAction, Parsable {
    /**
     * Actions to take if the label is accepted by the user.
     */
    actions?: InformationProtectionAction[] | null;
    /**
     * The actionSource property
     */
    actionSource?: ActionSource | null;
    /**
     * The sensitive information type GUIDs that caused the recommendation to be given.
     */
    responsibleSensitiveTypeIds?: string[] | null;
    /**
     * The sensitivityLabelId property
     */
    sensitivityLabelId?: string | null;
}
export interface RecordsManagementAuditRecord extends AuditData, Parsable {
}
export interface RedundancyDetectionSettings extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Indicates whether email threading and near duplicate detection are enabled.
     */
    isEnabled?: boolean | null;
    /**
     * Specifies the maximum number of words used for email threading and near duplicate detection. To learn more, see Minimum/maximum number of words.
     */
    maxWords?: number | null;
    /**
     * Specifies the minimum number of words used for email threading and near duplicate detection. To learn more, see Minimum/maximum number of words.
     */
    minWords?: number | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Specifies the similarity level for documents to be put in the same near duplicate set. To learn more, see Document and email similarity threshold.
     */
    similarityThreshold?: number | null;
}
export interface RegistryKeyEvidence extends AlertEvidence, Parsable {
    /**
     * Registry hive of the key that the recorded action was applied to.
     */
    registryHive?: string | null;
    /**
     * Registry key that the recorded action was applied to.
     */
    registryKey?: string | null;
}
export interface RegistryValueEvidence extends AlertEvidence, Parsable {
    /**
     * A unique identifier assigned to a device by Microsoft Defender for Endpoint.
     */
    mdeDeviceId?: string | null;
    /**
     * Registry hive of the key that the recorded action was applied to.
     */
    registryHive?: string | null;
    /**
     * Registry key that the recorded action was applied to.
     */
    registryKey?: string | null;
    /**
     * Data of the registry value that the recorded action was applied to.
     */
    registryValue?: string | null;
    /**
     * Name of the registry value that the recorded action was applied to.
     */
    registryValueName?: string | null;
    /**
     * Data type, such as binary or string, of the registry value that the recorded action was applied to.
     */
    registryValueType?: string | null;
}
export type RemediationAction = (typeof RemediationActionObject)[keyof typeof RemediationActionObject];
export type RemediationSeverity = (typeof RemediationSeverityObject)[keyof typeof RemediationSeverityObject];
export interface RemoveContentFooterAction extends InformationProtectionAction, Parsable {
    /**
     * The name of the UI element of the footer to be removed.
     */
    uiElementNames?: string[] | null;
}
export interface RemoveContentHeaderAction extends InformationProtectionAction, Parsable {
    /**
     * The name of the UI element of the header to be removed.
     */
    uiElementNames?: string[] | null;
}
export interface RemoveProtectionAction extends InformationProtectionAction, Parsable {
}
export interface RemoveWatermarkAction extends InformationProtectionAction, Parsable {
    /**
     * The name of the UI element of watermark to be removed.
     */
    uiElementNames?: string[] | null;
}
export interface ResponseAction extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface RestrictAppExecutionResponseAction extends Parsable, ResponseAction {
    /**
     * The identifier property
     */
    identifier?: DeviceIdEntityIdentifier[] | null;
}
export interface RetentionDuration extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface RetentionDurationForever extends Parsable, RetentionDuration {
}
export interface RetentionDurationInDays extends Parsable, RetentionDuration {
    /**
     * Specifies the time period in days for which an item with the applied retention label will be retained for.
     */
    days?: number | null;
}
export interface RetentionEvent extends Entity, Parsable {
    /**
     * The user who created the retentionEvent.
     */
    createdBy?: IdentitySet | null;
    /**
     * The date time when the retentionEvent was created.
     */
    createdDateTime?: Date | null;
    /**
     * Optional information about the event.
     */
    description?: string | null;
    /**
     * Name of the event.
     */
    displayName?: string | null;
    /**
     * Represents the success status of a created event and additional information.
     */
    eventPropagationResults?: EventPropagationResult[] | null;
    /**
     * Represents the workload (SharePoint Online, OneDrive for Business, Exchange Online) and identification information associated with a retention event.
     */
    eventQueries?: EventQuery[] | null;
    /**
     * Status of event propogation to the scoped locations after the event has been created.
     */
    eventStatus?: RetentionEventStatus | null;
    /**
     * Optional time when the event should be triggered.
     */
    eventTriggerDateTime?: Date | null;
    /**
     * The user who last modified the retentionEvent.
     */
    lastModifiedBy?: IdentitySet | null;
    /**
     * The latest date time when the retentionEvent was modified.
     */
    lastModifiedDateTime?: Date | null;
    /**
     * Last time the status of the event was updated.
     */
    lastStatusUpdateDateTime?: Date | null;
    /**
     * Specifies the event that will start the retention period for labels that use this event type when an event is created.
     */
    retentionEventType?: RetentionEventType | null;
}
export interface RetentionEventCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: RetentionEvent[] | null;
}
export interface RetentionEventStatus extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The error if the status isn't successful.
     */
    errorEscaped?: PublicError | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The status of the distribution. The possible values are: pending, error, success, notAvaliable.
     */
    status?: EventStatusType | null;
}
export interface RetentionEventType extends Entity, Parsable {
    /**
     * The user who created the retentionEventType.
     */
    createdBy?: IdentitySet | null;
    /**
     * The date time when the retentionEventType was created.
     */
    createdDateTime?: Date | null;
    /**
     * Optional information about the event type.
     */
    description?: string | null;
    /**
     * Name of the event type.
     */
    displayName?: string | null;
    /**
     * The user who last modified the retentionEventType.
     */
    lastModifiedBy?: IdentitySet | null;
    /**
     * The latest date time when the retentionEventType was modified.
     */
    lastModifiedDateTime?: Date | null;
}
export interface RetentionEventTypeCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: RetentionEventType[] | null;
}
export interface RetentionLabel extends Entity, Parsable {
    /**
     * Specifies the action to take on the labeled document after the period specified by the retentionDuration property expires. The possible values are: none, delete, startDispositionReview, unknownFutureValue.
     */
    actionAfterRetentionPeriod?: ActionAfterRetentionPeriod | null;
    /**
     * Specifies how the behavior of a document with this label should be during the retention period. The possible values are: doNotRetain, retain, retainAsRecord, retainAsRegulatoryRecord, unknownFutureValue.
     */
    behaviorDuringRetentionPeriod?: BehaviorDuringRetentionPeriod | null;
    /**
     * Represents the user who created the retentionLabel.
     */
    createdBy?: IdentitySet | null;
    /**
     * Represents the date and time in which the retentionLabel is created.
     */
    createdDateTime?: Date | null;
    /**
     * Specifies the locked or unlocked state of a record label when it is created.The possible values are: startLocked, startUnlocked, unknownFutureValue.
     */
    defaultRecordBehavior?: DefaultRecordBehavior | null;
    /**
     * Provides label information for the admin. Optional.
     */
    descriptionForAdmins?: string | null;
    /**
     * Provides the label information for the user. Optional.
     */
    descriptionForUsers?: string | null;
    /**
     * Represents out-of-the-box values that provide more options to improve the manageability and organization of the content you need to label.
     */
    descriptors?: FilePlanDescriptor | null;
    /**
     * Unique string that defines a label name.
     */
    displayName?: string | null;
    /**
     * When action at the end of retention is chosen as 'dispositionReview', dispositionReviewStages specifies a sequential set of stages with at least one reviewer in each stage.
     */
    dispositionReviewStages?: DispositionReviewStage[] | null;
    /**
     * Specifies whether the label is currently being used.
     */
    isInUse?: boolean | null;
    /**
     * Specifies the replacement label to be applied automatically after the retention period of the current label ends.
     */
    labelToBeApplied?: string | null;
    /**
     * The user who last modified the retentionLabel.
     */
    lastModifiedBy?: IdentitySet | null;
    /**
     * The latest date time when the retentionLabel was modified.
     */
    lastModifiedDateTime?: Date | null;
    /**
     * Specifies the number of days to retain the content.
     */
    retentionDuration?: RetentionDuration | null;
    /**
     * Represents the type associated with a retention event.
     */
    retentionEventType?: RetentionEventType | null;
    /**
     * Specifies whether the retention duration is calculated from the content creation date, labeled date, or last modification date. The possible values are: dateLabeled, dateCreated, dateModified, dateOfEvent, unknownFutureValue.
     */
    retentionTrigger?: RetentionTrigger | null;
}
export interface RetentionLabelCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: RetentionLabel[] | null;
}
export interface RetentionPolicyAuditRecord extends AuditData, Parsable {
}
export type RetentionTrigger = (typeof RetentionTriggerObject)[keyof typeof RetentionTriggerObject];
export interface RuleSchedule extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Timestamp of the custom detection rule's next scheduled run.
     */
    nextRunDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * How often the detection rule is set to run. The allowed values are: 0, 1H, 3H, 12H, or 24H. '0' signifies the rule is run continuously.
     */
    period?: string | null;
}
export interface RulesRoot extends Entity, Parsable {
    /**
     * The detectionRules property
     */
    detectionRules?: DetectionRule[] | null;
}
export interface RunAntivirusScanResponseAction extends Parsable, ResponseAction {
    /**
     * The identifier property
     */
    identifier?: DeviceIdEntityIdentifier[] | null;
}
export interface RunDetails extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Error code of the most recent run that encountered an error. The possible values are: queryExecutionFailed, queryExecutionThrottling, queryExceededResultSize, queryLimitsExceeded, queryTimeout, alertCreationFailed, alertReportNotFound, partialRowsFailed, unknownFutureValue.
     */
    errorCode?: HuntingRuleErrorCode | null;
    /**
     * Reason for failure when the custom detection last ran and failed. See the table below.
     */
    failureReason?: string | null;
    /**
     * Timestamp when the custom detection was last run.
     */
    lastRunDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Status of custom detection when it was last run. The possible values are: running, completed, failed, partiallyFailed, unknownFutureValue.
     */
    status?: HuntingRuleRunStatus | null;
}
export interface SasTokenEvidence extends AlertEvidence, Parsable {
    /**
     * The allowedIpAddresses property
     */
    allowedIpAddresses?: string | null;
    /**
     * The allowedResourceTypes property
     */
    allowedResourceTypes?: string[] | null;
    /**
     * The allowedServices property
     */
    allowedServices?: string[] | null;
    /**
     * The expiryDateTime property
     */
    expiryDateTime?: Date | null;
    /**
     * The permissions property
     */
    permissions?: string[] | null;
    /**
     * The protocol property
     */
    protocol?: string | null;
    /**
     * The signatureHash property
     */
    signatureHash?: string | null;
    /**
     * The signedWith property
     */
    signedWith?: string | null;
    /**
     * The startDateTime property
     */
    startDateTime?: Date | null;
    /**
     * The storageResource property
     */
    storageResource?: AzureResourceEvidence | null;
}
export type ScopeType = (typeof ScopeTypeObject)[keyof typeof ScopeTypeObject];
export interface ScoreEvidence extends AuditData, Parsable {
}
export interface ScorePlatformGenericAuditRecord extends AuditData, Parsable {
}
export interface ScriptRunAuditRecord extends AuditData, Parsable {
}
export interface Search extends Entity, Parsable {
    /**
     * The contentQuery property
     */
    contentQuery?: string | null;
    /**
     * The createdBy property
     */
    createdBy?: IdentitySet | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The lastModifiedBy property
     */
    lastModifiedBy?: IdentitySet | null;
    /**
     * The lastModifiedDateTime property
     */
    lastModifiedDateTime?: Date | null;
}
export interface SearchAuditRecord extends AuditData, Parsable {
}
export interface Security extends Entity, Parsable {
    /**
     * The informationProtection property
     */
    informationProtection?: InformationProtection | null;
}
export interface SecurityComplianceAlertRecord extends AuditData, Parsable {
}
export interface SecurityComplianceCenterEOPCmdletAuditRecord extends AuditData, Parsable {
}
export interface SecurityComplianceInsightsAuditRecord extends AuditData, Parsable {
}
export interface SecurityComplianceRBACAuditRecord extends AuditData, Parsable {
}
export interface SecurityComplianceUserChangeAuditRecord extends AuditData, Parsable {
}
export interface SecurityGroupEvidence extends AlertEvidence, Parsable {
    /**
     * The name of the security group.
     */
    displayName?: string | null;
    /**
     * Unique identifier of the security group.
     */
    securityGroupId?: string | null;
}
export interface SensitivityLabel extends Entity, Parsable {
    /**
     * The color that the UI should display for the label, if configured.
     */
    color?: string | null;
    /**
     * Returns the supported content formats for the label.
     */
    contentFormats?: string[] | null;
    /**
     * The admin-defined description for the label.
     */
    description?: string | null;
    /**
     * Indicates whether the label has protection actions configured.
     */
    hasProtection?: boolean | null;
    /**
     * Indicates whether the label is active or not. Active labels should be hidden or disabled in the UI.
     */
    isActive?: boolean | null;
    /**
     * Indicates whether the label can be applied to content. False if the label is a parent with child labels.
     */
    isAppliable?: boolean | null;
    /**
     * The plaintext name of the label.
     */
    name?: string | null;
    /**
     * The parent label associated with a child label. Null if the label has no parent.
     */
    parent?: SensitivityLabel | null;
    /**
     * The sensitivity value of the label, where lower is less sensitive.
     */
    sensitivity?: number | null;
    /**
     * The tooltip that should be displayed for the label in a UI.
     */
    tooltip?: string | null;
}
export interface SensitivityLabelCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: SensitivityLabel[] | null;
}
export interface Sensor extends Entity, Parsable {
    /**
     * The date and time when the sensor was generated.
     */
    createdDateTime?: Date | null;
    /**
     * The deploymentStatus property
     */
    deploymentStatus?: DeploymentStatus | null;
    /**
     * The display name of the sensor.
     */
    displayName?: string | null;
    /**
     * The fully qualified domain name of the sensor.
     */
    domainName?: string | null;
    /**
     * Represents potential issues within a customer's Microsoft Defender for Identity configuration that Microsoft Defender for Identity identified related to the sensor.
     */
    healthIssues?: HealthIssue[] | null;
    /**
     * The healthStatus property
     */
    healthStatus?: SensorHealthStatus | null;
    /**
     * This field displays the count of health issues related to this sensor.
     */
    openHealthIssuesCount?: number | null;
    /**
     * The sensorType property
     */
    sensorType?: SensorType | null;
    /**
     * The settings property
     */
    settings?: SensorSettings | null;
    /**
     * The version of the sensor.
     */
    version?: string | null;
}
export interface SensorCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Sensor[] | null;
}
export interface SensorDeploymentPackage extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * URL to download the sensor deployment package.
     */
    downloadUrl?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Version of the sensor.
     */
    version?: string | null;
}
export type SensorHealthStatus = (typeof SensorHealthStatusObject)[keyof typeof SensorHealthStatusObject];
export interface SensorSettings extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Description of the sensor.
     */
    description?: string | null;
    /**
     * DNS names for the domain controller
     */
    domainControllerDnsNames?: string[] | null;
    /**
     * Indicates whether to delay updates for the sensor.
     */
    isDelayedDeploymentEnabled?: boolean | null;
    /**
     * The networkAdapters property
     */
    networkAdapters?: NetworkAdapter[] | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type SensorType = (typeof SensorTypeObject)[keyof typeof SensorTypeObject];
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAadRiskDetectionAuditRecord(writer: SerializationWriter, aadRiskDetectionAuditRecord: Partial<AadRiskDetectionAuditRecord> | undefined | null = {}) : void {
    if (aadRiskDetectionAuditRecord) {
        serializeAuditData(writer, aadRiskDetectionAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAddContentFooterAction(writer: SerializationWriter, addContentFooterAction: Partial<AddContentFooterAction> | undefined | null = {}) : void {
    if (addContentFooterAction) {
        serializeInformationProtectionAction(writer, addContentFooterAction)
        writer.writeEnumValue<ContentAlignment>("alignment", addContentFooterAction.alignment);
        writer.writeStringValue("fontColor", addContentFooterAction.fontColor);
        writer.writeStringValue("fontName", addContentFooterAction.fontName);
        writer.writeNumberValue("fontSize", addContentFooterAction.fontSize);
        writer.writeNumberValue("margin", addContentFooterAction.margin);
        writer.writeStringValue("text", addContentFooterAction.text);
        writer.writeStringValue("uiElementName", addContentFooterAction.uiElementName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAddContentHeaderAction(writer: SerializationWriter, addContentHeaderAction: Partial<AddContentHeaderAction> | undefined | null = {}) : void {
    if (addContentHeaderAction) {
        serializeInformationProtectionAction(writer, addContentHeaderAction)
        writer.writeEnumValue<ContentAlignment>("alignment", addContentHeaderAction.alignment);
        writer.writeStringValue("fontColor", addContentHeaderAction.fontColor);
        writer.writeStringValue("fontName", addContentHeaderAction.fontName);
        writer.writeNumberValue("fontSize", addContentHeaderAction.fontSize);
        writer.writeNumberValue("margin", addContentHeaderAction.margin);
        writer.writeStringValue("text", addContentHeaderAction.text);
        writer.writeStringValue("uiElementName", addContentHeaderAction.uiElementName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAddWatermarkAction(writer: SerializationWriter, addWatermarkAction: Partial<AddWatermarkAction> | undefined | null = {}) : void {
    if (addWatermarkAction) {
        serializeInformationProtectionAction(writer, addWatermarkAction)
        writer.writeStringValue("fontColor", addWatermarkAction.fontColor);
        writer.writeStringValue("fontName", addWatermarkAction.fontName);
        writer.writeNumberValue("fontSize", addWatermarkAction.fontSize);
        writer.writeEnumValue<WatermarkLayout>("layout", addWatermarkAction.layout);
        writer.writeStringValue("text", addWatermarkAction.text);
        writer.writeStringValue("uiElementName", addWatermarkAction.uiElementName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAedAuditRecord(writer: SerializationWriter, aedAuditRecord: Partial<AedAuditRecord> | undefined | null = {}) : void {
    if (aedAuditRecord) {
        serializeAuditData(writer, aedAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAiAppInteractionAuditRecord(writer: SerializationWriter, aiAppInteractionAuditRecord: Partial<AiAppInteractionAuditRecord> | undefined | null = {}) : void {
    if (aiAppInteractionAuditRecord) {
        serializeAuditData(writer, aiAppInteractionAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAipFileDeleted(writer: SerializationWriter, aipFileDeleted: Partial<AipFileDeleted> | undefined | null = {}) : void {
    if (aipFileDeleted) {
        serializeAuditData(writer, aipFileDeleted)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAipHeartBeat(writer: SerializationWriter, aipHeartBeat: Partial<AipHeartBeat> | undefined | null = {}) : void {
    if (aipHeartBeat) {
        serializeAuditData(writer, aipHeartBeat)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAipProtectionActionLogRequest(writer: SerializationWriter, aipProtectionActionLogRequest: Partial<AipProtectionActionLogRequest> | undefined | null = {}) : void {
    if (aipProtectionActionLogRequest) {
        serializeAuditData(writer, aipProtectionActionLogRequest)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAipScannerDiscoverEvent(writer: SerializationWriter, aipScannerDiscoverEvent: Partial<AipScannerDiscoverEvent> | undefined | null = {}) : void {
    if (aipScannerDiscoverEvent) {
        serializeAuditData(writer, aipScannerDiscoverEvent)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAipSensitivityLabelActionLogRequest(writer: SerializationWriter, aipSensitivityLabelActionLogRequest: Partial<AipSensitivityLabelActionLogRequest> | undefined | null = {}) : void {
    if (aipSensitivityLabelActionLogRequest) {
        serializeAuditData(writer, aipSensitivityLabelActionLogRequest)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAirAdminActionInvestigationData(writer: SerializationWriter, airAdminActionInvestigationData: Partial<AirAdminActionInvestigationData> | undefined | null = {}) : void {
    if (airAdminActionInvestigationData) {
        serializeAuditData(writer, airAdminActionInvestigationData)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAirInvestigationData(writer: SerializationWriter, airInvestigationData: Partial<AirInvestigationData> | undefined | null = {}) : void {
    if (airInvestigationData) {
        serializeAuditData(writer, airInvestigationData)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAirManualInvestigationData(writer: SerializationWriter, airManualInvestigationData: Partial<AirManualInvestigationData> | undefined | null = {}) : void {
    if (airManualInvestigationData) {
        serializeAuditData(writer, airManualInvestigationData)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlert(writer: SerializationWriter, alert: Partial<Alert> | undefined | null = {}) : void {
    if (alert) {
        serializeEntity(writer, alert)
        writer.writeStringValue("actorDisplayName", alert.actorDisplayName);
        writer.writeObjectValue<Dictionary>("additionalData", alert.additionalDataProperty, serializeDictionary);
        writer.writeStringValue("alertPolicyId", alert.alertPolicyId);
        writer.writeStringValue("alertWebUrl", alert.alertWebUrl);
        writer.writeStringValue("assignedTo", alert.assignedTo);
        writer.writeStringValue("category", alert.category);
        writer.writeEnumValue<AlertClassification>("classification", alert.classification);
        writer.writeCollectionOfObjectValues<AlertComment>("comments", alert.comments, serializeAlertComment);
        writer.writeDateValue("createdDateTime", alert.createdDateTime);
        writer.writeStringValue("description", alert.description);
        writer.writeEnumValue<DetectionSource>("detectionSource", alert.detectionSource);
        writer.writeStringValue("detectorId", alert.detectorId);
        writer.writeEnumValue<AlertDetermination>("determination", alert.determination);
        writer.writeCollectionOfObjectValues<AlertEvidence>("evidence", alert.evidence, serializeAlertEvidence);
        writer.writeDateValue("firstActivityDateTime", alert.firstActivityDateTime);
        writer.writeStringValue("incidentId", alert.incidentId);
        writer.writeStringValue("incidentWebUrl", alert.incidentWebUrl);
        writer.writeDateValue("lastActivityDateTime", alert.lastActivityDateTime);
        writer.writeDateValue("lastUpdateDateTime", alert.lastUpdateDateTime);
        writer.writeCollectionOfPrimitiveValues<string>("mitreTechniques", alert.mitreTechniques);
        writer.writeStringValue("productName", alert.productName);
        writer.writeStringValue("providerAlertId", alert.providerAlertId);
        writer.writeStringValue("recommendedActions", alert.recommendedActions);
        writer.writeDateValue("resolvedDateTime", alert.resolvedDateTime);
        writer.writeEnumValue<ServiceSource>("serviceSource", alert.serviceSource);
        writer.writeEnumValue<AlertSeverity>("severity", alert.severity);
        writer.writeEnumValue<AlertStatus>("status", alert.status);
        writer.writeCollectionOfPrimitiveValues<string>("systemTags", alert.systemTags);
        writer.writeStringValue("tenantId", alert.tenantId);
        writer.writeStringValue("threatDisplayName", alert.threatDisplayName);
        writer.writeStringValue("threatFamilyName", alert.threatFamilyName);
        writer.writeStringValue("title", alert.title);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlertCollectionResponse(writer: SerializationWriter, alertCollectionResponse: Partial<AlertCollectionResponse> | undefined | null = {}) : void {
    if (alertCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, alertCollectionResponse)
        writer.writeCollectionOfObjectValues<Alert>("value", alertCollectionResponse.value, serializeAlert);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlertComment(writer: SerializationWriter, alertComment: Partial<AlertComment> | undefined | null = {}) : void {
    if (alertComment) {
        writer.writeStringValue("comment", alertComment.comment);
        writer.writeStringValue("createdByDisplayName", alertComment.createdByDisplayName);
        writer.writeDateValue("createdDateTime", alertComment.createdDateTime);
        writer.writeStringValue("@odata.type", alertComment.odataType);
        writer.writeAdditionalData(alertComment.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlertEvidence(writer: SerializationWriter, alertEvidence: Partial<AlertEvidence> | undefined | null = {}) : void {
    if (alertEvidence) {
        writer.writeDateValue("createdDateTime", alertEvidence.createdDateTime);
        writer.writeCollectionOfPrimitiveValues<string>("detailedRoles", alertEvidence.detailedRoles);
        writer.writeStringValue("@odata.type", alertEvidence.odataType);
        writer.writeEnumValue<EvidenceRemediationStatus>("remediationStatus", alertEvidence.remediationStatus);
        writer.writeStringValue("remediationStatusDetails", alertEvidence.remediationStatusDetails);
        if(alertEvidence.roles)
        writer.writeEnumValue<EvidenceRole>("roles", ...alertEvidence.roles);
        writer.writeCollectionOfPrimitiveValues<string>("tags", alertEvidence.tags);
        writer.writeEnumValue<EvidenceVerdict>("verdict", alertEvidence.verdict);
        writer.writeAdditionalData(alertEvidence.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlertTemplate(writer: SerializationWriter, alertTemplate: Partial<AlertTemplate> | undefined | null = {}) : void {
    if (alertTemplate) {
        writer.writeStringValue("category", alertTemplate.category);
        writer.writeStringValue("description", alertTemplate.description);
        writer.writeCollectionOfObjectValues<ImpactedAsset>("impactedAssets", alertTemplate.impactedAssets, serializeImpactedAsset);
        writer.writeCollectionOfPrimitiveValues<string>("mitreTechniques", alertTemplate.mitreTechniques);
        writer.writeStringValue("@odata.type", alertTemplate.odataType);
        writer.writeStringValue("recommendedActions", alertTemplate.recommendedActions);
        writer.writeEnumValue<AlertSeverity>("severity", alertTemplate.severity);
        writer.writeStringValue("title", alertTemplate.title);
        writer.writeAdditionalData(alertTemplate.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAllowFileResponseAction(writer: SerializationWriter, allowFileResponseAction: Partial<AllowFileResponseAction> | undefined | null = {}) : void {
    if (allowFileResponseAction) {
        serializeResponseAction(writer, allowFileResponseAction)
        writer.writeCollectionOfPrimitiveValues<string>("deviceGroupNames", allowFileResponseAction.deviceGroupNames);
        writer.writeEnumValue<FileEntityIdentifier[]>("identifier", allowFileResponseAction.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAmazonResourceEvidence(writer: SerializationWriter, amazonResourceEvidence: Partial<AmazonResourceEvidence> | undefined | null = {}) : void {
    if (amazonResourceEvidence) {
        serializeAlertEvidence(writer, amazonResourceEvidence)
        writer.writeStringValue("amazonAccountId", amazonResourceEvidence.amazonAccountId);
        writer.writeStringValue("amazonResourceId", amazonResourceEvidence.amazonResourceId);
        writer.writeStringValue("resourceName", amazonResourceEvidence.resourceName);
        writer.writeStringValue("resourceType", amazonResourceEvidence.resourceType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAnalyzedEmail(writer: SerializationWriter, analyzedEmail: Partial<AnalyzedEmail> | undefined | null = {}) : void {
    if (analyzedEmail) {
        serializeEntity(writer, analyzedEmail)
        writer.writeCollectionOfPrimitiveValues<string>("alertIds", analyzedEmail.alertIds);
        writer.writeCollectionOfObjectValues<AnalyzedEmailAttachment>("attachments", analyzedEmail.attachments, serializeAnalyzedEmailAttachment);
        writer.writeNumberValue("attachmentsCount", analyzedEmail.attachmentsCount);
        writer.writeObjectValue<AnalyzedEmailAuthenticationDetail>("authenticationDetails", analyzedEmail.authenticationDetails, serializeAnalyzedEmailAuthenticationDetail);
        writer.writeStringValue("bulkComplaintLevel", analyzedEmail.bulkComplaintLevel);
        writer.writeCollectionOfPrimitiveValues<string>("contexts", analyzedEmail.contexts);
        writer.writeCollectionOfPrimitiveValues<string>("detectionMethods", analyzedEmail.detectionMethods);
        writer.writeEnumValue<AntispamDirectionality>("directionality", analyzedEmail.directionality);
        writer.writeStringValue("distributionList", analyzedEmail.distributionList);
        writer.writeStringValue("emailClusterId", analyzedEmail.emailClusterId);
        writer.writeCollectionOfObjectValues<AnalyzedEmailExchangeTransportRuleInfo>("exchangeTransportRules", analyzedEmail.exchangeTransportRules, serializeAnalyzedEmailExchangeTransportRuleInfo);
        writer.writeStringValue("internetMessageId", analyzedEmail.internetMessageId);
        writer.writeStringValue("language", analyzedEmail.language);
        writer.writeObjectValue<AnalyzedEmailDeliveryDetail>("latestDelivery", analyzedEmail.latestDelivery, serializeAnalyzedEmailDeliveryDetail);
        writer.writeDateValue("loggedDateTime", analyzedEmail.loggedDateTime);
        writer.writeStringValue("networkMessageId", analyzedEmail.networkMessageId);
        writer.writeObjectValue<AnalyzedEmailDeliveryDetail>("originalDelivery", analyzedEmail.originalDelivery, serializeAnalyzedEmailDeliveryDetail);
        writer.writeCollectionOfPrimitiveValues<string>("overrideSources", analyzedEmail.overrideSources);
        writer.writeStringValue("phishConfidenceLevel", analyzedEmail.phishConfidenceLevel);
        writer.writeStringValue("policy", analyzedEmail.policy);
        writer.writeStringValue("policyAction", analyzedEmail.policyAction);
        writer.writeStringValue("recipientEmailAddress", analyzedEmail.recipientEmailAddress);
        writer.writeStringValue("returnPath", analyzedEmail.returnPath);
        writer.writeObjectValue<AnalyzedEmailSenderDetail>("senderDetail", analyzedEmail.senderDetail, serializeAnalyzedEmailSenderDetail);
        writer.writeNumberValue("sizeInBytes", analyzedEmail.sizeInBytes);
        writer.writeStringValue("spamConfidenceLevel", analyzedEmail.spamConfidenceLevel);
        writer.writeStringValue("subject", analyzedEmail.subject);
        if(analyzedEmail.threatTypes)
        writer.writeEnumValue<ThreatType>("threatTypes", ...analyzedEmail.threatTypes);
        writer.writeCollectionOfObjectValues<AnalyzedEmailUrl>("urls", analyzedEmail.urls, serializeAnalyzedEmailUrl);
        writer.writeNumberValue("urlsCount", analyzedEmail.urlsCount);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAnalyzedEmailAttachment(writer: SerializationWriter, analyzedEmailAttachment: Partial<AnalyzedEmailAttachment> | undefined | null = {}) : void {
    if (analyzedEmailAttachment) {
        writer.writeObjectValue<DetonationDetails>("detonationDetails", analyzedEmailAttachment.detonationDetails, serializeDetonationDetails);
        writer.writeStringValue("fileName", analyzedEmailAttachment.fileName);
        writer.writeStringValue("fileType", analyzedEmailAttachment.fileType);
        writer.writeStringValue("@odata.type", analyzedEmailAttachment.odataType);
        writer.writeStringValue("sha256", analyzedEmailAttachment.sha256);
        writer.writeStringValue("threatName", analyzedEmailAttachment.threatName);
        writer.writeEnumValue<ThreatType>("threatType", analyzedEmailAttachment.threatType);
        writer.writeAdditionalData(analyzedEmailAttachment.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAnalyzedEmailAuthenticationDetail(writer: SerializationWriter, analyzedEmailAuthenticationDetail: Partial<AnalyzedEmailAuthenticationDetail> | undefined | null = {}) : void {
    if (analyzedEmailAuthenticationDetail) {
        writer.writeStringValue("compositeAuthentication", analyzedEmailAuthenticationDetail.compositeAuthentication);
        writer.writeStringValue("dkim", analyzedEmailAuthenticationDetail.dkim);
        writer.writeStringValue("dmarc", analyzedEmailAuthenticationDetail.dmarc);
        writer.writeStringValue("@odata.type", analyzedEmailAuthenticationDetail.odataType);
        writer.writeStringValue("senderPolicyFramework", analyzedEmailAuthenticationDetail.senderPolicyFramework);
        writer.writeAdditionalData(analyzedEmailAuthenticationDetail.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAnalyzedEmailCollectionResponse(writer: SerializationWriter, analyzedEmailCollectionResponse: Partial<AnalyzedEmailCollectionResponse> | undefined | null = {}) : void {
    if (analyzedEmailCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, analyzedEmailCollectionResponse)
        writer.writeCollectionOfObjectValues<AnalyzedEmail>("value", analyzedEmailCollectionResponse.value, serializeAnalyzedEmail);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAnalyzedEmailDeliveryDetail(writer: SerializationWriter, analyzedEmailDeliveryDetail: Partial<AnalyzedEmailDeliveryDetail> | undefined | null = {}) : void {
    if (analyzedEmailDeliveryDetail) {
        writer.writeEnumValue<DeliveryAction>("action", analyzedEmailDeliveryDetail.action);
        writer.writeEnumValue<DeliveryLocation>("location", analyzedEmailDeliveryDetail.location);
        writer.writeStringValue("@odata.type", analyzedEmailDeliveryDetail.odataType);
        writer.writeAdditionalData(analyzedEmailDeliveryDetail.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAnalyzedEmailExchangeTransportRuleInfo(writer: SerializationWriter, analyzedEmailExchangeTransportRuleInfo: Partial<AnalyzedEmailExchangeTransportRuleInfo> | undefined | null = {}) : void {
    if (analyzedEmailExchangeTransportRuleInfo) {
        writer.writeStringValue("name", analyzedEmailExchangeTransportRuleInfo.name);
        writer.writeStringValue("@odata.type", analyzedEmailExchangeTransportRuleInfo.odataType);
        writer.writeStringValue("ruleId", analyzedEmailExchangeTransportRuleInfo.ruleId);
        writer.writeAdditionalData(analyzedEmailExchangeTransportRuleInfo.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAnalyzedEmailSenderDetail(writer: SerializationWriter, analyzedEmailSenderDetail: Partial<AnalyzedEmailSenderDetail> | undefined | null = {}) : void {
    if (analyzedEmailSenderDetail) {
        writer.writeStringValue("fromAddress", analyzedEmailSenderDetail.fromAddress);
        writer.writeStringValue("ipv4", analyzedEmailSenderDetail.ipv4);
        writer.writeStringValue("mailFromAddress", analyzedEmailSenderDetail.mailFromAddress);
        writer.writeStringValue("@odata.type", analyzedEmailSenderDetail.odataType);
        writer.writeAdditionalData(analyzedEmailSenderDetail.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAnalyzedEmailUrl(writer: SerializationWriter, analyzedEmailUrl: Partial<AnalyzedEmailUrl> | undefined | null = {}) : void {
    if (analyzedEmailUrl) {
        writer.writeStringValue("detectionMethod", analyzedEmailUrl.detectionMethod);
        writer.writeObjectValue<DetonationDetails>("detonationDetails", analyzedEmailUrl.detonationDetails, serializeDetonationDetails);
        writer.writeStringValue("@odata.type", analyzedEmailUrl.odataType);
        writer.writeEnumValue<ThreatType>("threatType", analyzedEmailUrl.threatType);
        writer.writeStringValue("url", analyzedEmailUrl.url);
        writer.writeAdditionalData(analyzedEmailUrl.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAnalyzedMessageEvidence(writer: SerializationWriter, analyzedMessageEvidence: Partial<AnalyzedMessageEvidence> | undefined | null = {}) : void {
    if (analyzedMessageEvidence) {
        serializeAlertEvidence(writer, analyzedMessageEvidence)
        writer.writeStringValue("antiSpamDirection", analyzedMessageEvidence.antiSpamDirection);
        writer.writeNumberValue("attachmentsCount", analyzedMessageEvidence.attachmentsCount);
        writer.writeStringValue("deliveryAction", analyzedMessageEvidence.deliveryAction);
        writer.writeStringValue("deliveryLocation", analyzedMessageEvidence.deliveryLocation);
        writer.writeStringValue("internetMessageId", analyzedMessageEvidence.internetMessageId);
        writer.writeStringValue("language", analyzedMessageEvidence.language);
        writer.writeStringValue("networkMessageId", analyzedMessageEvidence.networkMessageId);
        writer.writeObjectValue<EmailSender>("p1Sender", analyzedMessageEvidence.p1Sender, serializeEmailSender);
        writer.writeObjectValue<EmailSender>("p2Sender", analyzedMessageEvidence.p2Sender, serializeEmailSender);
        writer.writeDateValue("receivedDateTime", analyzedMessageEvidence.receivedDateTime);
        writer.writeStringValue("recipientEmailAddress", analyzedMessageEvidence.recipientEmailAddress);
        writer.writeStringValue("senderIp", analyzedMessageEvidence.senderIp);
        writer.writeStringValue("subject", analyzedMessageEvidence.subject);
        writer.writeCollectionOfPrimitiveValues<string>("threatDetectionMethods", analyzedMessageEvidence.threatDetectionMethods);
        writer.writeCollectionOfPrimitiveValues<string>("threats", analyzedMessageEvidence.threats);
        writer.writeNumberValue("urlCount", analyzedMessageEvidence.urlCount);
        writer.writeCollectionOfPrimitiveValues<string>("urls", analyzedMessageEvidence.urls);
        writer.writeStringValue("urn", analyzedMessageEvidence.urn);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeApplyLabelAction(writer: SerializationWriter, applyLabelAction: Partial<ApplyLabelAction> | undefined | null = {}) : void {
    if (applyLabelAction) {
        serializeInformationProtectionAction(writer, applyLabelAction)
        writer.writeCollectionOfObjectValues<InformationProtectionAction>("actions", applyLabelAction.actions, serializeInformationProtectionAction);
        writer.writeEnumValue<ActionSource>("actionSource", applyLabelAction.actionSource);
        writer.writeCollectionOfPrimitiveValues<string>("responsibleSensitiveTypeIds", applyLabelAction.responsibleSensitiveTypeIds);
        writer.writeStringValue("sensitivityLabelId", applyLabelAction.sensitivityLabelId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeArticle(writer: SerializationWriter, article: Partial<Article> | undefined | null = {}) : void {
    if (article) {
        serializeEntity(writer, article)
        writer.writeObjectValue<FormattedContent>("body", article.body, serializeFormattedContent);
        writer.writeDateValue("createdDateTime", article.createdDateTime);
        writer.writeStringValue("imageUrl", article.imageUrl);
        writer.writeCollectionOfObjectValues<ArticleIndicator>("indicators", article.indicators, serializeArticleIndicator);
        writer.writeBooleanValue("isFeatured", article.isFeatured);
        writer.writeDateValue("lastUpdatedDateTime", article.lastUpdatedDateTime);
        writer.writeObjectValue<FormattedContent>("summary", article.summary, serializeFormattedContent);
        writer.writeCollectionOfPrimitiveValues<string>("tags", article.tags);
        writer.writeStringValue("title", article.title);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeArticleCollectionResponse(writer: SerializationWriter, articleCollectionResponse: Partial<ArticleCollectionResponse> | undefined | null = {}) : void {
    if (articleCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, articleCollectionResponse)
        writer.writeCollectionOfObjectValues<Article>("value", articleCollectionResponse.value, serializeArticle);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeArticleIndicator(writer: SerializationWriter, articleIndicator: Partial<ArticleIndicator> | undefined | null = {}) : void {
    if (articleIndicator) {
        serializeIndicator(writer, articleIndicator)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeArticleIndicatorCollectionResponse(writer: SerializationWriter, articleIndicatorCollectionResponse: Partial<ArticleIndicatorCollectionResponse> | undefined | null = {}) : void {
    if (articleIndicatorCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, articleIndicatorCollectionResponse)
        writer.writeCollectionOfObjectValues<ArticleIndicator>("value", articleIndicatorCollectionResponse.value, serializeArticleIndicator);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeArtifact(writer: SerializationWriter, artifact: Partial<Artifact> | undefined | null = {}) : void {
    if (artifact) {
        serializeEntity(writer, artifact)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAttackSimAdminAuditRecord(writer: SerializationWriter, attackSimAdminAuditRecord: Partial<AttackSimAdminAuditRecord> | undefined | null = {}) : void {
    if (attackSimAdminAuditRecord) {
        serializeAuditData(writer, attackSimAdminAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAttackSimulationInfo(writer: SerializationWriter, attackSimulationInfo: Partial<AttackSimulationInfo> | undefined | null = {}) : void {
    if (attackSimulationInfo) {
        writer.writeDateValue("attackSimDateTime", attackSimulationInfo.attackSimDateTime);
        writer.writeDurationValue("attackSimDurationTime", attackSimulationInfo.attackSimDurationTime);
        writer.writeGuidValue("attackSimId", attackSimulationInfo.attackSimId);
        writer.writeStringValue("attackSimUserId", attackSimulationInfo.attackSimUserId);
        writer.writeStringValue("@odata.type", attackSimulationInfo.odataType);
        writer.writeAdditionalData(attackSimulationInfo.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditCoreRoot(writer: SerializationWriter, auditCoreRoot: Partial<AuditCoreRoot> | undefined | null = {}) : void {
    if (auditCoreRoot) {
        serializeEntity(writer, auditCoreRoot)
        writer.writeCollectionOfObjectValues<AuditLogQuery>("queries", auditCoreRoot.queries, serializeAuditLogQuery);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditData(writer: SerializationWriter, auditData: Partial<AuditData> | undefined | null = {}) : void {
    if (auditData) {
        writer.writeStringValue("@odata.type", auditData.odataType);
        writer.writeAdditionalData(auditData.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditLogQuery(writer: SerializationWriter, auditLogQuery: Partial<AuditLogQuery> | undefined | null = {}) : void {
    if (auditLogQuery) {
        serializeEntity(writer, auditLogQuery)
        writer.writeCollectionOfPrimitiveValues<string>("administrativeUnitIdFilters", auditLogQuery.administrativeUnitIdFilters);
        writer.writeStringValue("displayName", auditLogQuery.displayName);
        writer.writeDateValue("filterEndDateTime", auditLogQuery.filterEndDateTime);
        writer.writeDateValue("filterStartDateTime", auditLogQuery.filterStartDateTime);
        writer.writeCollectionOfPrimitiveValues<string>("ipAddressFilters", auditLogQuery.ipAddressFilters);
        writer.writeStringValue("keywordFilter", auditLogQuery.keywordFilter);
        writer.writeCollectionOfPrimitiveValues<string>("objectIdFilters", auditLogQuery.objectIdFilters);
        writer.writeCollectionOfPrimitiveValues<string>("operationFilters", auditLogQuery.operationFilters);
        writer.writeCollectionOfObjectValues<AuditLogRecord>("records", auditLogQuery.records, serializeAuditLogRecord);
        if(auditLogQuery.recordTypeFilters)
        writer.writeEnumValue<AuditLogRecordType>("recordTypeFilters", ...auditLogQuery.recordTypeFilters);
        writer.writeCollectionOfPrimitiveValues<string>("serviceFilters", auditLogQuery.serviceFilters);
        writer.writeEnumValue<AuditLogQueryStatus>("status", auditLogQuery.status);
        writer.writeCollectionOfPrimitiveValues<string>("userPrincipalNameFilters", auditLogQuery.userPrincipalNameFilters);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditLogQueryCollectionResponse(writer: SerializationWriter, auditLogQueryCollectionResponse: Partial<AuditLogQueryCollectionResponse> | undefined | null = {}) : void {
    if (auditLogQueryCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, auditLogQueryCollectionResponse)
        writer.writeCollectionOfObjectValues<AuditLogQuery>("value", auditLogQueryCollectionResponse.value, serializeAuditLogQuery);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditLogRecord(writer: SerializationWriter, auditLogRecord: Partial<AuditLogRecord> | undefined | null = {}) : void {
    if (auditLogRecord) {
        serializeEntity(writer, auditLogRecord)
        writer.writeCollectionOfPrimitiveValues<string>("administrativeUnits", auditLogRecord.administrativeUnits);
        writer.writeObjectValue<AuditData>("auditData", auditLogRecord.auditData, serializeAuditData);
        writer.writeEnumValue<AuditLogRecordType>("auditLogRecordType", auditLogRecord.auditLogRecordType);
        writer.writeStringValue("clientIp", auditLogRecord.clientIp);
        writer.writeDateValue("createdDateTime", auditLogRecord.createdDateTime);
        writer.writeStringValue("objectId", auditLogRecord.objectId);
        writer.writeStringValue("operation", auditLogRecord.operation);
        writer.writeStringValue("organizationId", auditLogRecord.organizationId);
        writer.writeStringValue("service", auditLogRecord.service);
        writer.writeStringValue("userId", auditLogRecord.userId);
        writer.writeStringValue("userPrincipalName", auditLogRecord.userPrincipalName);
        writer.writeEnumValue<AuditLogUserType>("userType", auditLogRecord.userType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditLogRecordCollectionResponse(writer: SerializationWriter, auditLogRecordCollectionResponse: Partial<AuditLogRecordCollectionResponse> | undefined | null = {}) : void {
    if (auditLogRecordCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, auditLogRecordCollectionResponse)
        writer.writeCollectionOfObjectValues<AuditLogRecord>("value", auditLogRecordCollectionResponse.value, serializeAuditLogRecord);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditSearchAuditRecord(writer: SerializationWriter, auditSearchAuditRecord: Partial<AuditSearchAuditRecord> | undefined | null = {}) : void {
    if (auditSearchAuditRecord) {
        serializeAuditData(writer, auditSearchAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuthorityTemplate(writer: SerializationWriter, authorityTemplate: Partial<AuthorityTemplate> | undefined | null = {}) : void {
    if (authorityTemplate) {
        serializeFilePlanDescriptorTemplate(writer, authorityTemplate)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuthorityTemplateCollectionResponse(writer: SerializationWriter, authorityTemplateCollectionResponse: Partial<AuthorityTemplateCollectionResponse> | undefined | null = {}) : void {
    if (authorityTemplateCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, authorityTemplateCollectionResponse)
        writer.writeCollectionOfObjectValues<AuthorityTemplate>("value", authorityTemplateCollectionResponse.value, serializeAuthorityTemplate);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAutonomousSystem(writer: SerializationWriter, autonomousSystem: Partial<AutonomousSystem> | undefined | null = {}) : void {
    if (autonomousSystem) {
        writer.writeStringValue("name", autonomousSystem.name);
        writer.writeNumberValue("number", autonomousSystem.number);
        writer.writeStringValue("@odata.type", autonomousSystem.odataType);
        writer.writeStringValue("organization", autonomousSystem.organization);
        writer.writeStringValue("value", autonomousSystem.value);
        writer.writeAdditionalData(autonomousSystem.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAzureActiveDirectoryAccountLogonAuditRecord(writer: SerializationWriter, azureActiveDirectoryAccountLogonAuditRecord: Partial<AzureActiveDirectoryAccountLogonAuditRecord> | undefined | null = {}) : void {
    if (azureActiveDirectoryAccountLogonAuditRecord) {
        serializeAuditData(writer, azureActiveDirectoryAccountLogonAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAzureActiveDirectoryAuditRecord(writer: SerializationWriter, azureActiveDirectoryAuditRecord: Partial<AzureActiveDirectoryAuditRecord> | undefined | null = {}) : void {
    if (azureActiveDirectoryAuditRecord) {
        serializeAuditData(writer, azureActiveDirectoryAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAzureActiveDirectoryBaseAuditRecord(writer: SerializationWriter, azureActiveDirectoryBaseAuditRecord: Partial<AzureActiveDirectoryBaseAuditRecord> | undefined | null = {}) : void {
    if (azureActiveDirectoryBaseAuditRecord) {
        serializeAuditData(writer, azureActiveDirectoryBaseAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAzureActiveDirectoryStsLogonAuditRecord(writer: SerializationWriter, azureActiveDirectoryStsLogonAuditRecord: Partial<AzureActiveDirectoryStsLogonAuditRecord> | undefined | null = {}) : void {
    if (azureActiveDirectoryStsLogonAuditRecord) {
        serializeAuditData(writer, azureActiveDirectoryStsLogonAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAzureResourceEvidence(writer: SerializationWriter, azureResourceEvidence: Partial<AzureResourceEvidence> | undefined | null = {}) : void {
    if (azureResourceEvidence) {
        serializeAlertEvidence(writer, azureResourceEvidence)
        writer.writeStringValue("resourceId", azureResourceEvidence.resourceId);
        writer.writeStringValue("resourceName", azureResourceEvidence.resourceName);
        writer.writeStringValue("resourceType", azureResourceEvidence.resourceType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBlobContainerEvidence(writer: SerializationWriter, blobContainerEvidence: Partial<BlobContainerEvidence> | undefined | null = {}) : void {
    if (blobContainerEvidence) {
        serializeAlertEvidence(writer, blobContainerEvidence)
        writer.writeStringValue("name", blobContainerEvidence.name);
        writer.writeObjectValue<AzureResourceEvidence>("storageResource", blobContainerEvidence.storageResource, serializeAzureResourceEvidence);
        writer.writeStringValue("url", blobContainerEvidence.url);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBlobEvidence(writer: SerializationWriter, blobEvidence: Partial<BlobEvidence> | undefined | null = {}) : void {
    if (blobEvidence) {
        serializeAlertEvidence(writer, blobEvidence)
        writer.writeObjectValue<BlobContainerEvidence>("blobContainer", blobEvidence.blobContainer, serializeBlobContainerEvidence);
        writer.writeStringValue("etag", blobEvidence.etag);
        writer.writeCollectionOfObjectValues<FileHash>("fileHashes", blobEvidence.fileHashes, serializeFileHash);
        writer.writeStringValue("name", blobEvidence.name);
        writer.writeStringValue("url", blobEvidence.url);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBlockFileResponseAction(writer: SerializationWriter, blockFileResponseAction: Partial<BlockFileResponseAction> | undefined | null = {}) : void {
    if (blockFileResponseAction) {
        serializeResponseAction(writer, blockFileResponseAction)
        writer.writeCollectionOfPrimitiveValues<string>("deviceGroupNames", blockFileResponseAction.deviceGroupNames);
        writer.writeEnumValue<FileEntityIdentifier[]>("identifier", blockFileResponseAction.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCampaignAuditRecord(writer: SerializationWriter, campaignAuditRecord: Partial<CampaignAuditRecord> | undefined | null = {}) : void {
    if (campaignAuditRecord) {
        serializeAuditData(writer, campaignAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCaseAuditRecord(writer: SerializationWriter, caseAuditRecord: Partial<CaseAuditRecord> | undefined | null = {}) : void {
    if (caseAuditRecord) {
        serializeAuditData(writer, caseAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCaseEscaped(writer: SerializationWriter, caseEscaped: Partial<CaseEscaped> | undefined | null = {}) : void {
    if (caseEscaped) {
        serializeEntity(writer, caseEscaped)
        writer.writeDateValue("createdDateTime", caseEscaped.createdDateTime);
        writer.writeStringValue("description", caseEscaped.description);
        writer.writeStringValue("displayName", caseEscaped.displayName);
        writer.writeObjectValue<IdentitySet>("lastModifiedBy", caseEscaped.lastModifiedBy, serializeIdentitySet);
        writer.writeDateValue("lastModifiedDateTime", caseEscaped.lastModifiedDateTime);
        writer.writeEnumValue<CaseStatus>("status", caseEscaped.status);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCaseInvestigation(writer: SerializationWriter, caseInvestigation: Partial<CaseInvestigation> | undefined | null = {}) : void {
    if (caseInvestigation) {
        serializeAuditData(writer, caseInvestigation)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCaseOperation(writer: SerializationWriter, caseOperation: Partial<CaseOperation> | undefined | null = {}) : void {
    if (caseOperation) {
        serializeEntity(writer, caseOperation)
        writer.writeEnumValue<CaseAction>("action", caseOperation.action);
        writer.writeDateValue("completedDateTime", caseOperation.completedDateTime);
        writer.writeObjectValue<IdentitySet>("createdBy", caseOperation.createdBy, serializeIdentitySet);
        writer.writeDateValue("createdDateTime", caseOperation.createdDateTime);
        writer.writeNumberValue("percentProgress", caseOperation.percentProgress);
        writer.writeObjectValue<ResultInfo>("resultInfo", caseOperation.resultInfo, serializeResultInfo);
        writer.writeEnumValue<CaseOperationStatus>("status", caseOperation.status);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCaseOperationCollectionResponse(writer: SerializationWriter, caseOperationCollectionResponse: Partial<CaseOperationCollectionResponse> | undefined | null = {}) : void {
    if (caseOperationCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, caseOperationCollectionResponse)
        writer.writeCollectionOfObjectValues<CaseOperation>("value", caseOperationCollectionResponse.value, serializeCaseOperation);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCasesRoot(writer: SerializationWriter, casesRoot: Partial<CasesRoot> | undefined | null = {}) : void {
    if (casesRoot) {
        serializeEntity(writer, casesRoot)
        writer.writeCollectionOfObjectValues<EdiscoveryCase>("ediscoveryCases", casesRoot.ediscoveryCases, serializeEdiscoveryCase);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCategoryTemplate(writer: SerializationWriter, categoryTemplate: Partial<CategoryTemplate> | undefined | null = {}) : void {
    if (categoryTemplate) {
        serializeFilePlanDescriptorTemplate(writer, categoryTemplate)
        writer.writeCollectionOfObjectValues<SubcategoryTemplate>("subcategories", categoryTemplate.subcategories, serializeSubcategoryTemplate);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCategoryTemplateCollectionResponse(writer: SerializationWriter, categoryTemplateCollectionResponse: Partial<CategoryTemplateCollectionResponse> | undefined | null = {}) : void {
    if (categoryTemplateCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, categoryTemplateCollectionResponse)
        writer.writeCollectionOfObjectValues<CategoryTemplate>("value", categoryTemplateCollectionResponse.value, serializeCategoryTemplate);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCdpColdCrawlStatusRecord(writer: SerializationWriter, cdpColdCrawlStatusRecord: Partial<CdpColdCrawlStatusRecord> | undefined | null = {}) : void {
    if (cdpColdCrawlStatusRecord) {
        serializeAuditData(writer, cdpColdCrawlStatusRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCdpContentExplorerAggregateRecord(writer: SerializationWriter, cdpContentExplorerAggregateRecord: Partial<CdpContentExplorerAggregateRecord> | undefined | null = {}) : void {
    if (cdpContentExplorerAggregateRecord) {
        serializeAuditData(writer, cdpContentExplorerAggregateRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCdpDlpSensitiveAuditRecord(writer: SerializationWriter, cdpDlpSensitiveAuditRecord: Partial<CdpDlpSensitiveAuditRecord> | undefined | null = {}) : void {
    if (cdpDlpSensitiveAuditRecord) {
        serializeAuditData(writer, cdpDlpSensitiveAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCdpDlpSensitiveEndpointAuditRecord(writer: SerializationWriter, cdpDlpSensitiveEndpointAuditRecord: Partial<CdpDlpSensitiveEndpointAuditRecord> | undefined | null = {}) : void {
    if (cdpDlpSensitiveEndpointAuditRecord) {
        serializeAuditData(writer, cdpDlpSensitiveEndpointAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCdpLogRecord(writer: SerializationWriter, cdpLogRecord: Partial<CdpLogRecord> | undefined | null = {}) : void {
    if (cdpLogRecord) {
        serializeAuditData(writer, cdpLogRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCdpOcrBillingRecord(writer: SerializationWriter, cdpOcrBillingRecord: Partial<CdpOcrBillingRecord> | undefined | null = {}) : void {
    if (cdpOcrBillingRecord) {
        serializeAuditData(writer, cdpOcrBillingRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCdpResourceScopeChangeEventRecord(writer: SerializationWriter, cdpResourceScopeChangeEventRecord: Partial<CdpResourceScopeChangeEventRecord> | undefined | null = {}) : void {
    if (cdpResourceScopeChangeEventRecord) {
        serializeAuditData(writer, cdpResourceScopeChangeEventRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCernerSMSLinkRecord(writer: SerializationWriter, cernerSMSLinkRecord: Partial<CernerSMSLinkRecord> | undefined | null = {}) : void {
    if (cernerSMSLinkRecord) {
        serializeAuditData(writer, cernerSMSLinkRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCernerSMSSettingsUpdateRecord(writer: SerializationWriter, cernerSMSSettingsUpdateRecord: Partial<CernerSMSSettingsUpdateRecord> | undefined | null = {}) : void {
    if (cernerSMSSettingsUpdateRecord) {
        serializeAuditData(writer, cernerSMSSettingsUpdateRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCernerSMSUnlinkRecord(writer: SerializationWriter, cernerSMSUnlinkRecord: Partial<CernerSMSUnlinkRecord> | undefined | null = {}) : void {
    if (cernerSMSUnlinkRecord) {
        serializeAuditData(writer, cernerSMSUnlinkRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCitationTemplate(writer: SerializationWriter, citationTemplate: Partial<CitationTemplate> | undefined | null = {}) : void {
    if (citationTemplate) {
        serializeFilePlanDescriptorTemplate(writer, citationTemplate)
        writer.writeStringValue("citationJurisdiction", citationTemplate.citationJurisdiction);
        writer.writeStringValue("citationUrl", citationTemplate.citationUrl);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCitationTemplateCollectionResponse(writer: SerializationWriter, citationTemplateCollectionResponse: Partial<CitationTemplateCollectionResponse> | undefined | null = {}) : void {
    if (citationTemplateCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, citationTemplateCollectionResponse)
        writer.writeCollectionOfObjectValues<CitationTemplate>("value", citationTemplateCollectionResponse.value, serializeCitationTemplate);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeClassificationResult(writer: SerializationWriter, classificationResult: Partial<ClassificationResult> | undefined | null = {}) : void {
    if (classificationResult) {
        writer.writeNumberValue("confidenceLevel", classificationResult.confidenceLevel);
        writer.writeNumberValue("count", classificationResult.count);
        writer.writeStringValue("@odata.type", classificationResult.odataType);
        writer.writeStringValue("sensitiveTypeId", classificationResult.sensitiveTypeId);
        writer.writeAdditionalData(classificationResult.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCloudApplicationEvidence(writer: SerializationWriter, cloudApplicationEvidence: Partial<CloudApplicationEvidence> | undefined | null = {}) : void {
    if (cloudApplicationEvidence) {
        serializeAlertEvidence(writer, cloudApplicationEvidence)
        writer.writeNumberValue("appId", cloudApplicationEvidence.appId);
        writer.writeStringValue("displayName", cloudApplicationEvidence.displayName);
        writer.writeNumberValue("instanceId", cloudApplicationEvidence.instanceId);
        writer.writeStringValue("instanceName", cloudApplicationEvidence.instanceName);
        writer.writeNumberValue("saasAppId", cloudApplicationEvidence.saasAppId);
        writer.writeObjectValue<Stream>("stream", cloudApplicationEvidence.stream, serializeStream);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCloudLogonRequestEvidence(writer: SerializationWriter, cloudLogonRequestEvidence: Partial<CloudLogonRequestEvidence> | undefined | null = {}) : void {
    if (cloudLogonRequestEvidence) {
        serializeAlertEvidence(writer, cloudLogonRequestEvidence)
        writer.writeStringValue("requestId", cloudLogonRequestEvidence.requestId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCloudLogonSessionEvidence(writer: SerializationWriter, cloudLogonSessionEvidence: Partial<CloudLogonSessionEvidence> | undefined | null = {}) : void {
    if (cloudLogonSessionEvidence) {
        serializeAlertEvidence(writer, cloudLogonSessionEvidence)
        writer.writeObjectValue<UserEvidence>("account", cloudLogonSessionEvidence.account, serializeUserEvidence);
        writer.writeStringValue("browser", cloudLogonSessionEvidence.browser);
        writer.writeStringValue("deviceName", cloudLogonSessionEvidence.deviceName);
        writer.writeStringValue("operatingSystem", cloudLogonSessionEvidence.operatingSystem);
        writer.writeDateValue("previousLogonDateTime", cloudLogonSessionEvidence.previousLogonDateTime);
        writer.writeStringValue("protocol", cloudLogonSessionEvidence.protocol);
        writer.writeStringValue("sessionId", cloudLogonSessionEvidence.sessionId);
        writer.writeDateValue("startUtcDateTime", cloudLogonSessionEvidence.startUtcDateTime);
        writer.writeStringValue("userAgent", cloudLogonSessionEvidence.userAgent);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCollaborationRoot(writer: SerializationWriter, collaborationRoot: Partial<CollaborationRoot> | undefined | null = {}) : void {
    if (collaborationRoot) {
        serializeEntity(writer, collaborationRoot)
        writer.writeCollectionOfObjectValues<AnalyzedEmail>("analyzedEmails", collaborationRoot.analyzedEmails, serializeAnalyzedEmail);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCollectInvestigationPackageResponseAction(writer: SerializationWriter, collectInvestigationPackageResponseAction: Partial<CollectInvestigationPackageResponseAction> | undefined | null = {}) : void {
    if (collectInvestigationPackageResponseAction) {
        serializeResponseAction(writer, collectInvestigationPackageResponseAction)
        writer.writeEnumValue<DeviceIdEntityIdentifier[]>("identifier", collectInvestigationPackageResponseAction.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceConnectorAuditRecord(writer: SerializationWriter, complianceConnectorAuditRecord: Partial<ComplianceConnectorAuditRecord> | undefined | null = {}) : void {
    if (complianceConnectorAuditRecord) {
        serializeAuditData(writer, complianceConnectorAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDLMExchangeAuditRecord(writer: SerializationWriter, complianceDLMExchangeAuditRecord: Partial<ComplianceDLMExchangeAuditRecord> | undefined | null = {}) : void {
    if (complianceDLMExchangeAuditRecord) {
        serializeAuditData(writer, complianceDLMExchangeAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDLMSharePointAuditRecord(writer: SerializationWriter, complianceDLMSharePointAuditRecord: Partial<ComplianceDLMSharePointAuditRecord> | undefined | null = {}) : void {
    if (complianceDLMSharePointAuditRecord) {
        serializeAuditData(writer, complianceDLMSharePointAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpApplicationsAuditRecord(writer: SerializationWriter, complianceDlpApplicationsAuditRecord: Partial<ComplianceDlpApplicationsAuditRecord> | undefined | null = {}) : void {
    if (complianceDlpApplicationsAuditRecord) {
        serializeAuditData(writer, complianceDlpApplicationsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpApplicationsClassificationAuditRecord(writer: SerializationWriter, complianceDlpApplicationsClassificationAuditRecord: Partial<ComplianceDlpApplicationsClassificationAuditRecord> | undefined | null = {}) : void {
    if (complianceDlpApplicationsClassificationAuditRecord) {
        serializeAuditData(writer, complianceDlpApplicationsClassificationAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpBaseAuditRecord(writer: SerializationWriter, complianceDlpBaseAuditRecord: Partial<ComplianceDlpBaseAuditRecord> | undefined | null = {}) : void {
    if (complianceDlpBaseAuditRecord) {
        serializeAuditData(writer, complianceDlpBaseAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpClassificationBaseAuditRecord(writer: SerializationWriter, complianceDlpClassificationBaseAuditRecord: Partial<ComplianceDlpClassificationBaseAuditRecord> | undefined | null = {}) : void {
    if (complianceDlpClassificationBaseAuditRecord) {
        serializeAuditData(writer, complianceDlpClassificationBaseAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpClassificationBaseCdpRecord(writer: SerializationWriter, complianceDlpClassificationBaseCdpRecord: Partial<ComplianceDlpClassificationBaseCdpRecord> | undefined | null = {}) : void {
    if (complianceDlpClassificationBaseCdpRecord) {
        serializeAuditData(writer, complianceDlpClassificationBaseCdpRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpEndpointAuditRecord(writer: SerializationWriter, complianceDlpEndpointAuditRecord: Partial<ComplianceDlpEndpointAuditRecord> | undefined | null = {}) : void {
    if (complianceDlpEndpointAuditRecord) {
        serializeAuditData(writer, complianceDlpEndpointAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpEndpointDiscoveryAuditRecord(writer: SerializationWriter, complianceDlpEndpointDiscoveryAuditRecord: Partial<ComplianceDlpEndpointDiscoveryAuditRecord> | undefined | null = {}) : void {
    if (complianceDlpEndpointDiscoveryAuditRecord) {
        serializeAuditData(writer, complianceDlpEndpointDiscoveryAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpExchangeAuditRecord(writer: SerializationWriter, complianceDlpExchangeAuditRecord: Partial<ComplianceDlpExchangeAuditRecord> | undefined | null = {}) : void {
    if (complianceDlpExchangeAuditRecord) {
        serializeAuditData(writer, complianceDlpExchangeAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpExchangeClassificationAuditRecord(writer: SerializationWriter, complianceDlpExchangeClassificationAuditRecord: Partial<ComplianceDlpExchangeClassificationAuditRecord> | undefined | null = {}) : void {
    if (complianceDlpExchangeClassificationAuditRecord) {
        serializeAuditData(writer, complianceDlpExchangeClassificationAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpExchangeClassificationCdpRecord(writer: SerializationWriter, complianceDlpExchangeClassificationCdpRecord: Partial<ComplianceDlpExchangeClassificationCdpRecord> | undefined | null = {}) : void {
    if (complianceDlpExchangeClassificationCdpRecord) {
        serializeAuditData(writer, complianceDlpExchangeClassificationCdpRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpExchangeDiscoveryAuditRecord(writer: SerializationWriter, complianceDlpExchangeDiscoveryAuditRecord: Partial<ComplianceDlpExchangeDiscoveryAuditRecord> | undefined | null = {}) : void {
    if (complianceDlpExchangeDiscoveryAuditRecord) {
        serializeAuditData(writer, complianceDlpExchangeDiscoveryAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpSharePointAuditRecord(writer: SerializationWriter, complianceDlpSharePointAuditRecord: Partial<ComplianceDlpSharePointAuditRecord> | undefined | null = {}) : void {
    if (complianceDlpSharePointAuditRecord) {
        serializeAuditData(writer, complianceDlpSharePointAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpSharePointClassificationAuditRecord(writer: SerializationWriter, complianceDlpSharePointClassificationAuditRecord: Partial<ComplianceDlpSharePointClassificationAuditRecord> | undefined | null = {}) : void {
    if (complianceDlpSharePointClassificationAuditRecord) {
        serializeAuditData(writer, complianceDlpSharePointClassificationAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpSharePointClassificationExtendedAuditRecord(writer: SerializationWriter, complianceDlpSharePointClassificationExtendedAuditRecord: Partial<ComplianceDlpSharePointClassificationExtendedAuditRecord> | undefined | null = {}) : void {
    if (complianceDlpSharePointClassificationExtendedAuditRecord) {
        serializeAuditData(writer, complianceDlpSharePointClassificationExtendedAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceManagerActionRecord(writer: SerializationWriter, complianceManagerActionRecord: Partial<ComplianceManagerActionRecord> | undefined | null = {}) : void {
    if (complianceManagerActionRecord) {
        serializeAuditData(writer, complianceManagerActionRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceSupervisionBaseAuditRecord(writer: SerializationWriter, complianceSupervisionBaseAuditRecord: Partial<ComplianceSupervisionBaseAuditRecord> | undefined | null = {}) : void {
    if (complianceSupervisionBaseAuditRecord) {
        serializeAuditData(writer, complianceSupervisionBaseAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceSupervisionExchangeAuditRecord(writer: SerializationWriter, complianceSupervisionExchangeAuditRecord: Partial<ComplianceSupervisionExchangeAuditRecord> | undefined | null = {}) : void {
    if (complianceSupervisionExchangeAuditRecord) {
        serializeAuditData(writer, complianceSupervisionExchangeAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeConsumptionResourceAuditRecord(writer: SerializationWriter, consumptionResourceAuditRecord: Partial<ConsumptionResourceAuditRecord> | undefined | null = {}) : void {
    if (consumptionResourceAuditRecord) {
        serializeAuditData(writer, consumptionResourceAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeContainerEvidence(writer: SerializationWriter, containerEvidence: Partial<ContainerEvidence> | undefined | null = {}) : void {
    if (containerEvidence) {
        serializeAlertEvidence(writer, containerEvidence)
        writer.writeCollectionOfPrimitiveValues<string>("args", containerEvidence.args);
        writer.writeCollectionOfPrimitiveValues<string>("command", containerEvidence.command);
        writer.writeStringValue("containerId", containerEvidence.containerId);
        writer.writeObjectValue<ContainerImageEvidence>("image", containerEvidence.image, serializeContainerImageEvidence);
        writer.writeBooleanValue("isPrivileged", containerEvidence.isPrivileged);
        writer.writeStringValue("name", containerEvidence.name);
        writer.writeObjectValue<KubernetesPodEvidence>("pod", containerEvidence.pod, serializeKubernetesPodEvidence);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeContainerImageEvidence(writer: SerializationWriter, containerImageEvidence: Partial<ContainerImageEvidence> | undefined | null = {}) : void {
    if (containerImageEvidence) {
        serializeAlertEvidence(writer, containerImageEvidence)
        writer.writeObjectValue<ContainerImageEvidence>("digestImage", containerImageEvidence.digestImage, serializeContainerImageEvidence);
        writer.writeStringValue("imageId", containerImageEvidence.imageId);
        writer.writeObjectValue<ContainerRegistryEvidence>("registry", containerImageEvidence.registry, serializeContainerRegistryEvidence);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeContainerRegistryEvidence(writer: SerializationWriter, containerRegistryEvidence: Partial<ContainerRegistryEvidence> | undefined | null = {}) : void {
    if (containerRegistryEvidence) {
        serializeAlertEvidence(writer, containerRegistryEvidence)
        writer.writeStringValue("registry", containerRegistryEvidence.registry);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeContentInfo(writer: SerializationWriter, contentInfo: Partial<ContentInfo> | undefined | null = {}) : void {
    if (contentInfo) {
        writer.writeStringValue("contentFormat", contentInfo.contentFormat);
        writer.writeStringValue("identifier", contentInfo.identifier);
        writer.writeCollectionOfObjectValues<KeyValuePair>("metadata", contentInfo.metadata, serializeKeyValuePair);
        writer.writeStringValue("@odata.type", contentInfo.odataType);
        writer.writeEnumValue<ContentState>("state", contentInfo.state);
        writer.writeAdditionalData(contentInfo.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeContentLabel(writer: SerializationWriter, contentLabel: Partial<ContentLabel> | undefined | null = {}) : void {
    if (contentLabel) {
        writer.writeEnumValue<AssignmentMethod>("assignmentMethod", contentLabel.assignmentMethod);
        writer.writeDateValue("createdDateTime", contentLabel.createdDateTime);
        writer.writeStringValue("@odata.type", contentLabel.odataType);
        writer.writeStringValue("sensitivityLabelId", contentLabel.sensitivityLabelId);
        writer.writeAdditionalData(contentLabel.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCopilotInteractionAuditRecord(writer: SerializationWriter, copilotInteractionAuditRecord: Partial<CopilotInteractionAuditRecord> | undefined | null = {}) : void {
    if (copilotInteractionAuditRecord) {
        serializeAuditData(writer, copilotInteractionAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCoreReportingSettingsAuditRecord(writer: SerializationWriter, coreReportingSettingsAuditRecord: Partial<CoreReportingSettingsAuditRecord> | undefined | null = {}) : void {
    if (coreReportingSettingsAuditRecord) {
        serializeAuditData(writer, coreReportingSettingsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCortanaBriefingAuditRecord(writer: SerializationWriter, cortanaBriefingAuditRecord: Partial<CortanaBriefingAuditRecord> | undefined | null = {}) : void {
    if (cortanaBriefingAuditRecord) {
        serializeAuditData(writer, cortanaBriefingAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCpsCommonPolicyAuditRecord(writer: SerializationWriter, cpsCommonPolicyAuditRecord: Partial<CpsCommonPolicyAuditRecord> | undefined | null = {}) : void {
    if (cpsCommonPolicyAuditRecord) {
        serializeAuditData(writer, cpsCommonPolicyAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCpsPolicyConfigAuditRecord(writer: SerializationWriter, cpsPolicyConfigAuditRecord: Partial<CpsPolicyConfigAuditRecord> | undefined | null = {}) : void {
    if (cpsPolicyConfigAuditRecord) {
        serializeAuditData(writer, cpsPolicyConfigAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCrmBaseAuditRecord(writer: SerializationWriter, crmBaseAuditRecord: Partial<CrmBaseAuditRecord> | undefined | null = {}) : void {
    if (crmBaseAuditRecord) {
        serializeAuditData(writer, crmBaseAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCrmEntityOperationAuditRecord(writer: SerializationWriter, crmEntityOperationAuditRecord: Partial<CrmEntityOperationAuditRecord> | undefined | null = {}) : void {
    if (crmEntityOperationAuditRecord) {
        serializeAuditData(writer, crmEntityOperationAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCustomAction(writer: SerializationWriter, customAction: Partial<CustomAction> | undefined | null = {}) : void {
    if (customAction) {
        serializeInformationProtectionAction(writer, customAction)
        writer.writeStringValue("name", customAction.name);
        writer.writeCollectionOfObjectValues<KeyValuePair>("properties", customAction.properties, serializeKeyValuePair);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCustomerKeyServiceEncryptionAuditRecord(writer: SerializationWriter, customerKeyServiceEncryptionAuditRecord: Partial<CustomerKeyServiceEncryptionAuditRecord> | undefined | null = {}) : void {
    if (customerKeyServiceEncryptionAuditRecord) {
        serializeAuditData(writer, customerKeyServiceEncryptionAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCvssSummary(writer: SerializationWriter, cvssSummary: Partial<CvssSummary> | undefined | null = {}) : void {
    if (cvssSummary) {
        writer.writeStringValue("@odata.type", cvssSummary.odataType);
        writer.writeNumberValue("score", cvssSummary.score);
        writer.writeEnumValue<VulnerabilitySeverity>("severity", cvssSummary.severity);
        writer.writeStringValue("vectorString", cvssSummary.vectorString);
        writer.writeAdditionalData(cvssSummary.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataCenterSecurityBaseAuditRecord(writer: SerializationWriter, dataCenterSecurityBaseAuditRecord: Partial<DataCenterSecurityBaseAuditRecord> | undefined | null = {}) : void {
    if (dataCenterSecurityBaseAuditRecord) {
        serializeAuditData(writer, dataCenterSecurityBaseAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataCenterSecurityCmdletAuditRecord(writer: SerializationWriter, dataCenterSecurityCmdletAuditRecord: Partial<DataCenterSecurityCmdletAuditRecord> | undefined | null = {}) : void {
    if (dataCenterSecurityCmdletAuditRecord) {
        serializeAuditData(writer, dataCenterSecurityCmdletAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataGovernanceAuditRecord(writer: SerializationWriter, dataGovernanceAuditRecord: Partial<DataGovernanceAuditRecord> | undefined | null = {}) : void {
    if (dataGovernanceAuditRecord) {
        serializeAuditData(writer, dataGovernanceAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataInsightsRestApiAuditRecord(writer: SerializationWriter, dataInsightsRestApiAuditRecord: Partial<DataInsightsRestApiAuditRecord> | undefined | null = {}) : void {
    if (dataInsightsRestApiAuditRecord) {
        serializeAuditData(writer, dataInsightsRestApiAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataLakeExportOperationAuditRecord(writer: SerializationWriter, dataLakeExportOperationAuditRecord: Partial<DataLakeExportOperationAuditRecord> | undefined | null = {}) : void {
    if (dataLakeExportOperationAuditRecord) {
        serializeAuditData(writer, dataLakeExportOperationAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataSet(writer: SerializationWriter, dataSet: Partial<DataSet> | undefined | null = {}) : void {
    if (dataSet) {
        serializeEntity(writer, dataSet)
        writer.writeObjectValue<IdentitySet>("createdBy", dataSet.createdBy, serializeIdentitySet);
        writer.writeDateValue("createdDateTime", dataSet.createdDateTime);
        writer.writeStringValue("displayName", dataSet.displayName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataShareOperationAuditRecord(writer: SerializationWriter, dataShareOperationAuditRecord: Partial<DataShareOperationAuditRecord> | undefined | null = {}) : void {
    if (dataShareOperationAuditRecord) {
        serializeAuditData(writer, dataShareOperationAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataSource(writer: SerializationWriter, dataSource: Partial<DataSource> | undefined | null = {}) : void {
    if (dataSource) {
        serializeEntity(writer, dataSource)
        writer.writeObjectValue<IdentitySet>("createdBy", dataSource.createdBy, serializeIdentitySet);
        writer.writeDateValue("createdDateTime", dataSource.createdDateTime);
        writer.writeStringValue("displayName", dataSource.displayName);
        writer.writeEnumValue<DataSourceHoldStatus>("holdStatus", dataSource.holdStatus);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataSourceCollectionResponse(writer: SerializationWriter, dataSourceCollectionResponse: Partial<DataSourceCollectionResponse> | undefined | null = {}) : void {
    if (dataSourceCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, dataSourceCollectionResponse)
        writer.writeCollectionOfObjectValues<DataSource>("value", dataSourceCollectionResponse.value, serializeDataSource);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataSourceContainer(writer: SerializationWriter, dataSourceContainer: Partial<DataSourceContainer> | undefined | null = {}) : void {
    if (dataSourceContainer) {
        serializeEntity(writer, dataSourceContainer)
        writer.writeDateValue("createdDateTime", dataSourceContainer.createdDateTime);
        writer.writeStringValue("displayName", dataSourceContainer.displayName);
        writer.writeEnumValue<DataSourceHoldStatus>("holdStatus", dataSourceContainer.holdStatus);
        writer.writeDateValue("lastModifiedDateTime", dataSourceContainer.lastModifiedDateTime);
        writer.writeDateValue("releasedDateTime", dataSourceContainer.releasedDateTime);
        writer.writeEnumValue<DataSourceContainerStatus>("status", dataSourceContainer.status);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDefaultAuditData(writer: SerializationWriter, defaultAuditData: Partial<DefaultAuditData> | undefined | null = {}) : void {
    if (defaultAuditData) {
        serializeAuditData(writer, defaultAuditData)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDefenderSecurityAlertBaseRecord(writer: SerializationWriter, defenderSecurityAlertBaseRecord: Partial<DefenderSecurityAlertBaseRecord> | undefined | null = {}) : void {
    if (defenderSecurityAlertBaseRecord) {
        serializeAuditData(writer, defenderSecurityAlertBaseRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeleteCertificateRecord(writer: SerializationWriter, deleteCertificateRecord: Partial<DeleteCertificateRecord> | undefined | null = {}) : void {
    if (deleteCertificateRecord) {
        serializeAuditData(writer, deleteCertificateRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDepartmentTemplate(writer: SerializationWriter, departmentTemplate: Partial<DepartmentTemplate> | undefined | null = {}) : void {
    if (departmentTemplate) {
        serializeFilePlanDescriptorTemplate(writer, departmentTemplate)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDepartmentTemplateCollectionResponse(writer: SerializationWriter, departmentTemplateCollectionResponse: Partial<DepartmentTemplateCollectionResponse> | undefined | null = {}) : void {
    if (departmentTemplateCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, departmentTemplateCollectionResponse)
        writer.writeCollectionOfObjectValues<DepartmentTemplate>("value", departmentTemplateCollectionResponse.value, serializeDepartmentTemplate);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeploymentAccessKeyType(writer: SerializationWriter, deploymentAccessKeyType: Partial<DeploymentAccessKeyType> | undefined | null = {}) : void {
    if (deploymentAccessKeyType) {
        writer.writeStringValue("deploymentAccessKey", deploymentAccessKeyType.deploymentAccessKey);
        writer.writeStringValue("@odata.type", deploymentAccessKeyType.odataType);
        writer.writeAdditionalData(deploymentAccessKeyType.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDetectionAction(writer: SerializationWriter, detectionAction: Partial<DetectionAction> | undefined | null = {}) : void {
    if (detectionAction) {
        writer.writeObjectValue<AlertTemplate>("alertTemplate", detectionAction.alertTemplate, serializeAlertTemplate);
        writer.writeStringValue("@odata.type", detectionAction.odataType);
        writer.writeObjectValue<OrganizationalScope>("organizationalScope", detectionAction.organizationalScope, serializeOrganizationalScope);
        writer.writeCollectionOfObjectValues<ResponseAction>("responseActions", detectionAction.responseActions, serializeResponseAction);
        writer.writeAdditionalData(detectionAction.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDetectionRule(writer: SerializationWriter, detectionRule: Partial<DetectionRule> | undefined | null = {}) : void {
    if (detectionRule) {
        serializeProtectionRule(writer, detectionRule)
        writer.writeObjectValue<DetectionAction>("detectionAction", detectionRule.detectionAction, serializeDetectionAction);
        writer.writeStringValue("detectorId", detectionRule.detectorId);
        writer.writeObjectValue<RunDetails>("lastRunDetails", detectionRule.lastRunDetails, serializeRunDetails);
        writer.writeObjectValue<QueryCondition>("queryCondition", detectionRule.queryCondition, serializeQueryCondition);
        writer.writeObjectValue<RuleSchedule>("schedule", detectionRule.schedule, serializeRuleSchedule);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDetectionRuleCollectionResponse(writer: SerializationWriter, detectionRuleCollectionResponse: Partial<DetectionRuleCollectionResponse> | undefined | null = {}) : void {
    if (detectionRuleCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, detectionRuleCollectionResponse)
        writer.writeCollectionOfObjectValues<DetectionRule>("value", detectionRuleCollectionResponse.value, serializeDetectionRule);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDetonationChain(writer: SerializationWriter, detonationChain: Partial<DetonationChain> | undefined | null = {}) : void {
    if (detonationChain) {
        writer.writeCollectionOfObjectValues<DetonationChain>("childNodes", detonationChain.childNodes, serializeDetonationChain);
        writer.writeStringValue("@odata.type", detonationChain.odataType);
        writer.writeStringValue("value", detonationChain.value);
        writer.writeAdditionalData(detonationChain.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDetonationDetails(writer: SerializationWriter, detonationDetails: Partial<DetonationDetails> | undefined | null = {}) : void {
    if (detonationDetails) {
        writer.writeDateValue("analysisDateTime", detonationDetails.analysisDateTime);
        writer.writeObjectValue<DetonationChain>("detonationChain", detonationDetails.detonationChain, serializeDetonationChain);
        writer.writeObjectValue<DetonationObservables>("detonationObservables", detonationDetails.detonationObservables, serializeDetonationObservables);
        writer.writeStringValue("detonationVerdict", detonationDetails.detonationVerdict);
        writer.writeStringValue("detonationVerdictReason", detonationDetails.detonationVerdictReason);
        writer.writeStringValue("@odata.type", detonationDetails.odataType);
        writer.writeAdditionalData(detonationDetails.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDetonationObservables(writer: SerializationWriter, detonationObservables: Partial<DetonationObservables> | undefined | null = {}) : void {
    if (detonationObservables) {
        writer.writeCollectionOfPrimitiveValues<string>("contactedIps", detonationObservables.contactedIps);
        writer.writeCollectionOfPrimitiveValues<string>("contactedUrls", detonationObservables.contactedUrls);
        writer.writeCollectionOfPrimitiveValues<string>("droppedfiles", detonationObservables.droppedfiles);
        writer.writeStringValue("@odata.type", detonationObservables.odataType);
        writer.writeAdditionalData(detonationObservables.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeviceEvidence(writer: SerializationWriter, deviceEvidence: Partial<DeviceEvidence> | undefined | null = {}) : void {
    if (deviceEvidence) {
        serializeAlertEvidence(writer, deviceEvidence)
        writer.writeStringValue("azureAdDeviceId", deviceEvidence.azureAdDeviceId);
        writer.writeEnumValue<DefenderAvStatus>("defenderAvStatus", deviceEvidence.defenderAvStatus);
        writer.writeStringValue("deviceDnsName", deviceEvidence.deviceDnsName);
        writer.writeDateValue("firstSeenDateTime", deviceEvidence.firstSeenDateTime);
        writer.writeEnumValue<DeviceHealthStatus>("healthStatus", deviceEvidence.healthStatus);
        writer.writeCollectionOfPrimitiveValues<string>("ipInterfaces", deviceEvidence.ipInterfaces);
        writer.writeStringValue("lastExternalIpAddress", deviceEvidence.lastExternalIpAddress);
        writer.writeStringValue("lastIpAddress", deviceEvidence.lastIpAddress);
        writer.writeCollectionOfObjectValues<LoggedOnUser>("loggedOnUsers", deviceEvidence.loggedOnUsers, serializeLoggedOnUser);
        writer.writeStringValue("mdeDeviceId", deviceEvidence.mdeDeviceId);
        writer.writeEnumValue<OnboardingStatus>("onboardingStatus", deviceEvidence.onboardingStatus);
        writer.writeNumberValue("osBuild", deviceEvidence.osBuild);
        writer.writeStringValue("osPlatform", deviceEvidence.osPlatform);
        writer.writeNumberValue("rbacGroupId", deviceEvidence.rbacGroupId);
        writer.writeStringValue("rbacGroupName", deviceEvidence.rbacGroupName);
        writer.writeEnumValue<DeviceRiskScore>("riskScore", deviceEvidence.riskScore);
        writer.writeStringValue("version", deviceEvidence.version);
        writer.writeObjectValue<VmMetadata>("vmMetadata", deviceEvidence.vmMetadata, serializeVmMetadata);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDictionary(writer: SerializationWriter, dictionary: Partial<Dictionary> | undefined | null = {}) : void {
    if (dictionary) {
        writer.writeStringValue("@odata.type", dictionary.odataType);
        writer.writeAdditionalData(dictionary.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDisableConsentRecord(writer: SerializationWriter, disableConsentRecord: Partial<DisableConsentRecord> | undefined | null = {}) : void {
    if (disableConsentRecord) {
        serializeAuditData(writer, disableConsentRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDisableUserResponseAction(writer: SerializationWriter, disableUserResponseAction: Partial<DisableUserResponseAction> | undefined | null = {}) : void {
    if (disableUserResponseAction) {
        serializeResponseAction(writer, disableUserResponseAction)
        writer.writeEnumValue<DisableUserEntityIdentifier[]>("identifier", disableUserResponseAction.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDiscoveryAuditRecord(writer: SerializationWriter, discoveryAuditRecord: Partial<DiscoveryAuditRecord> | undefined | null = {}) : void {
    if (discoveryAuditRecord) {
        serializeAuditData(writer, discoveryAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDispositionReviewStage(writer: SerializationWriter, dispositionReviewStage: Partial<DispositionReviewStage> | undefined | null = {}) : void {
    if (dispositionReviewStage) {
        serializeEntity(writer, dispositionReviewStage)
        writer.writeStringValue("name", dispositionReviewStage.name);
        writer.writeCollectionOfPrimitiveValues<string>("reviewersEmailAddresses", dispositionReviewStage.reviewersEmailAddresses);
        writer.writeStringValue("stageNumber", dispositionReviewStage.stageNumber);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDispositionReviewStageCollectionResponse(writer: SerializationWriter, dispositionReviewStageCollectionResponse: Partial<DispositionReviewStageCollectionResponse> | undefined | null = {}) : void {
    if (dispositionReviewStageCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, dispositionReviewStageCollectionResponse)
        writer.writeCollectionOfObjectValues<DispositionReviewStage>("value", dispositionReviewStageCollectionResponse.value, serializeDispositionReviewStage);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDlpEndpointAuditRecord(writer: SerializationWriter, dlpEndpointAuditRecord: Partial<DlpEndpointAuditRecord> | undefined | null = {}) : void {
    if (dlpEndpointAuditRecord) {
        serializeAuditData(writer, dlpEndpointAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDlpSensitiveInformationTypeCmdletRecord(writer: SerializationWriter, dlpSensitiveInformationTypeCmdletRecord: Partial<DlpSensitiveInformationTypeCmdletRecord> | undefined | null = {}) : void {
    if (dlpSensitiveInformationTypeCmdletRecord) {
        serializeAuditData(writer, dlpSensitiveInformationTypeCmdletRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDlpSensitiveInformationTypeRulePackageCmdletRecord(writer: SerializationWriter, dlpSensitiveInformationTypeRulePackageCmdletRecord: Partial<DlpSensitiveInformationTypeRulePackageCmdletRecord> | undefined | null = {}) : void {
    if (dlpSensitiveInformationTypeRulePackageCmdletRecord) {
        serializeAuditData(writer, dlpSensitiveInformationTypeRulePackageCmdletRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDnsEvidence(writer: SerializationWriter, dnsEvidence: Partial<DnsEvidence> | undefined | null = {}) : void {
    if (dnsEvidence) {
        serializeAlertEvidence(writer, dnsEvidence)
        writer.writeObjectValue<IpEvidence>("dnsServerIp", dnsEvidence.dnsServerIp, serializeIpEvidence);
        writer.writeStringValue("domainName", dnsEvidence.domainName);
        writer.writeObjectValue<IpEvidence>("hostIpAddress", dnsEvidence.hostIpAddress, serializeIpEvidence);
        writer.writeCollectionOfObjectValues<IpEvidence>("ipAddresses", dnsEvidence.ipAddresses, serializeIpEvidence);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDowngradeJustification(writer: SerializationWriter, downgradeJustification: Partial<DowngradeJustification> | undefined | null = {}) : void {
    if (downgradeJustification) {
        writer.writeBooleanValue("isDowngradeJustified", downgradeJustification.isDowngradeJustified);
        writer.writeStringValue("justificationMessage", downgradeJustification.justificationMessage);
        writer.writeStringValue("@odata.type", downgradeJustification.odataType);
        writer.writeAdditionalData(downgradeJustification.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDownloadCertificateRecord(writer: SerializationWriter, downloadCertificateRecord: Partial<DownloadCertificateRecord> | undefined | null = {}) : void {
    if (downloadCertificateRecord) {
        serializeAuditData(writer, downloadCertificateRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDynamics365BusinessCentralAuditRecord(writer: SerializationWriter, dynamics365BusinessCentralAuditRecord: Partial<Dynamics365BusinessCentralAuditRecord> | undefined | null = {}) : void {
    if (dynamics365BusinessCentralAuditRecord) {
        serializeAuditData(writer, dynamics365BusinessCentralAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryAddToReviewSetOperation(writer: SerializationWriter, ediscoveryAddToReviewSetOperation: Partial<EdiscoveryAddToReviewSetOperation> | undefined | null = {}) : void {
    if (ediscoveryAddToReviewSetOperation) {
        serializeCaseOperation(writer, ediscoveryAddToReviewSetOperation)
        writer.writeObjectValue<EdiscoveryReviewSet>("reviewSet", ediscoveryAddToReviewSetOperation.reviewSet, serializeEdiscoveryReviewSet);
        writer.writeObjectValue<EdiscoverySearch>("search", ediscoveryAddToReviewSetOperation.search, serializeEdiscoverySearch);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryCase(writer: SerializationWriter, ediscoveryCase: Partial<EdiscoveryCase> | undefined | null = {}) : void {
    if (ediscoveryCase) {
        serializeCaseEscaped(writer, ediscoveryCase)
        writer.writeObjectValue<IdentitySet>("closedBy", ediscoveryCase.closedBy, serializeIdentitySet);
        writer.writeDateValue("closedDateTime", ediscoveryCase.closedDateTime);
        writer.writeCollectionOfObjectValues<EdiscoveryCustodian>("custodians", ediscoveryCase.custodians, serializeEdiscoveryCustodian);
        writer.writeStringValue("externalId", ediscoveryCase.externalId);
        writer.writeCollectionOfObjectValues<EdiscoveryHoldPolicy>("legalHolds", ediscoveryCase.legalHolds, serializeEdiscoveryHoldPolicy);
        writer.writeCollectionOfObjectValues<EdiscoveryNoncustodialDataSource>("noncustodialDataSources", ediscoveryCase.noncustodialDataSources, serializeEdiscoveryNoncustodialDataSource);
        writer.writeCollectionOfObjectValues<CaseOperation>("operations", ediscoveryCase.operations, serializeCaseOperation);
        writer.writeCollectionOfObjectValues<EdiscoveryReviewSet>("reviewSets", ediscoveryCase.reviewSets, serializeEdiscoveryReviewSet);
        writer.writeCollectionOfObjectValues<EdiscoverySearch>("searches", ediscoveryCase.searches, serializeEdiscoverySearch);
        writer.writeObjectValue<EdiscoveryCaseSettings>("settings", ediscoveryCase.settings, serializeEdiscoveryCaseSettings);
        writer.writeCollectionOfObjectValues<EdiscoveryReviewTag>("tags", ediscoveryCase.tags, serializeEdiscoveryReviewTag);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryCaseCollectionResponse(writer: SerializationWriter, ediscoveryCaseCollectionResponse: Partial<EdiscoveryCaseCollectionResponse> | undefined | null = {}) : void {
    if (ediscoveryCaseCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, ediscoveryCaseCollectionResponse)
        writer.writeCollectionOfObjectValues<EdiscoveryCase>("value", ediscoveryCaseCollectionResponse.value, serializeEdiscoveryCase);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryCaseSettings(writer: SerializationWriter, ediscoveryCaseSettings: Partial<EdiscoveryCaseSettings> | undefined | null = {}) : void {
    if (ediscoveryCaseSettings) {
        serializeEntity(writer, ediscoveryCaseSettings)
        writer.writeObjectValue<OcrSettings>("ocr", ediscoveryCaseSettings.ocr, serializeOcrSettings);
        writer.writeObjectValue<RedundancyDetectionSettings>("redundancyDetection", ediscoveryCaseSettings.redundancyDetection, serializeRedundancyDetectionSettings);
        writer.writeObjectValue<TopicModelingSettings>("topicModeling", ediscoveryCaseSettings.topicModeling, serializeTopicModelingSettings);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryCustodian(writer: SerializationWriter, ediscoveryCustodian: Partial<EdiscoveryCustodian> | undefined | null = {}) : void {
    if (ediscoveryCustodian) {
        serializeDataSourceContainer(writer, ediscoveryCustodian)
        writer.writeDateValue("acknowledgedDateTime", ediscoveryCustodian.acknowledgedDateTime);
        writer.writeStringValue("email", ediscoveryCustodian.email);
        writer.writeObjectValue<EdiscoveryIndexOperation>("lastIndexOperation", ediscoveryCustodian.lastIndexOperation, serializeEdiscoveryIndexOperation);
        writer.writeCollectionOfObjectValues<SiteSource>("siteSources", ediscoveryCustodian.siteSources, serializeSiteSource);
        writer.writeCollectionOfObjectValues<UnifiedGroupSource>("unifiedGroupSources", ediscoveryCustodian.unifiedGroupSources, serializeUnifiedGroupSource);
        writer.writeCollectionOfObjectValues<UserSource>("userSources", ediscoveryCustodian.userSources, serializeUserSource);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryCustodianCollectionResponse(writer: SerializationWriter, ediscoveryCustodianCollectionResponse: Partial<EdiscoveryCustodianCollectionResponse> | undefined | null = {}) : void {
    if (ediscoveryCustodianCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, ediscoveryCustodianCollectionResponse)
        writer.writeCollectionOfObjectValues<EdiscoveryCustodian>("value", ediscoveryCustodianCollectionResponse.value, serializeEdiscoveryCustodian);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryEstimateOperation(writer: SerializationWriter, ediscoveryEstimateOperation: Partial<EdiscoveryEstimateOperation> | undefined | null = {}) : void {
    if (ediscoveryEstimateOperation) {
        serializeCaseOperation(writer, ediscoveryEstimateOperation)
        writer.writeNumberValue("indexedItemCount", ediscoveryEstimateOperation.indexedItemCount);
        writer.writeNumberValue("indexedItemsSize", ediscoveryEstimateOperation.indexedItemsSize);
        writer.writeNumberValue("mailboxCount", ediscoveryEstimateOperation.mailboxCount);
        writer.writeObjectValue<EdiscoverySearch>("search", ediscoveryEstimateOperation.search, serializeEdiscoverySearch);
        writer.writeNumberValue("siteCount", ediscoveryEstimateOperation.siteCount);
        writer.writeNumberValue("unindexedItemCount", ediscoveryEstimateOperation.unindexedItemCount);
        writer.writeNumberValue("unindexedItemsSize", ediscoveryEstimateOperation.unindexedItemsSize);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryExportOperation(writer: SerializationWriter, ediscoveryExportOperation: Partial<EdiscoveryExportOperation> | undefined | null = {}) : void {
    if (ediscoveryExportOperation) {
        serializeCaseOperation(writer, ediscoveryExportOperation)
        writer.writeStringValue("azureBlobContainer", ediscoveryExportOperation.azureBlobContainer);
        writer.writeStringValue("azureBlobToken", ediscoveryExportOperation.azureBlobToken);
        writer.writeStringValue("description", ediscoveryExportOperation.description);
        writer.writeCollectionOfObjectValues<ExportFileMetadata>("exportFileMetadata", ediscoveryExportOperation.exportFileMetadata, serializeExportFileMetadata);
        writer.writeEnumValue<ExportOptions[]>("exportOptions", ediscoveryExportOperation.exportOptions);
        writer.writeEnumValue<ExportFileStructure>("exportStructure", ediscoveryExportOperation.exportStructure);
        writer.writeStringValue("outputFolderId", ediscoveryExportOperation.outputFolderId);
        writer.writeStringValue("outputName", ediscoveryExportOperation.outputName);
        writer.writeObjectValue<EdiscoveryReviewSet>("reviewSet", ediscoveryExportOperation.reviewSet, serializeEdiscoveryReviewSet);
        writer.writeObjectValue<EdiscoveryReviewSetQuery>("reviewSetQuery", ediscoveryExportOperation.reviewSetQuery, serializeEdiscoveryReviewSetQuery);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryFile(writer: SerializationWriter, ediscoveryFile: Partial<EdiscoveryFile> | undefined | null = {}) : void {
    if (ediscoveryFile) {
        serializeFile(writer, ediscoveryFile)
        writer.writeObjectValue<EdiscoveryCustodian>("custodian", ediscoveryFile.custodian, serializeEdiscoveryCustodian);
        writer.writeCollectionOfObjectValues<EdiscoveryReviewTag>("tags", ediscoveryFile.tags, serializeEdiscoveryReviewTag);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryFileCollectionResponse(writer: SerializationWriter, ediscoveryFileCollectionResponse: Partial<EdiscoveryFileCollectionResponse> | undefined | null = {}) : void {
    if (ediscoveryFileCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, ediscoveryFileCollectionResponse)
        writer.writeCollectionOfObjectValues<EdiscoveryFile>("value", ediscoveryFileCollectionResponse.value, serializeEdiscoveryFile);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryHoldOperation(writer: SerializationWriter, ediscoveryHoldOperation: Partial<EdiscoveryHoldOperation> | undefined | null = {}) : void {
    if (ediscoveryHoldOperation) {
        serializeCaseOperation(writer, ediscoveryHoldOperation)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryHoldPolicy(writer: SerializationWriter, ediscoveryHoldPolicy: Partial<EdiscoveryHoldPolicy> | undefined | null = {}) : void {
    if (ediscoveryHoldPolicy) {
        serializePolicyBase(writer, ediscoveryHoldPolicy)
        writer.writeStringValue("contentQuery", ediscoveryHoldPolicy.contentQuery);
        writer.writeCollectionOfPrimitiveValues<string>("errors", ediscoveryHoldPolicy.errors);
        writer.writeBooleanValue("isEnabled", ediscoveryHoldPolicy.isEnabled);
        writer.writeCollectionOfObjectValues<SiteSource>("siteSources", ediscoveryHoldPolicy.siteSources, serializeSiteSource);
        writer.writeCollectionOfObjectValues<UserSource>("userSources", ediscoveryHoldPolicy.userSources, serializeUserSource);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryHoldPolicyCollectionResponse(writer: SerializationWriter, ediscoveryHoldPolicyCollectionResponse: Partial<EdiscoveryHoldPolicyCollectionResponse> | undefined | null = {}) : void {
    if (ediscoveryHoldPolicyCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, ediscoveryHoldPolicyCollectionResponse)
        writer.writeCollectionOfObjectValues<EdiscoveryHoldPolicy>("value", ediscoveryHoldPolicyCollectionResponse.value, serializeEdiscoveryHoldPolicy);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryIndexOperation(writer: SerializationWriter, ediscoveryIndexOperation: Partial<EdiscoveryIndexOperation> | undefined | null = {}) : void {
    if (ediscoveryIndexOperation) {
        serializeCaseOperation(writer, ediscoveryIndexOperation)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryNoncustodialDataSource(writer: SerializationWriter, ediscoveryNoncustodialDataSource: Partial<EdiscoveryNoncustodialDataSource> | undefined | null = {}) : void {
    if (ediscoveryNoncustodialDataSource) {
        serializeDataSourceContainer(writer, ediscoveryNoncustodialDataSource)
        writer.writeObjectValue<DataSource>("dataSource", ediscoveryNoncustodialDataSource.dataSource, serializeDataSource);
        writer.writeObjectValue<EdiscoveryIndexOperation>("lastIndexOperation", ediscoveryNoncustodialDataSource.lastIndexOperation, serializeEdiscoveryIndexOperation);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryNoncustodialDataSourceCollectionResponse(writer: SerializationWriter, ediscoveryNoncustodialDataSourceCollectionResponse: Partial<EdiscoveryNoncustodialDataSourceCollectionResponse> | undefined | null = {}) : void {
    if (ediscoveryNoncustodialDataSourceCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, ediscoveryNoncustodialDataSourceCollectionResponse)
        writer.writeCollectionOfObjectValues<EdiscoveryNoncustodialDataSource>("value", ediscoveryNoncustodialDataSourceCollectionResponse.value, serializeEdiscoveryNoncustodialDataSource);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryPurgeDataOperation(writer: SerializationWriter, ediscoveryPurgeDataOperation: Partial<EdiscoveryPurgeDataOperation> | undefined | null = {}) : void {
    if (ediscoveryPurgeDataOperation) {
        serializeCaseOperation(writer, ediscoveryPurgeDataOperation)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryReviewSet(writer: SerializationWriter, ediscoveryReviewSet: Partial<EdiscoveryReviewSet> | undefined | null = {}) : void {
    if (ediscoveryReviewSet) {
        serializeDataSet(writer, ediscoveryReviewSet)
        writer.writeCollectionOfObjectValues<EdiscoveryFile>("files", ediscoveryReviewSet.files, serializeEdiscoveryFile);
        writer.writeCollectionOfObjectValues<EdiscoveryReviewSetQuery>("queries", ediscoveryReviewSet.queries, serializeEdiscoveryReviewSetQuery);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryReviewSetCollectionResponse(writer: SerializationWriter, ediscoveryReviewSetCollectionResponse: Partial<EdiscoveryReviewSetCollectionResponse> | undefined | null = {}) : void {
    if (ediscoveryReviewSetCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, ediscoveryReviewSetCollectionResponse)
        writer.writeCollectionOfObjectValues<EdiscoveryReviewSet>("value", ediscoveryReviewSetCollectionResponse.value, serializeEdiscoveryReviewSet);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryReviewSetQuery(writer: SerializationWriter, ediscoveryReviewSetQuery: Partial<EdiscoveryReviewSetQuery> | undefined | null = {}) : void {
    if (ediscoveryReviewSetQuery) {
        serializeSearch(writer, ediscoveryReviewSetQuery)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryReviewSetQueryCollectionResponse(writer: SerializationWriter, ediscoveryReviewSetQueryCollectionResponse: Partial<EdiscoveryReviewSetQueryCollectionResponse> | undefined | null = {}) : void {
    if (ediscoveryReviewSetQueryCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, ediscoveryReviewSetQueryCollectionResponse)
        writer.writeCollectionOfObjectValues<EdiscoveryReviewSetQuery>("value", ediscoveryReviewSetQueryCollectionResponse.value, serializeEdiscoveryReviewSetQuery);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryReviewTag(writer: SerializationWriter, ediscoveryReviewTag: Partial<EdiscoveryReviewTag> | undefined | null = {}) : void {
    if (ediscoveryReviewTag) {
        serializeTag(writer, ediscoveryReviewTag)
        writer.writeEnumValue<ChildSelectability>("childSelectability", ediscoveryReviewTag.childSelectability);
        writer.writeCollectionOfObjectValues<EdiscoveryReviewTag>("childTags", ediscoveryReviewTag.childTags, serializeEdiscoveryReviewTag);
        writer.writeObjectValue<EdiscoveryReviewTag>("parent", ediscoveryReviewTag.parent, serializeEdiscoveryReviewTag);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryReviewTagCollectionResponse(writer: SerializationWriter, ediscoveryReviewTagCollectionResponse: Partial<EdiscoveryReviewTagCollectionResponse> | undefined | null = {}) : void {
    if (ediscoveryReviewTagCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, ediscoveryReviewTagCollectionResponse)
        writer.writeCollectionOfObjectValues<EdiscoveryReviewTag>("value", ediscoveryReviewTagCollectionResponse.value, serializeEdiscoveryReviewTag);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoverySearch(writer: SerializationWriter, ediscoverySearch: Partial<EdiscoverySearch> | undefined | null = {}) : void {
    if (ediscoverySearch) {
        serializeSearch(writer, ediscoverySearch)
        writer.writeCollectionOfObjectValues<DataSource>("additionalSources", ediscoverySearch.additionalSources, serializeDataSource);
        writer.writeObjectValue<EdiscoveryAddToReviewSetOperation>("addToReviewSetOperation", ediscoverySearch.addToReviewSetOperation, serializeEdiscoveryAddToReviewSetOperation);
        writer.writeCollectionOfObjectValues<DataSource>("custodianSources", ediscoverySearch.custodianSources, serializeDataSource);
        writer.writeEnumValue<DataSourceScopes[]>("dataSourceScopes", ediscoverySearch.dataSourceScopes);
        writer.writeObjectValue<EdiscoveryEstimateOperation>("lastEstimateStatisticsOperation", ediscoverySearch.lastEstimateStatisticsOperation, serializeEdiscoveryEstimateOperation);
        writer.writeCollectionOfObjectValues<EdiscoveryNoncustodialDataSource>("noncustodialSources", ediscoverySearch.noncustodialSources, serializeEdiscoveryNoncustodialDataSource);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoverySearchCollectionResponse(writer: SerializationWriter, ediscoverySearchCollectionResponse: Partial<EdiscoverySearchCollectionResponse> | undefined | null = {}) : void {
    if (ediscoverySearchCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, ediscoverySearchCollectionResponse)
        writer.writeCollectionOfObjectValues<EdiscoverySearch>("value", ediscoverySearchCollectionResponse.value, serializeEdiscoverySearch);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoverySearchExportOperation(writer: SerializationWriter, ediscoverySearchExportOperation: Partial<EdiscoverySearchExportOperation> | undefined | null = {}) : void {
    if (ediscoverySearchExportOperation) {
        serializeCaseOperation(writer, ediscoverySearchExportOperation)
        writer.writeEnumValue<AdditionalOptions[]>("additionalOptions", ediscoverySearchExportOperation.additionalOptions);
        writer.writeStringValue("description", ediscoverySearchExportOperation.description);
        writer.writeStringValue("displayName", ediscoverySearchExportOperation.displayName);
        writer.writeEnumValue<ExportCriteria[]>("exportCriteria", ediscoverySearchExportOperation.exportCriteria);
        writer.writeCollectionOfObjectValues<ExportFileMetadata>("exportFileMetadata", ediscoverySearchExportOperation.exportFileMetadata, serializeExportFileMetadata);
        writer.writeEnumValue<ExportFormat>("exportFormat", ediscoverySearchExportOperation.exportFormat);
        writer.writeEnumValue<ExportLocation[]>("exportLocation", ediscoverySearchExportOperation.exportLocation);
        writer.writeBooleanValue("exportSingleItems", ediscoverySearchExportOperation.exportSingleItems);
        writer.writeObjectValue<EdiscoverySearch>("search", ediscoverySearchExportOperation.search, serializeEdiscoverySearch);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryTagOperation(writer: SerializationWriter, ediscoveryTagOperation: Partial<EdiscoveryTagOperation> | undefined | null = {}) : void {
    if (ediscoveryTagOperation) {
        serializeCaseOperation(writer, ediscoveryTagOperation)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEmailContentThreatSubmission(writer: SerializationWriter, emailContentThreatSubmission: Partial<EmailContentThreatSubmission> | undefined | null = {}) : void {
    if (emailContentThreatSubmission) {
        serializeEmailThreatSubmission(writer, emailContentThreatSubmission)
        writer.writeStringValue("fileContent", emailContentThreatSubmission.fileContent);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEmailSender(writer: SerializationWriter, emailSender: Partial<EmailSender> | undefined | null = {}) : void {
    if (emailSender) {
        writer.writeStringValue("displayName", emailSender.displayName);
        writer.writeStringValue("domainName", emailSender.domainName);
        writer.writeStringValue("emailAddress", emailSender.emailAddress);
        writer.writeStringValue("@odata.type", emailSender.odataType);
        writer.writeAdditionalData(emailSender.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEmailThreatSubmission(writer: SerializationWriter, emailThreatSubmission: Partial<EmailThreatSubmission> | undefined | null = {}) : void {
    if (emailThreatSubmission) {
        serializeThreatSubmission(writer, emailThreatSubmission)
        writer.writeObjectValue<AttackSimulationInfo>("attackSimulationInfo", emailThreatSubmission.attackSimulationInfo, serializeAttackSimulationInfo);
        writer.writeStringValue("internetMessageId", emailThreatSubmission.internetMessageId);
        writer.writeEnumValue<SubmissionCategory>("originalCategory", emailThreatSubmission.originalCategory);
        writer.writeDateValue("receivedDateTime", emailThreatSubmission.receivedDateTime);
        writer.writeStringValue("recipientEmailAddress", emailThreatSubmission.recipientEmailAddress);
        writer.writeStringValue("sender", emailThreatSubmission.sender);
        writer.writeStringValue("senderIP", emailThreatSubmission.senderIP);
        writer.writeStringValue("subject", emailThreatSubmission.subject);
        writer.writeObjectValue<TenantAllowOrBlockListAction>("tenantAllowOrBlockListAction", emailThreatSubmission.tenantAllowOrBlockListAction, serializeTenantAllowOrBlockListAction);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEmailThreatSubmissionCollectionResponse(writer: SerializationWriter, emailThreatSubmissionCollectionResponse: Partial<EmailThreatSubmissionCollectionResponse> | undefined | null = {}) : void {
    if (emailThreatSubmissionCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, emailThreatSubmissionCollectionResponse)
        writer.writeCollectionOfObjectValues<EmailThreatSubmission>("value", emailThreatSubmissionCollectionResponse.value, serializeEmailThreatSubmission);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEmailThreatSubmissionPolicy(writer: SerializationWriter, emailThreatSubmissionPolicy: Partial<EmailThreatSubmissionPolicy> | undefined | null = {}) : void {
    if (emailThreatSubmissionPolicy) {
        serializeEntity(writer, emailThreatSubmissionPolicy)
        writer.writeStringValue("customizedNotificationSenderEmailAddress", emailThreatSubmissionPolicy.customizedNotificationSenderEmailAddress);
        writer.writeStringValue("customizedReportRecipientEmailAddress", emailThreatSubmissionPolicy.customizedReportRecipientEmailAddress);
        writer.writeBooleanValue("isAlwaysReportEnabledForUsers", emailThreatSubmissionPolicy.isAlwaysReportEnabledForUsers);
        writer.writeBooleanValue("isAskMeEnabledForUsers", emailThreatSubmissionPolicy.isAskMeEnabledForUsers);
        writer.writeBooleanValue("isCustomizedMessageEnabled", emailThreatSubmissionPolicy.isCustomizedMessageEnabled);
        writer.writeBooleanValue("isCustomizedMessageEnabledForPhishing", emailThreatSubmissionPolicy.isCustomizedMessageEnabledForPhishing);
        writer.writeBooleanValue("isCustomizedNotificationSenderEnabled", emailThreatSubmissionPolicy.isCustomizedNotificationSenderEnabled);
        writer.writeBooleanValue("isNeverReportEnabledForUsers", emailThreatSubmissionPolicy.isNeverReportEnabledForUsers);
        writer.writeBooleanValue("isOrganizationBrandingEnabled", emailThreatSubmissionPolicy.isOrganizationBrandingEnabled);
        writer.writeBooleanValue("isReportFromQuarantineEnabled", emailThreatSubmissionPolicy.isReportFromQuarantineEnabled);
        writer.writeBooleanValue("isReportToCustomizedEmailAddressEnabled", emailThreatSubmissionPolicy.isReportToCustomizedEmailAddressEnabled);
        writer.writeBooleanValue("isReportToMicrosoftEnabled", emailThreatSubmissionPolicy.isReportToMicrosoftEnabled);
        writer.writeBooleanValue("isReviewEmailNotificationEnabled", emailThreatSubmissionPolicy.isReviewEmailNotificationEnabled);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEmailThreatSubmissionPolicyCollectionResponse(writer: SerializationWriter, emailThreatSubmissionPolicyCollectionResponse: Partial<EmailThreatSubmissionPolicyCollectionResponse> | undefined | null = {}) : void {
    if (emailThreatSubmissionPolicyCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, emailThreatSubmissionPolicyCollectionResponse)
        writer.writeCollectionOfObjectValues<EmailThreatSubmissionPolicy>("value", emailThreatSubmissionPolicyCollectionResponse.value, serializeEmailThreatSubmissionPolicy);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEmailUrlThreatSubmission(writer: SerializationWriter, emailUrlThreatSubmission: Partial<EmailUrlThreatSubmission> | undefined | null = {}) : void {
    if (emailUrlThreatSubmission) {
        serializeEmailThreatSubmission(writer, emailUrlThreatSubmission)
        writer.writeStringValue("messageUrl", emailUrlThreatSubmission.messageUrl);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEnableConsentRecord(writer: SerializationWriter, enableConsentRecord: Partial<EnableConsentRecord> | undefined | null = {}) : void {
    if (enableConsentRecord) {
        serializeAuditData(writer, enableConsentRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEpicSMSLinkRecord(writer: SerializationWriter, epicSMSLinkRecord: Partial<EpicSMSLinkRecord> | undefined | null = {}) : void {
    if (epicSMSLinkRecord) {
        serializeAuditData(writer, epicSMSLinkRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEpicSMSSettingsUpdateRecord(writer: SerializationWriter, epicSMSSettingsUpdateRecord: Partial<EpicSMSSettingsUpdateRecord> | undefined | null = {}) : void {
    if (epicSMSSettingsUpdateRecord) {
        serializeAuditData(writer, epicSMSSettingsUpdateRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEpicSMSUnlinkRecord(writer: SerializationWriter, epicSMSUnlinkRecord: Partial<EpicSMSUnlinkRecord> | undefined | null = {}) : void {
    if (epicSMSUnlinkRecord) {
        serializeAuditData(writer, epicSMSUnlinkRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEventPropagationResult(writer: SerializationWriter, eventPropagationResult: Partial<EventPropagationResult> | undefined | null = {}) : void {
    if (eventPropagationResult) {
        writer.writeStringValue("location", eventPropagationResult.location);
        writer.writeStringValue("@odata.type", eventPropagationResult.odataType);
        writer.writeStringValue("serviceName", eventPropagationResult.serviceName);
        writer.writeEnumValue<EventPropagationStatus>("status", eventPropagationResult.status);
        writer.writeStringValue("statusInformation", eventPropagationResult.statusInformation);
        writer.writeAdditionalData(eventPropagationResult.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEventQuery(writer: SerializationWriter, eventQuery: Partial<EventQuery> | undefined | null = {}) : void {
    if (eventQuery) {
        writer.writeStringValue("@odata.type", eventQuery.odataType);
        writer.writeStringValue("query", eventQuery.query);
        writer.writeEnumValue<QueryType>("queryType", eventQuery.queryType);
        writer.writeAdditionalData(eventQuery.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeExchangeAdminAuditRecord(writer: SerializationWriter, exchangeAdminAuditRecord: Partial<ExchangeAdminAuditRecord> | undefined | null = {}) : void {
    if (exchangeAdminAuditRecord) {
        serializeAuditData(writer, exchangeAdminAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeExchangeAggregatedMailboxAuditRecord(writer: SerializationWriter, exchangeAggregatedMailboxAuditRecord: Partial<ExchangeAggregatedMailboxAuditRecord> | undefined | null = {}) : void {
    if (exchangeAggregatedMailboxAuditRecord) {
        serializeAuditData(writer, exchangeAggregatedMailboxAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeExchangeAggregatedOperationRecord(writer: SerializationWriter, exchangeAggregatedOperationRecord: Partial<ExchangeAggregatedOperationRecord> | undefined | null = {}) : void {
    if (exchangeAggregatedOperationRecord) {
        serializeAuditData(writer, exchangeAggregatedOperationRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeExchangeMailboxAuditBaseRecord(writer: SerializationWriter, exchangeMailboxAuditBaseRecord: Partial<ExchangeMailboxAuditBaseRecord> | undefined | null = {}) : void {
    if (exchangeMailboxAuditBaseRecord) {
        serializeAuditData(writer, exchangeMailboxAuditBaseRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeExchangeMailboxAuditGroupRecord(writer: SerializationWriter, exchangeMailboxAuditGroupRecord: Partial<ExchangeMailboxAuditGroupRecord> | undefined | null = {}) : void {
    if (exchangeMailboxAuditGroupRecord) {
        serializeAuditData(writer, exchangeMailboxAuditGroupRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeExchangeMailboxAuditRecord(writer: SerializationWriter, exchangeMailboxAuditRecord: Partial<ExchangeMailboxAuditRecord> | undefined | null = {}) : void {
    if (exchangeMailboxAuditRecord) {
        serializeAuditData(writer, exchangeMailboxAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeExportFileMetadata(writer: SerializationWriter, exportFileMetadata: Partial<ExportFileMetadata> | undefined | null = {}) : void {
    if (exportFileMetadata) {
        writer.writeStringValue("downloadUrl", exportFileMetadata.downloadUrl);
        writer.writeStringValue("fileName", exportFileMetadata.fileName);
        writer.writeStringValue("@odata.type", exportFileMetadata.odataType);
        writer.writeNumberValue("size", exportFileMetadata.size);
        writer.writeAdditionalData(exportFileMetadata.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFhirBaseUrlAddRecord(writer: SerializationWriter, fhirBaseUrlAddRecord: Partial<FhirBaseUrlAddRecord> | undefined | null = {}) : void {
    if (fhirBaseUrlAddRecord) {
        serializeAuditData(writer, fhirBaseUrlAddRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFhirBaseUrlApproveRecord(writer: SerializationWriter, fhirBaseUrlApproveRecord: Partial<FhirBaseUrlApproveRecord> | undefined | null = {}) : void {
    if (fhirBaseUrlApproveRecord) {
        serializeAuditData(writer, fhirBaseUrlApproveRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFhirBaseUrlDeleteRecord(writer: SerializationWriter, fhirBaseUrlDeleteRecord: Partial<FhirBaseUrlDeleteRecord> | undefined | null = {}) : void {
    if (fhirBaseUrlDeleteRecord) {
        serializeAuditData(writer, fhirBaseUrlDeleteRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFhirBaseUrlUpdateRecord(writer: SerializationWriter, fhirBaseUrlUpdateRecord: Partial<FhirBaseUrlUpdateRecord> | undefined | null = {}) : void {
    if (fhirBaseUrlUpdateRecord) {
        serializeAuditData(writer, fhirBaseUrlUpdateRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFile(writer: SerializationWriter, file: Partial<File> | undefined | null = {}) : void {
    if (file) {
        serializeEntity(writer, file)
        writer.writeObjectValue("content", file.content);
        writer.writeDateValue("dateTime", file.dateTime);
        writer.writeStringValue("extension", file.extension);
        writer.writeObjectValue("extractedTextContent", file.extractedTextContent);
        writer.writeStringValue("mediaType", file.mediaType);
        writer.writeStringValue("name", file.name);
        writer.writeObjectValue<StringValueDictionary>("otherProperties", file.otherProperties, serializeStringValueDictionary);
        writer.writeEnumValue<FileProcessingStatus>("processingStatus", file.processingStatus);
        writer.writeCollectionOfPrimitiveValues<string>("senderOrAuthors", file.senderOrAuthors);
        writer.writeNumberValue("size", file.size);
        writer.writeEnumValue<SourceType[]>("sourceType", file.sourceType);
        writer.writeStringValue("subjectTitle", file.subjectTitle);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileContentThreatSubmission(writer: SerializationWriter, fileContentThreatSubmission: Partial<FileContentThreatSubmission> | undefined | null = {}) : void {
    if (fileContentThreatSubmission) {
        serializeFileThreatSubmission(writer, fileContentThreatSubmission)
        writer.writeStringValue("fileContent", fileContentThreatSubmission.fileContent);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileDetails(writer: SerializationWriter, fileDetails: Partial<FileDetails> | undefined | null = {}) : void {
    if (fileDetails) {
        writer.writeStringValue("fileName", fileDetails.fileName);
        writer.writeStringValue("filePath", fileDetails.filePath);
        writer.writeStringValue("filePublisher", fileDetails.filePublisher);
        writer.writeNumberValue("fileSize", fileDetails.fileSize);
        writer.writeStringValue("issuer", fileDetails.issuer);
        writer.writeStringValue("@odata.type", fileDetails.odataType);
        writer.writeStringValue("sha1", fileDetails.sha1);
        writer.writeStringValue("sha256", fileDetails.sha256);
        writer.writeStringValue("signer", fileDetails.signer);
        writer.writeAdditionalData(fileDetails.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileEvidence(writer: SerializationWriter, fileEvidence: Partial<FileEvidence> | undefined | null = {}) : void {
    if (fileEvidence) {
        serializeAlertEvidence(writer, fileEvidence)
        writer.writeEnumValue<DetectionStatus>("detectionStatus", fileEvidence.detectionStatus);
        writer.writeObjectValue<FileDetails>("fileDetails", fileEvidence.fileDetails, serializeFileDetails);
        writer.writeStringValue("mdeDeviceId", fileEvidence.mdeDeviceId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileHash(writer: SerializationWriter, fileHash: Partial<FileHash> | undefined | null = {}) : void {
    if (fileHash) {
        writer.writeEnumValue<FileHashAlgorithm>("algorithm", fileHash.algorithm);
        writer.writeStringValue("@odata.type", fileHash.odataType);
        writer.writeStringValue("value", fileHash.value);
        writer.writeAdditionalData(fileHash.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileHashEvidence(writer: SerializationWriter, fileHashEvidence: Partial<FileHashEvidence> | undefined | null = {}) : void {
    if (fileHashEvidence) {
        serializeAlertEvidence(writer, fileHashEvidence)
        writer.writeEnumValue<FileHashAlgorithm>("algorithm", fileHashEvidence.algorithm);
        writer.writeStringValue("value", fileHashEvidence.value);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanAppliedCategory(writer: SerializationWriter, filePlanAppliedCategory: Partial<FilePlanAppliedCategory> | undefined | null = {}) : void {
    if (filePlanAppliedCategory) {
        serializeFilePlanDescriptorBase(writer, filePlanAppliedCategory)
        writer.writeObjectValue<FilePlanSubcategory>("subcategory", filePlanAppliedCategory.subcategory, serializeFilePlanSubcategory);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanAuthority(writer: SerializationWriter, filePlanAuthority: Partial<FilePlanAuthority> | undefined | null = {}) : void {
    if (filePlanAuthority) {
        serializeFilePlanDescriptorBase(writer, filePlanAuthority)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanCitation(writer: SerializationWriter, filePlanCitation: Partial<FilePlanCitation> | undefined | null = {}) : void {
    if (filePlanCitation) {
        serializeFilePlanDescriptorBase(writer, filePlanCitation)
        writer.writeStringValue("citationJurisdiction", filePlanCitation.citationJurisdiction);
        writer.writeStringValue("citationUrl", filePlanCitation.citationUrl);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanDepartment(writer: SerializationWriter, filePlanDepartment: Partial<FilePlanDepartment> | undefined | null = {}) : void {
    if (filePlanDepartment) {
        serializeFilePlanDescriptorBase(writer, filePlanDepartment)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanDescriptor(writer: SerializationWriter, filePlanDescriptor: Partial<FilePlanDescriptor> | undefined | null = {}) : void {
    if (filePlanDescriptor) {
        serializeEntity(writer, filePlanDescriptor)
        writer.writeObjectValue<FilePlanAuthority>("authority", filePlanDescriptor.authority, serializeFilePlanAuthority);
        writer.writeObjectValue<AuthorityTemplate>("authorityTemplate", filePlanDescriptor.authorityTemplate, serializeAuthorityTemplate);
        writer.writeObjectValue<FilePlanAppliedCategory>("category", filePlanDescriptor.category, serializeFilePlanAppliedCategory);
        writer.writeObjectValue<CategoryTemplate>("categoryTemplate", filePlanDescriptor.categoryTemplate, serializeCategoryTemplate);
        writer.writeObjectValue<FilePlanCitation>("citation", filePlanDescriptor.citation, serializeFilePlanCitation);
        writer.writeObjectValue<CitationTemplate>("citationTemplate", filePlanDescriptor.citationTemplate, serializeCitationTemplate);
        writer.writeObjectValue<FilePlanDepartment>("department", filePlanDescriptor.department, serializeFilePlanDepartment);
        writer.writeObjectValue<DepartmentTemplate>("departmentTemplate", filePlanDescriptor.departmentTemplate, serializeDepartmentTemplate);
        writer.writeObjectValue<FilePlanReference>("filePlanReference", filePlanDescriptor.filePlanReference, serializeFilePlanReference);
        writer.writeObjectValue<FilePlanReferenceTemplate>("filePlanReferenceTemplate", filePlanDescriptor.filePlanReferenceTemplate, serializeFilePlanReferenceTemplate);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanDescriptorBase(writer: SerializationWriter, filePlanDescriptorBase: Partial<FilePlanDescriptorBase> | undefined | null = {}) : void {
    if (filePlanDescriptorBase) {
        writer.writeStringValue("displayName", filePlanDescriptorBase.displayName);
        writer.writeStringValue("@odata.type", filePlanDescriptorBase.odataType);
        writer.writeAdditionalData(filePlanDescriptorBase.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanDescriptorTemplate(writer: SerializationWriter, filePlanDescriptorTemplate: Partial<FilePlanDescriptorTemplate> | undefined | null = {}) : void {
    if (filePlanDescriptorTemplate) {
        serializeEntity(writer, filePlanDescriptorTemplate)
        writer.writeObjectValue<IdentitySet>("createdBy", filePlanDescriptorTemplate.createdBy, serializeIdentitySet);
        writer.writeDateValue("createdDateTime", filePlanDescriptorTemplate.createdDateTime);
        writer.writeStringValue("displayName", filePlanDescriptorTemplate.displayName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanReference(writer: SerializationWriter, filePlanReference: Partial<FilePlanReference> | undefined | null = {}) : void {
    if (filePlanReference) {
        serializeFilePlanDescriptorBase(writer, filePlanReference)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanReferenceTemplate(writer: SerializationWriter, filePlanReferenceTemplate: Partial<FilePlanReferenceTemplate> | undefined | null = {}) : void {
    if (filePlanReferenceTemplate) {
        serializeFilePlanDescriptorTemplate(writer, filePlanReferenceTemplate)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanReferenceTemplateCollectionResponse(writer: SerializationWriter, filePlanReferenceTemplateCollectionResponse: Partial<FilePlanReferenceTemplateCollectionResponse> | undefined | null = {}) : void {
    if (filePlanReferenceTemplateCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, filePlanReferenceTemplateCollectionResponse)
        writer.writeCollectionOfObjectValues<FilePlanReferenceTemplate>("value", filePlanReferenceTemplateCollectionResponse.value, serializeFilePlanReferenceTemplate);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanSubcategory(writer: SerializationWriter, filePlanSubcategory: Partial<FilePlanSubcategory> | undefined | null = {}) : void {
    if (filePlanSubcategory) {
        serializeFilePlanDescriptorBase(writer, filePlanSubcategory)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileThreatSubmission(writer: SerializationWriter, fileThreatSubmission: Partial<FileThreatSubmission> | undefined | null = {}) : void {
    if (fileThreatSubmission) {
        serializeThreatSubmission(writer, fileThreatSubmission)
        writer.writeStringValue("fileName", fileThreatSubmission.fileName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileThreatSubmissionCollectionResponse(writer: SerializationWriter, fileThreatSubmissionCollectionResponse: Partial<FileThreatSubmissionCollectionResponse> | undefined | null = {}) : void {
    if (fileThreatSubmissionCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, fileThreatSubmissionCollectionResponse)
        writer.writeCollectionOfObjectValues<FileThreatSubmission>("value", fileThreatSubmissionCollectionResponse.value, serializeFileThreatSubmission);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileUrlThreatSubmission(writer: SerializationWriter, fileUrlThreatSubmission: Partial<FileUrlThreatSubmission> | undefined | null = {}) : void {
    if (fileUrlThreatSubmission) {
        serializeFileThreatSubmission(writer, fileUrlThreatSubmission)
        writer.writeStringValue("fileUrl", fileUrlThreatSubmission.fileUrl);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeForceUserPasswordResetResponseAction(writer: SerializationWriter, forceUserPasswordResetResponseAction: Partial<ForceUserPasswordResetResponseAction> | undefined | null = {}) : void {
    if (forceUserPasswordResetResponseAction) {
        serializeResponseAction(writer, forceUserPasswordResetResponseAction)
        writer.writeEnumValue<ForceUserPasswordResetEntityIdentifier[]>("identifier", forceUserPasswordResetResponseAction.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFormattedContent(writer: SerializationWriter, formattedContent: Partial<FormattedContent> | undefined | null = {}) : void {
    if (formattedContent) {
        writer.writeStringValue("content", formattedContent.content);
        writer.writeEnumValue<ContentFormat>("format", formattedContent.format);
        writer.writeStringValue("@odata.type", formattedContent.odataType);
        writer.writeAdditionalData(formattedContent.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGeoLocation(writer: SerializationWriter, geoLocation: Partial<GeoLocation> | undefined | null = {}) : void {
    if (geoLocation) {
        writer.writeStringValue("city", geoLocation.city);
        writer.writeStringValue("countryName", geoLocation.countryName);
        writer.writeNumberValue("latitude", geoLocation.latitude);
        writer.writeNumberValue("longitude", geoLocation.longitude);
        writer.writeStringValue("@odata.type", geoLocation.odataType);
        writer.writeStringValue("state", geoLocation.state);
        writer.writeAdditionalData(geoLocation.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGitHubOrganizationEvidence(writer: SerializationWriter, gitHubOrganizationEvidence: Partial<GitHubOrganizationEvidence> | undefined | null = {}) : void {
    if (gitHubOrganizationEvidence) {
        serializeAlertEvidence(writer, gitHubOrganizationEvidence)
        writer.writeStringValue("company", gitHubOrganizationEvidence.company);
        writer.writeStringValue("displayName", gitHubOrganizationEvidence.displayName);
        writer.writeStringValue("email", gitHubOrganizationEvidence.email);
        writer.writeStringValue("login", gitHubOrganizationEvidence.login);
        writer.writeStringValue("orgId", gitHubOrganizationEvidence.orgId);
        writer.writeStringValue("webUrl", gitHubOrganizationEvidence.webUrl);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGitHubRepoEvidence(writer: SerializationWriter, gitHubRepoEvidence: Partial<GitHubRepoEvidence> | undefined | null = {}) : void {
    if (gitHubRepoEvidence) {
        serializeAlertEvidence(writer, gitHubRepoEvidence)
        writer.writeStringValue("baseUrl", gitHubRepoEvidence.baseUrl);
        writer.writeStringValue("login", gitHubRepoEvidence.login);
        writer.writeStringValue("owner", gitHubRepoEvidence.owner);
        writer.writeStringValue("ownerType", gitHubRepoEvidence.ownerType);
        writer.writeStringValue("repoId", gitHubRepoEvidence.repoId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGitHubUserEvidence(writer: SerializationWriter, gitHubUserEvidence: Partial<GitHubUserEvidence> | undefined | null = {}) : void {
    if (gitHubUserEvidence) {
        serializeAlertEvidence(writer, gitHubUserEvidence)
        writer.writeStringValue("email", gitHubUserEvidence.email);
        writer.writeStringValue("login", gitHubUserEvidence.login);
        writer.writeStringValue("name", gitHubUserEvidence.name);
        writer.writeStringValue("userId", gitHubUserEvidence.userId);
        writer.writeStringValue("webUrl", gitHubUserEvidence.webUrl);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGoogleCloudResourceEvidence(writer: SerializationWriter, googleCloudResourceEvidence: Partial<GoogleCloudResourceEvidence> | undefined | null = {}) : void {
    if (googleCloudResourceEvidence) {
        serializeAlertEvidence(writer, googleCloudResourceEvidence)
        writer.writeStringValue("fullResourceName", googleCloudResourceEvidence.fullResourceName);
        writer.writeStringValue("location", googleCloudResourceEvidence.location);
        writer.writeEnumValue<GoogleCloudLocationType>("locationType", googleCloudResourceEvidence.locationType);
        writer.writeStringValue("projectId", googleCloudResourceEvidence.projectId);
        writer.writeNumberValue("projectNumber", googleCloudResourceEvidence.projectNumber);
        writer.writeStringValue("resourceName", googleCloudResourceEvidence.resourceName);
        writer.writeStringValue("resourceType", googleCloudResourceEvidence.resourceType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHardDeleteResponseAction(writer: SerializationWriter, hardDeleteResponseAction: Partial<HardDeleteResponseAction> | undefined | null = {}) : void {
    if (hardDeleteResponseAction) {
        serializeResponseAction(writer, hardDeleteResponseAction)
        writer.writeEnumValue<EmailEntityIdentifier[]>("identifier", hardDeleteResponseAction.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHealthcareSignalRecord(writer: SerializationWriter, healthcareSignalRecord: Partial<HealthcareSignalRecord> | undefined | null = {}) : void {
    if (healthcareSignalRecord) {
        serializeAuditData(writer, healthcareSignalRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHealthIssue(writer: SerializationWriter, healthIssue: Partial<HealthIssue> | undefined | null = {}) : void {
    if (healthIssue) {
        serializeEntity(writer, healthIssue)
        writer.writeCollectionOfPrimitiveValues<string>("additionalInformation", healthIssue.additionalInformation);
        writer.writeDateValue("createdDateTime", healthIssue.createdDateTime);
        writer.writeStringValue("description", healthIssue.description);
        writer.writeStringValue("displayName", healthIssue.displayName);
        writer.writeCollectionOfPrimitiveValues<string>("domainNames", healthIssue.domainNames);
        writer.writeEnumValue<HealthIssueType>("healthIssueType", healthIssue.healthIssueType);
        writer.writeStringValue("issueTypeId", healthIssue.issueTypeId);
        writer.writeDateValue("lastModifiedDateTime", healthIssue.lastModifiedDateTime);
        writer.writeCollectionOfPrimitiveValues<string>("recommendations", healthIssue.recommendations);
        writer.writeCollectionOfPrimitiveValues<string>("recommendedActionCommands", healthIssue.recommendedActionCommands);
        writer.writeCollectionOfPrimitiveValues<string>("sensorDNSNames", healthIssue.sensorDNSNames);
        writer.writeEnumValue<HealthIssueSeverity>("severity", healthIssue.severity);
        writer.writeEnumValue<HealthIssueStatus>("status", healthIssue.status);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHealthIssueCollectionResponse(writer: SerializationWriter, healthIssueCollectionResponse: Partial<HealthIssueCollectionResponse> | undefined | null = {}) : void {
    if (healthIssueCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, healthIssueCollectionResponse)
        writer.writeCollectionOfObjectValues<HealthIssue>("value", healthIssueCollectionResponse.value, serializeHealthIssue);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHost(writer: SerializationWriter, host: Partial<Host> | undefined | null = {}) : void {
    if (host) {
        serializeArtifact(writer, host)
        writer.writeCollectionOfObjectValues<HostPair>("childHostPairs", host.childHostPairs, serializeHostPair);
        writer.writeCollectionOfObjectValues<HostComponent>("components", host.components, serializeHostComponent);
        writer.writeCollectionOfObjectValues<HostCookie>("cookies", host.cookies, serializeHostCookie);
        writer.writeDateValue("firstSeenDateTime", host.firstSeenDateTime);
        writer.writeCollectionOfObjectValues<HostPair>("hostPairs", host.hostPairs, serializeHostPair);
        writer.writeDateValue("lastSeenDateTime", host.lastSeenDateTime);
        writer.writeCollectionOfObjectValues<HostPair>("parentHostPairs", host.parentHostPairs, serializeHostPair);
        writer.writeCollectionOfObjectValues<PassiveDnsRecord>("passiveDns", host.passiveDns, serializePassiveDnsRecord);
        writer.writeCollectionOfObjectValues<PassiveDnsRecord>("passiveDnsReverse", host.passiveDnsReverse, serializePassiveDnsRecord);
        writer.writeCollectionOfObjectValues<HostPort>("ports", host.ports, serializeHostPort);
        writer.writeObjectValue<HostReputation>("reputation", host.reputation, serializeHostReputation);
        writer.writeCollectionOfObjectValues<HostSslCertificate>("sslCertificates", host.sslCertificates, serializeHostSslCertificate);
        writer.writeCollectionOfObjectValues<Subdomain>("subdomains", host.subdomains, serializeSubdomain);
        writer.writeCollectionOfObjectValues<HostTracker>("trackers", host.trackers, serializeHostTracker);
        writer.writeObjectValue<WhoisRecord>("whois", host.whois, serializeWhoisRecord);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostCollectionResponse(writer: SerializationWriter, hostCollectionResponse: Partial<HostCollectionResponse> | undefined | null = {}) : void {
    if (hostCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, hostCollectionResponse)
        writer.writeCollectionOfObjectValues<Host>("value", hostCollectionResponse.value, serializeHost);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostComponent(writer: SerializationWriter, hostComponent: Partial<HostComponent> | undefined | null = {}) : void {
    if (hostComponent) {
        serializeArtifact(writer, hostComponent)
        writer.writeStringValue("category", hostComponent.category);
        writer.writeDateValue("firstSeenDateTime", hostComponent.firstSeenDateTime);
        writer.writeObjectValue<Host>("host", hostComponent.host, serializeHost);
        writer.writeDateValue("lastSeenDateTime", hostComponent.lastSeenDateTime);
        writer.writeStringValue("name", hostComponent.name);
        writer.writeStringValue("version", hostComponent.version);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostComponentCollectionResponse(writer: SerializationWriter, hostComponentCollectionResponse: Partial<HostComponentCollectionResponse> | undefined | null = {}) : void {
    if (hostComponentCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, hostComponentCollectionResponse)
        writer.writeCollectionOfObjectValues<HostComponent>("value", hostComponentCollectionResponse.value, serializeHostComponent);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostCookie(writer: SerializationWriter, hostCookie: Partial<HostCookie> | undefined | null = {}) : void {
    if (hostCookie) {
        serializeArtifact(writer, hostCookie)
        writer.writeStringValue("domain", hostCookie.domain);
        writer.writeDateValue("firstSeenDateTime", hostCookie.firstSeenDateTime);
        writer.writeObjectValue<Host>("host", hostCookie.host, serializeHost);
        writer.writeDateValue("lastSeenDateTime", hostCookie.lastSeenDateTime);
        writer.writeStringValue("name", hostCookie.name);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostCookieCollectionResponse(writer: SerializationWriter, hostCookieCollectionResponse: Partial<HostCookieCollectionResponse> | undefined | null = {}) : void {
    if (hostCookieCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, hostCookieCollectionResponse)
        writer.writeCollectionOfObjectValues<HostCookie>("value", hostCookieCollectionResponse.value, serializeHostCookie);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostedRpaAuditRecord(writer: SerializationWriter, hostedRpaAuditRecord: Partial<HostedRpaAuditRecord> | undefined | null = {}) : void {
    if (hostedRpaAuditRecord) {
        serializeAuditData(writer, hostedRpaAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostLogonSessionEvidence(writer: SerializationWriter, hostLogonSessionEvidence: Partial<HostLogonSessionEvidence> | undefined | null = {}) : void {
    if (hostLogonSessionEvidence) {
        serializeAlertEvidence(writer, hostLogonSessionEvidence)
        writer.writeObjectValue<UserEvidence>("account", hostLogonSessionEvidence.account, serializeUserEvidence);
        writer.writeDateValue("endUtcDateTime", hostLogonSessionEvidence.endUtcDateTime);
        writer.writeObjectValue<DeviceEvidence>("host", hostLogonSessionEvidence.host, serializeDeviceEvidence);
        writer.writeStringValue("sessionId", hostLogonSessionEvidence.sessionId);
        writer.writeDateValue("startUtcDateTime", hostLogonSessionEvidence.startUtcDateTime);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostname(writer: SerializationWriter, hostname: Partial<Hostname> | undefined | null = {}) : void {
    if (hostname) {
        serializeHost(writer, hostname)
        writer.writeStringValue("registrant", hostname.registrant);
        writer.writeStringValue("registrar", hostname.registrar);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostPair(writer: SerializationWriter, hostPair: Partial<HostPair> | undefined | null = {}) : void {
    if (hostPair) {
        serializeEntity(writer, hostPair)
        writer.writeObjectValue<Host>("childHost", hostPair.childHost, serializeHost);
        writer.writeDateValue("firstSeenDateTime", hostPair.firstSeenDateTime);
        writer.writeDateValue("lastSeenDateTime", hostPair.lastSeenDateTime);
        writer.writeStringValue("linkKind", hostPair.linkKind);
        writer.writeObjectValue<Host>("parentHost", hostPair.parentHost, serializeHost);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostPairCollectionResponse(writer: SerializationWriter, hostPairCollectionResponse: Partial<HostPairCollectionResponse> | undefined | null = {}) : void {
    if (hostPairCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, hostPairCollectionResponse)
        writer.writeCollectionOfObjectValues<HostPair>("value", hostPairCollectionResponse.value, serializeHostPair);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostPort(writer: SerializationWriter, hostPort: Partial<HostPort> | undefined | null = {}) : void {
    if (hostPort) {
        serializeEntity(writer, hostPort)
        writer.writeCollectionOfObjectValues<HostPortBanner>("banners", hostPort.banners, serializeHostPortBanner);
        writer.writeDateValue("firstSeenDateTime", hostPort.firstSeenDateTime);
        writer.writeObjectValue<Host>("host", hostPort.host, serializeHost);
        writer.writeDateValue("lastScanDateTime", hostPort.lastScanDateTime);
        writer.writeDateValue("lastSeenDateTime", hostPort.lastSeenDateTime);
        writer.writeObjectValue<SslCertificate>("mostRecentSslCertificate", hostPort.mostRecentSslCertificate, serializeSslCertificate);
        writer.writeNumberValue("port", hostPort.port);
        writer.writeEnumValue<HostPortProtocol>("protocol", hostPort.protocol);
        writer.writeCollectionOfObjectValues<HostPortComponent>("services", hostPort.services, serializeHostPortComponent);
        writer.writeEnumValue<HostPortStatus>("status", hostPort.status);
        writer.writeNumberValue("timesObserved", hostPort.timesObserved);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostPortBanner(writer: SerializationWriter, hostPortBanner: Partial<HostPortBanner> | undefined | null = {}) : void {
    if (hostPortBanner) {
        writer.writeStringValue("banner", hostPortBanner.banner);
        writer.writeDateValue("firstSeenDateTime", hostPortBanner.firstSeenDateTime);
        writer.writeDateValue("lastSeenDateTime", hostPortBanner.lastSeenDateTime);
        writer.writeStringValue("@odata.type", hostPortBanner.odataType);
        writer.writeStringValue("scanProtocol", hostPortBanner.scanProtocol);
        writer.writeNumberValue("timesObserved", hostPortBanner.timesObserved);
        writer.writeAdditionalData(hostPortBanner.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostPortCollectionResponse(writer: SerializationWriter, hostPortCollectionResponse: Partial<HostPortCollectionResponse> | undefined | null = {}) : void {
    if (hostPortCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, hostPortCollectionResponse)
        writer.writeCollectionOfObjectValues<HostPort>("value", hostPortCollectionResponse.value, serializeHostPort);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostPortComponent(writer: SerializationWriter, hostPortComponent: Partial<HostPortComponent> | undefined | null = {}) : void {
    if (hostPortComponent) {
        writer.writeObjectValue<HostComponent>("component", hostPortComponent.component, serializeHostComponent);
        writer.writeDateValue("firstSeenDateTime", hostPortComponent.firstSeenDateTime);
        writer.writeBooleanValue("isRecent", hostPortComponent.isRecent);
        writer.writeDateValue("lastSeenDateTime", hostPortComponent.lastSeenDateTime);
        writer.writeStringValue("@odata.type", hostPortComponent.odataType);
        writer.writeAdditionalData(hostPortComponent.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostReputation(writer: SerializationWriter, hostReputation: Partial<HostReputation> | undefined | null = {}) : void {
    if (hostReputation) {
        serializeEntity(writer, hostReputation)
        writer.writeEnumValue<HostReputationClassification>("classification", hostReputation.classification);
        writer.writeCollectionOfObjectValues<HostReputationRule>("rules", hostReputation.rules, serializeHostReputationRule);
        writer.writeNumberValue("score", hostReputation.score);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostReputationRule(writer: SerializationWriter, hostReputationRule: Partial<HostReputationRule> | undefined | null = {}) : void {
    if (hostReputationRule) {
        writer.writeStringValue("description", hostReputationRule.description);
        writer.writeStringValue("name", hostReputationRule.name);
        writer.writeStringValue("@odata.type", hostReputationRule.odataType);
        writer.writeStringValue("relatedDetailsUrl", hostReputationRule.relatedDetailsUrl);
        writer.writeEnumValue<HostReputationRuleSeverity>("severity", hostReputationRule.severity);
        writer.writeAdditionalData(hostReputationRule.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostSslCertificate(writer: SerializationWriter, hostSslCertificate: Partial<HostSslCertificate> | undefined | null = {}) : void {
    if (hostSslCertificate) {
        serializeArtifact(writer, hostSslCertificate)
        writer.writeDateValue("firstSeenDateTime", hostSslCertificate.firstSeenDateTime);
        writer.writeObjectValue<Host>("host", hostSslCertificate.host, serializeHost);
        writer.writeDateValue("lastSeenDateTime", hostSslCertificate.lastSeenDateTime);
        writer.writeCollectionOfObjectValues<HostSslCertificatePort>("ports", hostSslCertificate.ports, serializeHostSslCertificatePort);
        writer.writeObjectValue<SslCertificate>("sslCertificate", hostSslCertificate.sslCertificate, serializeSslCertificate);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostSslCertificateCollectionResponse(writer: SerializationWriter, hostSslCertificateCollectionResponse: Partial<HostSslCertificateCollectionResponse> | undefined | null = {}) : void {
    if (hostSslCertificateCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, hostSslCertificateCollectionResponse)
        writer.writeCollectionOfObjectValues<HostSslCertificate>("value", hostSslCertificateCollectionResponse.value, serializeHostSslCertificate);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostSslCertificatePort(writer: SerializationWriter, hostSslCertificatePort: Partial<HostSslCertificatePort> | undefined | null = {}) : void {
    if (hostSslCertificatePort) {
        writer.writeDateValue("firstSeenDateTime", hostSslCertificatePort.firstSeenDateTime);
        writer.writeDateValue("lastSeenDateTime", hostSslCertificatePort.lastSeenDateTime);
        writer.writeStringValue("@odata.type", hostSslCertificatePort.odataType);
        writer.writeNumberValue("port", hostSslCertificatePort.port);
        writer.writeAdditionalData(hostSslCertificatePort.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostTracker(writer: SerializationWriter, hostTracker: Partial<HostTracker> | undefined | null = {}) : void {
    if (hostTracker) {
        serializeArtifact(writer, hostTracker)
        writer.writeDateValue("firstSeenDateTime", hostTracker.firstSeenDateTime);
        writer.writeObjectValue<Host>("host", hostTracker.host, serializeHost);
        writer.writeStringValue("kind", hostTracker.kind);
        writer.writeDateValue("lastSeenDateTime", hostTracker.lastSeenDateTime);
        writer.writeStringValue("value", hostTracker.value);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostTrackerCollectionResponse(writer: SerializationWriter, hostTrackerCollectionResponse: Partial<HostTrackerCollectionResponse> | undefined | null = {}) : void {
    if (hostTrackerCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, hostTrackerCollectionResponse)
        writer.writeCollectionOfObjectValues<HostTracker>("value", hostTrackerCollectionResponse.value, serializeHostTracker);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHrSignalAuditRecord(writer: SerializationWriter, hrSignalAuditRecord: Partial<HrSignalAuditRecord> | undefined | null = {}) : void {
    if (hrSignalAuditRecord) {
        serializeAuditData(writer, hrSignalAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHuntingQueryResults(writer: SerializationWriter, huntingQueryResults: Partial<HuntingQueryResults> | undefined | null = {}) : void {
    if (huntingQueryResults) {
        writer.writeStringValue("@odata.type", huntingQueryResults.odataType);
        writer.writeCollectionOfObjectValues<HuntingRowResult>("results", huntingQueryResults.results, serializeHuntingRowResult);
        writer.writeCollectionOfObjectValues<SinglePropertySchema>("schema", huntingQueryResults.schema, serializeSinglePropertySchema);
        writer.writeAdditionalData(huntingQueryResults.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHuntingRowResult(writer: SerializationWriter, huntingRowResult: Partial<HuntingRowResult> | undefined | null = {}) : void {
    if (huntingRowResult) {
        writer.writeStringValue("@odata.type", huntingRowResult.odataType);
        writer.writeAdditionalData(huntingRowResult.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHygieneEventRecord(writer: SerializationWriter, hygieneEventRecord: Partial<HygieneEventRecord> | undefined | null = {}) : void {
    if (hygieneEventRecord) {
        serializeAuditData(writer, hygieneEventRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHyperlink(writer: SerializationWriter, hyperlink: Partial<Hyperlink> | undefined | null = {}) : void {
    if (hyperlink) {
        writer.writeStringValue("name", hyperlink.name);
        writer.writeStringValue("@odata.type", hyperlink.odataType);
        writer.writeStringValue("url", hyperlink.url);
        writer.writeAdditionalData(hyperlink.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIdentityContainer(writer: SerializationWriter, identityContainer: Partial<IdentityContainer> | undefined | null = {}) : void {
    if (identityContainer) {
        serializeEntity(writer, identityContainer)
        writer.writeCollectionOfObjectValues<HealthIssue>("healthIssues", identityContainer.healthIssues, serializeHealthIssue);
        writer.writeCollectionOfObjectValues<Sensor>("sensors", identityContainer.sensors, serializeSensor);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeImpactedAsset(writer: SerializationWriter, impactedAsset: Partial<ImpactedAsset> | undefined | null = {}) : void {
    if (impactedAsset) {
        writer.writeStringValue("@odata.type", impactedAsset.odataType);
        writer.writeAdditionalData(impactedAsset.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeImpactedDeviceAsset(writer: SerializationWriter, impactedDeviceAsset: Partial<ImpactedDeviceAsset> | undefined | null = {}) : void {
    if (impactedDeviceAsset) {
        serializeImpactedAsset(writer, impactedDeviceAsset)
        writer.writeEnumValue<DeviceAssetIdentifier>("identifier", impactedDeviceAsset.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeImpactedMailboxAsset(writer: SerializationWriter, impactedMailboxAsset: Partial<ImpactedMailboxAsset> | undefined | null = {}) : void {
    if (impactedMailboxAsset) {
        serializeImpactedAsset(writer, impactedMailboxAsset)
        writer.writeEnumValue<MailboxAssetIdentifier>("identifier", impactedMailboxAsset.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeImpactedUserAsset(writer: SerializationWriter, impactedUserAsset: Partial<ImpactedUserAsset> | undefined | null = {}) : void {
    if (impactedUserAsset) {
        serializeImpactedAsset(writer, impactedUserAsset)
        writer.writeEnumValue<UserAssetIdentifier>("identifier", impactedUserAsset.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIncident(writer: SerializationWriter, incident: Partial<Incident> | undefined | null = {}) : void {
    if (incident) {
        serializeEntity(writer, incident)
        writer.writeCollectionOfObjectValues<Alert>("alerts", incident.alerts, serializeAlert);
        writer.writeStringValue("assignedTo", incident.assignedTo);
        writer.writeEnumValue<AlertClassification>("classification", incident.classification);
        writer.writeCollectionOfObjectValues<AlertComment>("comments", incident.comments, serializeAlertComment);
        writer.writeDateValue("createdDateTime", incident.createdDateTime);
        writer.writeCollectionOfPrimitiveValues<string>("customTags", incident.customTags);
        writer.writeStringValue("description", incident.description);
        writer.writeEnumValue<AlertDetermination>("determination", incident.determination);
        writer.writeStringValue("displayName", incident.displayName);
        writer.writeStringValue("incidentWebUrl", incident.incidentWebUrl);
        writer.writeStringValue("lastModifiedBy", incident.lastModifiedBy);
        writer.writeDateValue("lastUpdateDateTime", incident.lastUpdateDateTime);
        writer.writeStringValue("recommendedActions", incident.recommendedActions);
        writer.writeCollectionOfObjectValues<RecommendedHuntingQuery>("recommendedHuntingQueries", incident.recommendedHuntingQueries, serializeRecommendedHuntingQuery);
        writer.writeStringValue("redirectIncidentId", incident.redirectIncidentId);
        writer.writeStringValue("resolvingComment", incident.resolvingComment);
        writer.writeEnumValue<AlertSeverity>("severity", incident.severity);
        writer.writeEnumValue<IncidentStatus>("status", incident.status);
        writer.writeStringValue("summary", incident.summary);
        writer.writeCollectionOfPrimitiveValues<string>("systemTags", incident.systemTags);
        writer.writeStringValue("tenantId", incident.tenantId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIncidentCollectionResponse(writer: SerializationWriter, incidentCollectionResponse: Partial<IncidentCollectionResponse> | undefined | null = {}) : void {
    if (incidentCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, incidentCollectionResponse)
        writer.writeCollectionOfObjectValues<Incident>("value", incidentCollectionResponse.value, serializeIncident);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIndicator(writer: SerializationWriter, indicator: Partial<Indicator> | undefined | null = {}) : void {
    if (indicator) {
        serializeEntity(writer, indicator)
        writer.writeObjectValue<Artifact>("artifact", indicator.artifact, serializeArtifact);
        writer.writeEnumValue<IndicatorSource>("source", indicator.source);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInformationBarrierPolicyApplicationAuditRecord(writer: SerializationWriter, informationBarrierPolicyApplicationAuditRecord: Partial<InformationBarrierPolicyApplicationAuditRecord> | undefined | null = {}) : void {
    if (informationBarrierPolicyApplicationAuditRecord) {
        serializeAuditData(writer, informationBarrierPolicyApplicationAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInformationProtection(writer: SerializationWriter, informationProtection: Partial<InformationProtection> | undefined | null = {}) : void {
    if (informationProtection) {
        serializeEntity(writer, informationProtection)
        writer.writeObjectValue<InformationProtectionPolicySetting>("labelPolicySettings", informationProtection.labelPolicySettings, serializeInformationProtectionPolicySetting);
        writer.writeCollectionOfObjectValues<SensitivityLabel>("sensitivityLabels", informationProtection.sensitivityLabels, serializeSensitivityLabel);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInformationProtectionAction(writer: SerializationWriter, informationProtectionAction: Partial<InformationProtectionAction> | undefined | null = {}) : void {
    if (informationProtectionAction) {
        writer.writeStringValue("@odata.type", informationProtectionAction.odataType);
        writer.writeAdditionalData(informationProtectionAction.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInformationProtectionPolicySetting(writer: SerializationWriter, informationProtectionPolicySetting: Partial<InformationProtectionPolicySetting> | undefined | null = {}) : void {
    if (informationProtectionPolicySetting) {
        serializeEntity(writer, informationProtectionPolicySetting)
        writer.writeStringValue("defaultLabelId", informationProtectionPolicySetting.defaultLabelId);
        writer.writeBooleanValue("isDowngradeJustificationRequired", informationProtectionPolicySetting.isDowngradeJustificationRequired);
        writer.writeBooleanValue("isMandatory", informationProtectionPolicySetting.isMandatory);
        writer.writeStringValue("moreInfoUrl", informationProtectionPolicySetting.moreInfoUrl);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInformationWorkerProtectionAuditRecord(writer: SerializationWriter, informationWorkerProtectionAuditRecord: Partial<InformationWorkerProtectionAuditRecord> | undefined | null = {}) : void {
    if (informationWorkerProtectionAuditRecord) {
        serializeAuditData(writer, informationWorkerProtectionAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInitiateInvestigationResponseAction(writer: SerializationWriter, initiateInvestigationResponseAction: Partial<InitiateInvestigationResponseAction> | undefined | null = {}) : void {
    if (initiateInvestigationResponseAction) {
        serializeResponseAction(writer, initiateInvestigationResponseAction)
        writer.writeEnumValue<DeviceIdEntityIdentifier[]>("identifier", initiateInvestigationResponseAction.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInsiderRiskScopedUserInsightsRecord(writer: SerializationWriter, insiderRiskScopedUserInsightsRecord: Partial<InsiderRiskScopedUserInsightsRecord> | undefined | null = {}) : void {
    if (insiderRiskScopedUserInsightsRecord) {
        serializeAuditData(writer, insiderRiskScopedUserInsightsRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInsiderRiskScopedUsersRecord(writer: SerializationWriter, insiderRiskScopedUsersRecord: Partial<InsiderRiskScopedUsersRecord> | undefined | null = {}) : void {
    if (insiderRiskScopedUsersRecord) {
        serializeAuditData(writer, insiderRiskScopedUsersRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIntelligenceProfile(writer: SerializationWriter, intelligenceProfile: Partial<IntelligenceProfile> | undefined | null = {}) : void {
    if (intelligenceProfile) {
        serializeEntity(writer, intelligenceProfile)
        writer.writeCollectionOfPrimitiveValues<string>("aliases", intelligenceProfile.aliases);
        writer.writeCollectionOfObjectValues<IntelligenceProfileCountryOrRegionOfOrigin>("countriesOrRegionsOfOrigin", intelligenceProfile.countriesOrRegionsOfOrigin, serializeIntelligenceProfileCountryOrRegionOfOrigin);
        writer.writeObjectValue<FormattedContent>("description", intelligenceProfile.description, serializeFormattedContent);
        writer.writeDateValue("firstActiveDateTime", intelligenceProfile.firstActiveDateTime);
        writer.writeCollectionOfObjectValues<IntelligenceProfileIndicator>("indicators", intelligenceProfile.indicators, serializeIntelligenceProfileIndicator);
        writer.writeEnumValue<IntelligenceProfileKind>("kind", intelligenceProfile.kind);
        writer.writeObjectValue<FormattedContent>("summary", intelligenceProfile.summary, serializeFormattedContent);
        writer.writeCollectionOfPrimitiveValues<string>("targets", intelligenceProfile.targets);
        writer.writeStringValue("title", intelligenceProfile.title);
        writer.writeObjectValue<FormattedContent>("tradecraft", intelligenceProfile.tradecraft, serializeFormattedContent);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIntelligenceProfileCollectionResponse(writer: SerializationWriter, intelligenceProfileCollectionResponse: Partial<IntelligenceProfileCollectionResponse> | undefined | null = {}) : void {
    if (intelligenceProfileCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, intelligenceProfileCollectionResponse)
        writer.writeCollectionOfObjectValues<IntelligenceProfile>("value", intelligenceProfileCollectionResponse.value, serializeIntelligenceProfile);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIntelligenceProfileCountryOrRegionOfOrigin(writer: SerializationWriter, intelligenceProfileCountryOrRegionOfOrigin: Partial<IntelligenceProfileCountryOrRegionOfOrigin> | undefined | null = {}) : void {
    if (intelligenceProfileCountryOrRegionOfOrigin) {
        writer.writeStringValue("code", intelligenceProfileCountryOrRegionOfOrigin.code);
        writer.writeStringValue("label", intelligenceProfileCountryOrRegionOfOrigin.label);
        writer.writeStringValue("@odata.type", intelligenceProfileCountryOrRegionOfOrigin.odataType);
        writer.writeAdditionalData(intelligenceProfileCountryOrRegionOfOrigin.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIntelligenceProfileIndicator(writer: SerializationWriter, intelligenceProfileIndicator: Partial<IntelligenceProfileIndicator> | undefined | null = {}) : void {
    if (intelligenceProfileIndicator) {
        serializeIndicator(writer, intelligenceProfileIndicator)
        writer.writeDateValue("firstSeenDateTime", intelligenceProfileIndicator.firstSeenDateTime);
        writer.writeDateValue("lastSeenDateTime", intelligenceProfileIndicator.lastSeenDateTime);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIntelligenceProfileIndicatorCollectionResponse(writer: SerializationWriter, intelligenceProfileIndicatorCollectionResponse: Partial<IntelligenceProfileIndicatorCollectionResponse> | undefined | null = {}) : void {
    if (intelligenceProfileIndicatorCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, intelligenceProfileIndicatorCollectionResponse)
        writer.writeCollectionOfObjectValues<IntelligenceProfileIndicator>("value", intelligenceProfileIndicatorCollectionResponse.value, serializeIntelligenceProfileIndicator);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIoTDeviceEvidence(writer: SerializationWriter, ioTDeviceEvidence: Partial<IoTDeviceEvidence> | undefined | null = {}) : void {
    if (ioTDeviceEvidence) {
        serializeAlertEvidence(writer, ioTDeviceEvidence)
        writer.writeStringValue("deviceId", ioTDeviceEvidence.deviceId);
        writer.writeStringValue("deviceName", ioTDeviceEvidence.deviceName);
        writer.writeStringValue("devicePageLink", ioTDeviceEvidence.devicePageLink);
        writer.writeStringValue("deviceSubType", ioTDeviceEvidence.deviceSubType);
        writer.writeStringValue("deviceType", ioTDeviceEvidence.deviceType);
        writer.writeEnumValue<IoTDeviceImportanceType>("importance", ioTDeviceEvidence.importance);
        writer.writeObjectValue<AzureResourceEvidence>("ioTHub", ioTDeviceEvidence.ioTHub, serializeAzureResourceEvidence);
        writer.writeStringValue("ioTSecurityAgentId", ioTDeviceEvidence.ioTSecurityAgentId);
        writer.writeObjectValue<IpEvidence>("ipAddress", ioTDeviceEvidence.ipAddress, serializeIpEvidence);
        writer.writeBooleanValue("isAuthorized", ioTDeviceEvidence.isAuthorized);
        writer.writeBooleanValue("isProgramming", ioTDeviceEvidence.isProgramming);
        writer.writeBooleanValue("isScanner", ioTDeviceEvidence.isScanner);
        writer.writeStringValue("macAddress", ioTDeviceEvidence.macAddress);
        writer.writeStringValue("manufacturer", ioTDeviceEvidence.manufacturer);
        writer.writeStringValue("model", ioTDeviceEvidence.model);
        writer.writeObjectValue<NicEvidence>("nics", ioTDeviceEvidence.nics, serializeNicEvidence);
        writer.writeStringValue("operatingSystem", ioTDeviceEvidence.operatingSystem);
        writer.writeCollectionOfPrimitiveValues<string>("owners", ioTDeviceEvidence.owners);
        writer.writeCollectionOfPrimitiveValues<string>("protocols", ioTDeviceEvidence.protocols);
        writer.writeStringValue("purdueLayer", ioTDeviceEvidence.purdueLayer);
        writer.writeStringValue("sensor", ioTDeviceEvidence.sensor);
        writer.writeStringValue("serialNumber", ioTDeviceEvidence.serialNumber);
        writer.writeStringValue("site", ioTDeviceEvidence.site);
        writer.writeStringValue("source", ioTDeviceEvidence.source);
        writer.writeObjectValue<UrlEvidence>("sourceRef", ioTDeviceEvidence.sourceRef, serializeUrlEvidence);
        writer.writeStringValue("zone", ioTDeviceEvidence.zone);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIpAddress(writer: SerializationWriter, ipAddress: Partial<IpAddress> | undefined | null = {}) : void {
    if (ipAddress) {
        serializeHost(writer, ipAddress)
        writer.writeObjectValue<AutonomousSystem>("autonomousSystem", ipAddress.autonomousSystem, serializeAutonomousSystem);
        writer.writeStringValue("countryOrRegion", ipAddress.countryOrRegion);
        writer.writeStringValue("hostingProvider", ipAddress.hostingProvider);
        writer.writeStringValue("netblock", ipAddress.netblock);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIpEvidence(writer: SerializationWriter, ipEvidence: Partial<IpEvidence> | undefined | null = {}) : void {
    if (ipEvidence) {
        serializeAlertEvidence(writer, ipEvidence)
        writer.writeStringValue("countryLetterCode", ipEvidence.countryLetterCode);
        writer.writeStringValue("ipAddress", ipEvidence.ipAddress);
        writer.writeObjectValue<GeoLocation>("location", ipEvidence.location, serializeGeoLocation);
        writer.writeObjectValue<Stream>("stream", ipEvidence.stream, serializeStream);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIrmSecurityAlertRecord(writer: SerializationWriter, irmSecurityAlertRecord: Partial<IrmSecurityAlertRecord> | undefined | null = {}) : void {
    if (irmSecurityAlertRecord) {
        serializeAuditData(writer, irmSecurityAlertRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIrmUserDefinedDetectionRecord(writer: SerializationWriter, irmUserDefinedDetectionRecord: Partial<IrmUserDefinedDetectionRecord> | undefined | null = {}) : void {
    if (irmUserDefinedDetectionRecord) {
        serializeAuditData(writer, irmUserDefinedDetectionRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIsolateDeviceResponseAction(writer: SerializationWriter, isolateDeviceResponseAction: Partial<IsolateDeviceResponseAction> | undefined | null = {}) : void {
    if (isolateDeviceResponseAction) {
        serializeResponseAction(writer, isolateDeviceResponseAction)
        writer.writeEnumValue<DeviceIdEntityIdentifier[]>("identifier", isolateDeviceResponseAction.identifier);
        writer.writeEnumValue<IsolationType>("isolationType", isolateDeviceResponseAction.isolationType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeJustifyAction(writer: SerializationWriter, justifyAction: Partial<JustifyAction> | undefined | null = {}) : void {
    if (justifyAction) {
        serializeInformationProtectionAction(writer, justifyAction)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKaizalaAuditRecord(writer: SerializationWriter, kaizalaAuditRecord: Partial<KaizalaAuditRecord> | undefined | null = {}) : void {
    if (kaizalaAuditRecord) {
        serializeAuditData(writer, kaizalaAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKeyValuePair(writer: SerializationWriter, keyValuePair: Partial<KeyValuePair> | undefined | null = {}) : void {
    if (keyValuePair) {
        writer.writeStringValue("name", keyValuePair.name);
        writer.writeStringValue("@odata.type", keyValuePair.odataType);
        writer.writeStringValue("value", keyValuePair.value);
        writer.writeAdditionalData(keyValuePair.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesClusterEvidence(writer: SerializationWriter, kubernetesClusterEvidence: Partial<KubernetesClusterEvidence> | undefined | null = {}) : void {
    if (kubernetesClusterEvidence) {
        serializeAlertEvidence(writer, kubernetesClusterEvidence)
        writer.writeObjectValue<AlertEvidence>("cloudResource", kubernetesClusterEvidence.cloudResource, serializeAlertEvidence);
        writer.writeStringValue("distribution", kubernetesClusterEvidence.distribution);
        writer.writeStringValue("name", kubernetesClusterEvidence.name);
        writer.writeEnumValue<KubernetesPlatform>("platform", kubernetesClusterEvidence.platform);
        writer.writeStringValue("version", kubernetesClusterEvidence.version);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesControllerEvidence(writer: SerializationWriter, kubernetesControllerEvidence: Partial<KubernetesControllerEvidence> | undefined | null = {}) : void {
    if (kubernetesControllerEvidence) {
        serializeAlertEvidence(writer, kubernetesControllerEvidence)
        writer.writeObjectValue<Dictionary>("labels", kubernetesControllerEvidence.labels, serializeDictionary);
        writer.writeStringValue("name", kubernetesControllerEvidence.name);
        writer.writeObjectValue<KubernetesNamespaceEvidence>("namespace", kubernetesControllerEvidence.namespace, serializeKubernetesNamespaceEvidence);
        writer.writeStringValue("type", kubernetesControllerEvidence.type);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesNamespaceEvidence(writer: SerializationWriter, kubernetesNamespaceEvidence: Partial<KubernetesNamespaceEvidence> | undefined | null = {}) : void {
    if (kubernetesNamespaceEvidence) {
        serializeAlertEvidence(writer, kubernetesNamespaceEvidence)
        writer.writeObjectValue<KubernetesClusterEvidence>("cluster", kubernetesNamespaceEvidence.cluster, serializeKubernetesClusterEvidence);
        writer.writeObjectValue<Dictionary>("labels", kubernetesNamespaceEvidence.labels, serializeDictionary);
        writer.writeStringValue("name", kubernetesNamespaceEvidence.name);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesPodEvidence(writer: SerializationWriter, kubernetesPodEvidence: Partial<KubernetesPodEvidence> | undefined | null = {}) : void {
    if (kubernetesPodEvidence) {
        serializeAlertEvidence(writer, kubernetesPodEvidence)
        writer.writeCollectionOfObjectValues<ContainerEvidence>("containers", kubernetesPodEvidence.containers, serializeContainerEvidence);
        writer.writeObjectValue<KubernetesControllerEvidence>("controller", kubernetesPodEvidence.controller, serializeKubernetesControllerEvidence);
        writer.writeCollectionOfObjectValues<ContainerEvidence>("ephemeralContainers", kubernetesPodEvidence.ephemeralContainers, serializeContainerEvidence);
        writer.writeCollectionOfObjectValues<ContainerEvidence>("initContainers", kubernetesPodEvidence.initContainers, serializeContainerEvidence);
        writer.writeObjectValue<Dictionary>("labels", kubernetesPodEvidence.labels, serializeDictionary);
        writer.writeStringValue("name", kubernetesPodEvidence.name);
        writer.writeObjectValue<KubernetesNamespaceEvidence>("namespace", kubernetesPodEvidence.namespace, serializeKubernetesNamespaceEvidence);
        writer.writeObjectValue<IpEvidence>("podIp", kubernetesPodEvidence.podIp, serializeIpEvidence);
        writer.writeObjectValue<KubernetesServiceAccountEvidence>("serviceAccount", kubernetesPodEvidence.serviceAccount, serializeKubernetesServiceAccountEvidence);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesSecretEvidence(writer: SerializationWriter, kubernetesSecretEvidence: Partial<KubernetesSecretEvidence> | undefined | null = {}) : void {
    if (kubernetesSecretEvidence) {
        serializeAlertEvidence(writer, kubernetesSecretEvidence)
        writer.writeStringValue("name", kubernetesSecretEvidence.name);
        writer.writeObjectValue<KubernetesNamespaceEvidence>("namespace", kubernetesSecretEvidence.namespace, serializeKubernetesNamespaceEvidence);
        writer.writeStringValue("secretType", kubernetesSecretEvidence.secretType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesServiceAccountEvidence(writer: SerializationWriter, kubernetesServiceAccountEvidence: Partial<KubernetesServiceAccountEvidence> | undefined | null = {}) : void {
    if (kubernetesServiceAccountEvidence) {
        serializeAlertEvidence(writer, kubernetesServiceAccountEvidence)
        writer.writeStringValue("name", kubernetesServiceAccountEvidence.name);
        writer.writeObjectValue<KubernetesNamespaceEvidence>("namespace", kubernetesServiceAccountEvidence.namespace, serializeKubernetesNamespaceEvidence);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesServiceEvidence(writer: SerializationWriter, kubernetesServiceEvidence: Partial<KubernetesServiceEvidence> | undefined | null = {}) : void {
    if (kubernetesServiceEvidence) {
        serializeAlertEvidence(writer, kubernetesServiceEvidence)
        writer.writeObjectValue<IpEvidence>("clusterIP", kubernetesServiceEvidence.clusterIP, serializeIpEvidence);
        writer.writeCollectionOfObjectValues<IpEvidence>("externalIPs", kubernetesServiceEvidence.externalIPs, serializeIpEvidence);
        writer.writeObjectValue<Dictionary>("labels", kubernetesServiceEvidence.labels, serializeDictionary);
        writer.writeStringValue("name", kubernetesServiceEvidence.name);
        writer.writeObjectValue<KubernetesNamespaceEvidence>("namespace", kubernetesServiceEvidence.namespace, serializeKubernetesNamespaceEvidence);
        writer.writeObjectValue<Dictionary>("selector", kubernetesServiceEvidence.selector, serializeDictionary);
        writer.writeCollectionOfObjectValues<KubernetesServicePort>("servicePorts", kubernetesServiceEvidence.servicePorts, serializeKubernetesServicePort);
        writer.writeEnumValue<KubernetesServiceType>("serviceType", kubernetesServiceEvidence.serviceType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesServicePort(writer: SerializationWriter, kubernetesServicePort: Partial<KubernetesServicePort> | undefined | null = {}) : void {
    if (kubernetesServicePort) {
        writer.writeStringValue("appProtocol", kubernetesServicePort.appProtocol);
        writer.writeStringValue("name", kubernetesServicePort.name);
        writer.writeNumberValue("nodePort", kubernetesServicePort.nodePort);
        writer.writeStringValue("@odata.type", kubernetesServicePort.odataType);
        writer.writeNumberValue("port", kubernetesServicePort.port);
        writer.writeEnumValue<ContainerPortProtocol>("protocol", kubernetesServicePort.protocol);
        writer.writeStringValue("targetPort", kubernetesServicePort.targetPort);
        writer.writeAdditionalData(kubernetesServicePort.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLabelAnalyticsAggregateAuditRecord(writer: SerializationWriter, labelAnalyticsAggregateAuditRecord: Partial<LabelAnalyticsAggregateAuditRecord> | undefined | null = {}) : void {
    if (labelAnalyticsAggregateAuditRecord) {
        serializeAuditData(writer, labelAnalyticsAggregateAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLabelContentExplorerAuditRecord(writer: SerializationWriter, labelContentExplorerAuditRecord: Partial<LabelContentExplorerAuditRecord> | undefined | null = {}) : void {
    if (labelContentExplorerAuditRecord) {
        serializeAuditData(writer, labelContentExplorerAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLabelingOptions(writer: SerializationWriter, labelingOptions: Partial<LabelingOptions> | undefined | null = {}) : void {
    if (labelingOptions) {
        writer.writeEnumValue<AssignmentMethod>("assignmentMethod", labelingOptions.assignmentMethod);
        writer.writeObjectValue<DowngradeJustification>("downgradeJustification", labelingOptions.downgradeJustification, serializeDowngradeJustification);
        writer.writeCollectionOfObjectValues<KeyValuePair>("extendedProperties", labelingOptions.extendedProperties, serializeKeyValuePair);
        writer.writeStringValue("labelId", labelingOptions.labelId);
        writer.writeStringValue("@odata.type", labelingOptions.odataType);
        writer.writeAdditionalData(labelingOptions.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLabelsRoot(writer: SerializationWriter, labelsRoot: Partial<LabelsRoot> | undefined | null = {}) : void {
    if (labelsRoot) {
        serializeEntity(writer, labelsRoot)
        writer.writeCollectionOfObjectValues<AuthorityTemplate>("authorities", labelsRoot.authorities, serializeAuthorityTemplate);
        writer.writeCollectionOfObjectValues<CategoryTemplate>("categories", labelsRoot.categories, serializeCategoryTemplate);
        writer.writeCollectionOfObjectValues<CitationTemplate>("citations", labelsRoot.citations, serializeCitationTemplate);
        writer.writeCollectionOfObjectValues<DepartmentTemplate>("departments", labelsRoot.departments, serializeDepartmentTemplate);
        writer.writeCollectionOfObjectValues<FilePlanReferenceTemplate>("filePlanReferences", labelsRoot.filePlanReferences, serializeFilePlanReferenceTemplate);
        writer.writeCollectionOfObjectValues<RetentionLabel>("retentionLabels", labelsRoot.retentionLabels, serializeRetentionLabel);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLargeContentMetadataAuditRecord(writer: SerializationWriter, largeContentMetadataAuditRecord: Partial<LargeContentMetadataAuditRecord> | undefined | null = {}) : void {
    if (largeContentMetadataAuditRecord) {
        serializeAuditData(writer, largeContentMetadataAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLoggedOnUser(writer: SerializationWriter, loggedOnUser: Partial<LoggedOnUser> | undefined | null = {}) : void {
    if (loggedOnUser) {
        writer.writeStringValue("accountName", loggedOnUser.accountName);
        writer.writeStringValue("domainName", loggedOnUser.domainName);
        writer.writeStringValue("@odata.type", loggedOnUser.odataType);
        writer.writeAdditionalData(loggedOnUser.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeM365ComplianceConnectorAuditRecord(writer: SerializationWriter, m365ComplianceConnectorAuditRecord: Partial<M365ComplianceConnectorAuditRecord> | undefined | null = {}) : void {
    if (m365ComplianceConnectorAuditRecord) {
        serializeAuditData(writer, m365ComplianceConnectorAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeM365DAADAuditRecord(writer: SerializationWriter, m365DAADAuditRecord: Partial<M365DAADAuditRecord> | undefined | null = {}) : void {
    if (m365DAADAuditRecord) {
        serializeAuditData(writer, m365DAADAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMailboxConfigurationEvidence(writer: SerializationWriter, mailboxConfigurationEvidence: Partial<MailboxConfigurationEvidence> | undefined | null = {}) : void {
    if (mailboxConfigurationEvidence) {
        serializeAlertEvidence(writer, mailboxConfigurationEvidence)
        writer.writeStringValue("configurationId", mailboxConfigurationEvidence.configurationId);
        writer.writeEnumValue<MailboxConfigurationType>("configurationType", mailboxConfigurationEvidence.configurationType);
        writer.writeStringValue("displayName", mailboxConfigurationEvidence.displayName);
        writer.writeGuidValue("externalDirectoryObjectId", mailboxConfigurationEvidence.externalDirectoryObjectId);
        writer.writeStringValue("mailboxPrimaryAddress", mailboxConfigurationEvidence.mailboxPrimaryAddress);
        writer.writeStringValue("upn", mailboxConfigurationEvidence.upn);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMailboxEvidence(writer: SerializationWriter, mailboxEvidence: Partial<MailboxEvidence> | undefined | null = {}) : void {
    if (mailboxEvidence) {
        serializeAlertEvidence(writer, mailboxEvidence)
        writer.writeStringValue("displayName", mailboxEvidence.displayName);
        writer.writeStringValue("primaryAddress", mailboxEvidence.primaryAddress);
        writer.writeObjectValue<UserAccount>("userAccount", mailboxEvidence.userAccount, serializeUserAccount);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMailClusterEvidence(writer: SerializationWriter, mailClusterEvidence: Partial<MailClusterEvidence> | undefined | null = {}) : void {
    if (mailClusterEvidence) {
        serializeAlertEvidence(writer, mailClusterEvidence)
        writer.writeStringValue("clusterBy", mailClusterEvidence.clusterBy);
        writer.writeStringValue("clusterByValue", mailClusterEvidence.clusterByValue);
        writer.writeNumberValue("emailCount", mailClusterEvidence.emailCount);
        writer.writeCollectionOfPrimitiveValues<string>("networkMessageIds", mailClusterEvidence.networkMessageIds);
        writer.writeStringValue("query", mailClusterEvidence.query);
        writer.writeStringValue("urn", mailClusterEvidence.urn);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMailSubmissionData(writer: SerializationWriter, mailSubmissionData: Partial<MailSubmissionData> | undefined | null = {}) : void {
    if (mailSubmissionData) {
        serializeAuditData(writer, mailSubmissionData)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMalwareEvidence(writer: SerializationWriter, malwareEvidence: Partial<MalwareEvidence> | undefined | null = {}) : void {
    if (malwareEvidence) {
        serializeAlertEvidence(writer, malwareEvidence)
        writer.writeStringValue("category", malwareEvidence.category);
        writer.writeCollectionOfObjectValues<FileEvidence>("files", malwareEvidence.files, serializeFileEvidence);
        writer.writeStringValue("name", malwareEvidence.name);
        writer.writeCollectionOfObjectValues<ProcessEvidence>("processes", malwareEvidence.processes, serializeProcessEvidence);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedServicesAuditRecord(writer: SerializationWriter, managedServicesAuditRecord: Partial<ManagedServicesAuditRecord> | undefined | null = {}) : void {
    if (managedServicesAuditRecord) {
        serializeAuditData(writer, managedServicesAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenantsAuditRecord(writer: SerializationWriter, managedTenantsAuditRecord: Partial<ManagedTenantsAuditRecord> | undefined | null = {}) : void {
    if (managedTenantsAuditRecord) {
        serializeAuditData(writer, managedTenantsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMapgAlertsAuditRecord(writer: SerializationWriter, mapgAlertsAuditRecord: Partial<MapgAlertsAuditRecord> | undefined | null = {}) : void {
    if (mapgAlertsAuditRecord) {
        serializeAuditData(writer, mapgAlertsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMapgOnboardAuditRecord(writer: SerializationWriter, mapgOnboardAuditRecord: Partial<MapgOnboardAuditRecord> | undefined | null = {}) : void {
    if (mapgOnboardAuditRecord) {
        serializeAuditData(writer, mapgOnboardAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMapgPolicyAuditRecord(writer: SerializationWriter, mapgPolicyAuditRecord: Partial<MapgPolicyAuditRecord> | undefined | null = {}) : void {
    if (mapgPolicyAuditRecord) {
        serializeAuditData(writer, mapgPolicyAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMarkUserAsCompromisedResponseAction(writer: SerializationWriter, markUserAsCompromisedResponseAction: Partial<MarkUserAsCompromisedResponseAction> | undefined | null = {}) : void {
    if (markUserAsCompromisedResponseAction) {
        serializeResponseAction(writer, markUserAsCompromisedResponseAction)
        writer.writeEnumValue<MarkUserAsCompromisedEntityIdentifier[]>("identifier", markUserAsCompromisedResponseAction.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMcasAlertsAuditRecord(writer: SerializationWriter, mcasAlertsAuditRecord: Partial<McasAlertsAuditRecord> | undefined | null = {}) : void {
    if (mcasAlertsAuditRecord) {
        serializeAuditData(writer, mcasAlertsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMdaDataSecuritySignalRecord(writer: SerializationWriter, mdaDataSecuritySignalRecord: Partial<MdaDataSecuritySignalRecord> | undefined | null = {}) : void {
    if (mdaDataSecuritySignalRecord) {
        serializeAuditData(writer, mdaDataSecuritySignalRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMdatpAuditRecord(writer: SerializationWriter, mdatpAuditRecord: Partial<MdatpAuditRecord> | undefined | null = {}) : void {
    if (mdatpAuditRecord) {
        serializeAuditData(writer, mdatpAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMdcEventsRecord(writer: SerializationWriter, mdcEventsRecord: Partial<MdcEventsRecord> | undefined | null = {}) : void {
    if (mdcEventsRecord) {
        serializeAuditData(writer, mdcEventsRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMdiAuditRecord(writer: SerializationWriter, mdiAuditRecord: Partial<MdiAuditRecord> | undefined | null = {}) : void {
    if (mdiAuditRecord) {
        serializeAuditData(writer, mdiAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMeshWorldsAuditRecord(writer: SerializationWriter, meshWorldsAuditRecord: Partial<MeshWorldsAuditRecord> | undefined | null = {}) : void {
    if (meshWorldsAuditRecord) {
        serializeAuditData(writer, meshWorldsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMetadataAction(writer: SerializationWriter, metadataAction: Partial<MetadataAction> | undefined | null = {}) : void {
    if (metadataAction) {
        serializeInformationProtectionAction(writer, metadataAction)
        writer.writeCollectionOfObjectValues<KeyValuePair>("metadataToAdd", metadataAction.metadataToAdd, serializeKeyValuePair);
        writer.writeCollectionOfPrimitiveValues<string>("metadataToRemove", metadataAction.metadataToRemove);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoft365BackupBackupItemAuditRecord(writer: SerializationWriter, microsoft365BackupBackupItemAuditRecord: Partial<Microsoft365BackupBackupItemAuditRecord> | undefined | null = {}) : void {
    if (microsoft365BackupBackupItemAuditRecord) {
        serializeAuditData(writer, microsoft365BackupBackupItemAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoft365BackupBackupPolicyAuditRecord(writer: SerializationWriter, microsoft365BackupBackupPolicyAuditRecord: Partial<Microsoft365BackupBackupPolicyAuditRecord> | undefined | null = {}) : void {
    if (microsoft365BackupBackupPolicyAuditRecord) {
        serializeAuditData(writer, microsoft365BackupBackupPolicyAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoft365BackupRestoreItemAuditRecord(writer: SerializationWriter, microsoft365BackupRestoreItemAuditRecord: Partial<Microsoft365BackupRestoreItemAuditRecord> | undefined | null = {}) : void {
    if (microsoft365BackupRestoreItemAuditRecord) {
        serializeAuditData(writer, microsoft365BackupRestoreItemAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoft365BackupRestoreTaskAuditRecord(writer: SerializationWriter, microsoft365BackupRestoreTaskAuditRecord: Partial<Microsoft365BackupRestoreTaskAuditRecord> | undefined | null = {}) : void {
    if (microsoft365BackupRestoreTaskAuditRecord) {
        serializeAuditData(writer, microsoft365BackupRestoreTaskAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftDefenderExpertsBaseAuditRecord(writer: SerializationWriter, microsoftDefenderExpertsBaseAuditRecord: Partial<MicrosoftDefenderExpertsBaseAuditRecord> | undefined | null = {}) : void {
    if (microsoftDefenderExpertsBaseAuditRecord) {
        serializeAuditData(writer, microsoftDefenderExpertsBaseAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftDefenderExpertsXDRAuditRecord(writer: SerializationWriter, microsoftDefenderExpertsXDRAuditRecord: Partial<MicrosoftDefenderExpertsXDRAuditRecord> | undefined | null = {}) : void {
    if (microsoftDefenderExpertsXDRAuditRecord) {
        serializeAuditData(writer, microsoftDefenderExpertsXDRAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftFlowAuditRecord(writer: SerializationWriter, microsoftFlowAuditRecord: Partial<MicrosoftFlowAuditRecord> | undefined | null = {}) : void {
    if (microsoftFlowAuditRecord) {
        serializeAuditData(writer, microsoftFlowAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftFormsAuditRecord(writer: SerializationWriter, microsoftFormsAuditRecord: Partial<MicrosoftFormsAuditRecord> | undefined | null = {}) : void {
    if (microsoftFormsAuditRecord) {
        serializeAuditData(writer, microsoftFormsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftGraphDataConnectConsent(writer: SerializationWriter, microsoftGraphDataConnectConsent: Partial<MicrosoftGraphDataConnectConsent> | undefined | null = {}) : void {
    if (microsoftGraphDataConnectConsent) {
        serializeAuditData(writer, microsoftGraphDataConnectConsent)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftGraphDataConnectOperation(writer: SerializationWriter, microsoftGraphDataConnectOperation: Partial<MicrosoftGraphDataConnectOperation> | undefined | null = {}) : void {
    if (microsoftGraphDataConnectOperation) {
        serializeAuditData(writer, microsoftGraphDataConnectOperation)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftPurviewDataMapOperationRecord(writer: SerializationWriter, microsoftPurviewDataMapOperationRecord: Partial<MicrosoftPurviewDataMapOperationRecord> | undefined | null = {}) : void {
    if (microsoftPurviewDataMapOperationRecord) {
        serializeAuditData(writer, microsoftPurviewDataMapOperationRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftPurviewMetadataPolicyOperationRecord(writer: SerializationWriter, microsoftPurviewMetadataPolicyOperationRecord: Partial<MicrosoftPurviewMetadataPolicyOperationRecord> | undefined | null = {}) : void {
    if (microsoftPurviewMetadataPolicyOperationRecord) {
        serializeAuditData(writer, microsoftPurviewMetadataPolicyOperationRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftPurviewPolicyOperationRecord(writer: SerializationWriter, microsoftPurviewPolicyOperationRecord: Partial<MicrosoftPurviewPolicyOperationRecord> | undefined | null = {}) : void {
    if (microsoftPurviewPolicyOperationRecord) {
        serializeAuditData(writer, microsoftPurviewPolicyOperationRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftPurviewPrivacyAuditEvent(writer: SerializationWriter, microsoftPurviewPrivacyAuditEvent: Partial<MicrosoftPurviewPrivacyAuditEvent> | undefined | null = {}) : void {
    if (microsoftPurviewPrivacyAuditEvent) {
        serializeAuditData(writer, microsoftPurviewPrivacyAuditEvent)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftStreamAuditRecord(writer: SerializationWriter, microsoftStreamAuditRecord: Partial<MicrosoftStreamAuditRecord> | undefined | null = {}) : void {
    if (microsoftStreamAuditRecord) {
        serializeAuditData(writer, microsoftStreamAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftTeamsAdminAuditRecord(writer: SerializationWriter, microsoftTeamsAdminAuditRecord: Partial<MicrosoftTeamsAdminAuditRecord> | undefined | null = {}) : void {
    if (microsoftTeamsAdminAuditRecord) {
        serializeAuditData(writer, microsoftTeamsAdminAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftTeamsAnalyticsAuditRecord(writer: SerializationWriter, microsoftTeamsAnalyticsAuditRecord: Partial<MicrosoftTeamsAnalyticsAuditRecord> | undefined | null = {}) : void {
    if (microsoftTeamsAnalyticsAuditRecord) {
        serializeAuditData(writer, microsoftTeamsAnalyticsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftTeamsAuditRecord(writer: SerializationWriter, microsoftTeamsAuditRecord: Partial<MicrosoftTeamsAuditRecord> | undefined | null = {}) : void {
    if (microsoftTeamsAuditRecord) {
        serializeAuditData(writer, microsoftTeamsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftTeamsDeviceAuditRecord(writer: SerializationWriter, microsoftTeamsDeviceAuditRecord: Partial<MicrosoftTeamsDeviceAuditRecord> | undefined | null = {}) : void {
    if (microsoftTeamsDeviceAuditRecord) {
        serializeAuditData(writer, microsoftTeamsDeviceAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftTeamsRetentionLabelActionAuditRecord(writer: SerializationWriter, microsoftTeamsRetentionLabelActionAuditRecord: Partial<MicrosoftTeamsRetentionLabelActionAuditRecord> | undefined | null = {}) : void {
    if (microsoftTeamsRetentionLabelActionAuditRecord) {
        serializeAuditData(writer, microsoftTeamsRetentionLabelActionAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftTeamsSensitivityLabelActionAuditRecord(writer: SerializationWriter, microsoftTeamsSensitivityLabelActionAuditRecord: Partial<MicrosoftTeamsSensitivityLabelActionAuditRecord> | undefined | null = {}) : void {
    if (microsoftTeamsSensitivityLabelActionAuditRecord) {
        serializeAuditData(writer, microsoftTeamsSensitivityLabelActionAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftTeamsShiftsAuditRecord(writer: SerializationWriter, microsoftTeamsShiftsAuditRecord: Partial<MicrosoftTeamsShiftsAuditRecord> | undefined | null = {}) : void {
    if (microsoftTeamsShiftsAuditRecord) {
        serializeAuditData(writer, microsoftTeamsShiftsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelExchangeItemAuditRecord(writer: SerializationWriter, mipAutoLabelExchangeItemAuditRecord: Partial<MipAutoLabelExchangeItemAuditRecord> | undefined | null = {}) : void {
    if (mipAutoLabelExchangeItemAuditRecord) {
        serializeAuditData(writer, mipAutoLabelExchangeItemAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelItemAuditRecord(writer: SerializationWriter, mipAutoLabelItemAuditRecord: Partial<MipAutoLabelItemAuditRecord> | undefined | null = {}) : void {
    if (mipAutoLabelItemAuditRecord) {
        serializeAuditData(writer, mipAutoLabelItemAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelPolicyAuditRecord(writer: SerializationWriter, mipAutoLabelPolicyAuditRecord: Partial<MipAutoLabelPolicyAuditRecord> | undefined | null = {}) : void {
    if (mipAutoLabelPolicyAuditRecord) {
        serializeAuditData(writer, mipAutoLabelPolicyAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelProgressFeedbackAuditRecord(writer: SerializationWriter, mipAutoLabelProgressFeedbackAuditRecord: Partial<MipAutoLabelProgressFeedbackAuditRecord> | undefined | null = {}) : void {
    if (mipAutoLabelProgressFeedbackAuditRecord) {
        serializeAuditData(writer, mipAutoLabelProgressFeedbackAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelSharePointItemAuditRecord(writer: SerializationWriter, mipAutoLabelSharePointItemAuditRecord: Partial<MipAutoLabelSharePointItemAuditRecord> | undefined | null = {}) : void {
    if (mipAutoLabelSharePointItemAuditRecord) {
        serializeAuditData(writer, mipAutoLabelSharePointItemAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelSharePointPolicyLocationAuditRecord(writer: SerializationWriter, mipAutoLabelSharePointPolicyLocationAuditRecord: Partial<MipAutoLabelSharePointPolicyLocationAuditRecord> | undefined | null = {}) : void {
    if (mipAutoLabelSharePointPolicyLocationAuditRecord) {
        serializeAuditData(writer, mipAutoLabelSharePointPolicyLocationAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelSimulationSharePointCompletionRecord(writer: SerializationWriter, mipAutoLabelSimulationSharePointCompletionRecord: Partial<MipAutoLabelSimulationSharePointCompletionRecord> | undefined | null = {}) : void {
    if (mipAutoLabelSimulationSharePointCompletionRecord) {
        serializeAuditData(writer, mipAutoLabelSimulationSharePointCompletionRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelSimulationSharePointProgressRecord(writer: SerializationWriter, mipAutoLabelSimulationSharePointProgressRecord: Partial<MipAutoLabelSimulationSharePointProgressRecord> | undefined | null = {}) : void {
    if (mipAutoLabelSimulationSharePointProgressRecord) {
        serializeAuditData(writer, mipAutoLabelSimulationSharePointProgressRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelSimulationStatisticsRecord(writer: SerializationWriter, mipAutoLabelSimulationStatisticsRecord: Partial<MipAutoLabelSimulationStatisticsRecord> | undefined | null = {}) : void {
    if (mipAutoLabelSimulationStatisticsRecord) {
        serializeAuditData(writer, mipAutoLabelSimulationStatisticsRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelSimulationStatusRecord(writer: SerializationWriter, mipAutoLabelSimulationStatusRecord: Partial<MipAutoLabelSimulationStatusRecord> | undefined | null = {}) : void {
    if (mipAutoLabelSimulationStatusRecord) {
        serializeAuditData(writer, mipAutoLabelSimulationStatusRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipExactDataMatchAuditRecord(writer: SerializationWriter, mipExactDataMatchAuditRecord: Partial<MipExactDataMatchAuditRecord> | undefined | null = {}) : void {
    if (mipExactDataMatchAuditRecord) {
        serializeAuditData(writer, mipExactDataMatchAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipLabelAnalyticsAuditRecord(writer: SerializationWriter, mipLabelAnalyticsAuditRecord: Partial<MipLabelAnalyticsAuditRecord> | undefined | null = {}) : void {
    if (mipLabelAnalyticsAuditRecord) {
        serializeAuditData(writer, mipLabelAnalyticsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipLabelAuditRecord(writer: SerializationWriter, mipLabelAuditRecord: Partial<MipLabelAuditRecord> | undefined | null = {}) : void {
    if (mipLabelAuditRecord) {
        serializeAuditData(writer, mipLabelAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMoveToDeletedItemsResponseAction(writer: SerializationWriter, moveToDeletedItemsResponseAction: Partial<MoveToDeletedItemsResponseAction> | undefined | null = {}) : void {
    if (moveToDeletedItemsResponseAction) {
        serializeResponseAction(writer, moveToDeletedItemsResponseAction)
        writer.writeEnumValue<EmailEntityIdentifier[]>("identifier", moveToDeletedItemsResponseAction.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMoveToInboxResponseAction(writer: SerializationWriter, moveToInboxResponseAction: Partial<MoveToInboxResponseAction> | undefined | null = {}) : void {
    if (moveToInboxResponseAction) {
        serializeResponseAction(writer, moveToInboxResponseAction)
        writer.writeEnumValue<EmailEntityIdentifier[]>("identifier", moveToInboxResponseAction.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMoveToJunkResponseAction(writer: SerializationWriter, moveToJunkResponseAction: Partial<MoveToJunkResponseAction> | undefined | null = {}) : void {
    if (moveToJunkResponseAction) {
        serializeResponseAction(writer, moveToJunkResponseAction)
        writer.writeEnumValue<EmailEntityIdentifier[]>("identifier", moveToJunkResponseAction.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMS365DCustomDetectionAuditRecord(writer: SerializationWriter, mS365DCustomDetectionAuditRecord: Partial<MS365DCustomDetectionAuditRecord> | undefined | null = {}) : void {
    if (mS365DCustomDetectionAuditRecord) {
        serializeAuditData(writer, mS365DCustomDetectionAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMS365DIncidentAuditRecord(writer: SerializationWriter, mS365DIncidentAuditRecord: Partial<MS365DIncidentAuditRecord> | undefined | null = {}) : void {
    if (mS365DIncidentAuditRecord) {
        serializeAuditData(writer, mS365DIncidentAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMS365DSuppressionRuleAuditRecord(writer: SerializationWriter, mS365DSuppressionRuleAuditRecord: Partial<MS365DSuppressionRuleAuditRecord> | undefined | null = {}) : void {
    if (mS365DSuppressionRuleAuditRecord) {
        serializeAuditData(writer, mS365DSuppressionRuleAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMsdeGeneralSettingsAuditRecord(writer: SerializationWriter, msdeGeneralSettingsAuditRecord: Partial<MsdeGeneralSettingsAuditRecord> | undefined | null = {}) : void {
    if (msdeGeneralSettingsAuditRecord) {
        serializeAuditData(writer, msdeGeneralSettingsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMsdeIndicatorsSettingsAuditRecord(writer: SerializationWriter, msdeIndicatorsSettingsAuditRecord: Partial<MsdeIndicatorsSettingsAuditRecord> | undefined | null = {}) : void {
    if (msdeIndicatorsSettingsAuditRecord) {
        serializeAuditData(writer, msdeIndicatorsSettingsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMsdeResponseActionsAuditRecord(writer: SerializationWriter, msdeResponseActionsAuditRecord: Partial<MsdeResponseActionsAuditRecord> | undefined | null = {}) : void {
    if (msdeResponseActionsAuditRecord) {
        serializeAuditData(writer, msdeResponseActionsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMsdeRolesSettingsAuditRecord(writer: SerializationWriter, msdeRolesSettingsAuditRecord: Partial<MsdeRolesSettingsAuditRecord> | undefined | null = {}) : void {
    if (msdeRolesSettingsAuditRecord) {
        serializeAuditData(writer, msdeRolesSettingsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMsticNationStateNotificationRecord(writer: SerializationWriter, msticNationStateNotificationRecord: Partial<MsticNationStateNotificationRecord> | undefined | null = {}) : void {
    if (msticNationStateNotificationRecord) {
        serializeAuditData(writer, msticNationStateNotificationRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMultiStageDispositionAuditRecord(writer: SerializationWriter, multiStageDispositionAuditRecord: Partial<MultiStageDispositionAuditRecord> | undefined | null = {}) : void {
    if (multiStageDispositionAuditRecord) {
        serializeAuditData(writer, multiStageDispositionAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMyAnalyticsSettingsAuditRecord(writer: SerializationWriter, myAnalyticsSettingsAuditRecord: Partial<MyAnalyticsSettingsAuditRecord> | undefined | null = {}) : void {
    if (myAnalyticsSettingsAuditRecord) {
        serializeAuditData(writer, myAnalyticsSettingsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeNetworkAdapter(writer: SerializationWriter, networkAdapter: Partial<NetworkAdapter> | undefined | null = {}) : void {
    if (networkAdapter) {
        serializeEntity(writer, networkAdapter)
        writer.writeBooleanValue("isEnabled", networkAdapter.isEnabled);
        writer.writeStringValue("name", networkAdapter.name);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeNetworkConnectionEvidence(writer: SerializationWriter, networkConnectionEvidence: Partial<NetworkConnectionEvidence> | undefined | null = {}) : void {
    if (networkConnectionEvidence) {
        serializeAlertEvidence(writer, networkConnectionEvidence)
        writer.writeObjectValue<IpEvidence>("destinationAddress", networkConnectionEvidence.destinationAddress, serializeIpEvidence);
        writer.writeNumberValue("destinationPort", networkConnectionEvidence.destinationPort);
        writer.writeEnumValue<ProtocolType>("protocol", networkConnectionEvidence.protocol);
        writer.writeObjectValue<IpEvidence>("sourceAddress", networkConnectionEvidence.sourceAddress, serializeIpEvidence);
        writer.writeNumberValue("sourcePort", networkConnectionEvidence.sourcePort);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeNicEvidence(writer: SerializationWriter, nicEvidence: Partial<NicEvidence> | undefined | null = {}) : void {
    if (nicEvidence) {
        serializeAlertEvidence(writer, nicEvidence)
        writer.writeObjectValue<IpEvidence>("ipAddress", nicEvidence.ipAddress, serializeIpEvidence);
        writer.writeStringValue("macAddress", nicEvidence.macAddress);
        writer.writeCollectionOfPrimitiveValues<string>("vlans", nicEvidence.vlans);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOauthApplicationEvidence(writer: SerializationWriter, oauthApplicationEvidence: Partial<OauthApplicationEvidence> | undefined | null = {}) : void {
    if (oauthApplicationEvidence) {
        serializeAlertEvidence(writer, oauthApplicationEvidence)
        writer.writeStringValue("appId", oauthApplicationEvidence.appId);
        writer.writeStringValue("displayName", oauthApplicationEvidence.displayName);
        writer.writeStringValue("objectId", oauthApplicationEvidence.objectId);
        writer.writeStringValue("publisher", oauthApplicationEvidence.publisher);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOcrSettings(writer: SerializationWriter, ocrSettings: Partial<OcrSettings> | undefined | null = {}) : void {
    if (ocrSettings) {
        writer.writeBooleanValue("isEnabled", ocrSettings.isEnabled);
        writer.writeNumberValue("maxImageSize", ocrSettings.maxImageSize);
        writer.writeStringValue("@odata.type", ocrSettings.odataType);
        writer.writeDurationValue("timeout", ocrSettings.timeout);
        writer.writeAdditionalData(ocrSettings.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOfficeNativeAuditRecord(writer: SerializationWriter, officeNativeAuditRecord: Partial<OfficeNativeAuditRecord> | undefined | null = {}) : void {
    if (officeNativeAuditRecord) {
        serializeAuditData(writer, officeNativeAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOmePortalAuditRecord(writer: SerializationWriter, omePortalAuditRecord: Partial<OmePortalAuditRecord> | undefined | null = {}) : void {
    if (omePortalAuditRecord) {
        serializeAuditData(writer, omePortalAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOneDriveAuditRecord(writer: SerializationWriter, oneDriveAuditRecord: Partial<OneDriveAuditRecord> | undefined | null = {}) : void {
    if (oneDriveAuditRecord) {
        serializeAuditData(writer, oneDriveAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOnPremisesFileShareScannerDlpAuditRecord(writer: SerializationWriter, onPremisesFileShareScannerDlpAuditRecord: Partial<OnPremisesFileShareScannerDlpAuditRecord> | undefined | null = {}) : void {
    if (onPremisesFileShareScannerDlpAuditRecord) {
        serializeAuditData(writer, onPremisesFileShareScannerDlpAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOnPremisesScannerDlpAuditRecord(writer: SerializationWriter, onPremisesScannerDlpAuditRecord: Partial<OnPremisesScannerDlpAuditRecord> | undefined | null = {}) : void {
    if (onPremisesScannerDlpAuditRecord) {
        serializeAuditData(writer, onPremisesScannerDlpAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOnPremisesSharePointScannerDlpAuditRecord(writer: SerializationWriter, onPremisesSharePointScannerDlpAuditRecord: Partial<OnPremisesSharePointScannerDlpAuditRecord> | undefined | null = {}) : void {
    if (onPremisesSharePointScannerDlpAuditRecord) {
        serializeAuditData(writer, onPremisesSharePointScannerDlpAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOrganizationalScope(writer: SerializationWriter, organizationalScope: Partial<OrganizationalScope> | undefined | null = {}) : void {
    if (organizationalScope) {
        writer.writeStringValue("@odata.type", organizationalScope.odataType);
        writer.writeCollectionOfPrimitiveValues<string>("scopeNames", organizationalScope.scopeNames);
        writer.writeEnumValue<ScopeType>("scopeType", organizationalScope.scopeType);
        writer.writeAdditionalData(organizationalScope.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOwaGetAccessTokenForResourceAuditRecord(writer: SerializationWriter, owaGetAccessTokenForResourceAuditRecord: Partial<OwaGetAccessTokenForResourceAuditRecord> | undefined | null = {}) : void {
    if (owaGetAccessTokenForResourceAuditRecord) {
        serializeAuditData(writer, owaGetAccessTokenForResourceAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePassiveDnsRecord(writer: SerializationWriter, passiveDnsRecord: Partial<PassiveDnsRecord> | undefined | null = {}) : void {
    if (passiveDnsRecord) {
        serializeArtifact(writer, passiveDnsRecord)
        writer.writeObjectValue<Artifact>("artifact", passiveDnsRecord.artifact, serializeArtifact);
        writer.writeDateValue("collectedDateTime", passiveDnsRecord.collectedDateTime);
        writer.writeDateValue("firstSeenDateTime", passiveDnsRecord.firstSeenDateTime);
        writer.writeDateValue("lastSeenDateTime", passiveDnsRecord.lastSeenDateTime);
        writer.writeObjectValue<Host>("parentHost", passiveDnsRecord.parentHost, serializeHost);
        writer.writeStringValue("recordType", passiveDnsRecord.recordType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePassiveDnsRecordCollectionResponse(writer: SerializationWriter, passiveDnsRecordCollectionResponse: Partial<PassiveDnsRecordCollectionResponse> | undefined | null = {}) : void {
    if (passiveDnsRecordCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, passiveDnsRecordCollectionResponse)
        writer.writeCollectionOfObjectValues<PassiveDnsRecord>("value", passiveDnsRecordCollectionResponse.value, serializePassiveDnsRecord);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePeopleAdminSettingsAuditRecord(writer: SerializationWriter, peopleAdminSettingsAuditRecord: Partial<PeopleAdminSettingsAuditRecord> | undefined | null = {}) : void {
    if (peopleAdminSettingsAuditRecord) {
        serializeAuditData(writer, peopleAdminSettingsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePhysicalBadgingSignalAuditRecord(writer: SerializationWriter, physicalBadgingSignalAuditRecord: Partial<PhysicalBadgingSignalAuditRecord> | undefined | null = {}) : void {
    if (physicalBadgingSignalAuditRecord) {
        serializeAuditData(writer, physicalBadgingSignalAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlannerCopyPlanAuditRecord(writer: SerializationWriter, plannerCopyPlanAuditRecord: Partial<PlannerCopyPlanAuditRecord> | undefined | null = {}) : void {
    if (plannerCopyPlanAuditRecord) {
        serializeAuditData(writer, plannerCopyPlanAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlannerPlanAuditRecord(writer: SerializationWriter, plannerPlanAuditRecord: Partial<PlannerPlanAuditRecord> | undefined | null = {}) : void {
    if (plannerPlanAuditRecord) {
        serializeAuditData(writer, plannerPlanAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlannerPlanListAuditRecord(writer: SerializationWriter, plannerPlanListAuditRecord: Partial<PlannerPlanListAuditRecord> | undefined | null = {}) : void {
    if (plannerPlanListAuditRecord) {
        serializeAuditData(writer, plannerPlanListAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlannerRosterAuditRecord(writer: SerializationWriter, plannerRosterAuditRecord: Partial<PlannerRosterAuditRecord> | undefined | null = {}) : void {
    if (plannerRosterAuditRecord) {
        serializeAuditData(writer, plannerRosterAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlannerRosterSensitivityLabelAuditRecord(writer: SerializationWriter, plannerRosterSensitivityLabelAuditRecord: Partial<PlannerRosterSensitivityLabelAuditRecord> | undefined | null = {}) : void {
    if (plannerRosterSensitivityLabelAuditRecord) {
        serializeAuditData(writer, plannerRosterSensitivityLabelAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlannerTaskAuditRecord(writer: SerializationWriter, plannerTaskAuditRecord: Partial<PlannerTaskAuditRecord> | undefined | null = {}) : void {
    if (plannerTaskAuditRecord) {
        serializeAuditData(writer, plannerTaskAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlannerTaskListAuditRecord(writer: SerializationWriter, plannerTaskListAuditRecord: Partial<PlannerTaskListAuditRecord> | undefined | null = {}) : void {
    if (plannerTaskListAuditRecord) {
        serializeAuditData(writer, plannerTaskListAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlannerTenantSettingsAuditRecord(writer: SerializationWriter, plannerTenantSettingsAuditRecord: Partial<PlannerTenantSettingsAuditRecord> | undefined | null = {}) : void {
    if (plannerTenantSettingsAuditRecord) {
        serializeAuditData(writer, plannerTenantSettingsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePolicyBase(writer: SerializationWriter, policyBase: Partial<PolicyBase> | undefined | null = {}) : void {
    if (policyBase) {
        serializeEntity(writer, policyBase)
        writer.writeObjectValue<IdentitySet>("createdBy", policyBase.createdBy, serializeIdentitySet);
        writer.writeDateValue("createdDateTime", policyBase.createdDateTime);
        writer.writeStringValue("description", policyBase.description);
        writer.writeStringValue("displayName", policyBase.displayName);
        writer.writeObjectValue<IdentitySet>("lastModifiedBy", policyBase.lastModifiedBy, serializeIdentitySet);
        writer.writeDateValue("lastModifiedDateTime", policyBase.lastModifiedDateTime);
        writer.writeEnumValue<PolicyStatus>("status", policyBase.status);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerAppsAuditAppRecord(writer: SerializationWriter, powerAppsAuditAppRecord: Partial<PowerAppsAuditAppRecord> | undefined | null = {}) : void {
    if (powerAppsAuditAppRecord) {
        serializeAuditData(writer, powerAppsAuditAppRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerAppsAuditPlanRecord(writer: SerializationWriter, powerAppsAuditPlanRecord: Partial<PowerAppsAuditPlanRecord> | undefined | null = {}) : void {
    if (powerAppsAuditPlanRecord) {
        serializeAuditData(writer, powerAppsAuditPlanRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerAppsAuditResourceRecord(writer: SerializationWriter, powerAppsAuditResourceRecord: Partial<PowerAppsAuditResourceRecord> | undefined | null = {}) : void {
    if (powerAppsAuditResourceRecord) {
        serializeAuditData(writer, powerAppsAuditResourceRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerBiAuditRecord(writer: SerializationWriter, powerBiAuditRecord: Partial<PowerBiAuditRecord> | undefined | null = {}) : void {
    if (powerBiAuditRecord) {
        serializeAuditData(writer, powerBiAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerBiDlpAuditRecord(writer: SerializationWriter, powerBiDlpAuditRecord: Partial<PowerBiDlpAuditRecord> | undefined | null = {}) : void {
    if (powerBiDlpAuditRecord) {
        serializeAuditData(writer, powerBiDlpAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerPagesSiteAuditRecord(writer: SerializationWriter, powerPagesSiteAuditRecord: Partial<PowerPagesSiteAuditRecord> | undefined | null = {}) : void {
    if (powerPagesSiteAuditRecord) {
        serializeAuditData(writer, powerPagesSiteAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerPlatformAdminDlpAuditRecord(writer: SerializationWriter, powerPlatformAdminDlpAuditRecord: Partial<PowerPlatformAdminDlpAuditRecord> | undefined | null = {}) : void {
    if (powerPlatformAdminDlpAuditRecord) {
        serializeAuditData(writer, powerPlatformAdminDlpAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerPlatformAdminEnvironmentAuditRecord(writer: SerializationWriter, powerPlatformAdminEnvironmentAuditRecord: Partial<PowerPlatformAdminEnvironmentAuditRecord> | undefined | null = {}) : void {
    if (powerPlatformAdminEnvironmentAuditRecord) {
        serializeAuditData(writer, powerPlatformAdminEnvironmentAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerPlatformAdministratorActivityRecord(writer: SerializationWriter, powerPlatformAdministratorActivityRecord: Partial<PowerPlatformAdministratorActivityRecord> | undefined | null = {}) : void {
    if (powerPlatformAdministratorActivityRecord) {
        serializeAuditData(writer, powerPlatformAdministratorActivityRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerPlatformLockboxResourceAccessRequestAuditRecord(writer: SerializationWriter, powerPlatformLockboxResourceAccessRequestAuditRecord: Partial<PowerPlatformLockboxResourceAccessRequestAuditRecord> | undefined | null = {}) : void {
    if (powerPlatformLockboxResourceAccessRequestAuditRecord) {
        serializeAuditData(writer, powerPlatformLockboxResourceAccessRequestAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerPlatformLockboxResourceCommandAuditRecord(writer: SerializationWriter, powerPlatformLockboxResourceCommandAuditRecord: Partial<PowerPlatformLockboxResourceCommandAuditRecord> | undefined | null = {}) : void {
    if (powerPlatformLockboxResourceCommandAuditRecord) {
        serializeAuditData(writer, powerPlatformLockboxResourceCommandAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerPlatformServiceActivityAuditRecord(writer: SerializationWriter, powerPlatformServiceActivityAuditRecord: Partial<PowerPlatformServiceActivityAuditRecord> | undefined | null = {}) : void {
    if (powerPlatformServiceActivityAuditRecord) {
        serializeAuditData(writer, powerPlatformServiceActivityAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrivacyDataMatchAuditRecord(writer: SerializationWriter, privacyDataMatchAuditRecord: Partial<PrivacyDataMatchAuditRecord> | undefined | null = {}) : void {
    if (privacyDataMatchAuditRecord) {
        serializeAuditData(writer, privacyDataMatchAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrivacyDataMinimizationRecord(writer: SerializationWriter, privacyDataMinimizationRecord: Partial<PrivacyDataMinimizationRecord> | undefined | null = {}) : void {
    if (privacyDataMinimizationRecord) {
        serializeAuditData(writer, privacyDataMinimizationRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrivacyDigestEmailRecord(writer: SerializationWriter, privacyDigestEmailRecord: Partial<PrivacyDigestEmailRecord> | undefined | null = {}) : void {
    if (privacyDigestEmailRecord) {
        serializeAuditData(writer, privacyDigestEmailRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrivacyOpenAccessAuditRecord(writer: SerializationWriter, privacyOpenAccessAuditRecord: Partial<PrivacyOpenAccessAuditRecord> | undefined | null = {}) : void {
    if (privacyOpenAccessAuditRecord) {
        serializeAuditData(writer, privacyOpenAccessAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrivacyPortalAuditRecord(writer: SerializationWriter, privacyPortalAuditRecord: Partial<PrivacyPortalAuditRecord> | undefined | null = {}) : void {
    if (privacyPortalAuditRecord) {
        serializeAuditData(writer, privacyPortalAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrivacyRemediationActionRecord(writer: SerializationWriter, privacyRemediationActionRecord: Partial<PrivacyRemediationActionRecord> | undefined | null = {}) : void {
    if (privacyRemediationActionRecord) {
        serializeAuditData(writer, privacyRemediationActionRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrivacyRemediationRecord(writer: SerializationWriter, privacyRemediationRecord: Partial<PrivacyRemediationRecord> | undefined | null = {}) : void {
    if (privacyRemediationRecord) {
        serializeAuditData(writer, privacyRemediationRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrivacyTenantAuditHistoryRecord(writer: SerializationWriter, privacyTenantAuditHistoryRecord: Partial<PrivacyTenantAuditHistoryRecord> | undefined | null = {}) : void {
    if (privacyTenantAuditHistoryRecord) {
        serializeAuditData(writer, privacyTenantAuditHistoryRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProcessEvidence(writer: SerializationWriter, processEvidence: Partial<ProcessEvidence> | undefined | null = {}) : void {
    if (processEvidence) {
        serializeAlertEvidence(writer, processEvidence)
        writer.writeEnumValue<DetectionStatus>("detectionStatus", processEvidence.detectionStatus);
        writer.writeObjectValue<FileDetails>("imageFile", processEvidence.imageFile, serializeFileDetails);
        writer.writeStringValue("mdeDeviceId", processEvidence.mdeDeviceId);
        writer.writeDateValue("parentProcessCreationDateTime", processEvidence.parentProcessCreationDateTime);
        writer.writeNumberValue("parentProcessId", processEvidence.parentProcessId);
        writer.writeObjectValue<FileDetails>("parentProcessImageFile", processEvidence.parentProcessImageFile, serializeFileDetails);
        writer.writeStringValue("processCommandLine", processEvidence.processCommandLine);
        writer.writeDateValue("processCreationDateTime", processEvidence.processCreationDateTime);
        writer.writeNumberValue("processId", processEvidence.processId);
        writer.writeObjectValue<UserAccount>("userAccount", processEvidence.userAccount, serializeUserAccount);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProjectAuditRecord(writer: SerializationWriter, projectAuditRecord: Partial<ProjectAuditRecord> | undefined | null = {}) : void {
    if (projectAuditRecord) {
        serializeAuditData(writer, projectAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProjectForTheWebAssignedToMeSettingsAuditRecord(writer: SerializationWriter, projectForTheWebAssignedToMeSettingsAuditRecord: Partial<ProjectForTheWebAssignedToMeSettingsAuditRecord> | undefined | null = {}) : void {
    if (projectForTheWebAssignedToMeSettingsAuditRecord) {
        serializeAuditData(writer, projectForTheWebAssignedToMeSettingsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProjectForTheWebProjectAuditRecord(writer: SerializationWriter, projectForTheWebProjectAuditRecord: Partial<ProjectForTheWebProjectAuditRecord> | undefined | null = {}) : void {
    if (projectForTheWebProjectAuditRecord) {
        serializeAuditData(writer, projectForTheWebProjectAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProjectForTheWebProjectSettingsAuditRecord(writer: SerializationWriter, projectForTheWebProjectSettingsAuditRecord: Partial<ProjectForTheWebProjectSettingsAuditRecord> | undefined | null = {}) : void {
    if (projectForTheWebProjectSettingsAuditRecord) {
        serializeAuditData(writer, projectForTheWebProjectSettingsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProjectForTheWebRoadmapAuditRecord(writer: SerializationWriter, projectForTheWebRoadmapAuditRecord: Partial<ProjectForTheWebRoadmapAuditRecord> | undefined | null = {}) : void {
    if (projectForTheWebRoadmapAuditRecord) {
        serializeAuditData(writer, projectForTheWebRoadmapAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProjectForTheWebRoadmapItemAuditRecord(writer: SerializationWriter, projectForTheWebRoadmapItemAuditRecord: Partial<ProjectForTheWebRoadmapItemAuditRecord> | undefined | null = {}) : void {
    if (projectForTheWebRoadmapItemAuditRecord) {
        serializeAuditData(writer, projectForTheWebRoadmapItemAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProjectForTheWebRoadmapSettingsAuditRecord(writer: SerializationWriter, projectForTheWebRoadmapSettingsAuditRecord: Partial<ProjectForTheWebRoadmapSettingsAuditRecord> | undefined | null = {}) : void {
    if (projectForTheWebRoadmapSettingsAuditRecord) {
        serializeAuditData(writer, projectForTheWebRoadmapSettingsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProjectForTheWebTaskAuditRecord(writer: SerializationWriter, projectForTheWebTaskAuditRecord: Partial<ProjectForTheWebTaskAuditRecord> | undefined | null = {}) : void {
    if (projectForTheWebTaskAuditRecord) {
        serializeAuditData(writer, projectForTheWebTaskAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProtectAdhocAction(writer: SerializationWriter, protectAdhocAction: Partial<ProtectAdhocAction> | undefined | null = {}) : void {
    if (protectAdhocAction) {
        serializeInformationProtectionAction(writer, protectAdhocAction)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProtectByTemplateAction(writer: SerializationWriter, protectByTemplateAction: Partial<ProtectByTemplateAction> | undefined | null = {}) : void {
    if (protectByTemplateAction) {
        serializeInformationProtectionAction(writer, protectByTemplateAction)
        writer.writeStringValue("templateId", protectByTemplateAction.templateId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProtectDoNotForwardAction(writer: SerializationWriter, protectDoNotForwardAction: Partial<ProtectDoNotForwardAction> | undefined | null = {}) : void {
    if (protectDoNotForwardAction) {
        serializeInformationProtectionAction(writer, protectDoNotForwardAction)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProtectionRule(writer: SerializationWriter, protectionRule: Partial<ProtectionRule> | undefined | null = {}) : void {
    if (protectionRule) {
        serializeEntity(writer, protectionRule)
        writer.writeStringValue("createdBy", protectionRule.createdBy);
        writer.writeDateValue("createdDateTime", protectionRule.createdDateTime);
        writer.writeStringValue("displayName", protectionRule.displayName);
        writer.writeBooleanValue("isEnabled", protectionRule.isEnabled);
        writer.writeStringValue("lastModifiedBy", protectionRule.lastModifiedBy);
        writer.writeDateValue("lastModifiedDateTime", protectionRule.lastModifiedDateTime);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePublicFolderAuditRecord(writer: SerializationWriter, publicFolderAuditRecord: Partial<PublicFolderAuditRecord> | undefined | null = {}) : void {
    if (publicFolderAuditRecord) {
        serializeAuditData(writer, publicFolderAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePurviewInsiderRiskAlertsRecord(writer: SerializationWriter, purviewInsiderRiskAlertsRecord: Partial<PurviewInsiderRiskAlertsRecord> | undefined | null = {}) : void {
    if (purviewInsiderRiskAlertsRecord) {
        serializeAuditData(writer, purviewInsiderRiskAlertsRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePurviewInsiderRiskCasesRecord(writer: SerializationWriter, purviewInsiderRiskCasesRecord: Partial<PurviewInsiderRiskCasesRecord> | undefined | null = {}) : void {
    if (purviewInsiderRiskCasesRecord) {
        serializeAuditData(writer, purviewInsiderRiskCasesRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQuarantineAuditRecord(writer: SerializationWriter, quarantineAuditRecord: Partial<QuarantineAuditRecord> | undefined | null = {}) : void {
    if (quarantineAuditRecord) {
        serializeAuditData(writer, quarantineAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryCondition(writer: SerializationWriter, queryCondition: Partial<QueryCondition> | undefined | null = {}) : void {
    if (queryCondition) {
        writer.writeDateValue("lastModifiedDateTime", queryCondition.lastModifiedDateTime);
        writer.writeStringValue("@odata.type", queryCondition.odataType);
        writer.writeStringValue("queryText", queryCondition.queryText);
        writer.writeAdditionalData(queryCondition.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRecommendedHuntingQuery(writer: SerializationWriter, recommendedHuntingQuery: Partial<RecommendedHuntingQuery> | undefined | null = {}) : void {
    if (recommendedHuntingQuery) {
        writer.writeStringValue("kqlText", recommendedHuntingQuery.kqlText);
        writer.writeStringValue("@odata.type", recommendedHuntingQuery.odataType);
        writer.writeAdditionalData(recommendedHuntingQuery.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRecommendLabelAction(writer: SerializationWriter, recommendLabelAction: Partial<RecommendLabelAction> | undefined | null = {}) : void {
    if (recommendLabelAction) {
        serializeInformationProtectionAction(writer, recommendLabelAction)
        writer.writeCollectionOfObjectValues<InformationProtectionAction>("actions", recommendLabelAction.actions, serializeInformationProtectionAction);
        writer.writeEnumValue<ActionSource>("actionSource", recommendLabelAction.actionSource);
        writer.writeCollectionOfPrimitiveValues<string>("responsibleSensitiveTypeIds", recommendLabelAction.responsibleSensitiveTypeIds);
        writer.writeStringValue("sensitivityLabelId", recommendLabelAction.sensitivityLabelId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRecordsManagementAuditRecord(writer: SerializationWriter, recordsManagementAuditRecord: Partial<RecordsManagementAuditRecord> | undefined | null = {}) : void {
    if (recordsManagementAuditRecord) {
        serializeAuditData(writer, recordsManagementAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRedundancyDetectionSettings(writer: SerializationWriter, redundancyDetectionSettings: Partial<RedundancyDetectionSettings> | undefined | null = {}) : void {
    if (redundancyDetectionSettings) {
        writer.writeBooleanValue("isEnabled", redundancyDetectionSettings.isEnabled);
        writer.writeNumberValue("maxWords", redundancyDetectionSettings.maxWords);
        writer.writeNumberValue("minWords", redundancyDetectionSettings.minWords);
        writer.writeStringValue("@odata.type", redundancyDetectionSettings.odataType);
        writer.writeNumberValue("similarityThreshold", redundancyDetectionSettings.similarityThreshold);
        writer.writeAdditionalData(redundancyDetectionSettings.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRegistryKeyEvidence(writer: SerializationWriter, registryKeyEvidence: Partial<RegistryKeyEvidence> | undefined | null = {}) : void {
    if (registryKeyEvidence) {
        serializeAlertEvidence(writer, registryKeyEvidence)
        writer.writeStringValue("registryHive", registryKeyEvidence.registryHive);
        writer.writeStringValue("registryKey", registryKeyEvidence.registryKey);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRegistryValueEvidence(writer: SerializationWriter, registryValueEvidence: Partial<RegistryValueEvidence> | undefined | null = {}) : void {
    if (registryValueEvidence) {
        serializeAlertEvidence(writer, registryValueEvidence)
        writer.writeStringValue("mdeDeviceId", registryValueEvidence.mdeDeviceId);
        writer.writeStringValue("registryHive", registryValueEvidence.registryHive);
        writer.writeStringValue("registryKey", registryValueEvidence.registryKey);
        writer.writeStringValue("registryValue", registryValueEvidence.registryValue);
        writer.writeStringValue("registryValueName", registryValueEvidence.registryValueName);
        writer.writeStringValue("registryValueType", registryValueEvidence.registryValueType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRemoveContentFooterAction(writer: SerializationWriter, removeContentFooterAction: Partial<RemoveContentFooterAction> | undefined | null = {}) : void {
    if (removeContentFooterAction) {
        serializeInformationProtectionAction(writer, removeContentFooterAction)
        writer.writeCollectionOfPrimitiveValues<string>("uiElementNames", removeContentFooterAction.uiElementNames);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRemoveContentHeaderAction(writer: SerializationWriter, removeContentHeaderAction: Partial<RemoveContentHeaderAction> | undefined | null = {}) : void {
    if (removeContentHeaderAction) {
        serializeInformationProtectionAction(writer, removeContentHeaderAction)
        writer.writeCollectionOfPrimitiveValues<string>("uiElementNames", removeContentHeaderAction.uiElementNames);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRemoveProtectionAction(writer: SerializationWriter, removeProtectionAction: Partial<RemoveProtectionAction> | undefined | null = {}) : void {
    if (removeProtectionAction) {
        serializeInformationProtectionAction(writer, removeProtectionAction)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRemoveWatermarkAction(writer: SerializationWriter, removeWatermarkAction: Partial<RemoveWatermarkAction> | undefined | null = {}) : void {
    if (removeWatermarkAction) {
        serializeInformationProtectionAction(writer, removeWatermarkAction)
        writer.writeCollectionOfPrimitiveValues<string>("uiElementNames", removeWatermarkAction.uiElementNames);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeResponseAction(writer: SerializationWriter, responseAction: Partial<ResponseAction> | undefined | null = {}) : void {
    if (responseAction) {
        writer.writeStringValue("@odata.type", responseAction.odataType);
        writer.writeAdditionalData(responseAction.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRestrictAppExecutionResponseAction(writer: SerializationWriter, restrictAppExecutionResponseAction: Partial<RestrictAppExecutionResponseAction> | undefined | null = {}) : void {
    if (restrictAppExecutionResponseAction) {
        serializeResponseAction(writer, restrictAppExecutionResponseAction)
        writer.writeEnumValue<DeviceIdEntityIdentifier[]>("identifier", restrictAppExecutionResponseAction.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionDuration(writer: SerializationWriter, retentionDuration: Partial<RetentionDuration> | undefined | null = {}) : void {
    if (retentionDuration) {
        writer.writeStringValue("@odata.type", retentionDuration.odataType);
        writer.writeAdditionalData(retentionDuration.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionDurationForever(writer: SerializationWriter, retentionDurationForever: Partial<RetentionDurationForever> | undefined | null = {}) : void {
    if (retentionDurationForever) {
        serializeRetentionDuration(writer, retentionDurationForever)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionDurationInDays(writer: SerializationWriter, retentionDurationInDays: Partial<RetentionDurationInDays> | undefined | null = {}) : void {
    if (retentionDurationInDays) {
        serializeRetentionDuration(writer, retentionDurationInDays)
        writer.writeNumberValue("days", retentionDurationInDays.days);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionEvent(writer: SerializationWriter, retentionEvent: Partial<RetentionEvent> | undefined | null = {}) : void {
    if (retentionEvent) {
        serializeEntity(writer, retentionEvent)
        writer.writeObjectValue<IdentitySet>("createdBy", retentionEvent.createdBy, serializeIdentitySet);
        writer.writeDateValue("createdDateTime", retentionEvent.createdDateTime);
        writer.writeStringValue("description", retentionEvent.description);
        writer.writeStringValue("displayName", retentionEvent.displayName);
        writer.writeCollectionOfObjectValues<EventPropagationResult>("eventPropagationResults", retentionEvent.eventPropagationResults, serializeEventPropagationResult);
        writer.writeCollectionOfObjectValues<EventQuery>("eventQueries", retentionEvent.eventQueries, serializeEventQuery);
        writer.writeObjectValue<RetentionEventStatus>("eventStatus", retentionEvent.eventStatus, serializeRetentionEventStatus);
        writer.writeDateValue("eventTriggerDateTime", retentionEvent.eventTriggerDateTime);
        writer.writeObjectValue<IdentitySet>("lastModifiedBy", retentionEvent.lastModifiedBy, serializeIdentitySet);
        writer.writeDateValue("lastModifiedDateTime", retentionEvent.lastModifiedDateTime);
        writer.writeDateValue("lastStatusUpdateDateTime", retentionEvent.lastStatusUpdateDateTime);
        writer.writeObjectValue<RetentionEventType>("retentionEventType", retentionEvent.retentionEventType, serializeRetentionEventType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionEventCollectionResponse(writer: SerializationWriter, retentionEventCollectionResponse: Partial<RetentionEventCollectionResponse> | undefined | null = {}) : void {
    if (retentionEventCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, retentionEventCollectionResponse)
        writer.writeCollectionOfObjectValues<RetentionEvent>("value", retentionEventCollectionResponse.value, serializeRetentionEvent);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionEventStatus(writer: SerializationWriter, retentionEventStatus: Partial<RetentionEventStatus> | undefined | null = {}) : void {
    if (retentionEventStatus) {
        writer.writeObjectValue<PublicError>("error", retentionEventStatus.errorEscaped, serializePublicError);
        writer.writeStringValue("@odata.type", retentionEventStatus.odataType);
        writer.writeEnumValue<EventStatusType>("status", retentionEventStatus.status);
        writer.writeAdditionalData(retentionEventStatus.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionEventType(writer: SerializationWriter, retentionEventType: Partial<RetentionEventType> | undefined | null = {}) : void {
    if (retentionEventType) {
        serializeEntity(writer, retentionEventType)
        writer.writeObjectValue<IdentitySet>("createdBy", retentionEventType.createdBy, serializeIdentitySet);
        writer.writeDateValue("createdDateTime", retentionEventType.createdDateTime);
        writer.writeStringValue("description", retentionEventType.description);
        writer.writeStringValue("displayName", retentionEventType.displayName);
        writer.writeObjectValue<IdentitySet>("lastModifiedBy", retentionEventType.lastModifiedBy, serializeIdentitySet);
        writer.writeDateValue("lastModifiedDateTime", retentionEventType.lastModifiedDateTime);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionEventTypeCollectionResponse(writer: SerializationWriter, retentionEventTypeCollectionResponse: Partial<RetentionEventTypeCollectionResponse> | undefined | null = {}) : void {
    if (retentionEventTypeCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, retentionEventTypeCollectionResponse)
        writer.writeCollectionOfObjectValues<RetentionEventType>("value", retentionEventTypeCollectionResponse.value, serializeRetentionEventType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionLabel(writer: SerializationWriter, retentionLabel: Partial<RetentionLabel> | undefined | null = {}) : void {
    if (retentionLabel) {
        serializeEntity(writer, retentionLabel)
        writer.writeEnumValue<ActionAfterRetentionPeriod>("actionAfterRetentionPeriod", retentionLabel.actionAfterRetentionPeriod);
        writer.writeEnumValue<BehaviorDuringRetentionPeriod>("behaviorDuringRetentionPeriod", retentionLabel.behaviorDuringRetentionPeriod);
        writer.writeObjectValue<IdentitySet>("createdBy", retentionLabel.createdBy, serializeIdentitySet);
        writer.writeDateValue("createdDateTime", retentionLabel.createdDateTime);
        writer.writeEnumValue<DefaultRecordBehavior>("defaultRecordBehavior", retentionLabel.defaultRecordBehavior);
        writer.writeStringValue("descriptionForAdmins", retentionLabel.descriptionForAdmins);
        writer.writeStringValue("descriptionForUsers", retentionLabel.descriptionForUsers);
        writer.writeObjectValue<FilePlanDescriptor>("descriptors", retentionLabel.descriptors, serializeFilePlanDescriptor);
        writer.writeStringValue("displayName", retentionLabel.displayName);
        writer.writeCollectionOfObjectValues<DispositionReviewStage>("dispositionReviewStages", retentionLabel.dispositionReviewStages, serializeDispositionReviewStage);
        writer.writeBooleanValue("isInUse", retentionLabel.isInUse);
        writer.writeStringValue("labelToBeApplied", retentionLabel.labelToBeApplied);
        writer.writeObjectValue<IdentitySet>("lastModifiedBy", retentionLabel.lastModifiedBy, serializeIdentitySet);
        writer.writeDateValue("lastModifiedDateTime", retentionLabel.lastModifiedDateTime);
        writer.writeObjectValue<RetentionDuration>("retentionDuration", retentionLabel.retentionDuration, serializeRetentionDuration);
        writer.writeObjectValue<RetentionEventType>("retentionEventType", retentionLabel.retentionEventType, serializeRetentionEventType);
        writer.writeEnumValue<RetentionTrigger>("retentionTrigger", retentionLabel.retentionTrigger);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionLabelCollectionResponse(writer: SerializationWriter, retentionLabelCollectionResponse: Partial<RetentionLabelCollectionResponse> | undefined | null = {}) : void {
    if (retentionLabelCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, retentionLabelCollectionResponse)
        writer.writeCollectionOfObjectValues<RetentionLabel>("value", retentionLabelCollectionResponse.value, serializeRetentionLabel);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionPolicyAuditRecord(writer: SerializationWriter, retentionPolicyAuditRecord: Partial<RetentionPolicyAuditRecord> | undefined | null = {}) : void {
    if (retentionPolicyAuditRecord) {
        serializeAuditData(writer, retentionPolicyAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRuleSchedule(writer: SerializationWriter, ruleSchedule: Partial<RuleSchedule> | undefined | null = {}) : void {
    if (ruleSchedule) {
        writer.writeDateValue("nextRunDateTime", ruleSchedule.nextRunDateTime);
        writer.writeStringValue("@odata.type", ruleSchedule.odataType);
        writer.writeStringValue("period", ruleSchedule.period);
        writer.writeAdditionalData(ruleSchedule.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRulesRoot(writer: SerializationWriter, rulesRoot: Partial<RulesRoot> | undefined | null = {}) : void {
    if (rulesRoot) {
        serializeEntity(writer, rulesRoot)
        writer.writeCollectionOfObjectValues<DetectionRule>("detectionRules", rulesRoot.detectionRules, serializeDetectionRule);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRunAntivirusScanResponseAction(writer: SerializationWriter, runAntivirusScanResponseAction: Partial<RunAntivirusScanResponseAction> | undefined | null = {}) : void {
    if (runAntivirusScanResponseAction) {
        serializeResponseAction(writer, runAntivirusScanResponseAction)
        writer.writeEnumValue<DeviceIdEntityIdentifier[]>("identifier", runAntivirusScanResponseAction.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRunDetails(writer: SerializationWriter, runDetails: Partial<RunDetails> | undefined | null = {}) : void {
    if (runDetails) {
        writer.writeEnumValue<HuntingRuleErrorCode>("errorCode", runDetails.errorCode);
        writer.writeStringValue("failureReason", runDetails.failureReason);
        writer.writeDateValue("lastRunDateTime", runDetails.lastRunDateTime);
        writer.writeStringValue("@odata.type", runDetails.odataType);
        writer.writeEnumValue<HuntingRuleRunStatus>("status", runDetails.status);
        writer.writeAdditionalData(runDetails.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSasTokenEvidence(writer: SerializationWriter, sasTokenEvidence: Partial<SasTokenEvidence> | undefined | null = {}) : void {
    if (sasTokenEvidence) {
        serializeAlertEvidence(writer, sasTokenEvidence)
        writer.writeStringValue("allowedIpAddresses", sasTokenEvidence.allowedIpAddresses);
        writer.writeCollectionOfPrimitiveValues<string>("allowedResourceTypes", sasTokenEvidence.allowedResourceTypes);
        writer.writeCollectionOfPrimitiveValues<string>("allowedServices", sasTokenEvidence.allowedServices);
        writer.writeDateValue("expiryDateTime", sasTokenEvidence.expiryDateTime);
        writer.writeCollectionOfPrimitiveValues<string>("permissions", sasTokenEvidence.permissions);
        writer.writeStringValue("protocol", sasTokenEvidence.protocol);
        writer.writeStringValue("signatureHash", sasTokenEvidence.signatureHash);
        writer.writeStringValue("signedWith", sasTokenEvidence.signedWith);
        writer.writeDateValue("startDateTime", sasTokenEvidence.startDateTime);
        writer.writeObjectValue<AzureResourceEvidence>("storageResource", sasTokenEvidence.storageResource, serializeAzureResourceEvidence);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeScoreEvidence(writer: SerializationWriter, scoreEvidence: Partial<ScoreEvidence> | undefined | null = {}) : void {
    if (scoreEvidence) {
        serializeAuditData(writer, scoreEvidence)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeScorePlatformGenericAuditRecord(writer: SerializationWriter, scorePlatformGenericAuditRecord: Partial<ScorePlatformGenericAuditRecord> | undefined | null = {}) : void {
    if (scorePlatformGenericAuditRecord) {
        serializeAuditData(writer, scorePlatformGenericAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeScriptRunAuditRecord(writer: SerializationWriter, scriptRunAuditRecord: Partial<ScriptRunAuditRecord> | undefined | null = {}) : void {
    if (scriptRunAuditRecord) {
        serializeAuditData(writer, scriptRunAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearch(writer: SerializationWriter, search: Partial<Search> | undefined | null = {}) : void {
    if (search) {
        serializeEntity(writer, search)
        writer.writeStringValue("contentQuery", search.contentQuery);
        writer.writeObjectValue<IdentitySet>("createdBy", search.createdBy, serializeIdentitySet);
        writer.writeDateValue("createdDateTime", search.createdDateTime);
        writer.writeStringValue("description", search.description);
        writer.writeStringValue("displayName", search.displayName);
        writer.writeObjectValue<IdentitySet>("lastModifiedBy", search.lastModifiedBy, serializeIdentitySet);
        writer.writeDateValue("lastModifiedDateTime", search.lastModifiedDateTime);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchAuditRecord(writer: SerializationWriter, searchAuditRecord: Partial<SearchAuditRecord> | undefined | null = {}) : void {
    if (searchAuditRecord) {
        serializeAuditData(writer, searchAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecurity(writer: SerializationWriter, security: Partial<Security> | undefined | null = {}) : void {
    if (security) {
        serializeEntity(writer, security)
        writer.writeObjectValue<InformationProtection>("informationProtection", security.informationProtection, serializeInformationProtection);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecurityComplianceAlertRecord(writer: SerializationWriter, securityComplianceAlertRecord: Partial<SecurityComplianceAlertRecord> | undefined | null = {}) : void {
    if (securityComplianceAlertRecord) {
        serializeAuditData(writer, securityComplianceAlertRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecurityComplianceCenterEOPCmdletAuditRecord(writer: SerializationWriter, securityComplianceCenterEOPCmdletAuditRecord: Partial<SecurityComplianceCenterEOPCmdletAuditRecord> | undefined | null = {}) : void {
    if (securityComplianceCenterEOPCmdletAuditRecord) {
        serializeAuditData(writer, securityComplianceCenterEOPCmdletAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecurityComplianceInsightsAuditRecord(writer: SerializationWriter, securityComplianceInsightsAuditRecord: Partial<SecurityComplianceInsightsAuditRecord> | undefined | null = {}) : void {
    if (securityComplianceInsightsAuditRecord) {
        serializeAuditData(writer, securityComplianceInsightsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecurityComplianceRBACAuditRecord(writer: SerializationWriter, securityComplianceRBACAuditRecord: Partial<SecurityComplianceRBACAuditRecord> | undefined | null = {}) : void {
    if (securityComplianceRBACAuditRecord) {
        serializeAuditData(writer, securityComplianceRBACAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecurityComplianceUserChangeAuditRecord(writer: SerializationWriter, securityComplianceUserChangeAuditRecord: Partial<SecurityComplianceUserChangeAuditRecord> | undefined | null = {}) : void {
    if (securityComplianceUserChangeAuditRecord) {
        serializeAuditData(writer, securityComplianceUserChangeAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecurityGroupEvidence(writer: SerializationWriter, securityGroupEvidence: Partial<SecurityGroupEvidence> | undefined | null = {}) : void {
    if (securityGroupEvidence) {
        serializeAlertEvidence(writer, securityGroupEvidence)
        writer.writeStringValue("displayName", securityGroupEvidence.displayName);
        writer.writeStringValue("securityGroupId", securityGroupEvidence.securityGroupId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSensitivityLabel(writer: SerializationWriter, sensitivityLabel: Partial<SensitivityLabel> | undefined | null = {}) : void {
    if (sensitivityLabel) {
        serializeEntity(writer, sensitivityLabel)
        writer.writeStringValue("color", sensitivityLabel.color);
        writer.writeCollectionOfPrimitiveValues<string>("contentFormats", sensitivityLabel.contentFormats);
        writer.writeStringValue("description", sensitivityLabel.description);
        writer.writeBooleanValue("hasProtection", sensitivityLabel.hasProtection);
        writer.writeBooleanValue("isActive", sensitivityLabel.isActive);
        writer.writeBooleanValue("isAppliable", sensitivityLabel.isAppliable);
        writer.writeStringValue("name", sensitivityLabel.name);
        writer.writeObjectValue<SensitivityLabel>("parent", sensitivityLabel.parent, serializeSensitivityLabel);
        writer.writeNumberValue("sensitivity", sensitivityLabel.sensitivity);
        writer.writeStringValue("tooltip", sensitivityLabel.tooltip);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSensitivityLabelCollectionResponse(writer: SerializationWriter, sensitivityLabelCollectionResponse: Partial<SensitivityLabelCollectionResponse> | undefined | null = {}) : void {
    if (sensitivityLabelCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, sensitivityLabelCollectionResponse)
        writer.writeCollectionOfObjectValues<SensitivityLabel>("value", sensitivityLabelCollectionResponse.value, serializeSensitivityLabel);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSensor(writer: SerializationWriter, sensor: Partial<Sensor> | undefined | null = {}) : void {
    if (sensor) {
        serializeEntity(writer, sensor)
        writer.writeDateValue("createdDateTime", sensor.createdDateTime);
        writer.writeEnumValue<DeploymentStatus>("deploymentStatus", sensor.deploymentStatus);
        writer.writeStringValue("displayName", sensor.displayName);
        writer.writeStringValue("domainName", sensor.domainName);
        writer.writeCollectionOfObjectValues<HealthIssue>("healthIssues", sensor.healthIssues, serializeHealthIssue);
        writer.writeEnumValue<SensorHealthStatus>("healthStatus", sensor.healthStatus);
        writer.writeNumberValue("openHealthIssuesCount", sensor.openHealthIssuesCount);
        writer.writeEnumValue<SensorType>("sensorType", sensor.sensorType);
        writer.writeObjectValue<SensorSettings>("settings", sensor.settings, serializeSensorSettings);
        writer.writeStringValue("version", sensor.version);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSensorCollectionResponse(writer: SerializationWriter, sensorCollectionResponse: Partial<SensorCollectionResponse> | undefined | null = {}) : void {
    if (sensorCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, sensorCollectionResponse)
        writer.writeCollectionOfObjectValues<Sensor>("value", sensorCollectionResponse.value, serializeSensor);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSensorDeploymentPackage(writer: SerializationWriter, sensorDeploymentPackage: Partial<SensorDeploymentPackage> | undefined | null = {}) : void {
    if (sensorDeploymentPackage) {
        writer.writeStringValue("downloadUrl", sensorDeploymentPackage.downloadUrl);
        writer.writeStringValue("@odata.type", sensorDeploymentPackage.odataType);
        writer.writeStringValue("version", sensorDeploymentPackage.version);
        writer.writeAdditionalData(sensorDeploymentPackage.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSensorSettings(writer: SerializationWriter, sensorSettings: Partial<SensorSettings> | undefined | null = {}) : void {
    if (sensorSettings) {
        writer.writeStringValue("description", sensorSettings.description);
        writer.writeCollectionOfPrimitiveValues<string>("domainControllerDnsNames", sensorSettings.domainControllerDnsNames);
        writer.writeBooleanValue("isDelayedDeploymentEnabled", sensorSettings.isDelayedDeploymentEnabled);
        writer.writeCollectionOfObjectValues<NetworkAdapter>("networkAdapters", sensorSettings.networkAdapters, serializeNetworkAdapter);
        writer.writeStringValue("@odata.type", sensorSettings.odataType);
        writer.writeAdditionalData(sensorSettings.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServicePrincipalEvidence(writer: SerializationWriter, servicePrincipalEvidence: Partial<ServicePrincipalEvidence> | undefined | null = {}) : void {
    if (servicePrincipalEvidence) {
        serializeAlertEvidence(writer, servicePrincipalEvidence)
        writer.writeStringValue("appId", servicePrincipalEvidence.appId);
        writer.writeStringValue("appOwnerTenantId", servicePrincipalEvidence.appOwnerTenantId);
        writer.writeStringValue("servicePrincipalName", servicePrincipalEvidence.servicePrincipalName);
        writer.writeStringValue("servicePrincipalObjectId", servicePrincipalEvidence.servicePrincipalObjectId);
        writer.writeEnumValue<ServicePrincipalType>("servicePrincipalType", servicePrincipalEvidence.servicePrincipalType);
        writer.writeStringValue("tenantId", servicePrincipalEvidence.tenantId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointAppPermissionOperationAuditRecord(writer: SerializationWriter, sharePointAppPermissionOperationAuditRecord: Partial<SharePointAppPermissionOperationAuditRecord> | undefined | null = {}) : void {
    if (sharePointAppPermissionOperationAuditRecord) {
        serializeAuditData(writer, sharePointAppPermissionOperationAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointAuditRecord(writer: SerializationWriter, sharePointAuditRecord: Partial<SharePointAuditRecord> | undefined | null = {}) : void {
    if (sharePointAuditRecord) {
        serializeAuditData(writer, sharePointAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointCommentOperationAuditRecord(writer: SerializationWriter, sharePointCommentOperationAuditRecord: Partial<SharePointCommentOperationAuditRecord> | undefined | null = {}) : void {
    if (sharePointCommentOperationAuditRecord) {
        serializeAuditData(writer, sharePointCommentOperationAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointContentTypeOperationAuditRecord(writer: SerializationWriter, sharePointContentTypeOperationAuditRecord: Partial<SharePointContentTypeOperationAuditRecord> | undefined | null = {}) : void {
    if (sharePointContentTypeOperationAuditRecord) {
        serializeAuditData(writer, sharePointContentTypeOperationAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointESignatureAuditRecord(writer: SerializationWriter, sharePointESignatureAuditRecord: Partial<SharePointESignatureAuditRecord> | undefined | null = {}) : void {
    if (sharePointESignatureAuditRecord) {
        serializeAuditData(writer, sharePointESignatureAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointFieldOperationAuditRecord(writer: SerializationWriter, sharePointFieldOperationAuditRecord: Partial<SharePointFieldOperationAuditRecord> | undefined | null = {}) : void {
    if (sharePointFieldOperationAuditRecord) {
        serializeAuditData(writer, sharePointFieldOperationAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointFileOperationAuditRecord(writer: SerializationWriter, sharePointFileOperationAuditRecord: Partial<SharePointFileOperationAuditRecord> | undefined | null = {}) : void {
    if (sharePointFileOperationAuditRecord) {
        serializeAuditData(writer, sharePointFileOperationAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointListOperationAuditRecord(writer: SerializationWriter, sharePointListOperationAuditRecord: Partial<SharePointListOperationAuditRecord> | undefined | null = {}) : void {
    if (sharePointListOperationAuditRecord) {
        serializeAuditData(writer, sharePointListOperationAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointSharingOperationAuditRecord(writer: SerializationWriter, sharePointSharingOperationAuditRecord: Partial<SharePointSharingOperationAuditRecord> | undefined | null = {}) : void {
    if (sharePointSharingOperationAuditRecord) {
        serializeAuditData(writer, sharePointSharingOperationAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSinglePropertySchema(writer: SerializationWriter, singlePropertySchema: Partial<SinglePropertySchema> | undefined | null = {}) : void {
    if (singlePropertySchema) {
        writer.writeStringValue("name", singlePropertySchema.name);
        writer.writeStringValue("@odata.type", singlePropertySchema.odataType);
        writer.writeStringValue("type", singlePropertySchema.type);
        writer.writeAdditionalData(singlePropertySchema.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSiteSource(writer: SerializationWriter, siteSource: Partial<SiteSource> | undefined | null = {}) : void {
    if (siteSource) {
        serializeDataSource(writer, siteSource)
        writer.writeObjectValue<Site>("site", siteSource.site, serializeSite);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSiteSourceCollectionResponse(writer: SerializationWriter, siteSourceCollectionResponse: Partial<SiteSourceCollectionResponse> | undefined | null = {}) : void {
    if (siteSourceCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, siteSourceCollectionResponse)
        writer.writeCollectionOfObjectValues<SiteSource>("value", siteSourceCollectionResponse.value, serializeSiteSource);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSkypeForBusinessBaseAuditRecord(writer: SerializationWriter, skypeForBusinessBaseAuditRecord: Partial<SkypeForBusinessBaseAuditRecord> | undefined | null = {}) : void {
    if (skypeForBusinessBaseAuditRecord) {
        serializeAuditData(writer, skypeForBusinessBaseAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSkypeForBusinessCmdletsAuditRecord(writer: SerializationWriter, skypeForBusinessCmdletsAuditRecord: Partial<SkypeForBusinessCmdletsAuditRecord> | undefined | null = {}) : void {
    if (skypeForBusinessCmdletsAuditRecord) {
        serializeAuditData(writer, skypeForBusinessCmdletsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSkypeForBusinessPSTNUsageAuditRecord(writer: SerializationWriter, skypeForBusinessPSTNUsageAuditRecord: Partial<SkypeForBusinessPSTNUsageAuditRecord> | undefined | null = {}) : void {
    if (skypeForBusinessPSTNUsageAuditRecord) {
        serializeAuditData(writer, skypeForBusinessPSTNUsageAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSkypeForBusinessUsersBlockedAuditRecord(writer: SerializationWriter, skypeForBusinessUsersBlockedAuditRecord: Partial<SkypeForBusinessUsersBlockedAuditRecord> | undefined | null = {}) : void {
    if (skypeForBusinessUsersBlockedAuditRecord) {
        serializeAuditData(writer, skypeForBusinessUsersBlockedAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSmsCreatePhoneNumberRecord(writer: SerializationWriter, smsCreatePhoneNumberRecord: Partial<SmsCreatePhoneNumberRecord> | undefined | null = {}) : void {
    if (smsCreatePhoneNumberRecord) {
        serializeAuditData(writer, smsCreatePhoneNumberRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSmsDeletePhoneNumberRecord(writer: SerializationWriter, smsDeletePhoneNumberRecord: Partial<SmsDeletePhoneNumberRecord> | undefined | null = {}) : void {
    if (smsDeletePhoneNumberRecord) {
        serializeAuditData(writer, smsDeletePhoneNumberRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSoftDeleteResponseAction(writer: SerializationWriter, softDeleteResponseAction: Partial<SoftDeleteResponseAction> | undefined | null = {}) : void {
    if (softDeleteResponseAction) {
        serializeResponseAction(writer, softDeleteResponseAction)
        writer.writeEnumValue<EmailEntityIdentifier[]>("identifier", softDeleteResponseAction.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSslCertificate(writer: SerializationWriter, sslCertificate: Partial<SslCertificate> | undefined | null = {}) : void {
    if (sslCertificate) {
        serializeArtifact(writer, sslCertificate)
        writer.writeDateValue("expirationDateTime", sslCertificate.expirationDateTime);
        writer.writeStringValue("fingerprint", sslCertificate.fingerprint);
        writer.writeDateValue("firstSeenDateTime", sslCertificate.firstSeenDateTime);
        writer.writeDateValue("issueDateTime", sslCertificate.issueDateTime);
        writer.writeObjectValue<SslCertificateEntity>("issuer", sslCertificate.issuer, serializeSslCertificateEntity);
        writer.writeDateValue("lastSeenDateTime", sslCertificate.lastSeenDateTime);
        writer.writeCollectionOfObjectValues<Host>("relatedHosts", sslCertificate.relatedHosts, serializeHost);
        writer.writeStringValue("serialNumber", sslCertificate.serialNumber);
        writer.writeStringValue("sha1", sslCertificate.sha1);
        writer.writeObjectValue<SslCertificateEntity>("subject", sslCertificate.subject, serializeSslCertificateEntity);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSslCertificateCollectionResponse(writer: SerializationWriter, sslCertificateCollectionResponse: Partial<SslCertificateCollectionResponse> | undefined | null = {}) : void {
    if (sslCertificateCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, sslCertificateCollectionResponse)
        writer.writeCollectionOfObjectValues<SslCertificate>("value", sslCertificateCollectionResponse.value, serializeSslCertificate);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSslCertificateEntity(writer: SerializationWriter, sslCertificateEntity: Partial<SslCertificateEntity> | undefined | null = {}) : void {
    if (sslCertificateEntity) {
        writer.writeObjectValue<PhysicalAddress>("address", sslCertificateEntity.address, serializePhysicalAddress);
        writer.writeCollectionOfPrimitiveValues<string>("alternateNames", sslCertificateEntity.alternateNames);
        writer.writeStringValue("commonName", sslCertificateEntity.commonName);
        writer.writeStringValue("email", sslCertificateEntity.email);
        writer.writeStringValue("givenName", sslCertificateEntity.givenName);
        writer.writeStringValue("@odata.type", sslCertificateEntity.odataType);
        writer.writeStringValue("organizationName", sslCertificateEntity.organizationName);
        writer.writeStringValue("organizationUnitName", sslCertificateEntity.organizationUnitName);
        writer.writeStringValue("serialNumber", sslCertificateEntity.serialNumber);
        writer.writeStringValue("surname", sslCertificateEntity.surname);
        writer.writeAdditionalData(sslCertificateEntity.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeStopAndQuarantineFileResponseAction(writer: SerializationWriter, stopAndQuarantineFileResponseAction: Partial<StopAndQuarantineFileResponseAction> | undefined | null = {}) : void {
    if (stopAndQuarantineFileResponseAction) {
        serializeResponseAction(writer, stopAndQuarantineFileResponseAction)
        writer.writeEnumValue<StopAndQuarantineFileEntityIdentifier[]>("identifier", stopAndQuarantineFileResponseAction.identifier);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeStream(writer: SerializationWriter, stream: Partial<Stream> | undefined | null = {}) : void {
    if (stream) {
        writer.writeStringValue("name", stream.name);
        writer.writeStringValue("@odata.type", stream.odataType);
        writer.writeAdditionalData(stream.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeStringValueDictionary(writer: SerializationWriter, stringValueDictionary: Partial<StringValueDictionary> | undefined | null = {}) : void {
    if (stringValueDictionary) {
        writer.writeStringValue("@odata.type", stringValueDictionary.odataType);
        writer.writeAdditionalData(stringValueDictionary.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSubcategoryTemplate(writer: SerializationWriter, subcategoryTemplate: Partial<SubcategoryTemplate> | undefined | null = {}) : void {
    if (subcategoryTemplate) {
        serializeFilePlanDescriptorTemplate(writer, subcategoryTemplate)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSubcategoryTemplateCollectionResponse(writer: SerializationWriter, subcategoryTemplateCollectionResponse: Partial<SubcategoryTemplateCollectionResponse> | undefined | null = {}) : void {
    if (subcategoryTemplateCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, subcategoryTemplateCollectionResponse)
        writer.writeCollectionOfObjectValues<SubcategoryTemplate>("value", subcategoryTemplateCollectionResponse.value, serializeSubcategoryTemplate);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSubdomain(writer: SerializationWriter, subdomain: Partial<Subdomain> | undefined | null = {}) : void {
    if (subdomain) {
        serializeEntity(writer, subdomain)
        writer.writeDateValue("firstSeenDateTime", subdomain.firstSeenDateTime);
        writer.writeObjectValue<Host>("host", subdomain.host, serializeHost);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSubdomainCollectionResponse(writer: SerializationWriter, subdomainCollectionResponse: Partial<SubdomainCollectionResponse> | undefined | null = {}) : void {
    if (subdomainCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, subdomainCollectionResponse)
        writer.writeCollectionOfObjectValues<Subdomain>("value", subdomainCollectionResponse.value, serializeSubdomain);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSubmissionAdminReview(writer: SerializationWriter, submissionAdminReview: Partial<SubmissionAdminReview> | undefined | null = {}) : void {
    if (submissionAdminReview) {
        writer.writeStringValue("@odata.type", submissionAdminReview.odataType);
        writer.writeStringValue("reviewBy", submissionAdminReview.reviewBy);
        writer.writeDateValue("reviewDateTime", submissionAdminReview.reviewDateTime);
        writer.writeEnumValue<SubmissionResultCategory>("reviewResult", submissionAdminReview.reviewResult);
        writer.writeAdditionalData(submissionAdminReview.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSubmissionDetectedFile(writer: SerializationWriter, submissionDetectedFile: Partial<SubmissionDetectedFile> | undefined | null = {}) : void {
    if (submissionDetectedFile) {
        writer.writeStringValue("fileHash", submissionDetectedFile.fileHash);
        writer.writeStringValue("fileName", submissionDetectedFile.fileName);
        writer.writeStringValue("@odata.type", submissionDetectedFile.odataType);
        writer.writeAdditionalData(submissionDetectedFile.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSubmissionMailEvidence(writer: SerializationWriter, submissionMailEvidence: Partial<SubmissionMailEvidence> | undefined | null = {}) : void {
    if (submissionMailEvidence) {
        serializeAlertEvidence(writer, submissionMailEvidence)
        writer.writeStringValue("networkMessageId", submissionMailEvidence.networkMessageId);
        writer.writeStringValue("recipient", submissionMailEvidence.recipient);
        writer.writeStringValue("reportType", submissionMailEvidence.reportType);
        writer.writeStringValue("sender", submissionMailEvidence.sender);
        writer.writeStringValue("senderIp", submissionMailEvidence.senderIp);
        writer.writeStringValue("subject", submissionMailEvidence.subject);
        writer.writeDateValue("submissionDateTime", submissionMailEvidence.submissionDateTime);
        writer.writeStringValue("submissionId", submissionMailEvidence.submissionId);
        writer.writeStringValue("submitter", submissionMailEvidence.submitter);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSubmissionResult(writer: SerializationWriter, submissionResult: Partial<SubmissionResult> | undefined | null = {}) : void {
    if (submissionResult) {
        writer.writeEnumValue<SubmissionResultCategory>("category", submissionResult.category);
        writer.writeEnumValue<SubmissionResultDetail>("detail", submissionResult.detail);
        writer.writeCollectionOfObjectValues<SubmissionDetectedFile>("detectedFiles", submissionResult.detectedFiles, serializeSubmissionDetectedFile);
        writer.writeCollectionOfPrimitiveValues<string>("detectedUrls", submissionResult.detectedUrls);
        writer.writeStringValue("@odata.type", submissionResult.odataType);
        writer.writeEnumValue<UserMailboxSetting[]>("userMailboxSetting", submissionResult.userMailboxSetting);
        writer.writeAdditionalData(submissionResult.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSubmissionUserIdentity(writer: SerializationWriter, submissionUserIdentity: Partial<SubmissionUserIdentity> | undefined | null = {}) : void {
    if (submissionUserIdentity) {
        serializeIdentity(writer, submissionUserIdentity)
        writer.writeStringValue("email", submissionUserIdentity.email);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSupervisoryReviewDayXInsightsAuditRecord(writer: SerializationWriter, supervisoryReviewDayXInsightsAuditRecord: Partial<SupervisoryReviewDayXInsightsAuditRecord> | undefined | null = {}) : void {
    if (supervisoryReviewDayXInsightsAuditRecord) {
        serializeAuditData(writer, supervisoryReviewDayXInsightsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSyntheticProbeAuditRecord(writer: SerializationWriter, syntheticProbeAuditRecord: Partial<SyntheticProbeAuditRecord> | undefined | null = {}) : void {
    if (syntheticProbeAuditRecord) {
        serializeAuditData(writer, syntheticProbeAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTag(writer: SerializationWriter, tag: Partial<Tag> | undefined | null = {}) : void {
    if (tag) {
        serializeEntity(writer, tag)
        writer.writeObjectValue<IdentitySet>("createdBy", tag.createdBy, serializeIdentitySet);
        writer.writeStringValue("description", tag.description);
        writer.writeStringValue("displayName", tag.displayName);
        writer.writeDateValue("lastModifiedDateTime", tag.lastModifiedDateTime);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamsEasyApprovalsAuditRecord(writer: SerializationWriter, teamsEasyApprovalsAuditRecord: Partial<TeamsEasyApprovalsAuditRecord> | undefined | null = {}) : void {
    if (teamsEasyApprovalsAuditRecord) {
        serializeAuditData(writer, teamsEasyApprovalsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamsHealthcareAuditRecord(writer: SerializationWriter, teamsHealthcareAuditRecord: Partial<TeamsHealthcareAuditRecord> | undefined | null = {}) : void {
    if (teamsHealthcareAuditRecord) {
        serializeAuditData(writer, teamsHealthcareAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamsUpdatesAuditRecord(writer: SerializationWriter, teamsUpdatesAuditRecord: Partial<TeamsUpdatesAuditRecord> | undefined | null = {}) : void {
    if (teamsUpdatesAuditRecord) {
        serializeAuditData(writer, teamsUpdatesAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantAllowBlockListAuditRecord(writer: SerializationWriter, tenantAllowBlockListAuditRecord: Partial<TenantAllowBlockListAuditRecord> | undefined | null = {}) : void {
    if (tenantAllowBlockListAuditRecord) {
        serializeAuditData(writer, tenantAllowBlockListAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantAllowBlockListEntryResult(writer: SerializationWriter, tenantAllowBlockListEntryResult: Partial<TenantAllowBlockListEntryResult> | undefined | null = {}) : void {
    if (tenantAllowBlockListEntryResult) {
        writer.writeEnumValue<TenantAllowBlockListEntryType>("entryType", tenantAllowBlockListEntryResult.entryType);
        writer.writeDateValue("expirationDateTime", tenantAllowBlockListEntryResult.expirationDateTime);
        writer.writeStringValue("identity", tenantAllowBlockListEntryResult.identity);
        writer.writeStringValue("@odata.type", tenantAllowBlockListEntryResult.odataType);
        writer.writeEnumValue<LongRunningOperationStatus>("status", tenantAllowBlockListEntryResult.status);
        writer.writeStringValue("value", tenantAllowBlockListEntryResult.value);
        writer.writeAdditionalData(tenantAllowBlockListEntryResult.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantAllowOrBlockListAction(writer: SerializationWriter, tenantAllowOrBlockListAction: Partial<TenantAllowOrBlockListAction> | undefined | null = {}) : void {
    if (tenantAllowOrBlockListAction) {
        writer.writeEnumValue<TenantAllowBlockListAction>("action", tenantAllowOrBlockListAction.action);
        writer.writeDateValue("expirationDateTime", tenantAllowOrBlockListAction.expirationDateTime);
        writer.writeStringValue("note", tenantAllowOrBlockListAction.note);
        writer.writeStringValue("@odata.type", tenantAllowOrBlockListAction.odataType);
        writer.writeCollectionOfObjectValues<TenantAllowBlockListEntryResult>("results", tenantAllowOrBlockListAction.results, serializeTenantAllowBlockListEntryResult);
        writer.writeAdditionalData(tenantAllowOrBlockListAction.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeThreatFinderAuditRecord(writer: SerializationWriter, threatFinderAuditRecord: Partial<ThreatFinderAuditRecord> | undefined | null = {}) : void {
    if (threatFinderAuditRecord) {
        serializeAuditData(writer, threatFinderAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeThreatIntelligence(writer: SerializationWriter, threatIntelligence: Partial<ThreatIntelligence> | undefined | null = {}) : void {
    if (threatIntelligence) {
        serializeEntity(writer, threatIntelligence)
        writer.writeCollectionOfObjectValues<ArticleIndicator>("articleIndicators", threatIntelligence.articleIndicators, serializeArticleIndicator);
        writer.writeCollectionOfObjectValues<Article>("articles", threatIntelligence.articles, serializeArticle);
        writer.writeCollectionOfObjectValues<HostComponent>("hostComponents", threatIntelligence.hostComponents, serializeHostComponent);
        writer.writeCollectionOfObjectValues<HostCookie>("hostCookies", threatIntelligence.hostCookies, serializeHostCookie);
        writer.writeCollectionOfObjectValues<HostPair>("hostPairs", threatIntelligence.hostPairs, serializeHostPair);
        writer.writeCollectionOfObjectValues<HostPort>("hostPorts", threatIntelligence.hostPorts, serializeHostPort);
        writer.writeCollectionOfObjectValues<Host>("hosts", threatIntelligence.hosts, serializeHost);
        writer.writeCollectionOfObjectValues<HostSslCertificate>("hostSslCertificates", threatIntelligence.hostSslCertificates, serializeHostSslCertificate);
        writer.writeCollectionOfObjectValues<HostTracker>("hostTrackers", threatIntelligence.hostTrackers, serializeHostTracker);
        writer.writeCollectionOfObjectValues<IntelligenceProfileIndicator>("intelligenceProfileIndicators", threatIntelligence.intelligenceProfileIndicators, serializeIntelligenceProfileIndicator);
        writer.writeCollectionOfObjectValues<IntelligenceProfile>("intelProfiles", threatIntelligence.intelProfiles, serializeIntelligenceProfile);
        writer.writeCollectionOfObjectValues<PassiveDnsRecord>("passiveDnsRecords", threatIntelligence.passiveDnsRecords, serializePassiveDnsRecord);
        writer.writeCollectionOfObjectValues<SslCertificate>("sslCertificates", threatIntelligence.sslCertificates, serializeSslCertificate);
        writer.writeCollectionOfObjectValues<Subdomain>("subdomains", threatIntelligence.subdomains, serializeSubdomain);
        writer.writeCollectionOfObjectValues<Vulnerability>("vulnerabilities", threatIntelligence.vulnerabilities, serializeVulnerability);
        writer.writeCollectionOfObjectValues<WhoisHistoryRecord>("whoisHistoryRecords", threatIntelligence.whoisHistoryRecords, serializeWhoisHistoryRecord);
        writer.writeCollectionOfObjectValues<WhoisRecord>("whoisRecords", threatIntelligence.whoisRecords, serializeWhoisRecord);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeThreatIntelligenceAtpContentData(writer: SerializationWriter, threatIntelligenceAtpContentData: Partial<ThreatIntelligenceAtpContentData> | undefined | null = {}) : void {
    if (threatIntelligenceAtpContentData) {
        serializeAuditData(writer, threatIntelligenceAtpContentData)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeThreatIntelligenceMailData(writer: SerializationWriter, threatIntelligenceMailData: Partial<ThreatIntelligenceMailData> | undefined | null = {}) : void {
    if (threatIntelligenceMailData) {
        serializeAuditData(writer, threatIntelligenceMailData)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeThreatIntelligenceUrlClickData(writer: SerializationWriter, threatIntelligenceUrlClickData: Partial<ThreatIntelligenceUrlClickData> | undefined | null = {}) : void {
    if (threatIntelligenceUrlClickData) {
        serializeAuditData(writer, threatIntelligenceUrlClickData)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeThreatSubmission(writer: SerializationWriter, threatSubmission: Partial<ThreatSubmission> | undefined | null = {}) : void {
    if (threatSubmission) {
        serializeEntity(writer, threatSubmission)
        writer.writeObjectValue<SubmissionAdminReview>("adminReview", threatSubmission.adminReview, serializeSubmissionAdminReview);
        writer.writeEnumValue<SubmissionCategory>("category", threatSubmission.category);
        writer.writeEnumValue<SubmissionClientSource>("clientSource", threatSubmission.clientSource);
        writer.writeEnumValue<SubmissionContentType>("contentType", threatSubmission.contentType);
        writer.writeObjectValue<SubmissionUserIdentity>("createdBy", threatSubmission.createdBy, serializeSubmissionUserIdentity);
        writer.writeDateValue("createdDateTime", threatSubmission.createdDateTime);
        writer.writeObjectValue<SubmissionResult>("result", threatSubmission.result, serializeSubmissionResult);
        writer.writeEnumValue<SubmissionSource>("source", threatSubmission.source);
        writer.writeEnumValue<LongRunningOperationStatus>("status", threatSubmission.status);
        writer.writeStringValue("tenantId", threatSubmission.tenantId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeThreatSubmissionRoot(writer: SerializationWriter, threatSubmissionRoot: Partial<ThreatSubmissionRoot> | undefined | null = {}) : void {
    if (threatSubmissionRoot) {
        serializeEntity(writer, threatSubmissionRoot)
        writer.writeCollectionOfObjectValues<EmailThreatSubmission>("emailThreats", threatSubmissionRoot.emailThreats, serializeEmailThreatSubmission);
        writer.writeCollectionOfObjectValues<EmailThreatSubmissionPolicy>("emailThreatSubmissionPolicies", threatSubmissionRoot.emailThreatSubmissionPolicies, serializeEmailThreatSubmissionPolicy);
        writer.writeCollectionOfObjectValues<FileThreatSubmission>("fileThreats", threatSubmissionRoot.fileThreats, serializeFileThreatSubmission);
        writer.writeCollectionOfObjectValues<UrlThreatSubmission>("urlThreats", threatSubmissionRoot.urlThreats, serializeUrlThreatSubmission);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTodoAuditRecord(writer: SerializationWriter, todoAuditRecord: Partial<TodoAuditRecord> | undefined | null = {}) : void {
    if (todoAuditRecord) {
        serializeAuditData(writer, todoAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTopicModelingSettings(writer: SerializationWriter, topicModelingSettings: Partial<TopicModelingSettings> | undefined | null = {}) : void {
    if (topicModelingSettings) {
        writer.writeBooleanValue("dynamicallyAdjustTopicCount", topicModelingSettings.dynamicallyAdjustTopicCount);
        writer.writeBooleanValue("ignoreNumbers", topicModelingSettings.ignoreNumbers);
        writer.writeBooleanValue("isEnabled", topicModelingSettings.isEnabled);
        writer.writeStringValue("@odata.type", topicModelingSettings.odataType);
        writer.writeNumberValue("topicCount", topicModelingSettings.topicCount);
        writer.writeAdditionalData(topicModelingSettings.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTriggersRoot(writer: SerializationWriter, triggersRoot: Partial<TriggersRoot> | undefined | null = {}) : void {
    if (triggersRoot) {
        serializeEntity(writer, triggersRoot)
        writer.writeCollectionOfObjectValues<RetentionEvent>("retentionEvents", triggersRoot.retentionEvents, serializeRetentionEvent);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTriggerTypesRoot(writer: SerializationWriter, triggerTypesRoot: Partial<TriggerTypesRoot> | undefined | null = {}) : void {
    if (triggerTypesRoot) {
        serializeEntity(writer, triggerTypesRoot)
        writer.writeCollectionOfObjectValues<RetentionEventType>("retentionEventTypes", triggerTypesRoot.retentionEventTypes, serializeRetentionEventType);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUamOperationAuditRecord(writer: SerializationWriter, uamOperationAuditRecord: Partial<UamOperationAuditRecord> | undefined | null = {}) : void {
    if (uamOperationAuditRecord) {
        serializeAuditData(writer, uamOperationAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUnclassifiedArtifact(writer: SerializationWriter, unclassifiedArtifact: Partial<UnclassifiedArtifact> | undefined | null = {}) : void {
    if (unclassifiedArtifact) {
        serializeArtifact(writer, unclassifiedArtifact)
        writer.writeStringValue("kind", unclassifiedArtifact.kind);
        writer.writeStringValue("value", unclassifiedArtifact.value);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUnifiedGroupAuditRecord(writer: SerializationWriter, unifiedGroupAuditRecord: Partial<UnifiedGroupAuditRecord> | undefined | null = {}) : void {
    if (unifiedGroupAuditRecord) {
        serializeAuditData(writer, unifiedGroupAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUnifiedGroupSource(writer: SerializationWriter, unifiedGroupSource: Partial<UnifiedGroupSource> | undefined | null = {}) : void {
    if (unifiedGroupSource) {
        serializeDataSource(writer, unifiedGroupSource)
        writer.writeObjectValue<Group>("group", unifiedGroupSource.group, serializeGroup);
        writer.writeEnumValue<SourceType[]>("includedSources", unifiedGroupSource.includedSources);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUnifiedGroupSourceCollectionResponse(writer: SerializationWriter, unifiedGroupSourceCollectionResponse: Partial<UnifiedGroupSourceCollectionResponse> | undefined | null = {}) : void {
    if (unifiedGroupSourceCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, unifiedGroupSourceCollectionResponse)
        writer.writeCollectionOfObjectValues<UnifiedGroupSource>("value", unifiedGroupSourceCollectionResponse.value, serializeUnifiedGroupSource);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUnifiedSimulationMatchedItemAuditRecord(writer: SerializationWriter, unifiedSimulationMatchedItemAuditRecord: Partial<UnifiedSimulationMatchedItemAuditRecord> | undefined | null = {}) : void {
    if (unifiedSimulationMatchedItemAuditRecord) {
        serializeAuditData(writer, unifiedSimulationMatchedItemAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUnifiedSimulationSummaryAuditRecord(writer: SerializationWriter, unifiedSimulationSummaryAuditRecord: Partial<UnifiedSimulationSummaryAuditRecord> | undefined | null = {}) : void {
    if (unifiedSimulationSummaryAuditRecord) {
        serializeAuditData(writer, unifiedSimulationSummaryAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUploadCertificateRecord(writer: SerializationWriter, uploadCertificateRecord: Partial<UploadCertificateRecord> | undefined | null = {}) : void {
    if (uploadCertificateRecord) {
        serializeAuditData(writer, uploadCertificateRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUrbacAssignmentAuditRecord(writer: SerializationWriter, urbacAssignmentAuditRecord: Partial<UrbacAssignmentAuditRecord> | undefined | null = {}) : void {
    if (urbacAssignmentAuditRecord) {
        serializeAuditData(writer, urbacAssignmentAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUrbacEnableStateAuditRecord(writer: SerializationWriter, urbacEnableStateAuditRecord: Partial<UrbacEnableStateAuditRecord> | undefined | null = {}) : void {
    if (urbacEnableStateAuditRecord) {
        serializeAuditData(writer, urbacEnableStateAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUrbacRoleAuditRecord(writer: SerializationWriter, urbacRoleAuditRecord: Partial<UrbacRoleAuditRecord> | undefined | null = {}) : void {
    if (urbacRoleAuditRecord) {
        serializeAuditData(writer, urbacRoleAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUrlEvidence(writer: SerializationWriter, urlEvidence: Partial<UrlEvidence> | undefined | null = {}) : void {
    if (urlEvidence) {
        serializeAlertEvidence(writer, urlEvidence)
        writer.writeStringValue("url", urlEvidence.url);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUrlThreatSubmission(writer: SerializationWriter, urlThreatSubmission: Partial<UrlThreatSubmission> | undefined | null = {}) : void {
    if (urlThreatSubmission) {
        serializeThreatSubmission(writer, urlThreatSubmission)
        writer.writeStringValue("webUrl", urlThreatSubmission.webUrl);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUrlThreatSubmissionCollectionResponse(writer: SerializationWriter, urlThreatSubmissionCollectionResponse: Partial<UrlThreatSubmissionCollectionResponse> | undefined | null = {}) : void {
    if (urlThreatSubmissionCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, urlThreatSubmissionCollectionResponse)
        writer.writeCollectionOfObjectValues<UrlThreatSubmission>("value", urlThreatSubmissionCollectionResponse.value, serializeUrlThreatSubmission);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserAccount(writer: SerializationWriter, userAccount: Partial<UserAccount> | undefined | null = {}) : void {
    if (userAccount) {
        writer.writeStringValue("accountName", userAccount.accountName);
        writer.writeStringValue("azureAdUserId", userAccount.azureAdUserId);
        writer.writeStringValue("displayName", userAccount.displayName);
        writer.writeStringValue("domainName", userAccount.domainName);
        writer.writeStringValue("@odata.type", userAccount.odataType);
        writer.writeStringValue("userPrincipalName", userAccount.userPrincipalName);
        writer.writeStringValue("userSid", userAccount.userSid);
        writer.writeAdditionalData(userAccount.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserEvidence(writer: SerializationWriter, userEvidence: Partial<UserEvidence> | undefined | null = {}) : void {
    if (userEvidence) {
        serializeAlertEvidence(writer, userEvidence)
        writer.writeObjectValue<Stream>("stream", userEvidence.stream, serializeStream);
        writer.writeObjectValue<UserAccount>("userAccount", userEvidence.userAccount, serializeUserAccount);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserSource(writer: SerializationWriter, userSource: Partial<UserSource> | undefined | null = {}) : void {
    if (userSource) {
        serializeDataSource(writer, userSource)
        writer.writeStringValue("email", userSource.email);
        writer.writeEnumValue<SourceType[]>("includedSources", userSource.includedSources);
        writer.writeStringValue("siteWebUrl", userSource.siteWebUrl);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserSourceCollectionResponse(writer: SerializationWriter, userSourceCollectionResponse: Partial<UserSourceCollectionResponse> | undefined | null = {}) : void {
    if (userSourceCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, userSourceCollectionResponse)
        writer.writeCollectionOfObjectValues<UserSource>("value", userSourceCollectionResponse.value, serializeUserSource);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserTrainingAuditRecord(writer: SerializationWriter, userTrainingAuditRecord: Partial<UserTrainingAuditRecord> | undefined | null = {}) : void {
    if (userTrainingAuditRecord) {
        serializeAuditData(writer, userTrainingAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVfamBasePolicyAuditRecord(writer: SerializationWriter, vfamBasePolicyAuditRecord: Partial<VfamBasePolicyAuditRecord> | undefined | null = {}) : void {
    if (vfamBasePolicyAuditRecord) {
        serializeAuditData(writer, vfamBasePolicyAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVfamCreatePolicyAuditRecord(writer: SerializationWriter, vfamCreatePolicyAuditRecord: Partial<VfamCreatePolicyAuditRecord> | undefined | null = {}) : void {
    if (vfamCreatePolicyAuditRecord) {
        serializeAuditData(writer, vfamCreatePolicyAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVfamDeletePolicyAuditRecord(writer: SerializationWriter, vfamDeletePolicyAuditRecord: Partial<VfamDeletePolicyAuditRecord> | undefined | null = {}) : void {
    if (vfamDeletePolicyAuditRecord) {
        serializeAuditData(writer, vfamDeletePolicyAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVfamUpdatePolicyAuditRecord(writer: SerializationWriter, vfamUpdatePolicyAuditRecord: Partial<VfamUpdatePolicyAuditRecord> | undefined | null = {}) : void {
    if (vfamUpdatePolicyAuditRecord) {
        serializeAuditData(writer, vfamUpdatePolicyAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVivaGoalsAuditRecord(writer: SerializationWriter, vivaGoalsAuditRecord: Partial<VivaGoalsAuditRecord> | undefined | null = {}) : void {
    if (vivaGoalsAuditRecord) {
        serializeAuditData(writer, vivaGoalsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVivaLearningAdminAuditRecord(writer: SerializationWriter, vivaLearningAdminAuditRecord: Partial<VivaLearningAdminAuditRecord> | undefined | null = {}) : void {
    if (vivaLearningAdminAuditRecord) {
        serializeAuditData(writer, vivaLearningAdminAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVivaLearningAuditRecord(writer: SerializationWriter, vivaLearningAuditRecord: Partial<VivaLearningAuditRecord> | undefined | null = {}) : void {
    if (vivaLearningAuditRecord) {
        serializeAuditData(writer, vivaLearningAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVivaPulseAdminAuditRecord(writer: SerializationWriter, vivaPulseAdminAuditRecord: Partial<VivaPulseAdminAuditRecord> | undefined | null = {}) : void {
    if (vivaPulseAdminAuditRecord) {
        serializeAuditData(writer, vivaPulseAdminAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVivaPulseOrganizerAuditRecord(writer: SerializationWriter, vivaPulseOrganizerAuditRecord: Partial<VivaPulseOrganizerAuditRecord> | undefined | null = {}) : void {
    if (vivaPulseOrganizerAuditRecord) {
        serializeAuditData(writer, vivaPulseOrganizerAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVivaPulseReportAuditRecord(writer: SerializationWriter, vivaPulseReportAuditRecord: Partial<VivaPulseReportAuditRecord> | undefined | null = {}) : void {
    if (vivaPulseReportAuditRecord) {
        serializeAuditData(writer, vivaPulseReportAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVivaPulseResponseAuditRecord(writer: SerializationWriter, vivaPulseResponseAuditRecord: Partial<VivaPulseResponseAuditRecord> | undefined | null = {}) : void {
    if (vivaPulseResponseAuditRecord) {
        serializeAuditData(writer, vivaPulseResponseAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVmMetadata(writer: SerializationWriter, vmMetadata: Partial<VmMetadata> | undefined | null = {}) : void {
    if (vmMetadata) {
        writer.writeEnumValue<VmCloudProvider>("cloudProvider", vmMetadata.cloudProvider);
        writer.writeStringValue("@odata.type", vmMetadata.odataType);
        writer.writeStringValue("resourceId", vmMetadata.resourceId);
        writer.writeStringValue("subscriptionId", vmMetadata.subscriptionId);
        writer.writeStringValue("vmId", vmMetadata.vmId);
        writer.writeAdditionalData(vmMetadata.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVulnerability(writer: SerializationWriter, vulnerability: Partial<Vulnerability> | undefined | null = {}) : void {
    if (vulnerability) {
        serializeEntity(writer, vulnerability)
        writer.writeBooleanValue("activeExploitsObserved", vulnerability.activeExploitsObserved);
        writer.writeCollectionOfObjectValues<Article>("articles", vulnerability.articles, serializeArticle);
        writer.writeCollectionOfPrimitiveValues<string>("commonWeaknessEnumerationIds", vulnerability.commonWeaknessEnumerationIds);
        writer.writeCollectionOfObjectValues<VulnerabilityComponent>("components", vulnerability.components, serializeVulnerabilityComponent);
        writer.writeDateValue("createdDateTime", vulnerability.createdDateTime);
        writer.writeObjectValue<CvssSummary>("cvss2Summary", vulnerability.cvss2Summary, serializeCvssSummary);
        writer.writeObjectValue<CvssSummary>("cvss3Summary", vulnerability.cvss3Summary, serializeCvssSummary);
        writer.writeObjectValue<FormattedContent>("description", vulnerability.description, serializeFormattedContent);
        writer.writeCollectionOfObjectValues<Hyperlink>("exploits", vulnerability.exploits, serializeHyperlink);
        writer.writeBooleanValue("exploitsAvailable", vulnerability.exploitsAvailable);
        writer.writeBooleanValue("hasChatter", vulnerability.hasChatter);
        writer.writeDateValue("lastModifiedDateTime", vulnerability.lastModifiedDateTime);
        writer.writeNumberValue("priorityScore", vulnerability.priorityScore);
        writer.writeDateValue("publishedDateTime", vulnerability.publishedDateTime);
        writer.writeCollectionOfObjectValues<Hyperlink>("references", vulnerability.references, serializeHyperlink);
        writer.writeObjectValue<FormattedContent>("remediation", vulnerability.remediation, serializeFormattedContent);
        writer.writeEnumValue<VulnerabilitySeverity>("severity", vulnerability.severity);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVulnerabilityCollectionResponse(writer: SerializationWriter, vulnerabilityCollectionResponse: Partial<VulnerabilityCollectionResponse> | undefined | null = {}) : void {
    if (vulnerabilityCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, vulnerabilityCollectionResponse)
        writer.writeCollectionOfObjectValues<Vulnerability>("value", vulnerabilityCollectionResponse.value, serializeVulnerability);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVulnerabilityComponent(writer: SerializationWriter, vulnerabilityComponent: Partial<VulnerabilityComponent> | undefined | null = {}) : void {
    if (vulnerabilityComponent) {
        serializeEntity(writer, vulnerabilityComponent)
        writer.writeStringValue("name", vulnerabilityComponent.name);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVulnerabilityComponentCollectionResponse(writer: SerializationWriter, vulnerabilityComponentCollectionResponse: Partial<VulnerabilityComponentCollectionResponse> | undefined | null = {}) : void {
    if (vulnerabilityComponentCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, vulnerabilityComponentCollectionResponse)
        writer.writeCollectionOfObjectValues<VulnerabilityComponent>("value", vulnerabilityComponentCollectionResponse.value, serializeVulnerabilityComponent);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWdatpAlertsAuditRecord(writer: SerializationWriter, wdatpAlertsAuditRecord: Partial<WdatpAlertsAuditRecord> | undefined | null = {}) : void {
    if (wdatpAlertsAuditRecord) {
        serializeAuditData(writer, wdatpAlertsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWhoisBaseRecord(writer: SerializationWriter, whoisBaseRecord: Partial<WhoisBaseRecord> | undefined | null = {}) : void {
    if (whoisBaseRecord) {
        serializeEntity(writer, whoisBaseRecord)
        writer.writeObjectValue<WhoisContact>("abuse", whoisBaseRecord.abuse, serializeWhoisContact);
        writer.writeObjectValue<WhoisContact>("admin", whoisBaseRecord.admin, serializeWhoisContact);
        writer.writeObjectValue<WhoisContact>("billing", whoisBaseRecord.billing, serializeWhoisContact);
        writer.writeStringValue("domainStatus", whoisBaseRecord.domainStatus);
        writer.writeDateValue("expirationDateTime", whoisBaseRecord.expirationDateTime);
        writer.writeDateValue("firstSeenDateTime", whoisBaseRecord.firstSeenDateTime);
        writer.writeObjectValue<Host>("host", whoisBaseRecord.host, serializeHost);
        writer.writeDateValue("lastSeenDateTime", whoisBaseRecord.lastSeenDateTime);
        writer.writeDateValue("lastUpdateDateTime", whoisBaseRecord.lastUpdateDateTime);
        writer.writeCollectionOfObjectValues<WhoisNameserver>("nameservers", whoisBaseRecord.nameservers, serializeWhoisNameserver);
        writer.writeObjectValue<WhoisContact>("noc", whoisBaseRecord.noc, serializeWhoisContact);
        writer.writeStringValue("rawWhoisText", whoisBaseRecord.rawWhoisText);
        writer.writeObjectValue<WhoisContact>("registrant", whoisBaseRecord.registrant, serializeWhoisContact);
        writer.writeObjectValue<WhoisContact>("registrar", whoisBaseRecord.registrar, serializeWhoisContact);
        writer.writeDateValue("registrationDateTime", whoisBaseRecord.registrationDateTime);
        writer.writeObjectValue<WhoisContact>("technical", whoisBaseRecord.technical, serializeWhoisContact);
        writer.writeStringValue("whoisServer", whoisBaseRecord.whoisServer);
        writer.writeObjectValue<WhoisContact>("zone", whoisBaseRecord.zone, serializeWhoisContact);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWhoisContact(writer: SerializationWriter, whoisContact: Partial<WhoisContact> | undefined | null = {}) : void {
    if (whoisContact) {
        writer.writeObjectValue<PhysicalAddress>("address", whoisContact.address, serializePhysicalAddress);
        writer.writeStringValue("email", whoisContact.email);
        writer.writeStringValue("fax", whoisContact.fax);
        writer.writeStringValue("name", whoisContact.name);
        writer.writeStringValue("@odata.type", whoisContact.odataType);
        writer.writeStringValue("organization", whoisContact.organization);
        writer.writeStringValue("telephone", whoisContact.telephone);
        writer.writeAdditionalData(whoisContact.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWhoisHistoryRecord(writer: SerializationWriter, whoisHistoryRecord: Partial<WhoisHistoryRecord> | undefined | null = {}) : void {
    if (whoisHistoryRecord) {
        serializeWhoisBaseRecord(writer, whoisHistoryRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWhoisHistoryRecordCollectionResponse(writer: SerializationWriter, whoisHistoryRecordCollectionResponse: Partial<WhoisHistoryRecordCollectionResponse> | undefined | null = {}) : void {
    if (whoisHistoryRecordCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, whoisHistoryRecordCollectionResponse)
        writer.writeCollectionOfObjectValues<WhoisHistoryRecord>("value", whoisHistoryRecordCollectionResponse.value, serializeWhoisHistoryRecord);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWhoisNameserver(writer: SerializationWriter, whoisNameserver: Partial<WhoisNameserver> | undefined | null = {}) : void {
    if (whoisNameserver) {
        writer.writeDateValue("firstSeenDateTime", whoisNameserver.firstSeenDateTime);
        writer.writeObjectValue<Host>("host", whoisNameserver.host, serializeHost);
        writer.writeDateValue("lastSeenDateTime", whoisNameserver.lastSeenDateTime);
        writer.writeStringValue("@odata.type", whoisNameserver.odataType);
        writer.writeAdditionalData(whoisNameserver.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWhoisRecord(writer: SerializationWriter, whoisRecord: Partial<WhoisRecord> | undefined | null = {}) : void {
    if (whoisRecord) {
        serializeWhoisBaseRecord(writer, whoisRecord)
        writer.writeCollectionOfObjectValues<WhoisHistoryRecord>("history", whoisRecord.history, serializeWhoisHistoryRecord);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWhoisRecordCollectionResponse(writer: SerializationWriter, whoisRecordCollectionResponse: Partial<WhoisRecordCollectionResponse> | undefined | null = {}) : void {
    if (whoisRecordCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, whoisRecordCollectionResponse)
        writer.writeCollectionOfObjectValues<WhoisRecord>("value", whoisRecordCollectionResponse.value, serializeWhoisRecord);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWindows365CustomerLockboxAuditRecord(writer: SerializationWriter, windows365CustomerLockboxAuditRecord: Partial<Windows365CustomerLockboxAuditRecord> | undefined | null = {}) : void {
    if (windows365CustomerLockboxAuditRecord) {
        serializeAuditData(writer, windows365CustomerLockboxAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWorkplaceAnalyticsAuditRecord(writer: SerializationWriter, workplaceAnalyticsAuditRecord: Partial<WorkplaceAnalyticsAuditRecord> | undefined | null = {}) : void {
    if (workplaceAnalyticsAuditRecord) {
        serializeAuditData(writer, workplaceAnalyticsAuditRecord)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeYammerAuditRecord(writer: SerializationWriter, yammerAuditRecord: Partial<YammerAuditRecord> | undefined | null = {}) : void {
    if (yammerAuditRecord) {
        serializeAuditData(writer, yammerAuditRecord)
    }
}
export interface ServicePrincipalEvidence extends AlertEvidence, Parsable {
    /**
     * The appId property
     */
    appId?: string | null;
    /**
     * The appOwnerTenantId property
     */
    appOwnerTenantId?: string | null;
    /**
     * The servicePrincipalName property
     */
    servicePrincipalName?: string | null;
    /**
     * The servicePrincipalObjectId property
     */
    servicePrincipalObjectId?: string | null;
    /**
     * The servicePrincipalType property
     */
    servicePrincipalType?: ServicePrincipalType | null;
    /**
     * The tenantId property
     */
    tenantId?: string | null;
}
export type ServicePrincipalType = (typeof ServicePrincipalTypeObject)[keyof typeof ServicePrincipalTypeObject];
export type ServiceSource = (typeof ServiceSourceObject)[keyof typeof ServiceSourceObject];
export interface SharePointAppPermissionOperationAuditRecord extends AuditData, Parsable {
}
export interface SharePointAuditRecord extends AuditData, Parsable {
}
export interface SharePointCommentOperationAuditRecord extends AuditData, Parsable {
}
export interface SharePointContentTypeOperationAuditRecord extends AuditData, Parsable {
}
export interface SharePointESignatureAuditRecord extends AuditData, Parsable {
}
export interface SharePointFieldOperationAuditRecord extends AuditData, Parsable {
}
export interface SharePointFileOperationAuditRecord extends AuditData, Parsable {
}
export interface SharePointListOperationAuditRecord extends AuditData, Parsable {
}
export interface SharePointSharingOperationAuditRecord extends AuditData, Parsable {
}
export interface SinglePropertySchema extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name of the property.
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The type of the property.
     */
    type?: string | null;
}
export interface SiteSource extends DataSource, Parsable {
    /**
     * The site property
     */
    site?: Site | null;
}
export interface SiteSourceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: SiteSource[] | null;
}
export interface SkypeForBusinessBaseAuditRecord extends AuditData, Parsable {
}
export interface SkypeForBusinessCmdletsAuditRecord extends AuditData, Parsable {
}
export interface SkypeForBusinessPSTNUsageAuditRecord extends AuditData, Parsable {
}
export interface SkypeForBusinessUsersBlockedAuditRecord extends AuditData, Parsable {
}
export interface SmsCreatePhoneNumberRecord extends AuditData, Parsable {
}
export interface SmsDeletePhoneNumberRecord extends AuditData, Parsable {
}
export interface SoftDeleteResponseAction extends Parsable, ResponseAction {
    /**
     * The identifier property
     */
    identifier?: EmailEntityIdentifier[] | null;
}
export type SourceType = (typeof SourceTypeObject)[keyof typeof SourceTypeObject];
export interface SslCertificate extends Artifact, Parsable {
    /**
     * The date and time when a certificate expires. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    expirationDateTime?: Date | null;
    /**
     * A hash of the certificate calculated on the data and signature.
     */
    fingerprint?: string | null;
    /**
     * The first date and time when this sslCertificate was observed. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The date and time when a certificate was issued. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    issueDateTime?: Date | null;
    /**
     * The entity that grants this certificate.
     */
    issuer?: SslCertificateEntity | null;
    /**
     * The most recent date and time when this sslCertificate was observed. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The host resources related with this sslCertificate.
     */
    relatedHosts?: Host[] | null;
    /**
     * The serial number associated with an SSL certificate.
     */
    serialNumber?: string | null;
    /**
     * A SHA-1 hash of the certificate. Note: This is not the signature.
     */
    sha1?: string | null;
    /**
     * The person, site, machine, and so on, this certificate is for.
     */
    subject?: SslCertificateEntity | null;
}
export interface SslCertificateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: SslCertificate[] | null;
}
export interface SslCertificateEntity extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * A physical address of the entity.
     */
    address?: PhysicalAddress | null;
    /**
     * Alternate names for this entity that are part of the certificate.
     */
    alternateNames?: string[] | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * A common name for this entity.
     */
    commonName?: string | null;
    /**
     * An email for this entity.
     */
    email?: string | null;
    /**
     * If the entity is a person, this is the person's given name (first name).
     */
    givenName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * If the entity is an organization, this is the name of the organization.
     */
    organizationName?: string | null;
    /**
     * If the entity is an organization, this communicates if a unit in the organization is named on the entity.
     */
    organizationUnitName?: string | null;
    /**
     * A serial number assigned to the entity; usually only available if the entity is the issuer.
     */
    serialNumber?: string | null;
    /**
     * If the entity is a person, this is the person's surname (last name).
     */
    surname?: string | null;
}
export type StopAndQuarantineFileEntityIdentifier = (typeof StopAndQuarantineFileEntityIdentifierObject)[keyof typeof StopAndQuarantineFileEntityIdentifierObject];
export interface StopAndQuarantineFileResponseAction extends Parsable, ResponseAction {
    /**
     * The identifier property
     */
    identifier?: StopAndQuarantineFileEntityIdentifier[] | null;
}
export interface Stream extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface StringValueDictionary extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface SubcategoryTemplate extends FilePlanDescriptorTemplate, Parsable {
}
export interface SubcategoryTemplateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: SubcategoryTemplate[] | null;
}
export interface Subdomain extends Entity, Parsable {
    /**
     * The first date and time when Microsoft Defender Threat Intelligence observed the subdomain. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The host property
     */
    host?: Host | null;
}
export interface SubdomainCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Subdomain[] | null;
}
export interface SubmissionAdminReview extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Specifies who reviewed the email. The identification is an email ID or other identity strings.
     */
    reviewBy?: string | null;
    /**
     * Specifies the date time when the review occurred.
     */
    reviewDateTime?: Date | null;
    /**
     * Specifies what the review result was. The possible values are: notJunk, spam, phishing, malware, allowedByPolicy, blockedByPolicy, spoof, unknown, noResultAvailable, unknownFutureValue, beingAnalyzed, notSubmittedToMicrosoft, phishingSimulation, allowedDueToOrganizationOverride, blockedDueToOrganizationOverride, allowedDueToUserOverride, blockedDueToUserOverride, itemNotfound, threatsFound, noThreatsFound, domainImpersonation, userImpersonation, brandImpersonation, authenticationFailure, spoofedBlocked, spoofedAllowed, bulk, and reasonLostInTransit. You must use the Prefer: include-unknown-enum-members request header to get the following values in this evolvable enum: beingAnalyzed, notSubmittedToMicrosoft, phishingSimulation, allowedDueToOrganizationOverride, blockedDueToOrganizationOverride, allowedDueToUserOverride, blockedDueToUserOverride, itemNotfound, threatsFound, noThreatsFound, domainImpersonation, userImpersonation, brandImpersonation, authenticationFailure, spoofedBlocked, spoofedAllowed, bulk, and reasonLostInTransit.
     */
    reviewResult?: SubmissionResultCategory | null;
}
export type SubmissionCategory = (typeof SubmissionCategoryObject)[keyof typeof SubmissionCategoryObject];
export type SubmissionClientSource = (typeof SubmissionClientSourceObject)[keyof typeof SubmissionClientSourceObject];
export type SubmissionContentType = (typeof SubmissionContentTypeObject)[keyof typeof SubmissionContentTypeObject];
export interface SubmissionDetectedFile extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The file hash.
     */
    fileHash?: string | null;
    /**
     * The file name.
     */
    fileName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface SubmissionMailEvidence extends AlertEvidence, Parsable {
    /**
     * The networkMessageId property
     */
    networkMessageId?: string | null;
    /**
     * The recipient property
     */
    recipient?: string | null;
    /**
     * The reportType property
     */
    reportType?: string | null;
    /**
     * The sender property
     */
    sender?: string | null;
    /**
     * The senderIp property
     */
    senderIp?: string | null;
    /**
     * The subject property
     */
    subject?: string | null;
    /**
     * The submissionDateTime property
     */
    submissionDateTime?: Date | null;
    /**
     * The submissionId property
     */
    submissionId?: string | null;
    /**
     * The submitter property
     */
    submitter?: string | null;
}
export interface SubmissionResult extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The submission result category. The possible values are: notJunk, spam, phishing, malware, allowedByPolicy, blockedByPolicy, spoof, unknown, noResultAvailable, unknownFutureValue, beingAnalyzed, notSubmittedToMicrosoft, phishingSimulation, allowedDueToOrganizationOverride, blockedDueToOrganizationOverride, allowedDueToUserOverride, blockedDueToUserOverride, itemNotfound, threatsFound, noThreatsFound, domainImpersonation, userImpersonation, brandImpersonation, authenticationFailure, spoofedBlocked, spoofedAllowed, bulk, and reasonLostInTransit. You must use the Prefer: include-unknown-enum-members request header to get the following values in this evolvable enum: beingAnalyzed, notSubmittedToMicrosoft, phishingSimulation, allowedDueToOrganizationOverride, blockedDueToOrganizationOverride, allowedDueToUserOverride, blockedDueToUserOverride, itemNotfound, threatsFound, noThreatsFound, domainImpersonation, userImpersonation, brandImpersonation, authenticationFailure, spoofedBlocked, spoofedAllowed, bulk, and reasonLostInTransit.
     */
    category?: SubmissionResultCategory | null;
    /**
     * Specifies the extra details provided by Microsoft to substantiate their analysis result.
     */
    detail?: SubmissionResultDetail | null;
    /**
     * Specifies the files detected by Microsoft in the submitted emails.
     */
    detectedFiles?: SubmissionDetectedFile[] | null;
    /**
     * Specifies the URLs detected by Microsoft in the submitted email.
     */
    detectedUrls?: string[] | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Specifies the setting for user mailbox denoted by a comma-separated string.
     */
    userMailboxSetting?: UserMailboxSetting[] | null;
}
export type SubmissionResultCategory = (typeof SubmissionResultCategoryObject)[keyof typeof SubmissionResultCategoryObject];
export type SubmissionResultDetail = (typeof SubmissionResultDetailObject)[keyof typeof SubmissionResultDetailObject];
export type SubmissionSource = (typeof SubmissionSourceObject)[keyof typeof SubmissionSourceObject];
export interface SubmissionUserIdentity extends Identity, Parsable {
    /**
     * The email of user who is making the submission when logged in (delegated token case).
     */
    email?: string | null;
}
export interface SupervisoryReviewDayXInsightsAuditRecord extends AuditData, Parsable {
}
export interface SyntheticProbeAuditRecord extends AuditData, Parsable {
}
export interface Tag extends Entity, Parsable {
    /**
     * The createdBy property
     */
    createdBy?: IdentitySet | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The lastModifiedDateTime property
     */
    lastModifiedDateTime?: Date | null;
}
export interface TeamsEasyApprovalsAuditRecord extends AuditData, Parsable {
}
export interface TeamsHealthcareAuditRecord extends AuditData, Parsable {
}
export interface TeamsUpdatesAuditRecord extends AuditData, Parsable {
}
export type TenantAllowBlockListAction = (typeof TenantAllowBlockListActionObject)[keyof typeof TenantAllowBlockListActionObject];
export interface TenantAllowBlockListAuditRecord extends AuditData, Parsable {
}
export interface TenantAllowBlockListEntryResult extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The tenant allow-block list entry type. The possible values are: url, fileHash, sender, recipient and unkownFutureValue.
     */
    entryType?: TenantAllowBlockListEntryType | null;
    /**
     * Specifies the date and time when the entry expires.
     */
    expirationDateTime?: Date | null;
    /**
     * Specifies the identity of the entry generated by the tenant allow block list system.
     */
    identity?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Specifies whether the tenant allow block list entry creation operation was successful. The possible values are: notStarted, running, succeeded, failed, skipped and unkownFutureValue.
     */
    status?: LongRunningOperationStatus | null;
    /**
     * Specifies the value of the created tenant allow block list entry.
     */
    value?: string | null;
}
export type TenantAllowBlockListEntryType = (typeof TenantAllowBlockListEntryTypeObject)[keyof typeof TenantAllowBlockListEntryTypeObject];
export interface TenantAllowOrBlockListAction extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Specifies whether the tenant allow-or-block list is an allow or block. The possible values are: allow, block, and unkownFutureValue.
     */
    action?: TenantAllowBlockListAction | null;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Specifies when the tenant allow-block-list expires in date time.
     */
    expirationDateTime?: Date | null;
    /**
     * Specifies the note added to the tenant allow-or-block list entry in the format of string.
     */
    note?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Contains the result of the submission that lead to the tenant allow-block-list entry creation.
     */
    results?: TenantAllowBlockListEntryResult[] | null;
}
export interface ThreatFinderAuditRecord extends AuditData, Parsable {
}
export interface ThreatIntelligence extends Entity, Parsable {
    /**
     * Refers to indicators of threat or compromise highlighted in an article.Note: List retrieval is not yet supported.
     */
    articleIndicators?: ArticleIndicator[] | null;
    /**
     * A list of article objects.
     */
    articles?: Article[] | null;
    /**
     * Retrieve details about hostComponent objects.Note: List retrieval is not yet supported.
     */
    hostComponents?: HostComponent[] | null;
    /**
     * Retrieve details about hostCookie objects.Note: List retrieval is not yet supported.
     */
    hostCookies?: HostCookie[] | null;
    /**
     * Retrieve details about hostTracker objects.Note: List retrieval is not yet supported.
     */
    hostPairs?: HostPair[] | null;
    /**
     * Retrieve details about hostPort objects.Note: List retrieval is not yet supported.
     */
    hostPorts?: HostPort[] | null;
    /**
     * Refers to host objects that Microsoft Threat Intelligence has observed.Note: List retrieval is not yet supported.
     */
    hosts?: Host[] | null;
    /**
     * Retrieve details about hostSslCertificate objects.Note: List retrieval is not yet supported.
     */
    hostSslCertificates?: HostSslCertificate[] | null;
    /**
     * Retrieve details about hostTracker objects.Note: List retrieval is not yet supported.
     */
    hostTrackers?: HostTracker[] | null;
    /**
     * The intelligenceProfileIndicators property
     */
    intelligenceProfileIndicators?: IntelligenceProfileIndicator[] | null;
    /**
     * A list of intelligenceProfile objects.
     */
    intelProfiles?: IntelligenceProfile[] | null;
    /**
     * Retrieve details about passiveDnsRecord objects.Note: List retrieval is not yet supported.
     */
    passiveDnsRecords?: PassiveDnsRecord[] | null;
    /**
     * Retrieve details about sslCertificate objects.Note: List retrieval is not yet supported.
     */
    sslCertificates?: SslCertificate[] | null;
    /**
     * Retrieve details about the subdomain.Note: List retrieval is not yet supported.
     */
    subdomains?: Subdomain[] | null;
    /**
     * Retrieve details about vulnerabilities.Note: List retrieval is not yet supported.
     */
    vulnerabilities?: Vulnerability[] | null;
    /**
     * Retrieve details about whoisHistoryRecord objects.Note: List retrieval is not yet supported.
     */
    whoisHistoryRecords?: WhoisHistoryRecord[] | null;
    /**
     * A list of whoisRecord objects.
     */
    whoisRecords?: WhoisRecord[] | null;
}
export interface ThreatIntelligenceAtpContentData extends AuditData, Parsable {
}
export interface ThreatIntelligenceMailData extends AuditData, Parsable {
}
export interface ThreatIntelligenceUrlClickData extends AuditData, Parsable {
}
export interface ThreatSubmission extends Entity, Parsable {
    /**
     * Specifies the admin review property that constitutes of who reviewed the user submission, when and what was it identified as.
     */
    adminReview?: SubmissionAdminReview | null;
    /**
     * The category property
     */
    category?: SubmissionCategory | null;
    /**
     * Specifies the source of the submission. The possible values are: microsoft, other, and unkownFutureValue.
     */
    clientSource?: SubmissionClientSource | null;
    /**
     * Specifies the type of content being submitted. The possible values are: email, url, file, app, and unkownFutureValue.
     */
    contentType?: SubmissionContentType | null;
    /**
     * Specifies who submitted the email as a threat. Supports $filter = createdBy/email eq 'value'.
     */
    createdBy?: SubmissionUserIdentity | null;
    /**
     * Specifies when the threat submission was created. Supports $filter = createdDateTime ge 2022-01-01T00:00:00Z and createdDateTime lt 2022-01-02T00:00:00Z.
     */
    createdDateTime?: Date | null;
    /**
     * Specifies the result of the analysis performed by Microsoft.
     */
    result?: SubmissionResult | null;
    /**
     * Specifies the role of the submitter. Supports $filter = source eq 'value'. The possible values are: administrator,  user, and unkownFutureValue.
     */
    source?: SubmissionSource | null;
    /**
     * Indicates whether the threat submission has been analyzed by Microsoft. Supports $filter = status eq 'value'. The possible values are: notStarted, running, succeeded, failed, skipped, and unkownFutureValue.
     */
    status?: LongRunningOperationStatus | null;
    /**
     * Indicates the tenant id of the submitter. Not required when created using a POST operation. It's extracted from the token of the post API call.
     */
    tenantId?: string | null;
}
export interface ThreatSubmissionRoot extends Entity, Parsable {
    /**
     * The emailThreats property
     */
    emailThreats?: EmailThreatSubmission[] | null;
    /**
     * The emailThreatSubmissionPolicies property
     */
    emailThreatSubmissionPolicies?: EmailThreatSubmissionPolicy[] | null;
    /**
     * The fileThreats property
     */
    fileThreats?: FileThreatSubmission[] | null;
    /**
     * The urlThreats property
     */
    urlThreats?: UrlThreatSubmission[] | null;
}
export type ThreatType = (typeof ThreatTypeObject)[keyof typeof ThreatTypeObject];
export interface TodoAuditRecord extends AuditData, Parsable {
}
export interface TopicModelingSettings extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Indicates whether the themes model should dynamically optimize the number of generated topics. To learn more, see Adjust maximum number of themes dynamically.
     */
    dynamicallyAdjustTopicCount?: boolean | null;
    /**
     * Indicates whether the themes model should exclude numbers while parsing document texts. To learn more, see Include numbers in themes.
     */
    ignoreNumbers?: boolean | null;
    /**
     * Indicates whether themes model is enabled for the case.
     */
    isEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The total number of topics that the themes model will generate for a review set. To learn more, see Maximum number of themes.
     */
    topicCount?: number | null;
}
export interface TriggersRoot extends Entity, Parsable {
    /**
     * The retentionEvents property
     */
    retentionEvents?: RetentionEvent[] | null;
}
export interface TriggerTypesRoot extends Entity, Parsable {
    /**
     * The retentionEventTypes property
     */
    retentionEventTypes?: RetentionEventType[] | null;
}
export interface UamOperationAuditRecord extends AuditData, Parsable {
}
export interface UnclassifiedArtifact extends Artifact, Parsable {
    /**
     * The kind for this unclassifiedArtifact resource, describing what this value means.
     */
    kind?: string | null;
    /**
     * The value for this unclassifiedArtifact.
     */
    value?: string | null;
}
export interface UnifiedGroupAuditRecord extends AuditData, Parsable {
}
export interface UnifiedGroupSource extends DataSource, Parsable {
    /**
     * The group property
     */
    group?: Group | null;
    /**
     * Specifies which sources are included in this group. Possible values are: mailbox, site.
     */
    includedSources?: SourceType[] | null;
}
export interface UnifiedGroupSourceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: UnifiedGroupSource[] | null;
}
export interface UnifiedSimulationMatchedItemAuditRecord extends AuditData, Parsable {
}
export interface UnifiedSimulationSummaryAuditRecord extends AuditData, Parsable {
}
export interface UploadCertificateRecord extends AuditData, Parsable {
}
export interface UrbacAssignmentAuditRecord extends AuditData, Parsable {
}
export interface UrbacEnableStateAuditRecord extends AuditData, Parsable {
}
export interface UrbacRoleAuditRecord extends AuditData, Parsable {
}
export interface UrlEvidence extends AlertEvidence, Parsable {
    /**
     * The Unique Resource Locator (URL).
     */
    url?: string | null;
}
export interface UrlThreatSubmission extends Parsable, ThreatSubmission {
    /**
     * Denotes the webUrl that needs to be submitted.
     */
    webUrl?: string | null;
}
export interface UrlThreatSubmissionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: UrlThreatSubmission[] | null;
}
export interface UserAccount extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The displayed name of the user account.
     */
    accountName?: string | null;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The user object identifier in Microsoft Entra ID.
     */
    azureAdUserId?: string | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The user display name in Microsoft Entra ID.
     */
    displayName?: string | null;
    /**
     * The name of the Active Directory domain of which the user is a member.
     */
    domainName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The user principal name of the account in Microsoft Entra ID.
     */
    userPrincipalName?: string | null;
    /**
     * The local security identifier of the user account.
     */
    userSid?: string | null;
}
export type UserAssetIdentifier = (typeof UserAssetIdentifierObject)[keyof typeof UserAssetIdentifierObject];
export interface UserEvidence extends AlertEvidence, Parsable {
    /**
     * The stream property
     */
    stream?: Stream | null;
    /**
     * The user account details.
     */
    userAccount?: UserAccount | null;
}
export type UserMailboxSetting = (typeof UserMailboxSettingObject)[keyof typeof UserMailboxSettingObject];
export interface UserSource extends DataSource, Parsable {
    /**
     * Email address of the user's mailbox.
     */
    email?: string | null;
    /**
     * Specifies which sources are included in this group. Possible values are: mailbox, site.
     */
    includedSources?: SourceType[] | null;
    /**
     * The URL of the user's OneDrive for Business site. Read-only.
     */
    siteWebUrl?: string | null;
}
export interface UserSourceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: UserSource[] | null;
}
export interface UserTrainingAuditRecord extends AuditData, Parsable {
}
export interface VfamBasePolicyAuditRecord extends AuditData, Parsable {
}
export interface VfamCreatePolicyAuditRecord extends AuditData, Parsable {
}
export interface VfamDeletePolicyAuditRecord extends AuditData, Parsable {
}
export interface VfamUpdatePolicyAuditRecord extends AuditData, Parsable {
}
export interface VivaGoalsAuditRecord extends AuditData, Parsable {
}
export interface VivaLearningAdminAuditRecord extends AuditData, Parsable {
}
export interface VivaLearningAuditRecord extends AuditData, Parsable {
}
export interface VivaPulseAdminAuditRecord extends AuditData, Parsable {
}
export interface VivaPulseOrganizerAuditRecord extends AuditData, Parsable {
}
export interface VivaPulseReportAuditRecord extends AuditData, Parsable {
}
export interface VivaPulseResponseAuditRecord extends AuditData, Parsable {
}
export type VmCloudProvider = (typeof VmCloudProviderObject)[keyof typeof VmCloudProviderObject];
export interface VmMetadata extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The cloudProvider property
     */
    cloudProvider?: VmCloudProvider | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Unique identifier of the Azure resource.
     */
    resourceId?: string | null;
    /**
     * Unique identifier of the Azure subscription the customer tenant belongs to.
     */
    subscriptionId?: string | null;
    /**
     * Unique identifier of the virtual machine instance.
     */
    vmId?: string | null;
}
export interface Vulnerability extends Entity, Parsable {
    /**
     * Indicates whether this vulnerability has any known exploits associated to known bad actors.
     */
    activeExploitsObserved?: boolean | null;
    /**
     * Articles related to this vulnerability.
     */
    articles?: Article[] | null;
    /**
     * Community-defined common weakness enumerations (CWE).
     */
    commonWeaknessEnumerationIds?: string[] | null;
    /**
     * Components related to this vulnerability article.
     */
    components?: VulnerabilityComponent[] | null;
    /**
     * The date and time when this vulnerability article was first created.
     */
    createdDateTime?: Date | null;
    /**
     * The cvss2Summary property
     */
    cvss2Summary?: CvssSummary | null;
    /**
     * The cvss3Summary property
     */
    cvss3Summary?: CvssSummary | null;
    /**
     * The description property
     */
    description?: FormattedContent | null;
    /**
     * Known exploits for this vulnerability.
     */
    exploits?: Hyperlink[] | null;
    /**
     * Indicates whether this vulnerability has exploits in public sources (such as Packetstorm or Exploit-DB) online.
     */
    exploitsAvailable?: boolean | null;
    /**
     * Indicates whether chatter about this vulnerability has been discovered online.
     */
    hasChatter?: boolean | null;
    /**
     * The date and time when this vulnerability article was most recently updated.
     */
    lastModifiedDateTime?: Date | null;
    /**
     * A unique algorithm that reflects the priority of a vulnerability based on the CVSS score, exploits, chatter, and linkage to malware. This property also evaluates the recency of these components so users can understand which vulnerability should be remediated first.
     */
    priorityScore?: number | null;
    /**
     * The date and time when this vulnerability article was published.
     */
    publishedDateTime?: Date | null;
    /**
     * Reference links where further information can be learned about this vulnerability.
     */
    references?: Hyperlink[] | null;
    /**
     * Any known remediation steps.
     */
    remediation?: FormattedContent | null;
    /**
     * The severity property
     */
    severity?: VulnerabilitySeverity | null;
}
export interface VulnerabilityCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Vulnerability[] | null;
}
export interface VulnerabilityComponent extends Entity, Parsable {
    /**
     * The name of this vulnerability component.
     */
    name?: string | null;
}
export interface VulnerabilityComponentCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: VulnerabilityComponent[] | null;
}
export type VulnerabilitySeverity = (typeof VulnerabilitySeverityObject)[keyof typeof VulnerabilitySeverityObject];
export type WatermarkLayout = (typeof WatermarkLayoutObject)[keyof typeof WatermarkLayoutObject];
export interface WdatpAlertsAuditRecord extends AuditData, Parsable {
}
export interface WhoisBaseRecord extends Entity, Parsable {
    /**
     * The contact information for the abuse contact.
     */
    abuse?: WhoisContact | null;
    /**
     * The contact information for the admin contact.
     */
    admin?: WhoisContact | null;
    /**
     * The contact information for the billing contact.
     */
    billing?: WhoisContact | null;
    /**
     * The domain status for this WHOIS object.
     */
    domainStatus?: string | null;
    /**
     * The date and time when this WHOIS record expires with the registrar. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    expirationDateTime?: Date | null;
    /**
     * The first seen date and time of this WHOIS record. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The host property
     */
    host?: Host | null;
    /**
     * The last seen date and time of this WHOIS record. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The date and time when this WHOIS record was last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastUpdateDateTime?: Date | null;
    /**
     * The nameservers for this WHOIS object.
     */
    nameservers?: WhoisNameserver[] | null;
    /**
     * The contact information for the noc contact.
     */
    noc?: WhoisContact | null;
    /**
     * The raw WHOIS details for this WHOIS object.
     */
    rawWhoisText?: string | null;
    /**
     * The contact information for the registrant contact.
     */
    registrant?: WhoisContact | null;
    /**
     * The contact information for the registrar contact.
     */
    registrar?: WhoisContact | null;
    /**
     * The date and time when this WHOIS record was registered with a registrar. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    registrationDateTime?: Date | null;
    /**
     * The contact information for the technical contact.
     */
    technical?: WhoisContact | null;
    /**
     * The WHOIS server that provides the details.
     */
    whoisServer?: string | null;
    /**
     * The contact information for the zone contact.
     */
    zone?: WhoisContact | null;
}
export interface WhoisContact extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The physical address of the entity.
     */
    address?: PhysicalAddress | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The email of this WHOIS contact.
     */
    email?: string | null;
    /**
     * The fax of this WHOIS contact. No format is guaranteed.
     */
    fax?: string | null;
    /**
     * The name of this WHOIS contact.
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The organization of this WHOIS contact.
     */
    organization?: string | null;
    /**
     * The telephone of this WHOIS contact. No format is guaranteed.
     */
    telephone?: string | null;
}
export interface WhoisHistoryRecord extends Parsable, WhoisBaseRecord {
}
export interface WhoisHistoryRecordCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: WhoisHistoryRecord[] | null;
}
export interface WhoisNameserver extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The first seen date and time of this WHOIS contact. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The host property
     */
    host?: Host | null;
    /**
     * The last seen date and time of this WHOIS contact. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface WhoisRecord extends Parsable, WhoisBaseRecord {
    /**
     * The collection of historical records associated to this WHOIS object.
     */
    history?: WhoisHistoryRecord[] | null;
}
export interface WhoisRecordCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: WhoisRecord[] | null;
}
export interface Windows365CustomerLockboxAuditRecord extends AuditData, Parsable {
}
export interface WorkplaceAnalyticsAuditRecord extends AuditData, Parsable {
}
export interface YammerAuditRecord extends AuditData, Parsable {
}
export const ActionAfterRetentionPeriodObject = {
    None: "none",
    Delete: "delete",
    StartDispositionReview: "startDispositionReview",
    Relabel: "relabel",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ActionSourceObject = {
    Manual: "manual",
    Automatic: "automatic",
    Recommended: "recommended",
    DefaultEscaped: "default",
} as const;
export const AdditionalDataOptionsObject = {
    AllVersions: "allVersions",
    LinkedFiles: "linkedFiles",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AdditionalOptionsObject = {
    None: "none",
    TeamsAndYammerConversations: "teamsAndYammerConversations",
    CloudAttachments: "cloudAttachments",
    AllDocumentVersions: "allDocumentVersions",
    SubfolderContents: "subfolderContents",
    ListAttachments: "listAttachments",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AlertClassificationObject = {
    Unknown: "unknown",
    FalsePositive: "falsePositive",
    TruePositive: "truePositive",
    InformationalExpectedActivity: "informationalExpectedActivity",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AlertDeterminationObject = {
    Unknown: "unknown",
    Apt: "apt",
    Malware: "malware",
    SecurityPersonnel: "securityPersonnel",
    SecurityTesting: "securityTesting",
    UnwantedSoftware: "unwantedSoftware",
    Other: "other",
    MultiStagedAttack: "multiStagedAttack",
    CompromisedAccount: "compromisedAccount",
    Phishing: "phishing",
    MaliciousUserActivity: "maliciousUserActivity",
    NotMalicious: "notMalicious",
    NotEnoughDataToValidate: "notEnoughDataToValidate",
    ConfirmedActivity: "confirmedActivity",
    LineOfBusinessApplication: "lineOfBusinessApplication",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AlertSeverityObject = {
    Unknown: "unknown",
    Informational: "informational",
    Low: "low",
    Medium: "medium",
    High: "high",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AlertStatusObject = {
    Unknown: "unknown",
    NewEscaped: "new",
    InProgress: "inProgress",
    Resolved: "resolved",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AntispamDirectionalityObject = {
    Unknown: "unknown",
    Inbound: "inbound",
    Outbound: "outbound",
    IntraOrg: "intraOrg",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AssignmentMethodObject = {
    Standard: "standard",
    Privileged: "privileged",
    Auto: "auto",
} as const;
export const AuditLogQueryStatusObject = {
    NotStarted: "notStarted",
    Running: "running",
    Succeeded: "succeeded",
    Failed: "failed",
    Cancelled: "cancelled",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AuditLogRecordTypeObject = {
    ExchangeAdmin: "ExchangeAdmin",
    ExchangeItem: "ExchangeItem",
    ExchangeItemGroup: "ExchangeItemGroup",
    SharePoint: "SharePoint",
    SyntheticProbe: "SyntheticProbe",
    SharePointFileOperation: "SharePointFileOperation",
    OneDrive: "OneDrive",
    AzureActiveDirectory: "AzureActiveDirectory",
    AzureActiveDirectoryAccountLogon: "AzureActiveDirectoryAccountLogon",
    DataCenterSecurityCmdlet: "DataCenterSecurityCmdlet",
    ComplianceDLPSharePoint: "ComplianceDLPSharePoint",
    Sway: "Sway",
    ComplianceDLPExchange: "ComplianceDLPExchange",
    SharePointSharingOperation: "SharePointSharingOperation",
    AzureActiveDirectoryStsLogon: "AzureActiveDirectoryStsLogon",
    SkypeForBusinessPSTNUsage: "SkypeForBusinessPSTNUsage",
    SkypeForBusinessUsersBlocked: "SkypeForBusinessUsersBlocked",
    SecurityComplianceCenterEOPCmdlet: "SecurityComplianceCenterEOPCmdlet",
    ExchangeAggregatedOperation: "ExchangeAggregatedOperation",
    PowerBIAudit: "PowerBIAudit",
    CRM: "CRM",
    Yammer: "Yammer",
    SkypeForBusinessCmdlets: "SkypeForBusinessCmdlets",
    Discovery: "Discovery",
    MicrosoftTeams: "MicrosoftTeams",
    ThreatIntelligence: "ThreatIntelligence",
    MailSubmission: "MailSubmission",
    MicrosoftFlow: "MicrosoftFlow",
    AeD: "AeD",
    MicrosoftStream: "MicrosoftStream",
    ComplianceDLPSharePointClassification: "ComplianceDLPSharePointClassification",
    ThreatFinder: "ThreatFinder",
    Project: "Project",
    SharePointListOperation: "SharePointListOperation",
    SharePointCommentOperation: "SharePointCommentOperation",
    DataGovernance: "DataGovernance",
    Kaizala: "Kaizala",
    SecurityComplianceAlerts: "SecurityComplianceAlerts",
    ThreatIntelligenceUrl: "ThreatIntelligenceUrl",
    SecurityComplianceInsights: "SecurityComplianceInsights",
    MIPLabel: "MIPLabel",
    WorkplaceAnalytics: "WorkplaceAnalytics",
    PowerAppsApp: "PowerAppsApp",
    PowerAppsPlan: "PowerAppsPlan",
    ThreatIntelligenceAtpContent: "ThreatIntelligenceAtpContent",
    LabelContentExplorer: "LabelContentExplorer",
    TeamsHealthcare: "TeamsHealthcare",
    ExchangeItemAggregated: "ExchangeItemAggregated",
    HygieneEvent: "HygieneEvent",
    DataInsightsRestApiAudit: "DataInsightsRestApiAudit",
    InformationBarrierPolicyApplication: "InformationBarrierPolicyApplication",
    SharePointListItemOperation: "SharePointListItemOperation",
    SharePointContentTypeOperation: "SharePointContentTypeOperation",
    SharePointFieldOperation: "SharePointFieldOperation",
    MicrosoftTeamsAdmin: "MicrosoftTeamsAdmin",
    HRSignal: "HRSignal",
    MicrosoftTeamsDevice: "MicrosoftTeamsDevice",
    MicrosoftTeamsAnalytics: "MicrosoftTeamsAnalytics",
    InformationWorkerProtection: "InformationWorkerProtection",
    Campaign: "Campaign",
    DLPEndpoint: "DLPEndpoint",
    AirInvestigation: "AirInvestigation",
    Quarantine: "Quarantine",
    MicrosoftForms: "MicrosoftForms",
    ApplicationAudit: "ApplicationAudit",
    ComplianceSupervisionExchange: "ComplianceSupervisionExchange",
    CustomerKeyServiceEncryption: "CustomerKeyServiceEncryption",
    OfficeNative: "OfficeNative",
    MipAutoLabelSharePointItem: "MipAutoLabelSharePointItem",
    MipAutoLabelSharePointPolicyLocation: "MipAutoLabelSharePointPolicyLocation",
    MicrosoftTeamsShifts: "MicrosoftTeamsShifts",
    SecureScore: "SecureScore",
    MipAutoLabelExchangeItem: "MipAutoLabelExchangeItem",
    CortanaBriefing: "CortanaBriefing",
    Search: "Search",
    WDATPAlerts: "WDATPAlerts",
    PowerPlatformAdminDlp: "PowerPlatformAdminDlp",
    PowerPlatformAdminEnvironment: "PowerPlatformAdminEnvironment",
    MDATPAudit: "MDATPAudit",
    SensitivityLabelPolicyMatch: "SensitivityLabelPolicyMatch",
    SensitivityLabelAction: "SensitivityLabelAction",
    SensitivityLabeledFileAction: "SensitivityLabeledFileAction",
    AttackSim: "AttackSim",
    AirManualInvestigation: "AirManualInvestigation",
    SecurityComplianceRBAC: "SecurityComplianceRBAC",
    UserTraining: "UserTraining",
    AirAdminActionInvestigation: "AirAdminActionInvestigation",
    MSTIC: "MSTIC",
    PhysicalBadgingSignal: "PhysicalBadgingSignal",
    TeamsEasyApprovals: "TeamsEasyApprovals",
    AipDiscover: "AipDiscover",
    AipSensitivityLabelAction: "AipSensitivityLabelAction",
    AipProtectionAction: "AipProtectionAction",
    AipFileDeleted: "AipFileDeleted",
    AipHeartBeat: "AipHeartBeat",
    MCASAlerts: "MCASAlerts",
    OnPremisesFileShareScannerDlp: "OnPremisesFileShareScannerDlp",
    OnPremisesSharePointScannerDlp: "OnPremisesSharePointScannerDlp",
    ExchangeSearch: "ExchangeSearch",
    SharePointSearch: "SharePointSearch",
    PrivacyDataMinimization: "PrivacyDataMinimization",
    LabelAnalyticsAggregate: "LabelAnalyticsAggregate",
    MyAnalyticsSettings: "MyAnalyticsSettings",
    SecurityComplianceUserChange: "SecurityComplianceUserChange",
    ComplianceDLPExchangeClassification: "ComplianceDLPExchangeClassification",
    ComplianceDLPEndpoint: "ComplianceDLPEndpoint",
    MipExactDataMatch: "MipExactDataMatch",
    MSDEResponseActions: "MSDEResponseActions",
    MSDEGeneralSettings: "MSDEGeneralSettings",
    MSDEIndicatorsSettings: "MSDEIndicatorsSettings",
    MS365DCustomDetection: "MS365DCustomDetection",
    MSDERolesSettings: "MSDERolesSettings",
    MAPGAlerts: "MAPGAlerts",
    MAPGPolicy: "MAPGPolicy",
    MAPGRemediation: "MAPGRemediation",
    PrivacyRemediationAction: "PrivacyRemediationAction",
    PrivacyDigestEmail: "PrivacyDigestEmail",
    MipAutoLabelSimulationProgress: "MipAutoLabelSimulationProgress",
    MipAutoLabelSimulationCompletion: "MipAutoLabelSimulationCompletion",
    MipAutoLabelProgressFeedback: "MipAutoLabelProgressFeedback",
    DlpSensitiveInformationType: "DlpSensitiveInformationType",
    MipAutoLabelSimulationStatistics: "MipAutoLabelSimulationStatistics",
    LargeContentMetadata: "LargeContentMetadata",
    Microsoft365Group: "Microsoft365Group",
    CDPMlInferencingResult: "CDPMlInferencingResult",
    FilteringMailMetadata: "FilteringMailMetadata",
    CDPClassificationMailItem: "CDPClassificationMailItem",
    CDPClassificationDocument: "CDPClassificationDocument",
    OfficeScriptsRunAction: "OfficeScriptsRunAction",
    FilteringPostMailDeliveryAction: "FilteringPostMailDeliveryAction",
    CDPUnifiedFeedback: "CDPUnifiedFeedback",
    TenantAllowBlockList: "TenantAllowBlockList",
    ConsumptionResource: "ConsumptionResource",
    HealthcareSignal: "HealthcareSignal",
    DlpImportResult: "DlpImportResult",
    CDPCompliancePolicyExecution: "CDPCompliancePolicyExecution",
    MultiStageDisposition: "MultiStageDisposition",
    PrivacyDataMatch: "PrivacyDataMatch",
    FilteringDocMetadata: "FilteringDocMetadata",
    FilteringEmailFeatures: "FilteringEmailFeatures",
    PowerBIDlp: "PowerBIDlp",
    FilteringUrlInfo: "FilteringUrlInfo",
    FilteringAttachmentInfo: "FilteringAttachmentInfo",
    CoreReportingSettings: "CoreReportingSettings",
    ComplianceConnector: "ComplianceConnector",
    PowerPlatformLockboxResourceAccessRequest: "PowerPlatformLockboxResourceAccessRequest",
    PowerPlatformLockboxResourceCommand: "PowerPlatformLockboxResourceCommand",
    CDPPredictiveCodingLabel: "CDPPredictiveCodingLabel",
    CDPCompliancePolicyUserFeedback: "CDPCompliancePolicyUserFeedback",
    WebpageActivityEndpoint: "WebpageActivityEndpoint",
    OMEPortal: "OMEPortal",
    CMImprovementActionChange: "CMImprovementActionChange",
    FilteringUrlClick: "FilteringUrlClick",
    MipLabelAnalyticsAuditRecord: "MipLabelAnalyticsAuditRecord",
    FilteringEntityEvent: "FilteringEntityEvent",
    FilteringRuleHits: "FilteringRuleHits",
    FilteringMailSubmission: "FilteringMailSubmission",
    LabelExplorer: "LabelExplorer",
    MicrosoftManagedServicePlatform: "MicrosoftManagedServicePlatform",
    PowerPlatformServiceActivity: "PowerPlatformServiceActivity",
    ScorePlatformGenericAuditRecord: "ScorePlatformGenericAuditRecord",
    FilteringTimeTravelDocMetadata: "FilteringTimeTravelDocMetadata",
    Alert: "Alert",
    AlertStatus: "AlertStatus",
    AlertIncident: "AlertIncident",
    IncidentStatus: "IncidentStatus",
    CaseEscaped: "Case",
    CaseInvestigation: "CaseInvestigation",
    RecordsManagement: "RecordsManagement",
    PrivacyRemediation: "PrivacyRemediation",
    DataShareOperation: "DataShareOperation",
    CdpDlpSensitive: "CdpDlpSensitive",
    EHRConnector: "EHRConnector",
    FilteringMailGradingResult: "FilteringMailGradingResult",
    PublicFolder: "PublicFolder",
    PrivacyTenantAuditHistoryRecord: "PrivacyTenantAuditHistoryRecord",
    AipScannerDiscoverEvent: "AipScannerDiscoverEvent",
    EduDataLakeDownloadOperation: "EduDataLakeDownloadOperation",
    M365ComplianceConnector: "M365ComplianceConnector",
    MicrosoftGraphDataConnectOperation: "MicrosoftGraphDataConnectOperation",
    MicrosoftPurview: "MicrosoftPurview",
    FilteringEmailContentFeatures: "FilteringEmailContentFeatures",
    PowerPagesSite: "PowerPagesSite",
    PowerAppsResource: "PowerAppsResource",
    PlannerPlan: "PlannerPlan",
    PlannerCopyPlan: "PlannerCopyPlan",
    PlannerTask: "PlannerTask",
    PlannerRoster: "PlannerRoster",
    PlannerPlanList: "PlannerPlanList",
    PlannerTaskList: "PlannerTaskList",
    PlannerTenantSettings: "PlannerTenantSettings",
    ProjectForTheWebProject: "ProjectForTheWebProject",
    ProjectForTheWebTask: "ProjectForTheWebTask",
    ProjectForTheWebRoadmap: "ProjectForTheWebRoadmap",
    ProjectForTheWebRoadmapItem: "ProjectForTheWebRoadmapItem",
    ProjectForTheWebProjectSettings: "ProjectForTheWebProjectSettings",
    ProjectForTheWebRoadmapSettings: "ProjectForTheWebRoadmapSettings",
    QuarantineMetadata: "QuarantineMetadata",
    MicrosoftTodoAudit: "MicrosoftTodoAudit",
    TimeTravelFilteringDocMetadata: "TimeTravelFilteringDocMetadata",
    TeamsQuarantineMetadata: "TeamsQuarantineMetadata",
    SharePointAppPermissionOperation: "SharePointAppPermissionOperation",
    MicrosoftTeamsSensitivityLabelAction: "MicrosoftTeamsSensitivityLabelAction",
    FilteringTeamsMetadata: "FilteringTeamsMetadata",
    FilteringTeamsUrlInfo: "FilteringTeamsUrlInfo",
    FilteringTeamsPostDeliveryAction: "FilteringTeamsPostDeliveryAction",
    MDCAssessments: "MDCAssessments",
    MDCRegulatoryComplianceStandards: "MDCRegulatoryComplianceStandards",
    MDCRegulatoryComplianceControls: "MDCRegulatoryComplianceControls",
    MDCRegulatoryComplianceAssessments: "MDCRegulatoryComplianceAssessments",
    MDCSecurityConnectors: "MDCSecurityConnectors",
    MDADataSecuritySignal: "MDADataSecuritySignal",
    VivaGoals: "VivaGoals",
    FilteringRuntimeInfo: "FilteringRuntimeInfo",
    AttackSimAdmin: "AttackSimAdmin",
    MicrosoftGraphDataConnectConsent: "MicrosoftGraphDataConnectConsent",
    FilteringAtpDetonationInfo: "FilteringAtpDetonationInfo",
    PrivacyPortal: "PrivacyPortal",
    ManagedTenants: "ManagedTenants",
    UnifiedSimulationMatchedItem: "UnifiedSimulationMatchedItem",
    UnifiedSimulationSummary: "UnifiedSimulationSummary",
    UpdateQuarantineMetadata: "UpdateQuarantineMetadata",
    MS365DSuppressionRule: "MS365DSuppressionRule",
    PurviewDataMapOperation: "PurviewDataMapOperation",
    FilteringUrlPostClickAction: "FilteringUrlPostClickAction",
    IrmUserDefinedDetectionSignal: "IrmUserDefinedDetectionSignal",
    TeamsUpdates: "TeamsUpdates",
    PlannerRosterSensitivityLabel: "PlannerRosterSensitivityLabel",
    MS365DIncident: "MS365DIncident",
    FilteringDelistingMetadata: "FilteringDelistingMetadata",
    ComplianceDLPSharePointClassificationExtended: "ComplianceDLPSharePointClassificationExtended",
    MicrosoftDefenderForIdentityAudit: "MicrosoftDefenderForIdentityAudit",
    SupervisoryReviewDayXInsight: "SupervisoryReviewDayXInsight",
    DefenderExpertsforXDRAdmin: "DefenderExpertsforXDRAdmin",
    CDPEdgeBlockedMessage: "CDPEdgeBlockedMessage",
    HostedRpa: "HostedRpa",
    CdpContentExplorerAggregateRecord: "CdpContentExplorerAggregateRecord",
    CDPHygieneAttachmentInfo: "CDPHygieneAttachmentInfo",
    CDPHygieneSummary: "CDPHygieneSummary",
    CDPPostMailDeliveryAction: "CDPPostMailDeliveryAction",
    CDPEmailFeatures: "CDPEmailFeatures",
    CDPHygieneUrlInfo: "CDPHygieneUrlInfo",
    CDPUrlClick: "CDPUrlClick",
    CDPPackageManagerHygieneEvent: "CDPPackageManagerHygieneEvent",
    FilteringDocScan: "FilteringDocScan",
    TimeTravelFilteringDocScan: "TimeTravelFilteringDocScan",
    MAPGOnboard: "MAPGOnboard",
    VfamCreatePolicy: "VfamCreatePolicy",
    VfamUpdatePolicy: "VfamUpdatePolicy",
    VfamDeletePolicy: "VfamDeletePolicy",
    M365DAAD: "M365DAAD",
    CdpColdCrawlStatus: "CdpColdCrawlStatus",
    PowerPlatformAdministratorActivity: "PowerPlatformAdministratorActivity",
    Windows365CustomerLockbox: "Windows365CustomerLockbox",
    CdpResourceScopeChangeEvent: "CdpResourceScopeChangeEvent",
    ComplianceCCExchangeExecutionResult: "ComplianceCCExchangeExecutionResult",
    CdpOcrCostEstimatorRecord: "CdpOcrCostEstimatorRecord",
    CopilotInteraction: "CopilotInteraction",
    CdpOcrBillingRecord: "CdpOcrBillingRecord",
    ComplianceDLPApplications: "ComplianceDLPApplications",
    UAMOperation: "UAMOperation",
    VivaLearning: "VivaLearning",
    VivaLearningAdmin: "VivaLearningAdmin",
    PurviewPolicyOperation: "PurviewPolicyOperation",
    PurviewMetadataPolicyOperation: "PurviewMetadataPolicyOperation",
    PeopleAdminSettings: "PeopleAdminSettings",
    CdpComplianceDLPExchangeClassification: "CdpComplianceDLPExchangeClassification",
    CdpComplianceDLPSharePointClassification: "CdpComplianceDLPSharePointClassification",
    FilteringBulkSenderInsightData: "FilteringBulkSenderInsightData",
    FilteringBulkThresholdInsightData: "FilteringBulkThresholdInsightData",
    PrivacyOpenAccess: "PrivacyOpenAccess",
    OWAAuth: "OWAAuth",
    ComplianceDLPApplicationsClassification: "ComplianceDLPApplicationsClassification",
    SharePointESignature: "SharePointESignature",
    Dynamics365BusinessCentral: "Dynamics365BusinessCentral",
    MeshWorlds: "MeshWorlds",
    VivaPulseResponse: "VivaPulseResponse",
    VivaPulseOrganizer: "VivaPulseOrganizer",
    VivaPulseAdmin: "VivaPulseAdmin",
    VivaPulseReport: "VivaPulseReport",
    AIAppInteraction: "AIAppInteraction",
    ComplianceDLMExchange: "ComplianceDLMExchange",
    ComplianceDLMSharePoint: "ComplianceDLMSharePoint",
    ProjectForTheWebAssignedToMeSettings: "ProjectForTheWebAssignedToMeSettings",
    CPSOperation: "CPSOperation",
    ComplianceDLPExchangeDiscovery: "ComplianceDLPExchangeDiscovery",
    PurviewMCRecommendation: "PurviewMCRecommendation",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AuditLogUserTypeObject = {
    Regular: "Regular",
    Reserved: "Reserved",
    Admin: "Admin",
    DcAdmin: "DcAdmin",
    System: "System",
    Application: "Application",
    ServicePrincipal: "ServicePrincipal",
    CustomPolicy: "CustomPolicy",
    SystemPolicy: "SystemPolicy",
    PartnerTechnician: "PartnerTechnician",
    Guest: "Guest",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const BehaviorDuringRetentionPeriodObject = {
    DoNotRetain: "doNotRetain",
    Retain: "retain",
    RetainAsRecord: "retainAsRecord",
    RetainAsRegulatoryRecord: "retainAsRegulatoryRecord",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const CaseActionObject = {
    ContentExport: "contentExport",
    ApplyTags: "applyTags",
    ConvertToPdf: "convertToPdf",
    Index: "index",
    EstimateStatistics: "estimateStatistics",
    AddToReviewSet: "addToReviewSet",
    HoldUpdate: "holdUpdate",
    UnknownFutureValue: "unknownFutureValue",
    PurgeData: "purgeData",
    ExportReport: "exportReport",
    ExportResult: "exportResult",
} as const;
export const CaseOperationStatusObject = {
    NotStarted: "notStarted",
    SubmissionFailed: "submissionFailed",
    Running: "running",
    Succeeded: "succeeded",
    PartiallySucceeded: "partiallySucceeded",
    Failed: "failed",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const CaseStatusObject = {
    Unknown: "unknown",
    Active: "active",
    PendingDelete: "pendingDelete",
    Closing: "closing",
    Closed: "closed",
    ClosedWithError: "closedWithError",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ChildSelectabilityObject = {
    One: "One",
    Many: "Many",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ContainerPortProtocolObject = {
    Udp: "udp",
    Tcp: "tcp",
    Sctp: "sctp",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ContentAlignmentObject = {
    Left: "left",
    Right: "right",
    Center: "center",
} as const;
export const ContentFormatObject = {
    Text: "text",
    Html: "html",
    Markdown: "markdown",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ContentStateObject = {
    Rest: "rest",
    Motion: "motion",
    Use: "use",
} as const;
export const DataSourceContainerStatusObject = {
    Active: "active",
    Released: "released",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DataSourceHoldStatusObject = {
    NotApplied: "notApplied",
    Applied: "applied",
    Applying: "applying",
    Removing: "removing",
    Partial: "partial",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DataSourceScopesObject = {
    None: "none",
    AllTenantMailboxes: "allTenantMailboxes",
    AllTenantSites: "allTenantSites",
    AllCaseCustodians: "allCaseCustodians",
    AllCaseNoncustodialDataSources: "allCaseNoncustodialDataSources",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DefaultRecordBehaviorObject = {
    StartLocked: "startLocked",
    StartUnlocked: "startUnlocked",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DefenderAvStatusObject = {
    NotReporting: "notReporting",
    Disabled: "disabled",
    NotUpdated: "notUpdated",
    Updated: "updated",
    Unknown: "unknown",
    NotSupported: "notSupported",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DeliveryActionObject = {
    Unknown: "unknown",
    DeliveredToJunk: "deliveredToJunk",
    Delivered: "delivered",
    Blocked: "blocked",
    Replaced: "replaced",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DeliveryLocationObject = {
    Unknown: "unknown",
    Inbox_folder: "inbox_folder",
    JunkFolder: "junkFolder",
    DeletedFolder: "deletedFolder",
    Quarantine: "quarantine",
    Onprem_external: "onprem_external",
    Failed: "failed",
    Dropped: "dropped",
    Others: "others",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DeploymentStatusObject = {
    UpToDate: "upToDate",
    Outdated: "outdated",
    Updating: "updating",
    UpdateFailed: "updateFailed",
    NotConfigured: "notConfigured",
    Unreachable: "unreachable",
    Disconnected: "disconnected",
    StartFailure: "startFailure",
    Syncing: "syncing",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DetectionSourceObject = {
    Unknown: "unknown",
    MicrosoftDefenderForEndpoint: "microsoftDefenderForEndpoint",
    Antivirus: "antivirus",
    SmartScreen: "smartScreen",
    CustomTi: "customTi",
    MicrosoftDefenderForOffice365: "microsoftDefenderForOffice365",
    AutomatedInvestigation: "automatedInvestigation",
    MicrosoftThreatExperts: "microsoftThreatExperts",
    CustomDetection: "customDetection",
    MicrosoftDefenderForIdentity: "microsoftDefenderForIdentity",
    CloudAppSecurity: "cloudAppSecurity",
    Microsoft365Defender: "microsoft365Defender",
    AzureAdIdentityProtection: "azureAdIdentityProtection",
    Manual: "manual",
    MicrosoftDataLossPrevention: "microsoftDataLossPrevention",
    AppGovernancePolicy: "appGovernancePolicy",
    AppGovernanceDetection: "appGovernanceDetection",
    UnknownFutureValue: "unknownFutureValue",
    MicrosoftDefenderForCloud: "microsoftDefenderForCloud",
    MicrosoftDefenderForIoT: "microsoftDefenderForIoT",
    MicrosoftDefenderForServers: "microsoftDefenderForServers",
    MicrosoftDefenderForStorage: "microsoftDefenderForStorage",
    MicrosoftDefenderForDNS: "microsoftDefenderForDNS",
    MicrosoftDefenderForDatabases: "microsoftDefenderForDatabases",
    MicrosoftDefenderForContainers: "microsoftDefenderForContainers",
    MicrosoftDefenderForNetwork: "microsoftDefenderForNetwork",
    MicrosoftDefenderForAppService: "microsoftDefenderForAppService",
    MicrosoftDefenderForKeyVault: "microsoftDefenderForKeyVault",
    MicrosoftDefenderForResourceManager: "microsoftDefenderForResourceManager",
    MicrosoftDefenderForApiManagement: "microsoftDefenderForApiManagement",
    NrtAlerts: "nrtAlerts",
    ScheduledAlerts: "scheduledAlerts",
    MicrosoftDefenderThreatIntelligenceAnalytics: "microsoftDefenderThreatIntelligenceAnalytics",
    BuiltInMl: "builtInMl",
    MicrosoftInsiderRiskManagement: "microsoftInsiderRiskManagement",
    MicrosoftSentinel: "microsoftSentinel",
} as const;
export const DetectionStatusObject = {
    Detected: "detected",
    Blocked: "blocked",
    Prevented: "prevented",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DeviceAssetIdentifierObject = {
    DeviceId: "deviceId",
    DeviceName: "deviceName",
    RemoteDeviceName: "remoteDeviceName",
    TargetDeviceName: "targetDeviceName",
    DestinationDeviceName: "destinationDeviceName",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DeviceHealthStatusObject = {
    Active: "active",
    Inactive: "inactive",
    ImpairedCommunication: "impairedCommunication",
    NoSensorData: "noSensorData",
    NoSensorDataImpairedCommunication: "noSensorDataImpairedCommunication",
    Unknown: "unknown",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DeviceIdEntityIdentifierObject = {
    DeviceId: "deviceId",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DeviceRiskScoreObject = {
    None: "none",
    Informational: "informational",
    Low: "low",
    Medium: "medium",
    High: "high",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DisableUserEntityIdentifierObject = {
    AccountSid: "accountSid",
    InitiatingProcessAccountSid: "initiatingProcessAccountSid",
    RequestAccountSid: "requestAccountSid",
    OnPremSid: "onPremSid",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const EmailEntityIdentifierObject = {
    NetworkMessageId: "networkMessageId",
    RecipientEmailAddress: "recipientEmailAddress",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const EventPropagationStatusObject = {
    None: "none",
    InProcessing: "inProcessing",
    Failed: "failed",
    Success: "success",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const EventStatusTypeObject = {
    Pending: "pending",
    ErrorEscaped: "error",
    Success: "success",
    NotAvaliable: "notAvaliable",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const EvidenceRemediationStatusObject = {
    None: "none",
    Remediated: "remediated",
    Prevented: "prevented",
    Blocked: "blocked",
    NotFound: "notFound",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const EvidenceRoleObject = {
    Unknown: "unknown",
    Contextual: "contextual",
    Scanned: "scanned",
    Source: "source",
    Destination: "destination",
    Created: "created",
    Added: "added",
    Compromised: "compromised",
    Edited: "edited",
    Attacked: "attacked",
    Attacker: "attacker",
    CommandAndControl: "commandAndControl",
    Loaded: "loaded",
    Suspicious: "suspicious",
    PolicyViolator: "policyViolator",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const EvidenceVerdictObject = {
    Unknown: "unknown",
    Suspicious: "suspicious",
    Malicious: "malicious",
    NoThreatsFound: "noThreatsFound",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ExportCriteriaObject = {
    SearchHits: "searchHits",
    PartiallyIndexed: "partiallyIndexed",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ExportFileStructureObject = {
    None: "none",
    Directory: "directory",
    Pst: "pst",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ExportFormatObject = {
    Pst: "pst",
    Msg: "msg",
    Eml: "eml",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ExportLocationObject = {
    ResponsiveLocations: "responsiveLocations",
    NonresponsiveLocations: "nonresponsiveLocations",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ExportOptionsObject = {
    OriginalFiles: "originalFiles",
    Text: "text",
    PdfReplacement: "pdfReplacement",
    FileInfo: "fileInfo",
    Tags: "tags",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const FileEntityIdentifierObject = {
    Sha1: "sha1",
    InitiatingProcessSHA1: "initiatingProcessSHA1",
    Sha256: "sha256",
    InitiatingProcessSHA256: "initiatingProcessSHA256",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const FileHashAlgorithmObject = {
    Unknown: "unknown",
    Md5: "md5",
    Sha1: "sha1",
    Sha256: "sha256",
    Sha256ac: "sha256ac",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const FileProcessingStatusObject = {
    Success: "success",
    InternalError: "internalError",
    UnknownError: "unknownError",
    ProcessingTimeout: "processingTimeout",
    InvalidFileId: "invalidFileId",
    FileSizeIsZero: "fileSizeIsZero",
    FileSizeIsTooLarge: "fileSizeIsTooLarge",
    FileDepthLimitExceeded: "fileDepthLimitExceeded",
    FileBodyIsTooLong: "fileBodyIsTooLong",
    FileTypeIsUnknown: "fileTypeIsUnknown",
    FileTypeIsNotSupported: "fileTypeIsNotSupported",
    MalformedFile: "malformedFile",
    ProtectedFile: "protectedFile",
    PoisonFile: "poisonFile",
    NoReviewSetSummaryGenerated: "noReviewSetSummaryGenerated",
    ExtractionException: "extractionException",
    OcrProcessingTimeout: "ocrProcessingTimeout",
    OcrFileSizeExceedsLimit: "ocrFileSizeExceedsLimit",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ForceUserPasswordResetEntityIdentifierObject = {
    AccountSid: "accountSid",
    InitiatingProcessAccountSid: "initiatingProcessAccountSid",
    RequestAccountSid: "requestAccountSid",
    OnPremSid: "onPremSid",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const GoogleCloudLocationTypeObject = {
    Unknown: "unknown",
    Regional: "regional",
    Zonal: "zonal",
    Global: "global",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const HealthIssueSeverityObject = {
    Low: "low",
    Medium: "medium",
    High: "high",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const HealthIssueStatusObject = {
    Open: "open",
    Closed: "closed",
    Suppressed: "suppressed",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const HealthIssueTypeObject = {
    Sensor: "sensor",
    Global: "global",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const HostPortProtocolObject = {
    Tcp: "tcp",
    Udp: "udp",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const HostPortStatusObject = {
    Open: "open",
    Filtered: "filtered",
    Closed: "closed",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const HostReputationClassificationObject = {
    Unknown: "unknown",
    Neutral: "neutral",
    Suspicious: "suspicious",
    Malicious: "malicious",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const HostReputationRuleSeverityObject = {
    Unknown: "unknown",
    Low: "low",
    Medium: "medium",
    High: "high",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const HuntingRuleErrorCodeObject = {
    QueryExecutionFailed: "queryExecutionFailed",
    QueryExecutionThrottling: "queryExecutionThrottling",
    QueryExceededResultSize: "queryExceededResultSize",
    QueryLimitsExceeded: "queryLimitsExceeded",
    QueryTimeout: "queryTimeout",
    AlertCreationFailed: "alertCreationFailed",
    AlertReportNotFound: "alertReportNotFound",
    PartialRowsFailed: "partialRowsFailed",
    UnknownFutureValue: "unknownFutureValue",
    NoImpactedEntity: "noImpactedEntity",
} as const;
export const HuntingRuleRunStatusObject = {
    Running: "running",
    Completed: "completed",
    Failed: "failed",
    PartiallyFailed: "partiallyFailed",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const IncidentStatusObject = {
    Active: "active",
    Resolved: "resolved",
    InProgress: "inProgress",
    Redirected: "redirected",
    UnknownFutureValue: "unknownFutureValue",
    AwaitingAction: "awaitingAction",
} as const;
export const IndicatorSourceObject = {
    Microsoft: "microsoft",
    Osint: "osint",
    Public: "public",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const IntelligenceProfileKindObject = {
    Actor: "actor",
    Tool: "tool",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const IoTDeviceImportanceTypeObject = {
    Unknown: "unknown",
    Low: "low",
    Normal: "normal",
    High: "high",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const IsolationTypeObject = {
    Full: "full",
    Selective: "selective",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const KubernetesPlatformObject = {
    Unknown: "unknown",
    Aks: "aks",
    Eks: "eks",
    Gke: "gke",
    Arc: "arc",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const KubernetesServiceTypeObject = {
    Unknown: "unknown",
    ClusterIP: "clusterIP",
    ExternalName: "externalName",
    NodePort: "nodePort",
    LoadBalancer: "loadBalancer",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const LongRunningOperationStatusObject = {
    NotStarted: "notStarted",
    Running: "running",
    Succeeded: "succeeded",
    Failed: "failed",
    Skipped: "skipped",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const MailboxAssetIdentifierObject = {
    AccountUpn: "accountUpn",
    FileOwnerUpn: "fileOwnerUpn",
    InitiatingProcessAccountUpn: "initiatingProcessAccountUpn",
    LastModifyingAccountUpn: "lastModifyingAccountUpn",
    TargetAccountUpn: "targetAccountUpn",
    SenderFromAddress: "senderFromAddress",
    SenderDisplayName: "senderDisplayName",
    RecipientEmailAddress: "recipientEmailAddress",
    SenderMailFromAddress: "senderMailFromAddress",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const MailboxConfigurationTypeObject = {
    MailForwardingRule: "mailForwardingRule",
    OwaSettings: "owaSettings",
    EwsSettings: "ewsSettings",
    MailDelegation: "mailDelegation",
    UserInboxRule: "userInboxRule",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const MarkUserAsCompromisedEntityIdentifierObject = {
    AccountObjectId: "accountObjectId",
    InitiatingProcessAccountObjectId: "initiatingProcessAccountObjectId",
    ServicePrincipalId: "servicePrincipalId",
    RecipientObjectId: "recipientObjectId",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const OnboardingStatusObject = {
    InsufficientInfo: "insufficientInfo",
    Onboarded: "onboarded",
    CanBeOnboarded: "canBeOnboarded",
    Unsupported: "unsupported",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const PolicyStatusObject = {
    Pending: "pending",
    ErrorEscaped: "error",
    Success: "success",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ProtocolTypeObject = {
    Tcp: "tcp",
    Udp: "udp",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const PurgeAreasObject = {
    Mailboxes: "mailboxes",
    TeamsMessages: "teamsMessages",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const PurgeTypeObject = {
    Recoverable: "recoverable",
    PermanentlyDeleted: "permanentlyDeleted",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const QueryTypeObject = {
    Files: "files",
    Messages: "messages",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const RemediationActionObject = {
    MoveToJunk: "moveToJunk",
    MoveToInbox: "moveToInbox",
    HardDelete: "hardDelete",
    SoftDelete: "softDelete",
    MoveToDeletedItems: "moveToDeletedItems",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const RemediationSeverityObject = {
    Low: "low",
    Medium: "medium",
    High: "high",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const RetentionTriggerObject = {
    DateLabeled: "dateLabeled",
    DateCreated: "dateCreated",
    DateModified: "dateModified",
    DateOfEvent: "dateOfEvent",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ScopeTypeObject = {
    DeviceGroup: "deviceGroup",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const SensorHealthStatusObject = {
    Healthy: "healthy",
    NotHealthyLow: "notHealthyLow",
    NotHealthyMedium: "notHealthyMedium",
    NotHealthyHigh: "notHealthyHigh",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const SensorTypeObject = {
    AdConnectIntegrated: "adConnectIntegrated",
    AdcsIntegrated: "adcsIntegrated",
    AdfsIntegrated: "adfsIntegrated",
    DomainControllerIntegrated: "domainControllerIntegrated",
    DomainControllerStandalone: "domainControllerStandalone",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ServicePrincipalTypeObject = {
    Unknown: "unknown",
    Application: "application",
    ManagedIdentity: "managedIdentity",
    Legacy: "legacy",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ServiceSourceObject = {
    Unknown: "unknown",
    MicrosoftDefenderForEndpoint: "microsoftDefenderForEndpoint",
    MicrosoftDefenderForIdentity: "microsoftDefenderForIdentity",
    MicrosoftDefenderForCloudApps: "microsoftDefenderForCloudApps",
    MicrosoftDefenderForOffice365: "microsoftDefenderForOffice365",
    Microsoft365Defender: "microsoft365Defender",
    AzureAdIdentityProtection: "azureAdIdentityProtection",
    MicrosoftAppGovernance: "microsoftAppGovernance",
    DataLossPrevention: "dataLossPrevention",
    UnknownFutureValue: "unknownFutureValue",
    MicrosoftDefenderForCloud: "microsoftDefenderForCloud",
    MicrosoftSentinel: "microsoftSentinel",
    MicrosoftInsiderRiskManagement: "microsoftInsiderRiskManagement",
} as const;
export const SourceTypeObject = {
    Mailbox: "mailbox",
    Site: "site",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const StopAndQuarantineFileEntityIdentifierObject = {
    DeviceId: "deviceId",
    Sha1: "sha1",
    InitiatingProcessSHA1: "initiatingProcessSHA1",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const SubmissionCategoryObject = {
    NotJunk: "notJunk",
    Spam: "spam",
    Phishing: "phishing",
    Malware: "malware",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const SubmissionClientSourceObject = {
    Microsoft: "microsoft",
    Other: "other",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const SubmissionContentTypeObject = {
    Email: "email",
    Url: "url",
    File: "file",
    App: "app",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const SubmissionResultCategoryObject = {
    NotJunk: "notJunk",
    Spam: "spam",
    Phishing: "phishing",
    Malware: "malware",
    AllowedByPolicy: "allowedByPolicy",
    BlockedByPolicy: "blockedByPolicy",
    Spoof: "spoof",
    Unknown: "unknown",
    NoResultAvailable: "noResultAvailable",
    UnknownFutureValue: "unknownFutureValue",
    BeingAnalyzed: "beingAnalyzed",
    NotSubmittedToMicrosoft: "notSubmittedToMicrosoft",
    PhishingSimulation: "phishingSimulation",
    AllowedDueToOrganizationOverride: "allowedDueToOrganizationOverride",
    BlockedDueToOrganizationOverride: "blockedDueToOrganizationOverride",
    AllowedDueToUserOverride: "allowedDueToUserOverride",
    BlockedDueToUserOverride: "blockedDueToUserOverride",
    ItemNotfound: "itemNotfound",
    ThreatsFound: "threatsFound",
    NoThreatsFound: "noThreatsFound",
    DomainImpersonation: "domainImpersonation",
    UserImpersonation: "userImpersonation",
    BrandImpersonation: "brandImpersonation",
    AuthenticationFailure: "authenticationFailure",
    SpoofedBlocked: "spoofedBlocked",
    SpoofedAllowed: "spoofedAllowed",
    ReasonLostInTransit: "reasonLostInTransit",
    Bulk: "bulk",
} as const;
export const SubmissionResultDetailObject = {
    None: "none",
    UnderInvestigation: "underInvestigation",
    SimulatedThreat: "simulatedThreat",
    AllowedBySecOps: "allowedBySecOps",
    AllowedByThirdPartyFilters: "allowedByThirdPartyFilters",
    MessageNotFound: "messageNotFound",
    UrlFileShouldNotBeBlocked: "urlFileShouldNotBeBlocked",
    UrlFileShouldBeBlocked: "urlFileShouldBeBlocked",
    UrlFileCannotMakeDecision: "urlFileCannotMakeDecision",
    DomainImpersonation: "domainImpersonation",
    UserImpersonation: "userImpersonation",
    BrandImpersonation: "brandImpersonation",
    OutboundShouldNotBeBlocked: "outboundShouldNotBeBlocked",
    OutboundShouldBeBlocked: "outboundShouldBeBlocked",
    OutboundBulk: "outboundBulk",
    OutboundCannotMakeDecision: "outboundCannotMakeDecision",
    OutboundNotRescanned: "outboundNotRescanned",
    ZeroHourAutoPurgeAllowed: "zeroHourAutoPurgeAllowed",
    ZeroHourAutoPurgeBlocked: "zeroHourAutoPurgeBlocked",
    ZeroHourAutoPurgeQuarantineReleased: "zeroHourAutoPurgeQuarantineReleased",
    OnPremisesSkip: "onPremisesSkip",
    AllowedByTenantAllowBlockList: "allowedByTenantAllowBlockList",
    BlockedByTenantAllowBlockList: "blockedByTenantAllowBlockList",
    AllowedUrlByTenantAllowBlockList: "allowedUrlByTenantAllowBlockList",
    AllowedFileByTenantAllowBlockList: "allowedFileByTenantAllowBlockList",
    AllowedSenderByTenantAllowBlockList: "allowedSenderByTenantAllowBlockList",
    AllowedRecipientByTenantAllowBlockList: "allowedRecipientByTenantAllowBlockList",
    BlockedUrlByTenantAllowBlockList: "blockedUrlByTenantAllowBlockList",
    BlockedFileByTenantAllowBlockList: "blockedFileByTenantAllowBlockList",
    BlockedSenderByTenantAllowBlockList: "blockedSenderByTenantAllowBlockList",
    BlockedRecipientByTenantAllowBlockList: "blockedRecipientByTenantAllowBlockList",
    AllowedByConnection: "allowedByConnection",
    BlockedByConnection: "blockedByConnection",
    AllowedByExchangeTransportRule: "allowedByExchangeTransportRule",
    BlockedByExchangeTransportRule: "blockedByExchangeTransportRule",
    QuarantineReleased: "quarantineReleased",
    QuarantineReleasedThenBlocked: "quarantineReleasedThenBlocked",
    JunkMailRuleDisabled: "junkMailRuleDisabled",
    AllowedByUserSetting: "allowedByUserSetting",
    BlockedByUserSetting: "blockedByUserSetting",
    AllowedByTenant: "allowedByTenant",
    BlockedByTenant: "blockedByTenant",
    InvalidFalsePositive: "invalidFalsePositive",
    InvalidFalseNegative: "invalidFalseNegative",
    SpoofBlocked: "spoofBlocked",
    GoodReclassifiedAsBad: "goodReclassifiedAsBad",
    GoodReclassifiedAsBulk: "goodReclassifiedAsBulk",
    GoodReclassifiedAsGood: "goodReclassifiedAsGood",
    GoodReclassifiedAsCannotMakeDecision: "goodReclassifiedAsCannotMakeDecision",
    BadReclassifiedAsGood: "badReclassifiedAsGood",
    BadReclassifiedAsBulk: "badReclassifiedAsBulk",
    BadReclassifiedAsBad: "badReclassifiedAsBad",
    BadReclassifiedAsCannotMakeDecision: "badReclassifiedAsCannotMakeDecision",
    UnknownFutureValue: "unknownFutureValue",
    WillNotifyOnceDone: "willNotifyOnceDone",
    CheckUserReportedSettings: "checkUserReportedSettings",
    PartOfEducationCampaign: "partOfEducationCampaign",
    AllowedByAdvancedDelivery: "allowedByAdvancedDelivery",
    AllowedByEnhancedFiltering: "allowedByEnhancedFiltering",
    ItemDeleted: "itemDeleted",
    ItemFoundClean: "itemFoundClean",
    ItemFoundMalicious: "itemFoundMalicious",
    UnableToMakeDecision: "unableToMakeDecision",
    DomainResembledYourOrganization: "domainResembledYourOrganization",
    EndUserBeingImpersonated: "endUserBeingImpersonated",
    AssociatedWithBrand: "associatedWithBrand",
    SenderFailedAuthentication: "senderFailedAuthentication",
    EndUserBeingSpoofed: "endUserBeingSpoofed",
    ItemFoundBulk: "itemFoundBulk",
    ItemNotReceivedByService: "itemNotReceivedByService",
    ItemFoundSpam: "itemFoundSpam",
} as const;
export const SubmissionSourceObject = {
    User: "user",
    Administrator: "administrator",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const TenantAllowBlockListActionObject = {
    Allow: "allow",
    Block: "block",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const TenantAllowBlockListEntryTypeObject = {
    Url: "url",
    FileHash: "fileHash",
    Sender: "sender",
    Recipient: "recipient",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ThreatTypeObject = {
    Unknown: "unknown",
    Spam: "spam",
    Malware: "malware",
    Phish: "phish",
    None: "none",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const UserAssetIdentifierObject = {
    AccountObjectId: "accountObjectId",
    AccountSid: "accountSid",
    AccountUpn: "accountUpn",
    AccountName: "accountName",
    AccountDomain: "accountDomain",
    AccountId: "accountId",
    RequestAccountSid: "requestAccountSid",
    RequestAccountName: "requestAccountName",
    RequestAccountDomain: "requestAccountDomain",
    RecipientObjectId: "recipientObjectId",
    ProcessAccountObjectId: "processAccountObjectId",
    InitiatingAccountSid: "initiatingAccountSid",
    InitiatingProcessAccountUpn: "initiatingProcessAccountUpn",
    InitiatingAccountName: "initiatingAccountName",
    InitiatingAccountDomain: "initiatingAccountDomain",
    ServicePrincipalId: "servicePrincipalId",
    ServicePrincipalName: "servicePrincipalName",
    TargetAccountUpn: "targetAccountUpn",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const UserMailboxSettingObject = {
    None: "none",
    JunkMailDeletion: "junkMailDeletion",
    IsFromAddressInAddressBook: "isFromAddressInAddressBook",
    IsFromAddressInAddressSafeList: "isFromAddressInAddressSafeList",
    IsFromAddressInAddressBlockList: "isFromAddressInAddressBlockList",
    IsFromAddressInAddressImplicitSafeList: "isFromAddressInAddressImplicitSafeList",
    IsFromAddressInAddressImplicitJunkList: "isFromAddressInAddressImplicitJunkList",
    IsFromDomainInDomainSafeList: "isFromDomainInDomainSafeList",
    IsFromDomainInDomainBlockList: "isFromDomainInDomainBlockList",
    IsRecipientInRecipientSafeList: "isRecipientInRecipientSafeList",
    CustomRule: "customRule",
    JunkMailRule: "junkMailRule",
    SenderPraPresent: "senderPraPresent",
    FromFirstTimeSender: "fromFirstTimeSender",
    Exclusive: "exclusive",
    PriorSeenPass: "priorSeenPass",
    SenderAuthenticationSucceeded: "senderAuthenticationSucceeded",
    IsJunkMailRuleEnabled: "isJunkMailRuleEnabled",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const VmCloudProviderObject = {
    Unknown: "unknown",
    Azure: "azure",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const VulnerabilitySeverityObject = {
    None: "none",
    Low: "low",
    Medium: "medium",
    High: "high",
    Critical: "critical",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const WatermarkLayoutObject = {
    Horizontal: "horizontal",
    Diagonal: "diagonal",
} as const;
/* tslint:enable */
/* eslint-enable */
