/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDictionaryFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, deserializeIntoEntity, serializeBaseCollectionPaginationCountResponse, serializeDictionary, serializeEntity, type BaseCollectionPaginationCountResponse, type Dictionary, type Entity } from '../../index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EvaluationCollectionResponse}
 */
// @ts-ignore
export function createEvaluationCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEvaluationCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Evaluation}
 */
// @ts-ignore
export function createEvaluationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEvaluation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EvaluationResult}
 */
// @ts-ignore
export function createEvaluationResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEvaluationResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PluginAuth}
 */
// @ts-ignore
export function createPluginAuthFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPluginAuth;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PluginCollectionResponse}
 */
// @ts-ignore
export function createPluginCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPluginCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Plugin}
 */
// @ts-ignore
export function createPluginFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlugin;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PluginSetting}
 */
// @ts-ignore
export function createPluginSettingFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPluginSetting;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PromptCollectionResponse}
 */
// @ts-ignore
export function createPromptCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPromptCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Prompt}
 */
// @ts-ignore
export function createPromptFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrompt;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SessionCollectionResponse}
 */
// @ts-ignore
export function createSessionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSessionCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Session}
 */
// @ts-ignore
export function createSessionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSession;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SkillInputDescriptor}
 */
// @ts-ignore
export function createSkillInputDescriptorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSkillInputDescriptor;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SkillTypeDescriptor}
 */
// @ts-ignore
export function createSkillTypeDescriptorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSkillTypeDescriptor;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SkillVariableDescriptor}
 */
// @ts-ignore
export function createSkillVariableDescriptorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.securityCopilot.skillInputDescriptor":
                    return deserializeIntoSkillInputDescriptor;
            }
        }
    }
    return deserializeIntoSkillVariableDescriptor;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WorkspaceCollectionResponse}
 */
// @ts-ignore
export function createWorkspaceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWorkspaceCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Workspace}
 */
// @ts-ignore
export function createWorkspaceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWorkspace;
}
/**
 * The deserialization information for the current model
 * @param Evaluation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEvaluation(evaluation: Partial<Evaluation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(evaluation),
        "completedDateTime": n => { evaluation.completedDateTime = n.getDateValue(); },
        "createdDateTime": n => { evaluation.createdDateTime = n.getDateValue(); },
        "executionCount": n => { evaluation.executionCount = n.getNumberValue(); },
        "isCancelled": n => { evaluation.isCancelled = n.getBooleanValue(); },
        "lastModifiedDateTime": n => { evaluation.lastModifiedDateTime = n.getDateValue(); },
        "result": n => { evaluation.result = n.getObjectValue<EvaluationResult>(createEvaluationResultFromDiscriminatorValue); },
        "runStartDateTime": n => { evaluation.runStartDateTime = n.getDateValue(); },
        "state": n => { evaluation.state = n.getEnumValue<EvaluationState>(EvaluationStateObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param EvaluationCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEvaluationCollectionResponse(evaluationCollectionResponse: Partial<EvaluationCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(evaluationCollectionResponse),
        "value": n => { evaluationCollectionResponse.value = n.getCollectionOfObjectValues<Evaluation>(createEvaluationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EvaluationResult The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEvaluationResult(evaluationResult: Partial<EvaluationResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { evaluationResult.backingStoreEnabled = true; },
        "content": n => { evaluationResult.content = n.getStringValue(); },
        "@odata.type": n => { evaluationResult.odataType = n.getStringValue(); },
        "previewState": n => { evaluationResult.previewState = n.getEnumValue<SkillPreviewState>(SkillPreviewStateObject); },
        "type": n => { evaluationResult.type = n.getEnumValue<EvaluationResultType>(EvaluationResultTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param Plugin The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlugin(plugin: Partial<Plugin> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "authorization": n => { plugin.authorization = n.getObjectValue<PluginAuth>(createPluginAuthFromDiscriminatorValue); },
        "backingStoreEnabled": n => { plugin.backingStoreEnabled = true; },
        "catalogScope": n => { plugin.catalogScope = n.getEnumValue<PluginCatalogScope>(PluginCatalogScopeObject); },
        "category": n => { plugin.category = n.getEnumValue<PluginCategory>(PluginCategoryObject); },
        "description": n => { plugin.description = n.getStringValue(); },
        "displayName": n => { plugin.displayName = n.getStringValue(); },
        "isEnabled": n => { plugin.isEnabled = n.getBooleanValue(); },
        "name": n => { plugin.name = n.getStringValue(); },
        "@odata.type": n => { plugin.odataType = n.getStringValue(); },
        "previewState": n => { plugin.previewState = n.getEnumValue<PluginPreviewStates>(PluginPreviewStatesObject); },
        "settings": n => { plugin.settings = n.getCollectionOfObjectValues<PluginSetting>(createPluginSettingFromDiscriminatorValue); },
        "supportedAuthTypes": n => { plugin.supportedAuthTypes = n.getEnumValue<PluginAuthTypes>(PluginAuthTypesObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param PluginAuth The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPluginAuth(pluginAuth: Partial<PluginAuth> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "authType": n => { pluginAuth.authType = n.getEnumValue<PluginAuthTypes>(PluginAuthTypesObject); },
        "backingStoreEnabled": n => { pluginAuth.backingStoreEnabled = true; },
        "@odata.type": n => { pluginAuth.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PluginCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPluginCollectionResponse(pluginCollectionResponse: Partial<PluginCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(pluginCollectionResponse),
        "value": n => { pluginCollectionResponse.value = n.getCollectionOfObjectValues<Plugin>(createPluginFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param PluginSetting The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPluginSetting(pluginSetting: Partial<PluginSetting> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "acceptableValues": n => { pluginSetting.acceptableValues = n.getCollectionOfPrimitiveValues<string>(); },
        "backingStoreEnabled": n => { pluginSetting.backingStoreEnabled = true; },
        "defaultValue": n => { pluginSetting.defaultValue = n.getStringValue(); },
        "description": n => { pluginSetting.description = n.getStringValue(); },
        "displayType": n => { pluginSetting.displayType = n.getEnumValue<PluginSettingDisplayType>(PluginSettingDisplayTypeObject); },
        "hintText": n => { pluginSetting.hintText = n.getStringValue(); },
        "isRequired": n => { pluginSetting.isRequired = n.getBooleanValue(); },
        "label": n => { pluginSetting.label = n.getStringValue(); },
        "name": n => { pluginSetting.name = n.getStringValue(); },
        "@odata.type": n => { pluginSetting.odataType = n.getStringValue(); },
        "settingValue": n => { pluginSetting.settingValue = n.getEnumValue<PluginSettingType>(PluginSettingTypeObject); },
        "value": n => { pluginSetting.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param Prompt The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrompt(prompt: Partial<Prompt> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(prompt),
        "content": n => { prompt.content = n.getStringValue(); },
        "createdDateTime": n => { prompt.createdDateTime = n.getDateValue(); },
        "evaluations": n => { prompt.evaluations = n.getCollectionOfObjectValues<Evaluation>(createEvaluationFromDiscriminatorValue); },
        "inputs": n => { prompt.inputs = n.getObjectValue<Dictionary>(createDictionaryFromDiscriminatorValue); },
        "lastModifiedDateTime": n => { prompt.lastModifiedDateTime = n.getDateValue(); },
        "skillInputDescriptors": n => { prompt.skillInputDescriptors = n.getCollectionOfObjectValues<SkillInputDescriptor>(createSkillInputDescriptorFromDiscriminatorValue); },
        "skillName": n => { prompt.skillName = n.getStringValue(); },
        "type": n => { prompt.type = n.getEnumValue<PromptType>(PromptTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param PromptCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPromptCollectionResponse(promptCollectionResponse: Partial<PromptCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(promptCollectionResponse),
        "value": n => { promptCollectionResponse.value = n.getCollectionOfObjectValues<Prompt>(createPromptFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Session The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSession(session: Partial<Session> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(session),
        "createdDateTime": n => { session.createdDateTime = n.getDateValue(); },
        "displayName": n => { session.displayName = n.getStringValue(); },
        "lastModifiedDateTime": n => { session.lastModifiedDateTime = n.getDateValue(); },
        "prompts": n => { session.prompts = n.getCollectionOfObjectValues<Prompt>(createPromptFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param SessionCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSessionCollectionResponse(sessionCollectionResponse: Partial<SessionCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(sessionCollectionResponse),
        "value": n => { sessionCollectionResponse.value = n.getCollectionOfObjectValues<Session>(createSessionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param SkillInputDescriptor The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSkillInputDescriptor(skillInputDescriptor: Partial<SkillInputDescriptor> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoSkillVariableDescriptor(skillInputDescriptor),
        "defaultValue": n => { skillInputDescriptor.defaultValue = n.getStringValue(); },
        "isRequired": n => { skillInputDescriptor.isRequired = n.getBooleanValue(); },
        "placeholderValue": n => { skillInputDescriptor.placeholderValue = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SkillTypeDescriptor The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSkillTypeDescriptor(skillTypeDescriptor: Partial<SkillTypeDescriptor> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { skillTypeDescriptor.backingStoreEnabled = true; },
        "name": n => { skillTypeDescriptor.name = n.getStringValue(); },
        "@odata.type": n => { skillTypeDescriptor.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SkillVariableDescriptor The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSkillVariableDescriptor(skillVariableDescriptor: Partial<SkillVariableDescriptor> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { skillVariableDescriptor.backingStoreEnabled = true; },
        "description": n => { skillVariableDescriptor.description = n.getStringValue(); },
        "name": n => { skillVariableDescriptor.name = n.getStringValue(); },
        "@odata.type": n => { skillVariableDescriptor.odataType = n.getStringValue(); },
        "type": n => { skillVariableDescriptor.type = n.getObjectValue<SkillTypeDescriptor>(createSkillTypeDescriptorFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Workspace The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWorkspace(workspace: Partial<Workspace> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(workspace),
        "displayName": n => { workspace.displayName = n.getStringValue(); },
        "plugins": n => { workspace.plugins = n.getCollectionOfObjectValues<Plugin>(createPluginFromDiscriminatorValue); },
        "sessions": n => { workspace.sessions = n.getCollectionOfObjectValues<Session>(createSessionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param WorkspaceCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWorkspaceCollectionResponse(workspaceCollectionResponse: Partial<WorkspaceCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(workspaceCollectionResponse),
        "value": n => { workspaceCollectionResponse.value = n.getCollectionOfObjectValues<Workspace>(createWorkspaceFromDiscriminatorValue); },
    }
}
export interface Evaluation extends Entity, Parsable {
    /**
     * The completedDateTime property
     */
    completedDateTime?: Date | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The executionCount property
     */
    executionCount?: number | null;
    /**
     * The isCancelled property
     */
    isCancelled?: boolean | null;
    /**
     * The lastModifiedDateTime property
     */
    lastModifiedDateTime?: Date | null;
    /**
     * The result property
     */
    result?: EvaluationResult | null;
    /**
     * The runStartDateTime property
     */
    runStartDateTime?: Date | null;
    /**
     * The state property
     */
    state?: EvaluationState | null;
}
export interface EvaluationCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Evaluation[] | null;
}
export interface EvaluationResult extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The content property
     */
    content?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The previewState property
     */
    previewState?: SkillPreviewState | null;
    /**
     * The type property
     */
    type?: EvaluationResultType | null;
}
export type EvaluationResultType = (typeof EvaluationResultTypeObject)[keyof typeof EvaluationResultTypeObject];
export type EvaluationState = (typeof EvaluationStateObject)[keyof typeof EvaluationStateObject];
export interface Plugin extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The authorization property
     */
    authorization?: PluginAuth | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The catalogScope property
     */
    catalogScope?: PluginCatalogScope | null;
    /**
     * The category property
     */
    category?: PluginCategory | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The isEnabled property
     */
    isEnabled?: boolean | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The previewState property
     */
    previewState?: PluginPreviewStates | null;
    /**
     * The settings property
     */
    settings?: PluginSetting[] | null;
    /**
     * The supportedAuthTypes property
     */
    supportedAuthTypes?: PluginAuthTypes | null;
}
export interface PluginAuth extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The authType property
     */
    authType?: PluginAuthTypes | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type PluginAuthTypes = (typeof PluginAuthTypesObject)[keyof typeof PluginAuthTypesObject];
export type PluginCatalogScope = (typeof PluginCatalogScopeObject)[keyof typeof PluginCatalogScopeObject];
export type PluginCategory = (typeof PluginCategoryObject)[keyof typeof PluginCategoryObject];
export interface PluginCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Plugin[] | null;
}
export type PluginPreviewStates = (typeof PluginPreviewStatesObject)[keyof typeof PluginPreviewStatesObject];
export interface PluginSetting extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The acceptableValues property
     */
    acceptableValues?: string[] | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The defaultValue property
     */
    defaultValue?: string | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The displayType property
     */
    displayType?: PluginSettingDisplayType | null;
    /**
     * The hintText property
     */
    hintText?: string | null;
    /**
     * The isRequired property
     */
    isRequired?: boolean | null;
    /**
     * The label property
     */
    label?: string | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The settingValue property
     */
    settingValue?: PluginSettingType | null;
    /**
     * The value property
     */
    value?: string | null;
}
export type PluginSettingDisplayType = (typeof PluginSettingDisplayTypeObject)[keyof typeof PluginSettingDisplayTypeObject];
export type PluginSettingType = (typeof PluginSettingTypeObject)[keyof typeof PluginSettingTypeObject];
export interface Prompt extends Entity, Parsable {
    /**
     * The content property
     */
    content?: string | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The evaluations property
     */
    evaluations?: Evaluation[] | null;
    /**
     * The inputs property
     */
    inputs?: Dictionary | null;
    /**
     * The lastModifiedDateTime property
     */
    lastModifiedDateTime?: Date | null;
    /**
     * The skillInputDescriptors property
     */
    skillInputDescriptors?: SkillInputDescriptor[] | null;
    /**
     * The skillName property
     */
    skillName?: string | null;
    /**
     * The type property
     */
    type?: PromptType | null;
}
export interface PromptCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Prompt[] | null;
}
export type PromptType = (typeof PromptTypeObject)[keyof typeof PromptTypeObject];
/**
 * Serializes information the current object
 * @param Evaluation The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEvaluation(writer: SerializationWriter, evaluation: Partial<Evaluation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!evaluation || isSerializingDerivedType) { return; }
    serializeEntity(writer, evaluation, isSerializingDerivedType)
    writer.writeDateValue("completedDateTime", evaluation.completedDateTime);
    writer.writeDateValue("createdDateTime", evaluation.createdDateTime);
    writer.writeNumberValue("executionCount", evaluation.executionCount);
    writer.writeBooleanValue("isCancelled", evaluation.isCancelled);
    writer.writeDateValue("lastModifiedDateTime", evaluation.lastModifiedDateTime);
    writer.writeObjectValue<EvaluationResult>("result", evaluation.result, serializeEvaluationResult);
    writer.writeDateValue("runStartDateTime", evaluation.runStartDateTime);
    writer.writeEnumValue<EvaluationState>("state", evaluation.state);
}
/**
 * Serializes information the current object
 * @param EvaluationCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEvaluationCollectionResponse(writer: SerializationWriter, evaluationCollectionResponse: Partial<EvaluationCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!evaluationCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, evaluationCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<Evaluation>("value", evaluationCollectionResponse.value, serializeEvaluation);
}
/**
 * Serializes information the current object
 * @param EvaluationResult The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEvaluationResult(writer: SerializationWriter, evaluationResult: Partial<EvaluationResult> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!evaluationResult || isSerializingDerivedType) { return; }
    writer.writeStringValue("content", evaluationResult.content);
    writer.writeStringValue("@odata.type", evaluationResult.odataType);
    writer.writeEnumValue<SkillPreviewState>("previewState", evaluationResult.previewState);
    writer.writeEnumValue<EvaluationResultType>("type", evaluationResult.type);
    writer.writeAdditionalData(evaluationResult.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Plugin The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlugin(writer: SerializationWriter, plugin: Partial<Plugin> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!plugin || isSerializingDerivedType) { return; }
    writer.writeObjectValue<PluginAuth>("authorization", plugin.authorization, serializePluginAuth);
    writer.writeEnumValue<PluginCatalogScope>("catalogScope", plugin.catalogScope);
    writer.writeEnumValue<PluginCategory>("category", plugin.category);
    writer.writeStringValue("description", plugin.description);
    writer.writeStringValue("displayName", plugin.displayName);
    writer.writeBooleanValue("isEnabled", plugin.isEnabled);
    writer.writeStringValue("name", plugin.name);
    writer.writeStringValue("@odata.type", plugin.odataType);
    writer.writeEnumValue<PluginPreviewStates>("previewState", plugin.previewState);
    writer.writeCollectionOfObjectValues<PluginSetting>("settings", plugin.settings, serializePluginSetting);
    writer.writeEnumValue<PluginAuthTypes>("supportedAuthTypes", plugin.supportedAuthTypes);
    writer.writeAdditionalData(plugin.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PluginAuth The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePluginAuth(writer: SerializationWriter, pluginAuth: Partial<PluginAuth> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!pluginAuth || isSerializingDerivedType) { return; }
    writer.writeEnumValue<PluginAuthTypes>("authType", pluginAuth.authType);
    writer.writeStringValue("@odata.type", pluginAuth.odataType);
    writer.writeAdditionalData(pluginAuth.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PluginCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePluginCollectionResponse(writer: SerializationWriter, pluginCollectionResponse: Partial<PluginCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!pluginCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, pluginCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<Plugin>("value", pluginCollectionResponse.value, serializePlugin);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PluginSetting The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePluginSetting(writer: SerializationWriter, pluginSetting: Partial<PluginSetting> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!pluginSetting || isSerializingDerivedType) { return; }
    writer.writeCollectionOfPrimitiveValues<string>("acceptableValues", pluginSetting.acceptableValues);
    writer.writeStringValue("defaultValue", pluginSetting.defaultValue);
    writer.writeStringValue("description", pluginSetting.description);
    writer.writeEnumValue<PluginSettingDisplayType>("displayType", pluginSetting.displayType);
    writer.writeStringValue("hintText", pluginSetting.hintText);
    writer.writeBooleanValue("isRequired", pluginSetting.isRequired);
    writer.writeStringValue("label", pluginSetting.label);
    writer.writeStringValue("name", pluginSetting.name);
    writer.writeStringValue("@odata.type", pluginSetting.odataType);
    writer.writeEnumValue<PluginSettingType>("settingValue", pluginSetting.settingValue);
    writer.writeStringValue("value", pluginSetting.value);
    writer.writeAdditionalData(pluginSetting.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Prompt The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrompt(writer: SerializationWriter, prompt: Partial<Prompt> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!prompt || isSerializingDerivedType) { return; }
    serializeEntity(writer, prompt, isSerializingDerivedType)
    writer.writeStringValue("content", prompt.content);
    writer.writeDateValue("createdDateTime", prompt.createdDateTime);
    writer.writeCollectionOfObjectValues<Evaluation>("evaluations", prompt.evaluations, serializeEvaluation);
    writer.writeObjectValue<Dictionary>("inputs", prompt.inputs, serializeDictionary);
    writer.writeDateValue("lastModifiedDateTime", prompt.lastModifiedDateTime);
    writer.writeCollectionOfObjectValues<SkillInputDescriptor>("skillInputDescriptors", prompt.skillInputDescriptors, serializeSkillInputDescriptor);
    writer.writeStringValue("skillName", prompt.skillName);
    writer.writeEnumValue<PromptType>("type", prompt.type);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PromptCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePromptCollectionResponse(writer: SerializationWriter, promptCollectionResponse: Partial<PromptCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!promptCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, promptCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<Prompt>("value", promptCollectionResponse.value, serializePrompt);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Session The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSession(writer: SerializationWriter, session: Partial<Session> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!session || isSerializingDerivedType) { return; }
    serializeEntity(writer, session, isSerializingDerivedType)
    writer.writeDateValue("createdDateTime", session.createdDateTime);
    writer.writeStringValue("displayName", session.displayName);
    writer.writeDateValue("lastModifiedDateTime", session.lastModifiedDateTime);
    writer.writeCollectionOfObjectValues<Prompt>("prompts", session.prompts, serializePrompt);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SessionCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSessionCollectionResponse(writer: SerializationWriter, sessionCollectionResponse: Partial<SessionCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sessionCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, sessionCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<Session>("value", sessionCollectionResponse.value, serializeSession);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SkillInputDescriptor The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSkillInputDescriptor(writer: SerializationWriter, skillInputDescriptor: Partial<SkillInputDescriptor> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!skillInputDescriptor || isSerializingDerivedType) { return; }
    serializeSkillVariableDescriptor(writer, skillInputDescriptor, isSerializingDerivedType)
    writer.writeStringValue("defaultValue", skillInputDescriptor.defaultValue);
    writer.writeBooleanValue("isRequired", skillInputDescriptor.isRequired);
    writer.writeStringValue("placeholderValue", skillInputDescriptor.placeholderValue);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SkillTypeDescriptor The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSkillTypeDescriptor(writer: SerializationWriter, skillTypeDescriptor: Partial<SkillTypeDescriptor> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!skillTypeDescriptor || isSerializingDerivedType) { return; }
    writer.writeStringValue("name", skillTypeDescriptor.name);
    writer.writeStringValue("@odata.type", skillTypeDescriptor.odataType);
    writer.writeAdditionalData(skillTypeDescriptor.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SkillVariableDescriptor The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSkillVariableDescriptor(writer: SerializationWriter, skillVariableDescriptor: Partial<SkillVariableDescriptor> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!skillVariableDescriptor || isSerializingDerivedType) { return; }
    writer.writeStringValue("description", skillVariableDescriptor.description);
    writer.writeStringValue("name", skillVariableDescriptor.name);
    writer.writeStringValue("@odata.type", skillVariableDescriptor.odataType);
    writer.writeObjectValue<SkillTypeDescriptor>("type", skillVariableDescriptor.type, serializeSkillTypeDescriptor);
    writer.writeAdditionalData(skillVariableDescriptor.additionalData);
    switch (skillVariableDescriptor.odataType) {
        case "#microsoft.graph.security.securityCopilot.skillInputDescriptor":
            serializeSkillInputDescriptor(writer, skillVariableDescriptor, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Workspace The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWorkspace(writer: SerializationWriter, workspace: Partial<Workspace> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!workspace || isSerializingDerivedType) { return; }
    serializeEntity(writer, workspace, isSerializingDerivedType)
    writer.writeStringValue("displayName", workspace.displayName);
    writer.writeCollectionOfObjectValues<Plugin>("plugins", workspace.plugins, serializePlugin);
    writer.writeCollectionOfObjectValues<Session>("sessions", workspace.sessions, serializeSession);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WorkspaceCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWorkspaceCollectionResponse(writer: SerializationWriter, workspaceCollectionResponse: Partial<WorkspaceCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!workspaceCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, workspaceCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<Workspace>("value", workspaceCollectionResponse.value, serializeWorkspace);
}
export interface Session extends Entity, Parsable {
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The lastModifiedDateTime property
     */
    lastModifiedDateTime?: Date | null;
    /**
     * The prompts property
     */
    prompts?: Prompt[] | null;
}
export interface SessionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Session[] | null;
}
export interface SkillInputDescriptor extends Parsable, SkillVariableDescriptor {
    /**
     * The defaultValue property
     */
    defaultValue?: string | null;
    /**
     * The isRequired property
     */
    isRequired?: boolean | null;
    /**
     * The placeholderValue property
     */
    placeholderValue?: string | null;
}
export type SkillPreviewState = (typeof SkillPreviewStateObject)[keyof typeof SkillPreviewStateObject];
export interface SkillTypeDescriptor extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface SkillVariableDescriptor extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The type property
     */
    type?: SkillTypeDescriptor | null;
}
export interface Workspace extends Entity, Parsable {
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The plugins property
     */
    plugins?: Plugin[] | null;
    /**
     * The sessions property
     */
    sessions?: Session[] | null;
}
export interface WorkspaceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Workspace[] | null;
}
export const EvaluationResultTypeObject = {
    Unknown: "unknown",
    Success: "success",
    ErrorEscaped: "error",
    NeedAdditionalClaims: "needAdditionalClaims",
    Rejected: "rejected",
    TimedOut: "timedOut",
    CapacityExceeded: "capacityExceeded",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const EvaluationStateObject = {
    Unknown: "unknown",
    Created: "created",
    Running: "running",
    Completed: "completed",
    Cancelled: "cancelled",
    Pending: "pending",
    Deferred: "deferred",
    WaitingForInput: "waitingForInput",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const PluginAuthTypesObject = {
    None: "none",
    Basic: "basic",
    APIKey: "aPIKey",
    OAuthAuthorizationCodeFlow: "oAuthAuthorizationCodeFlow",
    OAuthClientCredentialsFlow: "oAuthClientCredentialsFlow",
    Aad: "aad",
    ServiceHttp: "serviceHttp",
    AadDelegated: "aadDelegated",
    OAuthPasswordGrantFlow: "oAuthPasswordGrantFlow",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const PluginCatalogScopeObject = {
    None: "none",
    User: "user",
    Workspace: "workspace",
    Tenant: "tenant",
    Global: "global",
    GeoGlobal: "geoGlobal",
    UserWorkspace: "userWorkspace",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const PluginCategoryObject = {
    Hidden: "hidden",
    Microsoft: "microsoft",
    MicrosoftConnectors: "microsoftConnectors",
    Other: "other",
    Web: "web",
    Testing: "testing",
    Plugin: "plugin",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const PluginPreviewStatesObject = {
    Ga: "ga",
    Public: "public",
    Private: "private",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const PluginSettingDisplayTypeObject = {
    None: "none",
    Textbox: "textbox",
    Checkbox: "checkbox",
    Dropdown: "dropdown",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const PluginSettingTypeObject = {
    String: "string",
    Bool: "bool",
    Array: "array",
    EnumEscaped: "enum",
    SecretString: "secretString",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const PromptTypeObject = {
    Unknown: "unknown",
    Context: "context",
    Prompt: "prompt",
    Skill: "skill",
    Feedback: "feedback",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const SkillPreviewStateObject = {
    Ga: "ga",
    Public: "public",
    Private: "private",
    UnknownFutureValue: "unknownFutureValue",
} as const;
/* tslint:enable */
/* eslint-enable */
