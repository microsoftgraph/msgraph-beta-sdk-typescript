/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createActionUrlFromDiscriminatorValue, createGenericErrorFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, deserializeIntoEntity, serializeActionUrl, serializeBaseCollectionPaginationCountResponse, serializeEntity, serializeGenericError, type ActionUrl, type BaseCollectionPaginationCountResponse, type Entity, type GenericError } from '../index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AggregatedPolicyCompliance extends Entity, Parsable {
    /**
     * Identifier for the device compliance policy. Optional. Read-only.
     */
    compliancePolicyId?: string | null;
    /**
     * Name of the device compliance policy. Optional. Read-only.
     */
    compliancePolicyName?: string | null;
    /**
     * Platform for the device compliance policy. Possible values are: android, androidForWork, iOS, macOS, windowsPhone81, windows81AndLater, windows10AndLater, androidWorkProfile, androidAOSP, all. Optional. Read-only.
     */
    compliancePolicyPlatform?: string | null;
    /**
     * The type of compliance policy. Optional. Read-only.
     */
    compliancePolicyType?: string | null;
    /**
     * Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.
     */
    lastRefreshedDateTime?: Date | null;
    /**
     * The number of devices that are in a compliant status. Optional. Read-only.
     */
    numberOfCompliantDevices?: number | null;
    /**
     * The number of devices that are in an error status. Optional. Read-only.
     */
    numberOfErrorDevices?: number | null;
    /**
     * The number of device that are in a non-compliant status. Optional. Read-only.
     */
    numberOfNonCompliantDevices?: number | null;
    /**
     * The date and time the device policy was last modified. Optional. Read-only.
     */
    policyModifiedDateTime?: Date | null;
    /**
     * The display name for the managed tenant. Optional. Read-only.
     */
    tenantDisplayName?: string | null;
    /**
     * The Microsoft Entra tenant identifier for the managed tenant. Optional. Read-only.
     */
    tenantId?: string | null;
}
export interface AggregatedPolicyComplianceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AggregatedPolicyCompliance[] | null;
}
export interface AlertData extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface AlertDataReferenceString extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface AlertLogContent extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface AlertRuleDefinitionTemplate extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The defaultSeverity property
     */
    defaultSeverity?: AlertSeverity | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type AlertSeverity = (typeof AlertSeverityObject)[keyof typeof AlertSeverityObject];
export type AlertStatus = (typeof AlertStatusObject)[keyof typeof AlertStatusObject];
export interface AppPerformance extends Entity, Parsable {
    /**
     * The appFriendlyName property
     */
    appFriendlyName?: string | null;
    /**
     * The appName property
     */
    appName?: string | null;
    /**
     * The appPublisher property
     */
    appPublisher?: string | null;
    /**
     * The lastUpdatedDateTime property
     */
    lastUpdatedDateTime?: Date | null;
    /**
     * The meanTimeToFailureInMinutes property
     */
    meanTimeToFailureInMinutes?: number | null;
    /**
     * The tenantDisplayName property
     */
    tenantDisplayName?: string | null;
    /**
     * The tenantId property
     */
    tenantId?: string | null;
    /**
     * The totalActiveDeviceCount property
     */
    totalActiveDeviceCount?: number | null;
    /**
     * The totalAppCrashCount property
     */
    totalAppCrashCount?: number | null;
    /**
     * The totalAppFreezeCount property
     */
    totalAppFreezeCount?: number | null;
}
export interface AppPerformanceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AppPerformance[] | null;
}
export interface AuditEvent extends Entity, Parsable {
    /**
     * A string that uniquely represents the operation that occurred. Required. Read-only.
     */
    activity?: string | null;
    /**
     * The time when the activity occurred. Required. Read-only.
     */
    activityDateTime?: Date | null;
    /**
     * The identifier of the activity request that made the audit event. Required. Read-only.
     */
    activityId?: string | null;
    /**
     * A category that represents a logical grouping of activities. Required. Read-only.
     */
    category?: string | null;
    /**
     * The HTTP verb that was used when making the API request. Required. Read-only.
     */
    httpVerb?: string | null;
    /**
     * The identifier of the app that was used to make the request. Required. Read-only.
     */
    initiatedByAppId?: string | null;
    /**
     * The UPN of the user who initiated the activity. Required. Read-only.
     */
    initiatedByUpn?: string | null;
    /**
     * The identifier of the user who initiated the activity. Required. Read-only.
     */
    initiatedByUserId?: string | null;
    /**
     * The IP address of where the activity was initiated. This may be an IPv4 or IPv6 address. Required. Read-only.
     */
    ipAddress?: string | null;
    /**
     * The raw HTTP request body. Some sensitive information may be removed.
     */
    requestBody?: string | null;
    /**
     * The raw HTTP request URL. Required. Read-only.
     */
    requestUrl?: string | null;
    /**
     * The collection of Microsoft Entra tenant identifiers for the managed tenants that were affected by a change, and is formatted as a list of comma-separated values. Required. Read-only.
     */
    tenantIds?: string | null;
    /**
     * The collection of tenant names that were affected by a change, and is formatted as a list of comma-separated values. Required. Read-only.
     */
    tenantNames?: string | null;
}
export interface AuditEventCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AuditEvent[] | null;
}
export interface CloudPcConnection extends Entity, Parsable {
    /**
     * The display name of the cloud PC connection. Required. Read-only.
     */
    displayName?: string | null;
    /**
     * The health status of the cloud PC connection. Possible values are: pending, running, passed, failed, unknownFutureValue.  Required. Read-only.
     */
    healthCheckStatus?: string | null;
    /**
     * Date and time the entity was last updated in the multi-tenant management platform. Required. Read-only.
     */
    lastRefreshedDateTime?: Date | null;
    /**
     * The display name for the managed tenant. Required. Read-only.
     */
    tenantDisplayName?: string | null;
    /**
     * The Microsoft Entra tenant identifier for the managed tenant. Required. Read-only.
     */
    tenantId?: string | null;
}
export interface CloudPcConnectionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: CloudPcConnection[] | null;
}
export interface CloudPcDevice extends Entity, Parsable {
    /**
     * The status of the cloud PC. Possible values are: notProvisioned, provisioning, provisioned, upgrading, inGracePeriod, deprovisioning, failed. Required. Read-only.
     */
    cloudPcStatus?: string | null;
    /**
     * The specification of the cloud PC device. Required. Read-only.
     */
    deviceSpecification?: string | null;
    /**
     * The display name  of the cloud PC device. Required. Read-only.
     */
    displayName?: string | null;
    /**
     * Date and time the entity was last updated in the multi-tenant management platform. Required. Read-only.
     */
    lastRefreshedDateTime?: Date | null;
    /**
     * The managed device identifier of the cloud PC device. Optional. Read-only.
     */
    managedDeviceId?: string | null;
    /**
     * The managed device display name of the cloud PC device. Optional. Read-only.
     */
    managedDeviceName?: string | null;
    /**
     * The provisioning policy identifier for the cloud PC device. Required. Read-only.
     */
    provisioningPolicyId?: string | null;
    /**
     * The service plan name of the cloud PC device. Required. Read-only.
     */
    servicePlanName?: string | null;
    /**
     * The service plan type of the cloud PC device. Required. Read-only.
     */
    servicePlanType?: string | null;
    /**
     * The display name for the managed tenant. Required. Read-only.
     */
    tenantDisplayName?: string | null;
    /**
     * The Microsoft Entra tenant identifier for the managed tenant. Required. Read-only.
     */
    tenantId?: string | null;
    /**
     * The user principal name (UPN) of the user assigned to the cloud PC device. Required. Read-only.
     */
    userPrincipalName?: string | null;
}
export interface CloudPcDeviceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: CloudPcDevice[] | null;
}
export interface CloudPcOverview extends Entity, Parsable {
    /**
     * The total number of cloud PC devices that have the Frontline SKU. Optional. Read-only.
     */
    frontlineLicensesCount?: number | null;
    /**
     * Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.
     */
    lastRefreshedDateTime?: Date | null;
    /**
     * The number of cloud PC connections that have a status of failed. Optional. Read-only.
     */
    numberOfCloudPcConnectionStatusFailed?: number | null;
    /**
     * The number of cloud PC connections that have a status of passed. Optional. Read-only.
     */
    numberOfCloudPcConnectionStatusPassed?: number | null;
    /**
     * The number of cloud PC connections that have a status of pending. Optional. Read-only.
     */
    numberOfCloudPcConnectionStatusPending?: number | null;
    /**
     * The number of cloud PC connections that have a status of running. Optional. Read-only.
     */
    numberOfCloudPcConnectionStatusRunning?: number | null;
    /**
     * The number of cloud PC connections that have a status of unknownFutureValue. Optional. Read-only.
     */
    numberOfCloudPcConnectionStatusUnkownFutureValue?: number | null;
    /**
     * The number of cloud PCs that have a status of deprovisioning. Optional. Read-only.
     */
    numberOfCloudPcStatusDeprovisioning?: number | null;
    /**
     * The number of cloud PCs that have a status of failed. Optional. Read-only.
     */
    numberOfCloudPcStatusFailed?: number | null;
    /**
     * The number of cloud PCs that have a status of inGracePeriod. Optional. Read-only.
     */
    numberOfCloudPcStatusInGracePeriod?: number | null;
    /**
     * The number of cloud PCs that have a status of notProvisioned. Optional. Read-only.
     */
    numberOfCloudPcStatusNotProvisioned?: number | null;
    /**
     * The number of cloud PCs that have a status of provisioned. Optional. Read-only.
     */
    numberOfCloudPcStatusProvisioned?: number | null;
    /**
     * The number of cloud PCs that have a status of provisioning. Optional. Read-only.
     */
    numberOfCloudPcStatusProvisioning?: number | null;
    /**
     * The number of cloud PCs that have a status of unknown. Optional. Read-only.
     */
    numberOfCloudPcStatusUnknown?: number | null;
    /**
     * The number of cloud PCs that have a status of upgrading. Optional. Read-only.
     */
    numberOfCloudPcStatusUpgrading?: number | null;
    /**
     * The display name for the managed tenant. Optional. Read-only.
     */
    tenantDisplayName?: string | null;
    /**
     * The tenantId property
     */
    tenantId?: string | null;
    /**
     * The total number of cloud PC devices that have the Business SKU. Optional. Read-only.
     */
    totalBusinessLicenses?: number | null;
    /**
     * The total number of cloud PC connection statuses for the given managed tenant. Optional. Read-only.
     */
    totalCloudPcConnectionStatus?: number | null;
    /**
     * The total number of cloud PC statues for the given managed tenant. Optional. Read-only.
     */
    totalCloudPcStatus?: number | null;
    /**
     * The total number of cloud PC devices that have the Enterprise SKU. Optional. Read-only.
     */
    totalEnterpriseLicenses?: number | null;
}
export interface CloudPcOverviewCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: CloudPcOverview[] | null;
}
export interface ConditionalAccessPolicyCoverage extends Entity, Parsable {
    /**
     * The state for the conditional access policy. Possible values are: enabled, disabled, enabledForReportingButNotEnforced. Required. Read-only.
     */
    conditionalAccessPolicyState?: string | null;
    /**
     * The date and time the conditional access policy was last modified. Required. Read-only.
     */
    latestPolicyModifiedDateTime?: Date | null;
    /**
     * A flag indicating whether the conditional access policy requires device compliance. Required. Read-only.
     */
    requiresDeviceCompliance?: boolean | null;
    /**
     * The display name for the managed tenant. Required. Read-only.
     */
    tenantDisplayName?: string | null;
}
export interface ConditionalAccessPolicyCoverageCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ConditionalAccessPolicyCoverage[] | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AggregatedPolicyComplianceCollectionResponse}
 */
// @ts-ignore
export function createAggregatedPolicyComplianceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAggregatedPolicyComplianceCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AggregatedPolicyCompliance}
 */
// @ts-ignore
export function createAggregatedPolicyComplianceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAggregatedPolicyCompliance;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AlertData}
 */
// @ts-ignore
export function createAlertDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAlertData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AlertDataReferenceString}
 */
// @ts-ignore
export function createAlertDataReferenceStringFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAlertDataReferenceString;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AlertLogContent}
 */
// @ts-ignore
export function createAlertLogContentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAlertLogContent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AlertRuleDefinitionTemplate}
 */
// @ts-ignore
export function createAlertRuleDefinitionTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAlertRuleDefinitionTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AppPerformanceCollectionResponse}
 */
// @ts-ignore
export function createAppPerformanceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAppPerformanceCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AppPerformance}
 */
// @ts-ignore
export function createAppPerformanceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAppPerformance;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditEventCollectionResponse}
 */
// @ts-ignore
export function createAuditEventCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditEventCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditEvent}
 */
// @ts-ignore
export function createAuditEventFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditEvent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CloudPcConnectionCollectionResponse}
 */
// @ts-ignore
export function createCloudPcConnectionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCloudPcConnectionCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CloudPcConnection}
 */
// @ts-ignore
export function createCloudPcConnectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCloudPcConnection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CloudPcDeviceCollectionResponse}
 */
// @ts-ignore
export function createCloudPcDeviceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCloudPcDeviceCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CloudPcDevice}
 */
// @ts-ignore
export function createCloudPcDeviceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCloudPcDevice;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CloudPcOverviewCollectionResponse}
 */
// @ts-ignore
export function createCloudPcOverviewCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCloudPcOverviewCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CloudPcOverview}
 */
// @ts-ignore
export function createCloudPcOverviewFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCloudPcOverview;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ConditionalAccessPolicyCoverageCollectionResponse}
 */
// @ts-ignore
export function createConditionalAccessPolicyCoverageCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoConditionalAccessPolicyCoverageCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ConditionalAccessPolicyCoverage}
 */
// @ts-ignore
export function createConditionalAccessPolicyCoverageFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoConditionalAccessPolicyCoverage;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CredentialUserRegistrationsSummaryCollectionResponse}
 */
// @ts-ignore
export function createCredentialUserRegistrationsSummaryCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCredentialUserRegistrationsSummaryCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CredentialUserRegistrationsSummary}
 */
// @ts-ignore
export function createCredentialUserRegistrationsSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCredentialUserRegistrationsSummary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeviceAppPerformanceCollectionResponse}
 */
// @ts-ignore
export function createDeviceAppPerformanceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeviceAppPerformanceCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeviceAppPerformance}
 */
// @ts-ignore
export function createDeviceAppPerformanceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeviceAppPerformance;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeviceCompliancePolicySettingStateSummaryCollectionResponse}
 */
// @ts-ignore
export function createDeviceCompliancePolicySettingStateSummaryCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeviceCompliancePolicySettingStateSummaryCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeviceCompliancePolicySettingStateSummary}
 */
// @ts-ignore
export function createDeviceCompliancePolicySettingStateSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeviceCompliancePolicySettingStateSummary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeviceHealthStatusCollectionResponse}
 */
// @ts-ignore
export function createDeviceHealthStatusCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeviceHealthStatusCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeviceHealthStatus}
 */
// @ts-ignore
export function createDeviceHealthStatusFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeviceHealthStatus;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Email}
 */
// @ts-ignore
export function createEmailFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEmail;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GraphAPIErrorDetails}
 */
// @ts-ignore
export function createGraphAPIErrorDetailsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGraphAPIErrorDetails;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedDeviceComplianceCollectionResponse}
 */
// @ts-ignore
export function createManagedDeviceComplianceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedDeviceComplianceCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedDeviceCompliance}
 */
// @ts-ignore
export function createManagedDeviceComplianceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedDeviceCompliance;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedDeviceComplianceTrendCollectionResponse}
 */
// @ts-ignore
export function createManagedDeviceComplianceTrendCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedDeviceComplianceTrendCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedDeviceComplianceTrend}
 */
// @ts-ignore
export function createManagedDeviceComplianceTrendFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedDeviceComplianceTrend;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenantAlertCollectionResponse}
 */
// @ts-ignore
export function createManagedTenantAlertCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenantAlertCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenantAlert}
 */
// @ts-ignore
export function createManagedTenantAlertFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenantAlert;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenantAlertLogCollectionResponse}
 */
// @ts-ignore
export function createManagedTenantAlertLogCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenantAlertLogCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenantAlertLog}
 */
// @ts-ignore
export function createManagedTenantAlertLogFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenantAlertLog;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenantAlertRuleCollectionResponse}
 */
// @ts-ignore
export function createManagedTenantAlertRuleCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenantAlertRuleCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenantAlertRuleDefinitionCollectionResponse}
 */
// @ts-ignore
export function createManagedTenantAlertRuleDefinitionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenantAlertRuleDefinitionCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenantAlertRuleDefinition}
 */
// @ts-ignore
export function createManagedTenantAlertRuleDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenantAlertRuleDefinition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenantAlertRule}
 */
// @ts-ignore
export function createManagedTenantAlertRuleFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenantAlertRule;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenantApiNotificationCollectionResponse}
 */
// @ts-ignore
export function createManagedTenantApiNotificationCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenantApiNotificationCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenantApiNotification}
 */
// @ts-ignore
export function createManagedTenantApiNotificationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenantApiNotification;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenantEmailNotificationCollectionResponse}
 */
// @ts-ignore
export function createManagedTenantEmailNotificationCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenantEmailNotificationCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenantEmailNotification}
 */
// @ts-ignore
export function createManagedTenantEmailNotificationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenantEmailNotification;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenant}
 */
// @ts-ignore
export function createManagedTenantFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenant;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenantTicketingEndpointCollectionResponse}
 */
// @ts-ignore
export function createManagedTenantTicketingEndpointCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenantTicketingEndpointCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenantTicketingEndpoint}
 */
// @ts-ignore
export function createManagedTenantTicketingEndpointFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenantTicketingEndpoint;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementActionCollectionResponse}
 */
// @ts-ignore
export function createManagementActionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementActionCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementActionDeploymentStatus}
 */
// @ts-ignore
export function createManagementActionDeploymentStatusFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementActionDeploymentStatus;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementAction}
 */
// @ts-ignore
export function createManagementActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementActionInfo}
 */
// @ts-ignore
export function createManagementActionInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementActionInfo;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementActionTenantDeploymentStatusCollectionResponse}
 */
// @ts-ignore
export function createManagementActionTenantDeploymentStatusCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementActionTenantDeploymentStatusCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementActionTenantDeploymentStatus}
 */
// @ts-ignore
export function createManagementActionTenantDeploymentStatusFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementActionTenantDeploymentStatus;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementIntentCollectionResponse}
 */
// @ts-ignore
export function createManagementIntentCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementIntentCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementIntent}
 */
// @ts-ignore
export function createManagementIntentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementIntent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementIntentInfo}
 */
// @ts-ignore
export function createManagementIntentInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementIntentInfo;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementTemplateCollectionCollectionResponse}
 */
// @ts-ignore
export function createManagementTemplateCollectionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementTemplateCollectionCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementTemplateCollection}
 */
// @ts-ignore
export function createManagementTemplateCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementTemplateCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementTemplateCollectionResponse}
 */
// @ts-ignore
export function createManagementTemplateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementTemplateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementTemplateCollectionTenantSummaryCollectionResponse}
 */
// @ts-ignore
export function createManagementTemplateCollectionTenantSummaryCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementTemplateCollectionTenantSummaryCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementTemplateCollectionTenantSummary}
 */
// @ts-ignore
export function createManagementTemplateCollectionTenantSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementTemplateCollectionTenantSummary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementTemplateDetailedInfo}
 */
// @ts-ignore
export function createManagementTemplateDetailedInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementTemplateDetailedInfo;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementTemplate}
 */
// @ts-ignore
export function createManagementTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementTemplateStepCollectionResponse}
 */
// @ts-ignore
export function createManagementTemplateStepCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementTemplateStepCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementTemplateStepDeploymentCollectionResponse}
 */
// @ts-ignore
export function createManagementTemplateStepDeploymentCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementTemplateStepDeploymentCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementTemplateStepDeployment}
 */
// @ts-ignore
export function createManagementTemplateStepDeploymentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementTemplateStepDeployment;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementTemplateStep}
 */
// @ts-ignore
export function createManagementTemplateStepFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementTemplateStep;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementTemplateStepTenantSummaryCollectionResponse}
 */
// @ts-ignore
export function createManagementTemplateStepTenantSummaryCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementTemplateStepTenantSummaryCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementTemplateStepTenantSummary}
 */
// @ts-ignore
export function createManagementTemplateStepTenantSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementTemplateStepTenantSummary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementTemplateStepVersionCollectionResponse}
 */
// @ts-ignore
export function createManagementTemplateStepVersionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementTemplateStepVersionCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagementTemplateStepVersion}
 */
// @ts-ignore
export function createManagementTemplateStepVersionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagementTemplateStepVersion;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MyRoleCollectionResponse}
 */
// @ts-ignore
export function createMyRoleCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMyRoleCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MyRole}
 */
// @ts-ignore
export function createMyRoleFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMyRole;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {NotificationTarget}
 */
// @ts-ignore
export function createNotificationTargetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoNotificationTarget;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RoleAssignment}
 */
// @ts-ignore
export function createRoleAssignmentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRoleAssignment;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RoleDefinition}
 */
// @ts-ignore
export function createRoleDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRoleDefinition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Setting}
 */
// @ts-ignore
export function createSettingFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSetting;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TemplateParameter}
 */
// @ts-ignore
export function createTemplateParameterFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTemplateParameter;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantCollectionResponse}
 */
// @ts-ignore
export function createTenantCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantContactInformation}
 */
// @ts-ignore
export function createTenantContactInformationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantContactInformation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantContract}
 */
// @ts-ignore
export function createTenantContractFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantContract;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantCustomizedInformationCollectionResponse}
 */
// @ts-ignore
export function createTenantCustomizedInformationCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantCustomizedInformationCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantCustomizedInformation}
 */
// @ts-ignore
export function createTenantCustomizedInformationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantCustomizedInformation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantDetailedInformationCollectionResponse}
 */
// @ts-ignore
export function createTenantDetailedInformationCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantDetailedInformationCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantDetailedInformation}
 */
// @ts-ignore
export function createTenantDetailedInformationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantDetailedInformation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Tenant}
 */
// @ts-ignore
export function createTenantFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenant;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantGroupCollectionResponse}
 */
// @ts-ignore
export function createTenantGroupCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantGroupCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantGroup}
 */
// @ts-ignore
export function createTenantGroupFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantGroup;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantInfo}
 */
// @ts-ignore
export function createTenantInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantInfo;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantStatusInformation}
 */
// @ts-ignore
export function createTenantStatusInformationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantStatusInformation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantTagCollectionResponse}
 */
// @ts-ignore
export function createTenantTagCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantTagCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantTag}
 */
// @ts-ignore
export function createTenantTagFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantTag;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WindowsDeviceMalwareStateCollectionResponse}
 */
// @ts-ignore
export function createWindowsDeviceMalwareStateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWindowsDeviceMalwareStateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WindowsDeviceMalwareState}
 */
// @ts-ignore
export function createWindowsDeviceMalwareStateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWindowsDeviceMalwareState;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WindowsProtectionStateCollectionResponse}
 */
// @ts-ignore
export function createWindowsProtectionStateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWindowsProtectionStateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WindowsProtectionState}
 */
// @ts-ignore
export function createWindowsProtectionStateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWindowsProtectionState;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WorkloadActionDeploymentStatus}
 */
// @ts-ignore
export function createWorkloadActionDeploymentStatusFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWorkloadActionDeploymentStatus;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WorkloadAction}
 */
// @ts-ignore
export function createWorkloadActionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWorkloadAction;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WorkloadStatus}
 */
// @ts-ignore
export function createWorkloadStatusFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWorkloadStatus;
}
export interface CredentialUserRegistrationsSummary extends Entity, Parsable {
    /**
     * Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.
     */
    lastRefreshedDateTime?: Date | null;
    /**
     * The number of users that are capable of performing multi-factor authentication or self service password reset. Optional. Read-only.
     */
    mfaAndSsprCapableUserCount?: number | null;
    /**
     * The state of a conditional access policy that enforces multi-factor authentication. Optional. Read-only.
     */
    mfaConditionalAccessPolicyState?: string | null;
    /**
     * The number of users in the multi-factor authentication exclusion security group (Microsoft 365 Lighthouse - MFA exclusions). Optional. Read-only.
     */
    mfaExcludedUserCount?: number | null;
    /**
     * The number of users registered for multi-factor authentication. Optional. Read-only.
     */
    mfaRegisteredUserCount?: number | null;
    /**
     * A flag indicating whether Identity Security Defaults is enabled. Optional. Read-only.
     */
    securityDefaultsEnabled?: boolean | null;
    /**
     * The number of users enabled for self service password reset. Optional. Read-only.
     */
    ssprEnabledUserCount?: number | null;
    /**
     * The number of users registered for self service password reset. Optional. Read-only.
     */
    ssprRegisteredUserCount?: number | null;
    /**
     * The display name for the managed tenant. Required. Read-only.
     */
    tenantDisplayName?: string | null;
    /**
     * The Microsoft Entra tenant identifier for the managed tenant. Required. Read-only.
     */
    tenantId?: string | null;
    /**
     * The license type associated with the tenant; for example, AADFree, AADPremium1, AADPremium2.
     */
    tenantLicenseType?: string | null;
    /**
     * The total number of users in the given managed tenant. Optional. Read-only.
     */
    totalUserCount?: number | null;
}
export interface CredentialUserRegistrationsSummaryCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: CredentialUserRegistrationsSummary[] | null;
}
export type DelegatedPrivilegeStatus = (typeof DelegatedPrivilegeStatusObject)[keyof typeof DelegatedPrivilegeStatusObject];
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAggregatedPolicyCompliance(aggregatedPolicyCompliance: Partial<AggregatedPolicyCompliance> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(aggregatedPolicyCompliance),
        "compliancePolicyId": n => { aggregatedPolicyCompliance.compliancePolicyId = n.getStringValue(); },
        "compliancePolicyName": n => { aggregatedPolicyCompliance.compliancePolicyName = n.getStringValue(); },
        "compliancePolicyPlatform": n => { aggregatedPolicyCompliance.compliancePolicyPlatform = n.getStringValue(); },
        "compliancePolicyType": n => { aggregatedPolicyCompliance.compliancePolicyType = n.getStringValue(); },
        "lastRefreshedDateTime": n => { aggregatedPolicyCompliance.lastRefreshedDateTime = n.getDateValue(); },
        "numberOfCompliantDevices": n => { aggregatedPolicyCompliance.numberOfCompliantDevices = n.getNumberValue(); },
        "numberOfErrorDevices": n => { aggregatedPolicyCompliance.numberOfErrorDevices = n.getNumberValue(); },
        "numberOfNonCompliantDevices": n => { aggregatedPolicyCompliance.numberOfNonCompliantDevices = n.getNumberValue(); },
        "policyModifiedDateTime": n => { aggregatedPolicyCompliance.policyModifiedDateTime = n.getDateValue(); },
        "tenantDisplayName": n => { aggregatedPolicyCompliance.tenantDisplayName = n.getStringValue(); },
        "tenantId": n => { aggregatedPolicyCompliance.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAggregatedPolicyComplianceCollectionResponse(aggregatedPolicyComplianceCollectionResponse: Partial<AggregatedPolicyComplianceCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(aggregatedPolicyComplianceCollectionResponse),
        "value": n => { aggregatedPolicyComplianceCollectionResponse.value = n.getCollectionOfObjectValues<AggregatedPolicyCompliance>(createAggregatedPolicyComplianceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlertData(alertData: Partial<AlertData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { alertData.backingStoreEnabled = true; },
        "displayName": n => { alertData.displayName = n.getStringValue(); },
        "@odata.type": n => { alertData.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlertDataReferenceString(alertDataReferenceString: Partial<AlertDataReferenceString> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { alertDataReferenceString.backingStoreEnabled = true; },
        "displayName": n => { alertDataReferenceString.displayName = n.getStringValue(); },
        "@odata.type": n => { alertDataReferenceString.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlertLogContent(alertLogContent: Partial<AlertLogContent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { alertLogContent.backingStoreEnabled = true; },
        "displayName": n => { alertLogContent.displayName = n.getStringValue(); },
        "@odata.type": n => { alertLogContent.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlertRuleDefinitionTemplate(alertRuleDefinitionTemplate: Partial<AlertRuleDefinitionTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { alertRuleDefinitionTemplate.backingStoreEnabled = true; },
        "defaultSeverity": n => { alertRuleDefinitionTemplate.defaultSeverity = n.getEnumValue<AlertSeverity>(AlertSeverityObject); },
        "@odata.type": n => { alertRuleDefinitionTemplate.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAppPerformance(appPerformance: Partial<AppPerformance> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(appPerformance),
        "appFriendlyName": n => { appPerformance.appFriendlyName = n.getStringValue(); },
        "appName": n => { appPerformance.appName = n.getStringValue(); },
        "appPublisher": n => { appPerformance.appPublisher = n.getStringValue(); },
        "lastUpdatedDateTime": n => { appPerformance.lastUpdatedDateTime = n.getDateValue(); },
        "meanTimeToFailureInMinutes": n => { appPerformance.meanTimeToFailureInMinutes = n.getNumberValue(); },
        "tenantDisplayName": n => { appPerformance.tenantDisplayName = n.getStringValue(); },
        "tenantId": n => { appPerformance.tenantId = n.getStringValue(); },
        "totalActiveDeviceCount": n => { appPerformance.totalActiveDeviceCount = n.getNumberValue(); },
        "totalAppCrashCount": n => { appPerformance.totalAppCrashCount = n.getNumberValue(); },
        "totalAppFreezeCount": n => { appPerformance.totalAppFreezeCount = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAppPerformanceCollectionResponse(appPerformanceCollectionResponse: Partial<AppPerformanceCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(appPerformanceCollectionResponse),
        "value": n => { appPerformanceCollectionResponse.value = n.getCollectionOfObjectValues<AppPerformance>(createAppPerformanceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditEvent(auditEvent: Partial<AuditEvent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(auditEvent),
        "activity": n => { auditEvent.activity = n.getStringValue(); },
        "activityDateTime": n => { auditEvent.activityDateTime = n.getDateValue(); },
        "activityId": n => { auditEvent.activityId = n.getStringValue(); },
        "category": n => { auditEvent.category = n.getStringValue(); },
        "httpVerb": n => { auditEvent.httpVerb = n.getStringValue(); },
        "initiatedByAppId": n => { auditEvent.initiatedByAppId = n.getStringValue(); },
        "initiatedByUpn": n => { auditEvent.initiatedByUpn = n.getStringValue(); },
        "initiatedByUserId": n => { auditEvent.initiatedByUserId = n.getStringValue(); },
        "ipAddress": n => { auditEvent.ipAddress = n.getStringValue(); },
        "requestBody": n => { auditEvent.requestBody = n.getStringValue(); },
        "requestUrl": n => { auditEvent.requestUrl = n.getStringValue(); },
        "tenantIds": n => { auditEvent.tenantIds = n.getStringValue(); },
        "tenantNames": n => { auditEvent.tenantNames = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditEventCollectionResponse(auditEventCollectionResponse: Partial<AuditEventCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(auditEventCollectionResponse),
        "value": n => { auditEventCollectionResponse.value = n.getCollectionOfObjectValues<AuditEvent>(createAuditEventFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCloudPcConnection(cloudPcConnection: Partial<CloudPcConnection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(cloudPcConnection),
        "displayName": n => { cloudPcConnection.displayName = n.getStringValue(); },
        "healthCheckStatus": n => { cloudPcConnection.healthCheckStatus = n.getStringValue(); },
        "lastRefreshedDateTime": n => { cloudPcConnection.lastRefreshedDateTime = n.getDateValue(); },
        "tenantDisplayName": n => { cloudPcConnection.tenantDisplayName = n.getStringValue(); },
        "tenantId": n => { cloudPcConnection.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCloudPcConnectionCollectionResponse(cloudPcConnectionCollectionResponse: Partial<CloudPcConnectionCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(cloudPcConnectionCollectionResponse),
        "value": n => { cloudPcConnectionCollectionResponse.value = n.getCollectionOfObjectValues<CloudPcConnection>(createCloudPcConnectionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCloudPcDevice(cloudPcDevice: Partial<CloudPcDevice> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(cloudPcDevice),
        "cloudPcStatus": n => { cloudPcDevice.cloudPcStatus = n.getStringValue(); },
        "deviceSpecification": n => { cloudPcDevice.deviceSpecification = n.getStringValue(); },
        "displayName": n => { cloudPcDevice.displayName = n.getStringValue(); },
        "lastRefreshedDateTime": n => { cloudPcDevice.lastRefreshedDateTime = n.getDateValue(); },
        "managedDeviceId": n => { cloudPcDevice.managedDeviceId = n.getStringValue(); },
        "managedDeviceName": n => { cloudPcDevice.managedDeviceName = n.getStringValue(); },
        "provisioningPolicyId": n => { cloudPcDevice.provisioningPolicyId = n.getStringValue(); },
        "servicePlanName": n => { cloudPcDevice.servicePlanName = n.getStringValue(); },
        "servicePlanType": n => { cloudPcDevice.servicePlanType = n.getStringValue(); },
        "tenantDisplayName": n => { cloudPcDevice.tenantDisplayName = n.getStringValue(); },
        "tenantId": n => { cloudPcDevice.tenantId = n.getStringValue(); },
        "userPrincipalName": n => { cloudPcDevice.userPrincipalName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCloudPcDeviceCollectionResponse(cloudPcDeviceCollectionResponse: Partial<CloudPcDeviceCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(cloudPcDeviceCollectionResponse),
        "value": n => { cloudPcDeviceCollectionResponse.value = n.getCollectionOfObjectValues<CloudPcDevice>(createCloudPcDeviceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCloudPcOverview(cloudPcOverview: Partial<CloudPcOverview> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(cloudPcOverview),
        "frontlineLicensesCount": n => { cloudPcOverview.frontlineLicensesCount = n.getNumberValue(); },
        "lastRefreshedDateTime": n => { cloudPcOverview.lastRefreshedDateTime = n.getDateValue(); },
        "numberOfCloudPcConnectionStatusFailed": n => { cloudPcOverview.numberOfCloudPcConnectionStatusFailed = n.getNumberValue(); },
        "numberOfCloudPcConnectionStatusPassed": n => { cloudPcOverview.numberOfCloudPcConnectionStatusPassed = n.getNumberValue(); },
        "numberOfCloudPcConnectionStatusPending": n => { cloudPcOverview.numberOfCloudPcConnectionStatusPending = n.getNumberValue(); },
        "numberOfCloudPcConnectionStatusRunning": n => { cloudPcOverview.numberOfCloudPcConnectionStatusRunning = n.getNumberValue(); },
        "numberOfCloudPcConnectionStatusUnkownFutureValue": n => { cloudPcOverview.numberOfCloudPcConnectionStatusUnkownFutureValue = n.getNumberValue(); },
        "numberOfCloudPcStatusDeprovisioning": n => { cloudPcOverview.numberOfCloudPcStatusDeprovisioning = n.getNumberValue(); },
        "numberOfCloudPcStatusFailed": n => { cloudPcOverview.numberOfCloudPcStatusFailed = n.getNumberValue(); },
        "numberOfCloudPcStatusInGracePeriod": n => { cloudPcOverview.numberOfCloudPcStatusInGracePeriod = n.getNumberValue(); },
        "numberOfCloudPcStatusNotProvisioned": n => { cloudPcOverview.numberOfCloudPcStatusNotProvisioned = n.getNumberValue(); },
        "numberOfCloudPcStatusProvisioned": n => { cloudPcOverview.numberOfCloudPcStatusProvisioned = n.getNumberValue(); },
        "numberOfCloudPcStatusProvisioning": n => { cloudPcOverview.numberOfCloudPcStatusProvisioning = n.getNumberValue(); },
        "numberOfCloudPcStatusUnknown": n => { cloudPcOverview.numberOfCloudPcStatusUnknown = n.getNumberValue(); },
        "numberOfCloudPcStatusUpgrading": n => { cloudPcOverview.numberOfCloudPcStatusUpgrading = n.getNumberValue(); },
        "tenantDisplayName": n => { cloudPcOverview.tenantDisplayName = n.getStringValue(); },
        "tenantId": n => { cloudPcOverview.tenantId = n.getStringValue(); },
        "totalBusinessLicenses": n => { cloudPcOverview.totalBusinessLicenses = n.getNumberValue(); },
        "totalCloudPcConnectionStatus": n => { cloudPcOverview.totalCloudPcConnectionStatus = n.getNumberValue(); },
        "totalCloudPcStatus": n => { cloudPcOverview.totalCloudPcStatus = n.getNumberValue(); },
        "totalEnterpriseLicenses": n => { cloudPcOverview.totalEnterpriseLicenses = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCloudPcOverviewCollectionResponse(cloudPcOverviewCollectionResponse: Partial<CloudPcOverviewCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(cloudPcOverviewCollectionResponse),
        "value": n => { cloudPcOverviewCollectionResponse.value = n.getCollectionOfObjectValues<CloudPcOverview>(createCloudPcOverviewFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoConditionalAccessPolicyCoverage(conditionalAccessPolicyCoverage: Partial<ConditionalAccessPolicyCoverage> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(conditionalAccessPolicyCoverage),
        "conditionalAccessPolicyState": n => { conditionalAccessPolicyCoverage.conditionalAccessPolicyState = n.getStringValue(); },
        "latestPolicyModifiedDateTime": n => { conditionalAccessPolicyCoverage.latestPolicyModifiedDateTime = n.getDateValue(); },
        "requiresDeviceCompliance": n => { conditionalAccessPolicyCoverage.requiresDeviceCompliance = n.getBooleanValue(); },
        "tenantDisplayName": n => { conditionalAccessPolicyCoverage.tenantDisplayName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoConditionalAccessPolicyCoverageCollectionResponse(conditionalAccessPolicyCoverageCollectionResponse: Partial<ConditionalAccessPolicyCoverageCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(conditionalAccessPolicyCoverageCollectionResponse),
        "value": n => { conditionalAccessPolicyCoverageCollectionResponse.value = n.getCollectionOfObjectValues<ConditionalAccessPolicyCoverage>(createConditionalAccessPolicyCoverageFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCredentialUserRegistrationsSummary(credentialUserRegistrationsSummary: Partial<CredentialUserRegistrationsSummary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(credentialUserRegistrationsSummary),
        "lastRefreshedDateTime": n => { credentialUserRegistrationsSummary.lastRefreshedDateTime = n.getDateValue(); },
        "mfaAndSsprCapableUserCount": n => { credentialUserRegistrationsSummary.mfaAndSsprCapableUserCount = n.getNumberValue(); },
        "mfaConditionalAccessPolicyState": n => { credentialUserRegistrationsSummary.mfaConditionalAccessPolicyState = n.getStringValue(); },
        "mfaExcludedUserCount": n => { credentialUserRegistrationsSummary.mfaExcludedUserCount = n.getNumberValue(); },
        "mfaRegisteredUserCount": n => { credentialUserRegistrationsSummary.mfaRegisteredUserCount = n.getNumberValue(); },
        "securityDefaultsEnabled": n => { credentialUserRegistrationsSummary.securityDefaultsEnabled = n.getBooleanValue(); },
        "ssprEnabledUserCount": n => { credentialUserRegistrationsSummary.ssprEnabledUserCount = n.getNumberValue(); },
        "ssprRegisteredUserCount": n => { credentialUserRegistrationsSummary.ssprRegisteredUserCount = n.getNumberValue(); },
        "tenantDisplayName": n => { credentialUserRegistrationsSummary.tenantDisplayName = n.getStringValue(); },
        "tenantId": n => { credentialUserRegistrationsSummary.tenantId = n.getStringValue(); },
        "tenantLicenseType": n => { credentialUserRegistrationsSummary.tenantLicenseType = n.getStringValue(); },
        "totalUserCount": n => { credentialUserRegistrationsSummary.totalUserCount = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCredentialUserRegistrationsSummaryCollectionResponse(credentialUserRegistrationsSummaryCollectionResponse: Partial<CredentialUserRegistrationsSummaryCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(credentialUserRegistrationsSummaryCollectionResponse),
        "value": n => { credentialUserRegistrationsSummaryCollectionResponse.value = n.getCollectionOfObjectValues<CredentialUserRegistrationsSummary>(createCredentialUserRegistrationsSummaryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeviceAppPerformance(deviceAppPerformance: Partial<DeviceAppPerformance> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(deviceAppPerformance),
        "appFriendlyName": n => { deviceAppPerformance.appFriendlyName = n.getStringValue(); },
        "appName": n => { deviceAppPerformance.appName = n.getStringValue(); },
        "appPublisher": n => { deviceAppPerformance.appPublisher = n.getStringValue(); },
        "appVersion": n => { deviceAppPerformance.appVersion = n.getStringValue(); },
        "deviceId": n => { deviceAppPerformance.deviceId = n.getStringValue(); },
        "deviceManufacturer": n => { deviceAppPerformance.deviceManufacturer = n.getStringValue(); },
        "deviceModel": n => { deviceAppPerformance.deviceModel = n.getStringValue(); },
        "deviceName": n => { deviceAppPerformance.deviceName = n.getStringValue(); },
        "healthStatus": n => { deviceAppPerformance.healthStatus = n.getStringValue(); },
        "isLatestUsedVersion": n => { deviceAppPerformance.isLatestUsedVersion = n.getNumberValue(); },
        "isMostUsedVersion": n => { deviceAppPerformance.isMostUsedVersion = n.getNumberValue(); },
        "lastUpdatedDateTime": n => { deviceAppPerformance.lastUpdatedDateTime = n.getDateValue(); },
        "tenantDisplayName": n => { deviceAppPerformance.tenantDisplayName = n.getStringValue(); },
        "tenantId": n => { deviceAppPerformance.tenantId = n.getStringValue(); },
        "totalAppCrashCount": n => { deviceAppPerformance.totalAppCrashCount = n.getNumberValue(); },
        "totalAppFreezeCount": n => { deviceAppPerformance.totalAppFreezeCount = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeviceAppPerformanceCollectionResponse(deviceAppPerformanceCollectionResponse: Partial<DeviceAppPerformanceCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(deviceAppPerformanceCollectionResponse),
        "value": n => { deviceAppPerformanceCollectionResponse.value = n.getCollectionOfObjectValues<DeviceAppPerformance>(createDeviceAppPerformanceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeviceCompliancePolicySettingStateSummary(deviceCompliancePolicySettingStateSummary: Partial<DeviceCompliancePolicySettingStateSummary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(deviceCompliancePolicySettingStateSummary),
        "conflictDeviceCount": n => { deviceCompliancePolicySettingStateSummary.conflictDeviceCount = n.getNumberValue(); },
        "errorDeviceCount": n => { deviceCompliancePolicySettingStateSummary.errorDeviceCount = n.getNumberValue(); },
        "failedDeviceCount": n => { deviceCompliancePolicySettingStateSummary.failedDeviceCount = n.getNumberValue(); },
        "intuneAccountId": n => { deviceCompliancePolicySettingStateSummary.intuneAccountId = n.getStringValue(); },
        "intuneSettingId": n => { deviceCompliancePolicySettingStateSummary.intuneSettingId = n.getStringValue(); },
        "lastRefreshedDateTime": n => { deviceCompliancePolicySettingStateSummary.lastRefreshedDateTime = n.getDateValue(); },
        "notApplicableDeviceCount": n => { deviceCompliancePolicySettingStateSummary.notApplicableDeviceCount = n.getNumberValue(); },
        "pendingDeviceCount": n => { deviceCompliancePolicySettingStateSummary.pendingDeviceCount = n.getNumberValue(); },
        "policyType": n => { deviceCompliancePolicySettingStateSummary.policyType = n.getStringValue(); },
        "settingName": n => { deviceCompliancePolicySettingStateSummary.settingName = n.getStringValue(); },
        "succeededDeviceCount": n => { deviceCompliancePolicySettingStateSummary.succeededDeviceCount = n.getNumberValue(); },
        "tenantDisplayName": n => { deviceCompliancePolicySettingStateSummary.tenantDisplayName = n.getStringValue(); },
        "tenantId": n => { deviceCompliancePolicySettingStateSummary.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeviceCompliancePolicySettingStateSummaryCollectionResponse(deviceCompliancePolicySettingStateSummaryCollectionResponse: Partial<DeviceCompliancePolicySettingStateSummaryCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(deviceCompliancePolicySettingStateSummaryCollectionResponse),
        "value": n => { deviceCompliancePolicySettingStateSummaryCollectionResponse.value = n.getCollectionOfObjectValues<DeviceCompliancePolicySettingStateSummary>(createDeviceCompliancePolicySettingStateSummaryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeviceHealthStatus(deviceHealthStatus: Partial<DeviceHealthStatus> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(deviceHealthStatus),
        "blueScreenCount": n => { deviceHealthStatus.blueScreenCount = n.getNumberValue(); },
        "bootTotalDurationInSeconds": n => { deviceHealthStatus.bootTotalDurationInSeconds = n.getNumberValue(); },
        "deviceId": n => { deviceHealthStatus.deviceId = n.getStringValue(); },
        "deviceMake": n => { deviceHealthStatus.deviceMake = n.getStringValue(); },
        "deviceModel": n => { deviceHealthStatus.deviceModel = n.getStringValue(); },
        "deviceName": n => { deviceHealthStatus.deviceName = n.getStringValue(); },
        "healthStatus": n => { deviceHealthStatus.healthStatus = n.getStringValue(); },
        "lastUpdatedDateTime": n => { deviceHealthStatus.lastUpdatedDateTime = n.getDateValue(); },
        "osVersion": n => { deviceHealthStatus.osVersion = n.getStringValue(); },
        "primaryDiskType": n => { deviceHealthStatus.primaryDiskType = n.getStringValue(); },
        "restartCount": n => { deviceHealthStatus.restartCount = n.getNumberValue(); },
        "startupPerformanceScore": n => { deviceHealthStatus.startupPerformanceScore = n.getNumberValue(); },
        "tenantDisplayName": n => { deviceHealthStatus.tenantDisplayName = n.getStringValue(); },
        "tenantId": n => { deviceHealthStatus.tenantId = n.getStringValue(); },
        "topProcesses": n => { deviceHealthStatus.topProcesses = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeviceHealthStatusCollectionResponse(deviceHealthStatusCollectionResponse: Partial<DeviceHealthStatusCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(deviceHealthStatusCollectionResponse),
        "value": n => { deviceHealthStatusCollectionResponse.value = n.getCollectionOfObjectValues<DeviceHealthStatus>(createDeviceHealthStatusFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEmail(email: Partial<Email> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { email.backingStoreEnabled = true; },
        "emailAddress": n => { email.emailAddress = n.getStringValue(); },
        "@odata.type": n => { email.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGraphAPIErrorDetails(graphAPIErrorDetails: Partial<GraphAPIErrorDetails> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { graphAPIErrorDetails.backingStoreEnabled = true; },
        "code": n => { graphAPIErrorDetails.code = n.getStringValue(); },
        "message": n => { graphAPIErrorDetails.message = n.getStringValue(); },
        "@odata.type": n => { graphAPIErrorDetails.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedDeviceCompliance(managedDeviceCompliance: Partial<ManagedDeviceCompliance> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managedDeviceCompliance),
        "complianceStatus": n => { managedDeviceCompliance.complianceStatus = n.getStringValue(); },
        "deviceType": n => { managedDeviceCompliance.deviceType = n.getStringValue(); },
        "inGracePeriodUntilDateTime": n => { managedDeviceCompliance.inGracePeriodUntilDateTime = n.getDateValue(); },
        "lastRefreshedDateTime": n => { managedDeviceCompliance.lastRefreshedDateTime = n.getDateValue(); },
        "lastSyncDateTime": n => { managedDeviceCompliance.lastSyncDateTime = n.getDateValue(); },
        "managedDeviceId": n => { managedDeviceCompliance.managedDeviceId = n.getStringValue(); },
        "managedDeviceName": n => { managedDeviceCompliance.managedDeviceName = n.getStringValue(); },
        "manufacturer": n => { managedDeviceCompliance.manufacturer = n.getStringValue(); },
        "model": n => { managedDeviceCompliance.model = n.getStringValue(); },
        "osDescription": n => { managedDeviceCompliance.osDescription = n.getStringValue(); },
        "osVersion": n => { managedDeviceCompliance.osVersion = n.getStringValue(); },
        "ownerType": n => { managedDeviceCompliance.ownerType = n.getStringValue(); },
        "tenantDisplayName": n => { managedDeviceCompliance.tenantDisplayName = n.getStringValue(); },
        "tenantId": n => { managedDeviceCompliance.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedDeviceComplianceCollectionResponse(managedDeviceComplianceCollectionResponse: Partial<ManagedDeviceComplianceCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managedDeviceComplianceCollectionResponse),
        "value": n => { managedDeviceComplianceCollectionResponse.value = n.getCollectionOfObjectValues<ManagedDeviceCompliance>(createManagedDeviceComplianceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedDeviceComplianceTrend(managedDeviceComplianceTrend: Partial<ManagedDeviceComplianceTrend> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managedDeviceComplianceTrend),
        "compliantDeviceCount": n => { managedDeviceComplianceTrend.compliantDeviceCount = n.getNumberValue(); },
        "configManagerDeviceCount": n => { managedDeviceComplianceTrend.configManagerDeviceCount = n.getNumberValue(); },
        "countDateTime": n => { managedDeviceComplianceTrend.countDateTime = n.getStringValue(); },
        "errorDeviceCount": n => { managedDeviceComplianceTrend.errorDeviceCount = n.getNumberValue(); },
        "inGracePeriodDeviceCount": n => { managedDeviceComplianceTrend.inGracePeriodDeviceCount = n.getNumberValue(); },
        "noncompliantDeviceCount": n => { managedDeviceComplianceTrend.noncompliantDeviceCount = n.getNumberValue(); },
        "tenantDisplayName": n => { managedDeviceComplianceTrend.tenantDisplayName = n.getStringValue(); },
        "tenantId": n => { managedDeviceComplianceTrend.tenantId = n.getStringValue(); },
        "unknownDeviceCount": n => { managedDeviceComplianceTrend.unknownDeviceCount = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedDeviceComplianceTrendCollectionResponse(managedDeviceComplianceTrendCollectionResponse: Partial<ManagedDeviceComplianceTrendCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managedDeviceComplianceTrendCollectionResponse),
        "value": n => { managedDeviceComplianceTrendCollectionResponse.value = n.getCollectionOfObjectValues<ManagedDeviceComplianceTrend>(createManagedDeviceComplianceTrendFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenant(managedTenant: Partial<ManagedTenant> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managedTenant),
        "aggregatedPolicyCompliances": n => { managedTenant.aggregatedPolicyCompliances = n.getCollectionOfObjectValues<AggregatedPolicyCompliance>(createAggregatedPolicyComplianceFromDiscriminatorValue); },
        "appPerformances": n => { managedTenant.appPerformances = n.getCollectionOfObjectValues<AppPerformance>(createAppPerformanceFromDiscriminatorValue); },
        "auditEvents": n => { managedTenant.auditEvents = n.getCollectionOfObjectValues<AuditEvent>(createAuditEventFromDiscriminatorValue); },
        "cloudPcConnections": n => { managedTenant.cloudPcConnections = n.getCollectionOfObjectValues<CloudPcConnection>(createCloudPcConnectionFromDiscriminatorValue); },
        "cloudPcDevices": n => { managedTenant.cloudPcDevices = n.getCollectionOfObjectValues<CloudPcDevice>(createCloudPcDeviceFromDiscriminatorValue); },
        "cloudPcsOverview": n => { managedTenant.cloudPcsOverview = n.getCollectionOfObjectValues<CloudPcOverview>(createCloudPcOverviewFromDiscriminatorValue); },
        "conditionalAccessPolicyCoverages": n => { managedTenant.conditionalAccessPolicyCoverages = n.getCollectionOfObjectValues<ConditionalAccessPolicyCoverage>(createConditionalAccessPolicyCoverageFromDiscriminatorValue); },
        "credentialUserRegistrationsSummaries": n => { managedTenant.credentialUserRegistrationsSummaries = n.getCollectionOfObjectValues<CredentialUserRegistrationsSummary>(createCredentialUserRegistrationsSummaryFromDiscriminatorValue); },
        "deviceAppPerformances": n => { managedTenant.deviceAppPerformances = n.getCollectionOfObjectValues<DeviceAppPerformance>(createDeviceAppPerformanceFromDiscriminatorValue); },
        "deviceCompliancePolicySettingStateSummaries": n => { managedTenant.deviceCompliancePolicySettingStateSummaries = n.getCollectionOfObjectValues<DeviceCompliancePolicySettingStateSummary>(createDeviceCompliancePolicySettingStateSummaryFromDiscriminatorValue); },
        "deviceHealthStatuses": n => { managedTenant.deviceHealthStatuses = n.getCollectionOfObjectValues<DeviceHealthStatus>(createDeviceHealthStatusFromDiscriminatorValue); },
        "managedDeviceCompliances": n => { managedTenant.managedDeviceCompliances = n.getCollectionOfObjectValues<ManagedDeviceCompliance>(createManagedDeviceComplianceFromDiscriminatorValue); },
        "managedDeviceComplianceTrends": n => { managedTenant.managedDeviceComplianceTrends = n.getCollectionOfObjectValues<ManagedDeviceComplianceTrend>(createManagedDeviceComplianceTrendFromDiscriminatorValue); },
        "managedTenantAlertLogs": n => { managedTenant.managedTenantAlertLogs = n.getCollectionOfObjectValues<ManagedTenantAlertLog>(createManagedTenantAlertLogFromDiscriminatorValue); },
        "managedTenantAlertRuleDefinitions": n => { managedTenant.managedTenantAlertRuleDefinitions = n.getCollectionOfObjectValues<ManagedTenantAlertRuleDefinition>(createManagedTenantAlertRuleDefinitionFromDiscriminatorValue); },
        "managedTenantAlertRules": n => { managedTenant.managedTenantAlertRules = n.getCollectionOfObjectValues<ManagedTenantAlertRule>(createManagedTenantAlertRuleFromDiscriminatorValue); },
        "managedTenantAlerts": n => { managedTenant.managedTenantAlerts = n.getCollectionOfObjectValues<ManagedTenantAlert>(createManagedTenantAlertFromDiscriminatorValue); },
        "managedTenantApiNotifications": n => { managedTenant.managedTenantApiNotifications = n.getCollectionOfObjectValues<ManagedTenantApiNotification>(createManagedTenantApiNotificationFromDiscriminatorValue); },
        "managedTenantEmailNotifications": n => { managedTenant.managedTenantEmailNotifications = n.getCollectionOfObjectValues<ManagedTenantEmailNotification>(createManagedTenantEmailNotificationFromDiscriminatorValue); },
        "managedTenantTicketingEndpoints": n => { managedTenant.managedTenantTicketingEndpoints = n.getCollectionOfObjectValues<ManagedTenantTicketingEndpoint>(createManagedTenantTicketingEndpointFromDiscriminatorValue); },
        "managementActions": n => { managedTenant.managementActions = n.getCollectionOfObjectValues<ManagementAction>(createManagementActionFromDiscriminatorValue); },
        "managementActionTenantDeploymentStatuses": n => { managedTenant.managementActionTenantDeploymentStatuses = n.getCollectionOfObjectValues<ManagementActionTenantDeploymentStatus>(createManagementActionTenantDeploymentStatusFromDiscriminatorValue); },
        "managementIntents": n => { managedTenant.managementIntents = n.getCollectionOfObjectValues<ManagementIntent>(createManagementIntentFromDiscriminatorValue); },
        "managementTemplateCollections": n => { managedTenant.managementTemplateCollections = n.getCollectionOfObjectValues<ManagementTemplateCollection>(createManagementTemplateCollectionFromDiscriminatorValue); },
        "managementTemplateCollectionTenantSummaries": n => { managedTenant.managementTemplateCollectionTenantSummaries = n.getCollectionOfObjectValues<ManagementTemplateCollectionTenantSummary>(createManagementTemplateCollectionTenantSummaryFromDiscriminatorValue); },
        "managementTemplates": n => { managedTenant.managementTemplates = n.getCollectionOfObjectValues<ManagementTemplate>(createManagementTemplateFromDiscriminatorValue); },
        "managementTemplateSteps": n => { managedTenant.managementTemplateSteps = n.getCollectionOfObjectValues<ManagementTemplateStep>(createManagementTemplateStepFromDiscriminatorValue); },
        "managementTemplateStepTenantSummaries": n => { managedTenant.managementTemplateStepTenantSummaries = n.getCollectionOfObjectValues<ManagementTemplateStepTenantSummary>(createManagementTemplateStepTenantSummaryFromDiscriminatorValue); },
        "managementTemplateStepVersions": n => { managedTenant.managementTemplateStepVersions = n.getCollectionOfObjectValues<ManagementTemplateStepVersion>(createManagementTemplateStepVersionFromDiscriminatorValue); },
        "myRoles": n => { managedTenant.myRoles = n.getCollectionOfObjectValues<MyRole>(createMyRoleFromDiscriminatorValue); },
        "tenantGroups": n => { managedTenant.tenantGroups = n.getCollectionOfObjectValues<TenantGroup>(createTenantGroupFromDiscriminatorValue); },
        "tenants": n => { managedTenant.tenants = n.getCollectionOfObjectValues<Tenant>(createTenantFromDiscriminatorValue); },
        "tenantsCustomizedInformation": n => { managedTenant.tenantsCustomizedInformation = n.getCollectionOfObjectValues<TenantCustomizedInformation>(createTenantCustomizedInformationFromDiscriminatorValue); },
        "tenantsDetailedInformation": n => { managedTenant.tenantsDetailedInformation = n.getCollectionOfObjectValues<TenantDetailedInformation>(createTenantDetailedInformationFromDiscriminatorValue); },
        "tenantTags": n => { managedTenant.tenantTags = n.getCollectionOfObjectValues<TenantTag>(createTenantTagFromDiscriminatorValue); },
        "windowsDeviceMalwareStates": n => { managedTenant.windowsDeviceMalwareStates = n.getCollectionOfObjectValues<WindowsDeviceMalwareState>(createWindowsDeviceMalwareStateFromDiscriminatorValue); },
        "windowsProtectionStates": n => { managedTenant.windowsProtectionStates = n.getCollectionOfObjectValues<WindowsProtectionState>(createWindowsProtectionStateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenantAlert(managedTenantAlert: Partial<ManagedTenantAlert> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managedTenantAlert),
        "alertData": n => { managedTenantAlert.alertData = n.getObjectValue<AlertData>(createAlertDataFromDiscriminatorValue); },
        "alertDataReferenceStrings": n => { managedTenantAlert.alertDataReferenceStrings = n.getCollectionOfObjectValues<AlertDataReferenceString>(createAlertDataReferenceStringFromDiscriminatorValue); },
        "alertLogs": n => { managedTenantAlert.alertLogs = n.getCollectionOfObjectValues<ManagedTenantAlertLog>(createManagedTenantAlertLogFromDiscriminatorValue); },
        "alertRule": n => { managedTenantAlert.alertRule = n.getObjectValue<ManagedTenantAlertRule>(createManagedTenantAlertRuleFromDiscriminatorValue); },
        "alertRuleDisplayName": n => { managedTenantAlert.alertRuleDisplayName = n.getStringValue(); },
        "apiNotifications": n => { managedTenantAlert.apiNotifications = n.getCollectionOfObjectValues<ManagedTenantApiNotification>(createManagedTenantApiNotificationFromDiscriminatorValue); },
        "assignedToUserId": n => { managedTenantAlert.assignedToUserId = n.getStringValue(); },
        "correlationCount": n => { managedTenantAlert.correlationCount = n.getNumberValue(); },
        "correlationId": n => { managedTenantAlert.correlationId = n.getStringValue(); },
        "createdByUserId": n => { managedTenantAlert.createdByUserId = n.getStringValue(); },
        "createdDateTime": n => { managedTenantAlert.createdDateTime = n.getDateValue(); },
        "emailNotifications": n => { managedTenantAlert.emailNotifications = n.getCollectionOfObjectValues<ManagedTenantEmailNotification>(createManagedTenantEmailNotificationFromDiscriminatorValue); },
        "lastActionByUserId": n => { managedTenantAlert.lastActionByUserId = n.getStringValue(); },
        "lastActionDateTime": n => { managedTenantAlert.lastActionDateTime = n.getDateValue(); },
        "message": n => { managedTenantAlert.message = n.getStringValue(); },
        "severity": n => { managedTenantAlert.severity = n.getEnumValue<AlertSeverity>(AlertSeverityObject); },
        "status": n => { managedTenantAlert.status = n.getEnumValue<AlertStatus>(AlertStatusObject); },
        "tenantId": n => { managedTenantAlert.tenantId = n.getStringValue(); },
        "title": n => { managedTenantAlert.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenantAlertCollectionResponse(managedTenantAlertCollectionResponse: Partial<ManagedTenantAlertCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managedTenantAlertCollectionResponse),
        "value": n => { managedTenantAlertCollectionResponse.value = n.getCollectionOfObjectValues<ManagedTenantAlert>(createManagedTenantAlertFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenantAlertLog(managedTenantAlertLog: Partial<ManagedTenantAlertLog> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managedTenantAlertLog),
        "alert": n => { managedTenantAlertLog.alert = n.getObjectValue<ManagedTenantAlert>(createManagedTenantAlertFromDiscriminatorValue); },
        "content": n => { managedTenantAlertLog.content = n.getObjectValue<AlertLogContent>(createAlertLogContentFromDiscriminatorValue); },
        "createdByUserId": n => { managedTenantAlertLog.createdByUserId = n.getStringValue(); },
        "createdDateTime": n => { managedTenantAlertLog.createdDateTime = n.getDateValue(); },
        "lastActionByUserId": n => { managedTenantAlertLog.lastActionByUserId = n.getStringValue(); },
        "lastActionDateTime": n => { managedTenantAlertLog.lastActionDateTime = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenantAlertLogCollectionResponse(managedTenantAlertLogCollectionResponse: Partial<ManagedTenantAlertLogCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managedTenantAlertLogCollectionResponse),
        "value": n => { managedTenantAlertLogCollectionResponse.value = n.getCollectionOfObjectValues<ManagedTenantAlertLog>(createManagedTenantAlertLogFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenantAlertRule(managedTenantAlertRule: Partial<ManagedTenantAlertRule> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managedTenantAlertRule),
        "alertDisplayName": n => { managedTenantAlertRule.alertDisplayName = n.getStringValue(); },
        "alerts": n => { managedTenantAlertRule.alerts = n.getCollectionOfObjectValues<ManagedTenantAlert>(createManagedTenantAlertFromDiscriminatorValue); },
        "alertTTL": n => { managedTenantAlertRule.alertTTL = n.getNumberValue(); },
        "createdByUserId": n => { managedTenantAlertRule.createdByUserId = n.getStringValue(); },
        "createdDateTime": n => { managedTenantAlertRule.createdDateTime = n.getDateValue(); },
        "description": n => { managedTenantAlertRule.description = n.getStringValue(); },
        "displayName": n => { managedTenantAlertRule.displayName = n.getStringValue(); },
        "lastActionByUserId": n => { managedTenantAlertRule.lastActionByUserId = n.getStringValue(); },
        "lastActionDateTime": n => { managedTenantAlertRule.lastActionDateTime = n.getDateValue(); },
        "lastRunDateTime": n => { managedTenantAlertRule.lastRunDateTime = n.getDateValue(); },
        "notificationFinalDestinations": n => { managedTenantAlertRule.notificationFinalDestinations = n.getCollectionOfEnumValues<NotificationDestination>(NotificationDestinationObject); },
        "ruleDefinition": n => { managedTenantAlertRule.ruleDefinition = n.getObjectValue<ManagedTenantAlertRuleDefinition>(createManagedTenantAlertRuleDefinitionFromDiscriminatorValue); },
        "severity": n => { managedTenantAlertRule.severity = n.getEnumValue<AlertSeverity>(AlertSeverityObject); },
        "targets": n => { managedTenantAlertRule.targets = n.getCollectionOfObjectValues<NotificationTarget>(createNotificationTargetFromDiscriminatorValue); },
        "tenantIds": n => { managedTenantAlertRule.tenantIds = n.getCollectionOfObjectValues<TenantInfo>(createTenantInfoFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenantAlertRuleCollectionResponse(managedTenantAlertRuleCollectionResponse: Partial<ManagedTenantAlertRuleCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managedTenantAlertRuleCollectionResponse),
        "value": n => { managedTenantAlertRuleCollectionResponse.value = n.getCollectionOfObjectValues<ManagedTenantAlertRule>(createManagedTenantAlertRuleFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenantAlertRuleDefinition(managedTenantAlertRuleDefinition: Partial<ManagedTenantAlertRuleDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managedTenantAlertRuleDefinition),
        "alertRules": n => { managedTenantAlertRuleDefinition.alertRules = n.getCollectionOfObjectValues<ManagedTenantAlertRule>(createManagedTenantAlertRuleFromDiscriminatorValue); },
        "createdByUserId": n => { managedTenantAlertRuleDefinition.createdByUserId = n.getStringValue(); },
        "createdDateTime": n => { managedTenantAlertRuleDefinition.createdDateTime = n.getDateValue(); },
        "definitionTemplate": n => { managedTenantAlertRuleDefinition.definitionTemplate = n.getObjectValue<AlertRuleDefinitionTemplate>(createAlertRuleDefinitionTemplateFromDiscriminatorValue); },
        "displayName": n => { managedTenantAlertRuleDefinition.displayName = n.getStringValue(); },
        "lastActionByUserId": n => { managedTenantAlertRuleDefinition.lastActionByUserId = n.getStringValue(); },
        "lastActionDateTime": n => { managedTenantAlertRuleDefinition.lastActionDateTime = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenantAlertRuleDefinitionCollectionResponse(managedTenantAlertRuleDefinitionCollectionResponse: Partial<ManagedTenantAlertRuleDefinitionCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managedTenantAlertRuleDefinitionCollectionResponse),
        "value": n => { managedTenantAlertRuleDefinitionCollectionResponse.value = n.getCollectionOfObjectValues<ManagedTenantAlertRuleDefinition>(createManagedTenantAlertRuleDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenantApiNotification(managedTenantApiNotification: Partial<ManagedTenantApiNotification> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managedTenantApiNotification),
        "alert": n => { managedTenantApiNotification.alert = n.getObjectValue<ManagedTenantAlert>(createManagedTenantAlertFromDiscriminatorValue); },
        "createdByUserId": n => { managedTenantApiNotification.createdByUserId = n.getStringValue(); },
        "createdDateTime": n => { managedTenantApiNotification.createdDateTime = n.getDateValue(); },
        "isAcknowledged": n => { managedTenantApiNotification.isAcknowledged = n.getBooleanValue(); },
        "lastActionByUserId": n => { managedTenantApiNotification.lastActionByUserId = n.getStringValue(); },
        "lastActionDateTime": n => { managedTenantApiNotification.lastActionDateTime = n.getDateValue(); },
        "message": n => { managedTenantApiNotification.message = n.getStringValue(); },
        "title": n => { managedTenantApiNotification.title = n.getStringValue(); },
        "userId": n => { managedTenantApiNotification.userId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenantApiNotificationCollectionResponse(managedTenantApiNotificationCollectionResponse: Partial<ManagedTenantApiNotificationCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managedTenantApiNotificationCollectionResponse),
        "value": n => { managedTenantApiNotificationCollectionResponse.value = n.getCollectionOfObjectValues<ManagedTenantApiNotification>(createManagedTenantApiNotificationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenantEmailNotification(managedTenantEmailNotification: Partial<ManagedTenantEmailNotification> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managedTenantEmailNotification),
        "alert": n => { managedTenantEmailNotification.alert = n.getObjectValue<ManagedTenantAlert>(createManagedTenantAlertFromDiscriminatorValue); },
        "createdByUserId": n => { managedTenantEmailNotification.createdByUserId = n.getStringValue(); },
        "createdDateTime": n => { managedTenantEmailNotification.createdDateTime = n.getDateValue(); },
        "emailAddresses": n => { managedTenantEmailNotification.emailAddresses = n.getCollectionOfObjectValues<Email>(createEmailFromDiscriminatorValue); },
        "emailBody": n => { managedTenantEmailNotification.emailBody = n.getStringValue(); },
        "lastActionByUserId": n => { managedTenantEmailNotification.lastActionByUserId = n.getStringValue(); },
        "lastActionDateTime": n => { managedTenantEmailNotification.lastActionDateTime = n.getDateValue(); },
        "subject": n => { managedTenantEmailNotification.subject = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenantEmailNotificationCollectionResponse(managedTenantEmailNotificationCollectionResponse: Partial<ManagedTenantEmailNotificationCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managedTenantEmailNotificationCollectionResponse),
        "value": n => { managedTenantEmailNotificationCollectionResponse.value = n.getCollectionOfObjectValues<ManagedTenantEmailNotification>(createManagedTenantEmailNotificationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenantTicketingEndpoint(managedTenantTicketingEndpoint: Partial<ManagedTenantTicketingEndpoint> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managedTenantTicketingEndpoint),
        "createdByUserId": n => { managedTenantTicketingEndpoint.createdByUserId = n.getStringValue(); },
        "createdDateTime": n => { managedTenantTicketingEndpoint.createdDateTime = n.getDateValue(); },
        "displayName": n => { managedTenantTicketingEndpoint.displayName = n.getStringValue(); },
        "emailAddress": n => { managedTenantTicketingEndpoint.emailAddress = n.getStringValue(); },
        "lastActionByUserId": n => { managedTenantTicketingEndpoint.lastActionByUserId = n.getStringValue(); },
        "lastActionDateTime": n => { managedTenantTicketingEndpoint.lastActionDateTime = n.getDateValue(); },
        "phoneNumber": n => { managedTenantTicketingEndpoint.phoneNumber = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenantTicketingEndpointCollectionResponse(managedTenantTicketingEndpointCollectionResponse: Partial<ManagedTenantTicketingEndpointCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managedTenantTicketingEndpointCollectionResponse),
        "value": n => { managedTenantTicketingEndpointCollectionResponse.value = n.getCollectionOfObjectValues<ManagedTenantTicketingEndpoint>(createManagedTenantTicketingEndpointFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementAction(managementAction: Partial<ManagementAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managementAction),
        "category": n => { managementAction.category = n.getEnumValue<ManagementCategory>(ManagementCategoryObject); },
        "description": n => { managementAction.description = n.getStringValue(); },
        "displayName": n => { managementAction.displayName = n.getStringValue(); },
        "referenceTemplateId": n => { managementAction.referenceTemplateId = n.getStringValue(); },
        "referenceTemplateVersion": n => { managementAction.referenceTemplateVersion = n.getNumberValue(); },
        "workloadActions": n => { managementAction.workloadActions = n.getCollectionOfObjectValues<WorkloadAction>(createWorkloadActionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementActionCollectionResponse(managementActionCollectionResponse: Partial<ManagementActionCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managementActionCollectionResponse),
        "value": n => { managementActionCollectionResponse.value = n.getCollectionOfObjectValues<ManagementAction>(createManagementActionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementActionDeploymentStatus(managementActionDeploymentStatus: Partial<ManagementActionDeploymentStatus> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { managementActionDeploymentStatus.backingStoreEnabled = true; },
        "managementActionId": n => { managementActionDeploymentStatus.managementActionId = n.getStringValue(); },
        "managementTemplateId": n => { managementActionDeploymentStatus.managementTemplateId = n.getStringValue(); },
        "managementTemplateVersion": n => { managementActionDeploymentStatus.managementTemplateVersion = n.getNumberValue(); },
        "@odata.type": n => { managementActionDeploymentStatus.odataType = n.getStringValue(); },
        "status": n => { managementActionDeploymentStatus.status = n.getEnumValue<ManagementActionStatus>(ManagementActionStatusObject); },
        "workloadActionDeploymentStatuses": n => { managementActionDeploymentStatus.workloadActionDeploymentStatuses = n.getCollectionOfObjectValues<WorkloadActionDeploymentStatus>(createWorkloadActionDeploymentStatusFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementActionInfo(managementActionInfo: Partial<ManagementActionInfo> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { managementActionInfo.backingStoreEnabled = true; },
        "managementActionId": n => { managementActionInfo.managementActionId = n.getStringValue(); },
        "managementTemplateId": n => { managementActionInfo.managementTemplateId = n.getStringValue(); },
        "managementTemplateVersion": n => { managementActionInfo.managementTemplateVersion = n.getNumberValue(); },
        "@odata.type": n => { managementActionInfo.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementActionTenantDeploymentStatus(managementActionTenantDeploymentStatus: Partial<ManagementActionTenantDeploymentStatus> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managementActionTenantDeploymentStatus),
        "statuses": n => { managementActionTenantDeploymentStatus.statuses = n.getCollectionOfObjectValues<ManagementActionDeploymentStatus>(createManagementActionDeploymentStatusFromDiscriminatorValue); },
        "tenantGroupId": n => { managementActionTenantDeploymentStatus.tenantGroupId = n.getStringValue(); },
        "tenantId": n => { managementActionTenantDeploymentStatus.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementActionTenantDeploymentStatusCollectionResponse(managementActionTenantDeploymentStatusCollectionResponse: Partial<ManagementActionTenantDeploymentStatusCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managementActionTenantDeploymentStatusCollectionResponse),
        "value": n => { managementActionTenantDeploymentStatusCollectionResponse.value = n.getCollectionOfObjectValues<ManagementActionTenantDeploymentStatus>(createManagementActionTenantDeploymentStatusFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementIntent(managementIntent: Partial<ManagementIntent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managementIntent),
        "displayName": n => { managementIntent.displayName = n.getStringValue(); },
        "isGlobal": n => { managementIntent.isGlobal = n.getBooleanValue(); },
        "managementTemplates": n => { managementIntent.managementTemplates = n.getCollectionOfObjectValues<ManagementTemplateDetailedInfo>(createManagementTemplateDetailedInfoFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementIntentCollectionResponse(managementIntentCollectionResponse: Partial<ManagementIntentCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managementIntentCollectionResponse),
        "value": n => { managementIntentCollectionResponse.value = n.getCollectionOfObjectValues<ManagementIntent>(createManagementIntentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementIntentInfo(managementIntentInfo: Partial<ManagementIntentInfo> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { managementIntentInfo.backingStoreEnabled = true; },
        "managementIntentDisplayName": n => { managementIntentInfo.managementIntentDisplayName = n.getStringValue(); },
        "managementIntentId": n => { managementIntentInfo.managementIntentId = n.getStringValue(); },
        "managementTemplates": n => { managementIntentInfo.managementTemplates = n.getCollectionOfObjectValues<ManagementTemplateDetailedInfo>(createManagementTemplateDetailedInfoFromDiscriminatorValue); },
        "@odata.type": n => { managementIntentInfo.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementTemplate(managementTemplate: Partial<ManagementTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managementTemplate),
        "category": n => { managementTemplate.category = n.getEnumValue<ManagementCategory>(ManagementCategoryObject); },
        "createdByUserId": n => { managementTemplate.createdByUserId = n.getStringValue(); },
        "createdDateTime": n => { managementTemplate.createdDateTime = n.getDateValue(); },
        "description": n => { managementTemplate.description = n.getStringValue(); },
        "displayName": n => { managementTemplate.displayName = n.getStringValue(); },
        "informationLinks": n => { managementTemplate.informationLinks = n.getCollectionOfObjectValues<ActionUrl>(createActionUrlFromDiscriminatorValue); },
        "lastActionByUserId": n => { managementTemplate.lastActionByUserId = n.getStringValue(); },
        "lastActionDateTime": n => { managementTemplate.lastActionDateTime = n.getDateValue(); },
        "managementTemplateCollections": n => { managementTemplate.managementTemplateCollections = n.getCollectionOfObjectValues<ManagementTemplateCollection>(createManagementTemplateCollectionFromDiscriminatorValue); },
        "managementTemplateSteps": n => { managementTemplate.managementTemplateSteps = n.getCollectionOfObjectValues<ManagementTemplateStep>(createManagementTemplateStepFromDiscriminatorValue); },
        "parameters": n => { managementTemplate.parameters = n.getCollectionOfObjectValues<TemplateParameter>(createTemplateParameterFromDiscriminatorValue); },
        "priority": n => { managementTemplate.priority = n.getNumberValue(); },
        "provider": n => { managementTemplate.provider = n.getEnumValue<ManagementProvider>(ManagementProviderObject); },
        "userImpact": n => { managementTemplate.userImpact = n.getStringValue(); },
        "version": n => { managementTemplate.version = n.getNumberValue(); },
        "workloadActions": n => { managementTemplate.workloadActions = n.getCollectionOfObjectValues<WorkloadAction>(createWorkloadActionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementTemplateCollection(managementTemplateCollection: Partial<ManagementTemplateCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managementTemplateCollection),
        "createdByUserId": n => { managementTemplateCollection.createdByUserId = n.getStringValue(); },
        "createdDateTime": n => { managementTemplateCollection.createdDateTime = n.getDateValue(); },
        "description": n => { managementTemplateCollection.description = n.getStringValue(); },
        "displayName": n => { managementTemplateCollection.displayName = n.getStringValue(); },
        "lastActionByUserId": n => { managementTemplateCollection.lastActionByUserId = n.getStringValue(); },
        "lastActionDateTime": n => { managementTemplateCollection.lastActionDateTime = n.getDateValue(); },
        "managementTemplates": n => { managementTemplateCollection.managementTemplates = n.getCollectionOfObjectValues<ManagementTemplate>(createManagementTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementTemplateCollectionCollectionResponse(managementTemplateCollectionCollectionResponse: Partial<ManagementTemplateCollectionCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managementTemplateCollectionCollectionResponse),
        "value": n => { managementTemplateCollectionCollectionResponse.value = n.getCollectionOfObjectValues<ManagementTemplateCollection>(createManagementTemplateCollectionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementTemplateCollectionResponse(managementTemplateCollectionResponse: Partial<ManagementTemplateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managementTemplateCollectionResponse),
        "value": n => { managementTemplateCollectionResponse.value = n.getCollectionOfObjectValues<ManagementTemplate>(createManagementTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementTemplateCollectionTenantSummary(managementTemplateCollectionTenantSummary: Partial<ManagementTemplateCollectionTenantSummary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managementTemplateCollectionTenantSummary),
        "completeStepsCount": n => { managementTemplateCollectionTenantSummary.completeStepsCount = n.getNumberValue(); },
        "completeUsersCount": n => { managementTemplateCollectionTenantSummary.completeUsersCount = n.getNumberValue(); },
        "createdByUserId": n => { managementTemplateCollectionTenantSummary.createdByUserId = n.getStringValue(); },
        "createdDateTime": n => { managementTemplateCollectionTenantSummary.createdDateTime = n.getDateValue(); },
        "dismissedStepsCount": n => { managementTemplateCollectionTenantSummary.dismissedStepsCount = n.getNumberValue(); },
        "excludedUsersCount": n => { managementTemplateCollectionTenantSummary.excludedUsersCount = n.getNumberValue(); },
        "excludedUsersDistinctCount": n => { managementTemplateCollectionTenantSummary.excludedUsersDistinctCount = n.getNumberValue(); },
        "incompleteStepsCount": n => { managementTemplateCollectionTenantSummary.incompleteStepsCount = n.getNumberValue(); },
        "incompleteUsersCount": n => { managementTemplateCollectionTenantSummary.incompleteUsersCount = n.getNumberValue(); },
        "ineligibleStepsCount": n => { managementTemplateCollectionTenantSummary.ineligibleStepsCount = n.getNumberValue(); },
        "isComplete": n => { managementTemplateCollectionTenantSummary.isComplete = n.getBooleanValue(); },
        "lastActionByUserId": n => { managementTemplateCollectionTenantSummary.lastActionByUserId = n.getStringValue(); },
        "lastActionDateTime": n => { managementTemplateCollectionTenantSummary.lastActionDateTime = n.getDateValue(); },
        "managementTemplateCollectionDisplayName": n => { managementTemplateCollectionTenantSummary.managementTemplateCollectionDisplayName = n.getStringValue(); },
        "managementTemplateCollectionId": n => { managementTemplateCollectionTenantSummary.managementTemplateCollectionId = n.getStringValue(); },
        "regressedStepsCount": n => { managementTemplateCollectionTenantSummary.regressedStepsCount = n.getNumberValue(); },
        "regressedUsersCount": n => { managementTemplateCollectionTenantSummary.regressedUsersCount = n.getNumberValue(); },
        "tenantId": n => { managementTemplateCollectionTenantSummary.tenantId = n.getStringValue(); },
        "unlicensedUsersCount": n => { managementTemplateCollectionTenantSummary.unlicensedUsersCount = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementTemplateCollectionTenantSummaryCollectionResponse(managementTemplateCollectionTenantSummaryCollectionResponse: Partial<ManagementTemplateCollectionTenantSummaryCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managementTemplateCollectionTenantSummaryCollectionResponse),
        "value": n => { managementTemplateCollectionTenantSummaryCollectionResponse.value = n.getCollectionOfObjectValues<ManagementTemplateCollectionTenantSummary>(createManagementTemplateCollectionTenantSummaryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementTemplateDetailedInfo(managementTemplateDetailedInfo: Partial<ManagementTemplateDetailedInfo> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { managementTemplateDetailedInfo.backingStoreEnabled = true; },
        "category": n => { managementTemplateDetailedInfo.category = n.getEnumValue<ManagementCategory>(ManagementCategoryObject); },
        "displayName": n => { managementTemplateDetailedInfo.displayName = n.getStringValue(); },
        "managementTemplateId": n => { managementTemplateDetailedInfo.managementTemplateId = n.getStringValue(); },
        "@odata.type": n => { managementTemplateDetailedInfo.odataType = n.getStringValue(); },
        "version": n => { managementTemplateDetailedInfo.version = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementTemplateStep(managementTemplateStep: Partial<ManagementTemplateStep> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managementTemplateStep),
        "acceptedVersion": n => { managementTemplateStep.acceptedVersion = n.getObjectValue<ManagementTemplateStepVersion>(createManagementTemplateStepVersionFromDiscriminatorValue); },
        "category": n => { managementTemplateStep.category = n.getEnumValue<ManagementCategory>(ManagementCategoryObject); },
        "createdByUserId": n => { managementTemplateStep.createdByUserId = n.getStringValue(); },
        "createdDateTime": n => { managementTemplateStep.createdDateTime = n.getDateValue(); },
        "description": n => { managementTemplateStep.description = n.getStringValue(); },
        "displayName": n => { managementTemplateStep.displayName = n.getStringValue(); },
        "informationLinks": n => { managementTemplateStep.informationLinks = n.getCollectionOfObjectValues<ActionUrl>(createActionUrlFromDiscriminatorValue); },
        "lastActionByUserId": n => { managementTemplateStep.lastActionByUserId = n.getStringValue(); },
        "lastActionDateTime": n => { managementTemplateStep.lastActionDateTime = n.getDateValue(); },
        "managementTemplate": n => { managementTemplateStep.managementTemplate = n.getObjectValue<ManagementTemplate>(createManagementTemplateFromDiscriminatorValue); },
        "portalLink": n => { managementTemplateStep.portalLink = n.getObjectValue<ActionUrl>(createActionUrlFromDiscriminatorValue); },
        "priority": n => { managementTemplateStep.priority = n.getNumberValue(); },
        "userImpact": n => { managementTemplateStep.userImpact = n.getStringValue(); },
        "versions": n => { managementTemplateStep.versions = n.getCollectionOfObjectValues<ManagementTemplateStepVersion>(createManagementTemplateStepVersionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementTemplateStepCollectionResponse(managementTemplateStepCollectionResponse: Partial<ManagementTemplateStepCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managementTemplateStepCollectionResponse),
        "value": n => { managementTemplateStepCollectionResponse.value = n.getCollectionOfObjectValues<ManagementTemplateStep>(createManagementTemplateStepFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementTemplateStepDeployment(managementTemplateStepDeployment: Partial<ManagementTemplateStepDeployment> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managementTemplateStepDeployment),
        "createdByUserId": n => { managementTemplateStepDeployment.createdByUserId = n.getStringValue(); },
        "createdDateTime": n => { managementTemplateStepDeployment.createdDateTime = n.getDateValue(); },
        "error": n => { managementTemplateStepDeployment.errorEscaped = n.getObjectValue<GraphAPIErrorDetails>(createGraphAPIErrorDetailsFromDiscriminatorValue); },
        "lastActionByUserId": n => { managementTemplateStepDeployment.lastActionByUserId = n.getStringValue(); },
        "lastActionDateTime": n => { managementTemplateStepDeployment.lastActionDateTime = n.getDateValue(); },
        "status": n => { managementTemplateStepDeployment.status = n.getEnumValue<ManagementTemplateDeploymentStatus>(ManagementTemplateDeploymentStatusObject); },
        "templateStepVersion": n => { managementTemplateStepDeployment.templateStepVersion = n.getObjectValue<ManagementTemplateStepVersion>(createManagementTemplateStepVersionFromDiscriminatorValue); },
        "tenantId": n => { managementTemplateStepDeployment.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementTemplateStepDeploymentCollectionResponse(managementTemplateStepDeploymentCollectionResponse: Partial<ManagementTemplateStepDeploymentCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managementTemplateStepDeploymentCollectionResponse),
        "value": n => { managementTemplateStepDeploymentCollectionResponse.value = n.getCollectionOfObjectValues<ManagementTemplateStepDeployment>(createManagementTemplateStepDeploymentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementTemplateStepTenantSummary(managementTemplateStepTenantSummary: Partial<ManagementTemplateStepTenantSummary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managementTemplateStepTenantSummary),
        "assignedTenantsCount": n => { managementTemplateStepTenantSummary.assignedTenantsCount = n.getNumberValue(); },
        "compliantTenantsCount": n => { managementTemplateStepTenantSummary.compliantTenantsCount = n.getNumberValue(); },
        "createdByUserId": n => { managementTemplateStepTenantSummary.createdByUserId = n.getStringValue(); },
        "createdDateTime": n => { managementTemplateStepTenantSummary.createdDateTime = n.getDateValue(); },
        "dismissedTenantsCount": n => { managementTemplateStepTenantSummary.dismissedTenantsCount = n.getNumberValue(); },
        "ineligibleTenantsCount": n => { managementTemplateStepTenantSummary.ineligibleTenantsCount = n.getNumberValue(); },
        "lastActionByUserId": n => { managementTemplateStepTenantSummary.lastActionByUserId = n.getStringValue(); },
        "lastActionDateTime": n => { managementTemplateStepTenantSummary.lastActionDateTime = n.getDateValue(); },
        "managementTemplateCollectionDisplayName": n => { managementTemplateStepTenantSummary.managementTemplateCollectionDisplayName = n.getStringValue(); },
        "managementTemplateCollectionId": n => { managementTemplateStepTenantSummary.managementTemplateCollectionId = n.getStringValue(); },
        "managementTemplateDisplayName": n => { managementTemplateStepTenantSummary.managementTemplateDisplayName = n.getStringValue(); },
        "managementTemplateId": n => { managementTemplateStepTenantSummary.managementTemplateId = n.getStringValue(); },
        "managementTemplateStepDisplayName": n => { managementTemplateStepTenantSummary.managementTemplateStepDisplayName = n.getStringValue(); },
        "managementTemplateStepId": n => { managementTemplateStepTenantSummary.managementTemplateStepId = n.getStringValue(); },
        "notCompliantTenantsCount": n => { managementTemplateStepTenantSummary.notCompliantTenantsCount = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementTemplateStepTenantSummaryCollectionResponse(managementTemplateStepTenantSummaryCollectionResponse: Partial<ManagementTemplateStepTenantSummaryCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managementTemplateStepTenantSummaryCollectionResponse),
        "value": n => { managementTemplateStepTenantSummaryCollectionResponse.value = n.getCollectionOfObjectValues<ManagementTemplateStepTenantSummary>(createManagementTemplateStepTenantSummaryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementTemplateStepVersion(managementTemplateStepVersion: Partial<ManagementTemplateStepVersion> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managementTemplateStepVersion),
        "acceptedFor": n => { managementTemplateStepVersion.acceptedFor = n.getObjectValue<ManagementTemplateStep>(createManagementTemplateStepFromDiscriminatorValue); },
        "contentMarkdown": n => { managementTemplateStepVersion.contentMarkdown = n.getStringValue(); },
        "createdByUserId": n => { managementTemplateStepVersion.createdByUserId = n.getStringValue(); },
        "createdDateTime": n => { managementTemplateStepVersion.createdDateTime = n.getDateValue(); },
        "deployments": n => { managementTemplateStepVersion.deployments = n.getCollectionOfObjectValues<ManagementTemplateStepDeployment>(createManagementTemplateStepDeploymentFromDiscriminatorValue); },
        "lastActionByUserId": n => { managementTemplateStepVersion.lastActionByUserId = n.getStringValue(); },
        "lastActionDateTime": n => { managementTemplateStepVersion.lastActionDateTime = n.getDateValue(); },
        "name": n => { managementTemplateStepVersion.name = n.getStringValue(); },
        "templateStep": n => { managementTemplateStepVersion.templateStep = n.getObjectValue<ManagementTemplateStep>(createManagementTemplateStepFromDiscriminatorValue); },
        "version": n => { managementTemplateStepVersion.version = n.getNumberValue(); },
        "versionInformation": n => { managementTemplateStepVersion.versionInformation = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagementTemplateStepVersionCollectionResponse(managementTemplateStepVersionCollectionResponse: Partial<ManagementTemplateStepVersionCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managementTemplateStepVersionCollectionResponse),
        "value": n => { managementTemplateStepVersionCollectionResponse.value = n.getCollectionOfObjectValues<ManagementTemplateStepVersion>(createManagementTemplateStepVersionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMyRole(myRole: Partial<MyRole> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "assignments": n => { myRole.assignments = n.getCollectionOfObjectValues<RoleAssignment>(createRoleAssignmentFromDiscriminatorValue); },
        "backingStoreEnabled": n => { myRole.backingStoreEnabled = true; },
        "@odata.type": n => { myRole.odataType = n.getStringValue(); },
        "tenantId": n => { myRole.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMyRoleCollectionResponse(myRoleCollectionResponse: Partial<MyRoleCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(myRoleCollectionResponse),
        "value": n => { myRoleCollectionResponse.value = n.getCollectionOfObjectValues<MyRole>(createMyRoleFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoNotificationTarget(notificationTarget: Partial<NotificationTarget> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { notificationTarget.backingStoreEnabled = true; },
        "displayName": n => { notificationTarget.displayName = n.getStringValue(); },
        "@odata.type": n => { notificationTarget.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRoleAssignment(roleAssignment: Partial<RoleAssignment> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "assignmentType": n => { roleAssignment.assignmentType = n.getEnumValue<DelegatedPrivilegeStatus>(DelegatedPrivilegeStatusObject); },
        "backingStoreEnabled": n => { roleAssignment.backingStoreEnabled = true; },
        "@odata.type": n => { roleAssignment.odataType = n.getStringValue(); },
        "roles": n => { roleAssignment.roles = n.getCollectionOfObjectValues<RoleDefinition>(createRoleDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRoleDefinition(roleDefinition: Partial<RoleDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { roleDefinition.backingStoreEnabled = true; },
        "description": n => { roleDefinition.description = n.getStringValue(); },
        "displayName": n => { roleDefinition.displayName = n.getStringValue(); },
        "@odata.type": n => { roleDefinition.odataType = n.getStringValue(); },
        "templateId": n => { roleDefinition.templateId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSetting(setting: Partial<Setting> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { setting.backingStoreEnabled = true; },
        "displayName": n => { setting.displayName = n.getStringValue(); },
        "jsonValue": n => { setting.jsonValue = n.getStringValue(); },
        "@odata.type": n => { setting.odataType = n.getStringValue(); },
        "overwriteAllowed": n => { setting.overwriteAllowed = n.getBooleanValue(); },
        "settingId": n => { setting.settingId = n.getStringValue(); },
        "valueType": n => { setting.valueType = n.getEnumValue<ManagementParameterValueType>(ManagementParameterValueTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTemplateParameter(templateParameter: Partial<TemplateParameter> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { templateParameter.backingStoreEnabled = true; },
        "description": n => { templateParameter.description = n.getStringValue(); },
        "displayName": n => { templateParameter.displayName = n.getStringValue(); },
        "jsonAllowedValues": n => { templateParameter.jsonAllowedValues = n.getStringValue(); },
        "jsonDefaultValue": n => { templateParameter.jsonDefaultValue = n.getStringValue(); },
        "@odata.type": n => { templateParameter.odataType = n.getStringValue(); },
        "valueType": n => { templateParameter.valueType = n.getEnumValue<ManagementParameterValueType>(ManagementParameterValueTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenant(tenant: Partial<Tenant> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(tenant),
        "contract": n => { tenant.contract = n.getObjectValue<TenantContract>(createTenantContractFromDiscriminatorValue); },
        "createdDateTime": n => { tenant.createdDateTime = n.getDateValue(); },
        "displayName": n => { tenant.displayName = n.getStringValue(); },
        "lastUpdatedDateTime": n => { tenant.lastUpdatedDateTime = n.getDateValue(); },
        "tenantId": n => { tenant.tenantId = n.getStringValue(); },
        "tenantStatusInformation": n => { tenant.tenantStatusInformation = n.getObjectValue<TenantStatusInformation>(createTenantStatusInformationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantCollectionResponse(tenantCollectionResponse: Partial<TenantCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(tenantCollectionResponse),
        "value": n => { tenantCollectionResponse.value = n.getCollectionOfObjectValues<Tenant>(createTenantFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantContactInformation(tenantContactInformation: Partial<TenantContactInformation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { tenantContactInformation.backingStoreEnabled = true; },
        "email": n => { tenantContactInformation.email = n.getStringValue(); },
        "name": n => { tenantContactInformation.name = n.getStringValue(); },
        "notes": n => { tenantContactInformation.notes = n.getStringValue(); },
        "@odata.type": n => { tenantContactInformation.odataType = n.getStringValue(); },
        "phone": n => { tenantContactInformation.phone = n.getStringValue(); },
        "title": n => { tenantContactInformation.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantContract(tenantContract: Partial<TenantContract> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { tenantContract.backingStoreEnabled = true; },
        "contractType": n => { tenantContract.contractType = n.getNumberValue(); },
        "defaultDomainName": n => { tenantContract.defaultDomainName = n.getStringValue(); },
        "displayName": n => { tenantContract.displayName = n.getStringValue(); },
        "@odata.type": n => { tenantContract.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantCustomizedInformation(tenantCustomizedInformation: Partial<TenantCustomizedInformation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(tenantCustomizedInformation),
        "businessRelationship": n => { tenantCustomizedInformation.businessRelationship = n.getStringValue(); },
        "complianceRequirements": n => { tenantCustomizedInformation.complianceRequirements = n.getCollectionOfPrimitiveValues<string>(); },
        "contacts": n => { tenantCustomizedInformation.contacts = n.getCollectionOfObjectValues<TenantContactInformation>(createTenantContactInformationFromDiscriminatorValue); },
        "displayName": n => { tenantCustomizedInformation.displayName = n.getStringValue(); },
        "managedServicesPlans": n => { tenantCustomizedInformation.managedServicesPlans = n.getCollectionOfPrimitiveValues<string>(); },
        "note": n => { tenantCustomizedInformation.note = n.getStringValue(); },
        "noteLastModifiedDateTime": n => { tenantCustomizedInformation.noteLastModifiedDateTime = n.getDateValue(); },
        "partnerRelationshipManagerUserIds": n => { tenantCustomizedInformation.partnerRelationshipManagerUserIds = n.getCollectionOfPrimitiveValues<string>(); },
        "tenantId": n => { tenantCustomizedInformation.tenantId = n.getStringValue(); },
        "website": n => { tenantCustomizedInformation.website = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantCustomizedInformationCollectionResponse(tenantCustomizedInformationCollectionResponse: Partial<TenantCustomizedInformationCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(tenantCustomizedInformationCollectionResponse),
        "value": n => { tenantCustomizedInformationCollectionResponse.value = n.getCollectionOfObjectValues<TenantCustomizedInformation>(createTenantCustomizedInformationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantDetailedInformation(tenantDetailedInformation: Partial<TenantDetailedInformation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(tenantDetailedInformation),
        "city": n => { tenantDetailedInformation.city = n.getStringValue(); },
        "countryCode": n => { tenantDetailedInformation.countryCode = n.getStringValue(); },
        "countryName": n => { tenantDetailedInformation.countryName = n.getStringValue(); },
        "defaultDomainName": n => { tenantDetailedInformation.defaultDomainName = n.getStringValue(); },
        "displayName": n => { tenantDetailedInformation.displayName = n.getStringValue(); },
        "industryName": n => { tenantDetailedInformation.industryName = n.getStringValue(); },
        "region": n => { tenantDetailedInformation.region = n.getStringValue(); },
        "segmentName": n => { tenantDetailedInformation.segmentName = n.getStringValue(); },
        "tenantId": n => { tenantDetailedInformation.tenantId = n.getStringValue(); },
        "verticalName": n => { tenantDetailedInformation.verticalName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantDetailedInformationCollectionResponse(tenantDetailedInformationCollectionResponse: Partial<TenantDetailedInformationCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(tenantDetailedInformationCollectionResponse),
        "value": n => { tenantDetailedInformationCollectionResponse.value = n.getCollectionOfObjectValues<TenantDetailedInformation>(createTenantDetailedInformationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantGroup(tenantGroup: Partial<TenantGroup> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(tenantGroup),
        "allTenantsIncluded": n => { tenantGroup.allTenantsIncluded = n.getBooleanValue(); },
        "displayName": n => { tenantGroup.displayName = n.getStringValue(); },
        "managementActions": n => { tenantGroup.managementActions = n.getCollectionOfObjectValues<ManagementActionInfo>(createManagementActionInfoFromDiscriminatorValue); },
        "managementIntents": n => { tenantGroup.managementIntents = n.getCollectionOfObjectValues<ManagementIntentInfo>(createManagementIntentInfoFromDiscriminatorValue); },
        "tenantIds": n => { tenantGroup.tenantIds = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantGroupCollectionResponse(tenantGroupCollectionResponse: Partial<TenantGroupCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(tenantGroupCollectionResponse),
        "value": n => { tenantGroupCollectionResponse.value = n.getCollectionOfObjectValues<TenantGroup>(createTenantGroupFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantInfo(tenantInfo: Partial<TenantInfo> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { tenantInfo.backingStoreEnabled = true; },
        "@odata.type": n => { tenantInfo.odataType = n.getStringValue(); },
        "tenantId": n => { tenantInfo.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantStatusInformation(tenantStatusInformation: Partial<TenantStatusInformation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { tenantStatusInformation.backingStoreEnabled = true; },
        "delegatedPrivilegeStatus": n => { tenantStatusInformation.delegatedPrivilegeStatus = n.getEnumValue<DelegatedPrivilegeStatus>(DelegatedPrivilegeStatusObject); },
        "lastDelegatedPrivilegeRefreshDateTime": n => { tenantStatusInformation.lastDelegatedPrivilegeRefreshDateTime = n.getDateValue(); },
        "@odata.type": n => { tenantStatusInformation.odataType = n.getStringValue(); },
        "offboardedByUserId": n => { tenantStatusInformation.offboardedByUserId = n.getStringValue(); },
        "offboardedDateTime": n => { tenantStatusInformation.offboardedDateTime = n.getDateValue(); },
        "onboardedByUserId": n => { tenantStatusInformation.onboardedByUserId = n.getStringValue(); },
        "onboardedDateTime": n => { tenantStatusInformation.onboardedDateTime = n.getDateValue(); },
        "onboardingStatus": n => { tenantStatusInformation.onboardingStatus = n.getEnumValue<TenantOnboardingStatus>(TenantOnboardingStatusObject); },
        "tenantOnboardingEligibilityReason": n => { tenantStatusInformation.tenantOnboardingEligibilityReason = n.getEnumValue<TenantOnboardingEligibilityReason>(TenantOnboardingEligibilityReasonObject); },
        "workloadStatuses": n => { tenantStatusInformation.workloadStatuses = n.getCollectionOfObjectValues<WorkloadStatus>(createWorkloadStatusFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantTag(tenantTag: Partial<TenantTag> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(tenantTag),
        "createdByUserId": n => { tenantTag.createdByUserId = n.getStringValue(); },
        "createdDateTime": n => { tenantTag.createdDateTime = n.getDateValue(); },
        "deletedDateTime": n => { tenantTag.deletedDateTime = n.getDateValue(); },
        "description": n => { tenantTag.description = n.getStringValue(); },
        "displayName": n => { tenantTag.displayName = n.getStringValue(); },
        "lastActionByUserId": n => { tenantTag.lastActionByUserId = n.getStringValue(); },
        "lastActionDateTime": n => { tenantTag.lastActionDateTime = n.getDateValue(); },
        "tenants": n => { tenantTag.tenants = n.getCollectionOfObjectValues<TenantInfo>(createTenantInfoFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantTagCollectionResponse(tenantTagCollectionResponse: Partial<TenantTagCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(tenantTagCollectionResponse),
        "value": n => { tenantTagCollectionResponse.value = n.getCollectionOfObjectValues<TenantTag>(createTenantTagFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWindowsDeviceMalwareState(windowsDeviceMalwareState: Partial<WindowsDeviceMalwareState> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(windowsDeviceMalwareState),
        "additionalInformationUrl": n => { windowsDeviceMalwareState.additionalInformationUrl = n.getStringValue(); },
        "detectionCount": n => { windowsDeviceMalwareState.detectionCount = n.getNumberValue(); },
        "deviceDeleted": n => { windowsDeviceMalwareState.deviceDeleted = n.getBooleanValue(); },
        "initialDetectionDateTime": n => { windowsDeviceMalwareState.initialDetectionDateTime = n.getDateValue(); },
        "lastRefreshedDateTime": n => { windowsDeviceMalwareState.lastRefreshedDateTime = n.getDateValue(); },
        "lastStateChangeDateTime": n => { windowsDeviceMalwareState.lastStateChangeDateTime = n.getDateValue(); },
        "malwareCategory": n => { windowsDeviceMalwareState.malwareCategory = n.getStringValue(); },
        "malwareDisplayName": n => { windowsDeviceMalwareState.malwareDisplayName = n.getStringValue(); },
        "malwareExecutionState": n => { windowsDeviceMalwareState.malwareExecutionState = n.getStringValue(); },
        "malwareId": n => { windowsDeviceMalwareState.malwareId = n.getStringValue(); },
        "malwareSeverity": n => { windowsDeviceMalwareState.malwareSeverity = n.getStringValue(); },
        "malwareThreatState": n => { windowsDeviceMalwareState.malwareThreatState = n.getStringValue(); },
        "managedDeviceId": n => { windowsDeviceMalwareState.managedDeviceId = n.getStringValue(); },
        "managedDeviceName": n => { windowsDeviceMalwareState.managedDeviceName = n.getStringValue(); },
        "tenantDisplayName": n => { windowsDeviceMalwareState.tenantDisplayName = n.getStringValue(); },
        "tenantId": n => { windowsDeviceMalwareState.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWindowsDeviceMalwareStateCollectionResponse(windowsDeviceMalwareStateCollectionResponse: Partial<WindowsDeviceMalwareStateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(windowsDeviceMalwareStateCollectionResponse),
        "value": n => { windowsDeviceMalwareStateCollectionResponse.value = n.getCollectionOfObjectValues<WindowsDeviceMalwareState>(createWindowsDeviceMalwareStateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWindowsProtectionState(windowsProtectionState: Partial<WindowsProtectionState> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(windowsProtectionState),
        "antiMalwareVersion": n => { windowsProtectionState.antiMalwareVersion = n.getStringValue(); },
        "attentionRequired": n => { windowsProtectionState.attentionRequired = n.getBooleanValue(); },
        "deviceDeleted": n => { windowsProtectionState.deviceDeleted = n.getBooleanValue(); },
        "devicePropertyRefreshDateTime": n => { windowsProtectionState.devicePropertyRefreshDateTime = n.getDateValue(); },
        "engineVersion": n => { windowsProtectionState.engineVersion = n.getStringValue(); },
        "fullScanOverdue": n => { windowsProtectionState.fullScanOverdue = n.getBooleanValue(); },
        "fullScanRequired": n => { windowsProtectionState.fullScanRequired = n.getBooleanValue(); },
        "lastFullScanDateTime": n => { windowsProtectionState.lastFullScanDateTime = n.getDateValue(); },
        "lastFullScanSignatureVersion": n => { windowsProtectionState.lastFullScanSignatureVersion = n.getStringValue(); },
        "lastQuickScanDateTime": n => { windowsProtectionState.lastQuickScanDateTime = n.getDateValue(); },
        "lastQuickScanSignatureVersion": n => { windowsProtectionState.lastQuickScanSignatureVersion = n.getStringValue(); },
        "lastRefreshedDateTime": n => { windowsProtectionState.lastRefreshedDateTime = n.getDateValue(); },
        "lastReportedDateTime": n => { windowsProtectionState.lastReportedDateTime = n.getDateValue(); },
        "malwareProtectionEnabled": n => { windowsProtectionState.malwareProtectionEnabled = n.getBooleanValue(); },
        "managedDeviceHealthState": n => { windowsProtectionState.managedDeviceHealthState = n.getStringValue(); },
        "managedDeviceId": n => { windowsProtectionState.managedDeviceId = n.getStringValue(); },
        "managedDeviceName": n => { windowsProtectionState.managedDeviceName = n.getStringValue(); },
        "networkInspectionSystemEnabled": n => { windowsProtectionState.networkInspectionSystemEnabled = n.getBooleanValue(); },
        "quickScanOverdue": n => { windowsProtectionState.quickScanOverdue = n.getBooleanValue(); },
        "realTimeProtectionEnabled": n => { windowsProtectionState.realTimeProtectionEnabled = n.getBooleanValue(); },
        "rebootRequired": n => { windowsProtectionState.rebootRequired = n.getBooleanValue(); },
        "signatureUpdateOverdue": n => { windowsProtectionState.signatureUpdateOverdue = n.getBooleanValue(); },
        "signatureVersion": n => { windowsProtectionState.signatureVersion = n.getStringValue(); },
        "tenantDisplayName": n => { windowsProtectionState.tenantDisplayName = n.getStringValue(); },
        "tenantId": n => { windowsProtectionState.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWindowsProtectionStateCollectionResponse(windowsProtectionStateCollectionResponse: Partial<WindowsProtectionStateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(windowsProtectionStateCollectionResponse),
        "value": n => { windowsProtectionStateCollectionResponse.value = n.getCollectionOfObjectValues<WindowsProtectionState>(createWindowsProtectionStateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWorkloadAction(workloadAction: Partial<WorkloadAction> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "actionId": n => { workloadAction.actionId = n.getStringValue(); },
        "backingStoreEnabled": n => { workloadAction.backingStoreEnabled = true; },
        "category": n => { workloadAction.category = n.getEnumValue<WorkloadActionCategory>(WorkloadActionCategoryObject); },
        "description": n => { workloadAction.description = n.getStringValue(); },
        "displayName": n => { workloadAction.displayName = n.getStringValue(); },
        "licenses": n => { workloadAction.licenses = n.getCollectionOfPrimitiveValues<string>(); },
        "@odata.type": n => { workloadAction.odataType = n.getStringValue(); },
        "service": n => { workloadAction.service = n.getStringValue(); },
        "settings": n => { workloadAction.settings = n.getCollectionOfObjectValues<Setting>(createSettingFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWorkloadActionDeploymentStatus(workloadActionDeploymentStatus: Partial<WorkloadActionDeploymentStatus> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "actionId": n => { workloadActionDeploymentStatus.actionId = n.getStringValue(); },
        "backingStoreEnabled": n => { workloadActionDeploymentStatus.backingStoreEnabled = true; },
        "deployedPolicyId": n => { workloadActionDeploymentStatus.deployedPolicyId = n.getStringValue(); },
        "error": n => { workloadActionDeploymentStatus.errorEscaped = n.getObjectValue<GenericError>(createGenericErrorFromDiscriminatorValue); },
        "excludeGroups": n => { workloadActionDeploymentStatus.excludeGroups = n.getCollectionOfPrimitiveValues<string>(); },
        "includeAllUsers": n => { workloadActionDeploymentStatus.includeAllUsers = n.getBooleanValue(); },
        "includeGroups": n => { workloadActionDeploymentStatus.includeGroups = n.getCollectionOfPrimitiveValues<string>(); },
        "lastDeploymentDateTime": n => { workloadActionDeploymentStatus.lastDeploymentDateTime = n.getDateValue(); },
        "@odata.type": n => { workloadActionDeploymentStatus.odataType = n.getStringValue(); },
        "status": n => { workloadActionDeploymentStatus.status = n.getEnumValue<WorkloadActionStatus>(WorkloadActionStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWorkloadStatus(workloadStatus: Partial<WorkloadStatus> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { workloadStatus.backingStoreEnabled = true; },
        "displayName": n => { workloadStatus.displayName = n.getStringValue(); },
        "@odata.type": n => { workloadStatus.odataType = n.getStringValue(); },
        "offboardedDateTime": n => { workloadStatus.offboardedDateTime = n.getDateValue(); },
        "onboardedDateTime": n => { workloadStatus.onboardedDateTime = n.getDateValue(); },
        "onboardingStatus": n => { workloadStatus.onboardingStatus = n.getEnumValue<WorkloadOnboardingStatus>(WorkloadOnboardingStatusObject); },
    }
}
export interface DeviceAppPerformance extends Entity, Parsable {
    /**
     * The appFriendlyName property
     */
    appFriendlyName?: string | null;
    /**
     * The appName property
     */
    appName?: string | null;
    /**
     * The appPublisher property
     */
    appPublisher?: string | null;
    /**
     * The appVersion property
     */
    appVersion?: string | null;
    /**
     * The deviceId property
     */
    deviceId?: string | null;
    /**
     * The deviceManufacturer property
     */
    deviceManufacturer?: string | null;
    /**
     * The deviceModel property
     */
    deviceModel?: string | null;
    /**
     * The deviceName property
     */
    deviceName?: string | null;
    /**
     * The healthStatus property
     */
    healthStatus?: string | null;
    /**
     * The isLatestUsedVersion property
     */
    isLatestUsedVersion?: number | null;
    /**
     * The isMostUsedVersion property
     */
    isMostUsedVersion?: number | null;
    /**
     * The lastUpdatedDateTime property
     */
    lastUpdatedDateTime?: Date | null;
    /**
     * The tenantDisplayName property
     */
    tenantDisplayName?: string | null;
    /**
     * The tenantId property
     */
    tenantId?: string | null;
    /**
     * The totalAppCrashCount property
     */
    totalAppCrashCount?: number | null;
    /**
     * The totalAppFreezeCount property
     */
    totalAppFreezeCount?: number | null;
}
export interface DeviceAppPerformanceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: DeviceAppPerformance[] | null;
}
export interface DeviceCompliancePolicySettingStateSummary extends Entity, Parsable {
    /**
     * The number of devices in a conflict state. Optional. Read-only.
     */
    conflictDeviceCount?: number | null;
    /**
     * The number of devices in an error state. Optional. Read-only.
     */
    errorDeviceCount?: number | null;
    /**
     * The number of devices in a failed state. Optional. Read-only.
     */
    failedDeviceCount?: number | null;
    /**
     * The identifer for the Microsoft Intune account. Required. Read-only.
     */
    intuneAccountId?: string | null;
    /**
     * The identifier for the Intune setting. Optional. Read-only.
     */
    intuneSettingId?: string | null;
    /**
     * Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.
     */
    lastRefreshedDateTime?: Date | null;
    /**
     * The number of devices in a not applicable state. Optional. Read-only.
     */
    notApplicableDeviceCount?: number | null;
    /**
     * The number of devices in a pending state. Optional. Read-only.
     */
    pendingDeviceCount?: number | null;
    /**
     * The type for the device compliance policy. Optional. Read-only.
     */
    policyType?: string | null;
    /**
     * The name for the setting within the device compliance policy. Optional. Read-only.
     */
    settingName?: string | null;
    /**
     * The number of devices in a succeeded state. Optional. Read-only.
     */
    succeededDeviceCount?: number | null;
    /**
     * The display name for the managed tenant. Required. Read-only.
     */
    tenantDisplayName?: string | null;
    /**
     * The Microsoft Entra tenant identifier for the managed tenant. Required. Read-only.
     */
    tenantId?: string | null;
}
export interface DeviceCompliancePolicySettingStateSummaryCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: DeviceCompliancePolicySettingStateSummary[] | null;
}
export interface DeviceHealthStatus extends Entity, Parsable {
    /**
     * The blueScreenCount property
     */
    blueScreenCount?: number | null;
    /**
     * The bootTotalDurationInSeconds property
     */
    bootTotalDurationInSeconds?: number | null;
    /**
     * The deviceId property
     */
    deviceId?: string | null;
    /**
     * The deviceMake property
     */
    deviceMake?: string | null;
    /**
     * The deviceModel property
     */
    deviceModel?: string | null;
    /**
     * The deviceName property
     */
    deviceName?: string | null;
    /**
     * The healthStatus property
     */
    healthStatus?: string | null;
    /**
     * The lastUpdatedDateTime property
     */
    lastUpdatedDateTime?: Date | null;
    /**
     * The osVersion property
     */
    osVersion?: string | null;
    /**
     * The primaryDiskType property
     */
    primaryDiskType?: string | null;
    /**
     * The restartCount property
     */
    restartCount?: number | null;
    /**
     * The startupPerformanceScore property
     */
    startupPerformanceScore?: number | null;
    /**
     * The tenantDisplayName property
     */
    tenantDisplayName?: string | null;
    /**
     * The tenantId property
     */
    tenantId?: string | null;
    /**
     * The topProcesses property
     */
    topProcesses?: string | null;
}
export interface DeviceHealthStatusCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: DeviceHealthStatus[] | null;
}
export interface Email extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The emailAddress property
     */
    emailAddress?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface GraphAPIErrorDetails extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The code property
     */
    code?: string | null;
    /**
     * The message property
     */
    message?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface ManagedDeviceCompliance extends Entity, Parsable {
    /**
     * Compliance state of the device. This property is read-only. Possible values are: unknown, compliant, noncompliant, conflict, error, inGracePeriod, configManager. Optional. Read-only.
     */
    complianceStatus?: string | null;
    /**
     * Platform of the device. This property is read-only. Possible values are: desktop, windowsRT, winMO6, nokia, windowsPhone, mac, winCE, winEmbedded, iPhone, iPad, iPod, android, iSocConsumer, unix, macMDM, holoLens, surfaceHub, androidForWork, androidEnterprise, windows10x, androidnGMS, chromeOS, linux, blackberry, palm, unknown, cloudPC.  Optional. Read-only.
     */
    deviceType?: string | null;
    /**
     * The date and time when the grace period will expire. Optional. Read-only.
     */
    inGracePeriodUntilDateTime?: Date | null;
    /**
     * Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.
     */
    lastRefreshedDateTime?: Date | null;
    /**
     * The date and time that the device last completed a successful sync with Microsoft Endpoint Manager. Optional. Read-only.
     */
    lastSyncDateTime?: Date | null;
    /**
     * The identifier for the managed device in Microsoft Endpoint Manager. Optional. Read-only.
     */
    managedDeviceId?: string | null;
    /**
     * The display name for the managed device. Optional. Read-only.
     */
    managedDeviceName?: string | null;
    /**
     * The manufacture for the device. Optional. Read-only.
     */
    manufacturer?: string | null;
    /**
     * The model for the device. Optional. Read-only.
     */
    model?: string | null;
    /**
     * The description of the operating system for the managed device. Optional. Read-only.
     */
    osDescription?: string | null;
    /**
     * The version of the operating system for the managed device. Optional. Read-only.
     */
    osVersion?: string | null;
    /**
     * The type of owner for the managed device. Optional. Read-only.
     */
    ownerType?: string | null;
    /**
     * The display name for the managed tenant. Optional. Read-only.
     */
    tenantDisplayName?: string | null;
    /**
     * The Microsoft Entra tenant identifier for the managed tenant. Optional. Read-only.
     */
    tenantId?: string | null;
}
export interface ManagedDeviceComplianceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagedDeviceCompliance[] | null;
}
export interface ManagedDeviceComplianceTrend extends Entity, Parsable {
    /**
     * The number of devices with a compliant status. Required. Read-only.
     */
    compliantDeviceCount?: number | null;
    /**
     * The number of devices manged by Configuration Manager. Required. Read-only.
     */
    configManagerDeviceCount?: number | null;
    /**
     * The date and time compliance snapshot was performed. Required. Read-only.
     */
    countDateTime?: string | null;
    /**
     * The number of devices with an error status. Required. Read-only.
     */
    errorDeviceCount?: number | null;
    /**
     * The number of devices that are in a grace period status. Required. Read-only.
     */
    inGracePeriodDeviceCount?: number | null;
    /**
     * The number of devices that are in a non-compliant status. Required. Read-only.
     */
    noncompliantDeviceCount?: number | null;
    /**
     * The display name for the managed tenant. Optional. Read-only.
     */
    tenantDisplayName?: string | null;
    /**
     * The Microsoft Entra tenant identifier for the managed tenant. Optional. Read-only.
     */
    tenantId?: string | null;
    /**
     * The number of devices in an unknown status. Required. Read-only.
     */
    unknownDeviceCount?: number | null;
}
export interface ManagedDeviceComplianceTrendCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagedDeviceComplianceTrend[] | null;
}
export interface ManagedTenant extends Entity, Parsable {
    /**
     * Aggregate view of device compliance policies across managed tenants.
     */
    aggregatedPolicyCompliances?: AggregatedPolicyCompliance[] | null;
    /**
     * The appPerformances property
     */
    appPerformances?: AppPerformance[] | null;
    /**
     * The collection of audit events across managed tenants.
     */
    auditEvents?: AuditEvent[] | null;
    /**
     * The collection of cloud PC connections across managed tenants.
     */
    cloudPcConnections?: CloudPcConnection[] | null;
    /**
     * The collection of cloud PC devices across managed tenants.
     */
    cloudPcDevices?: CloudPcDevice[] | null;
    /**
     * Overview of cloud PC information across managed tenants.
     */
    cloudPcsOverview?: CloudPcOverview[] | null;
    /**
     * Aggregate view of conditional access policy coverage across managed tenants.
     */
    conditionalAccessPolicyCoverages?: ConditionalAccessPolicyCoverage[] | null;
    /**
     * Summary information for user registration for multi-factor authentication and self service password reset across managed tenants.
     */
    credentialUserRegistrationsSummaries?: CredentialUserRegistrationsSummary[] | null;
    /**
     * The deviceAppPerformances property
     */
    deviceAppPerformances?: DeviceAppPerformance[] | null;
    /**
     * Summary information for device compliance policy setting states across managed tenants.
     */
    deviceCompliancePolicySettingStateSummaries?: DeviceCompliancePolicySettingStateSummary[] | null;
    /**
     * The deviceHealthStatuses property
     */
    deviceHealthStatuses?: DeviceHealthStatus[] | null;
    /**
     * The collection of compliance for managed devices across managed tenants.
     */
    managedDeviceCompliances?: ManagedDeviceCompliance[] | null;
    /**
     * Trend insights for device compliance across managed tenants.
     */
    managedDeviceComplianceTrends?: ManagedDeviceComplianceTrend[] | null;
    /**
     * The managedTenantAlertLogs property
     */
    managedTenantAlertLogs?: ManagedTenantAlertLog[] | null;
    /**
     * The managedTenantAlertRuleDefinitions property
     */
    managedTenantAlertRuleDefinitions?: ManagedTenantAlertRuleDefinition[] | null;
    /**
     * The managedTenantAlertRules property
     */
    managedTenantAlertRules?: ManagedTenantAlertRule[] | null;
    /**
     * The managedTenantAlerts property
     */
    managedTenantAlerts?: ManagedTenantAlert[] | null;
    /**
     * The managedTenantApiNotifications property
     */
    managedTenantApiNotifications?: ManagedTenantApiNotification[] | null;
    /**
     * The managedTenantEmailNotifications property
     */
    managedTenantEmailNotifications?: ManagedTenantEmailNotification[] | null;
    /**
     * The managedTenantTicketingEndpoints property
     */
    managedTenantTicketingEndpoints?: ManagedTenantTicketingEndpoint[] | null;
    /**
     * The collection of baseline management actions across managed tenants.
     */
    managementActions?: ManagementAction[] | null;
    /**
     * The tenant level status of management actions across managed tenants.
     */
    managementActionTenantDeploymentStatuses?: ManagementActionTenantDeploymentStatus[] | null;
    /**
     * The collection of baseline management intents across managed tenants.
     */
    managementIntents?: ManagementIntent[] | null;
    /**
     * The managementTemplateCollections property
     */
    managementTemplateCollections?: ManagementTemplateCollection[] | null;
    /**
     * The managementTemplateCollectionTenantSummaries property
     */
    managementTemplateCollectionTenantSummaries?: ManagementTemplateCollectionTenantSummary[] | null;
    /**
     * The collection of baseline management templates across managed tenants.
     */
    managementTemplates?: ManagementTemplate[] | null;
    /**
     * The managementTemplateSteps property
     */
    managementTemplateSteps?: ManagementTemplateStep[] | null;
    /**
     * The managementTemplateStepTenantSummaries property
     */
    managementTemplateStepTenantSummaries?: ManagementTemplateStepTenantSummary[] | null;
    /**
     * The managementTemplateStepVersions property
     */
    managementTemplateStepVersions?: ManagementTemplateStepVersion[] | null;
    /**
     * The collection of role assignments to a signed-in user for a managed tenant.
     */
    myRoles?: MyRole[] | null;
    /**
     * The collection of a logical grouping of managed tenants used by the multi-tenant management platform.
     */
    tenantGroups?: TenantGroup[] | null;
    /**
     * The collection of tenants associated with the managing entity.
     */
    tenants?: Tenant[] | null;
    /**
     * The collection of tenant level customized information across managed tenants.
     */
    tenantsCustomizedInformation?: TenantCustomizedInformation[] | null;
    /**
     * The collection tenant level detailed information across managed tenants.
     */
    tenantsDetailedInformation?: TenantDetailedInformation[] | null;
    /**
     * The collection of tenant tags across managed tenants.
     */
    tenantTags?: TenantTag[] | null;
    /**
     * The state of malware for Windows devices, registered with Microsoft Endpoint Manager, across managed tenants.
     */
    windowsDeviceMalwareStates?: WindowsDeviceMalwareState[] | null;
    /**
     * The protection state for Windows devices, registered with Microsoft Endpoint Manager, across managed tenants.
     */
    windowsProtectionStates?: WindowsProtectionState[] | null;
}
export interface ManagedTenantAlert extends Entity, Parsable {
    /**
     * The alertData property
     */
    alertData?: AlertData | null;
    /**
     * The alertDataReferenceStrings property
     */
    alertDataReferenceStrings?: AlertDataReferenceString[] | null;
    /**
     * The alertLogs property
     */
    alertLogs?: ManagedTenantAlertLog[] | null;
    /**
     * The alertRule property
     */
    alertRule?: ManagedTenantAlertRule | null;
    /**
     * The alertRuleDisplayName property
     */
    alertRuleDisplayName?: string | null;
    /**
     * The apiNotifications property
     */
    apiNotifications?: ManagedTenantApiNotification[] | null;
    /**
     * The assignedToUserId property
     */
    assignedToUserId?: string | null;
    /**
     * The correlationCount property
     */
    correlationCount?: number | null;
    /**
     * The correlationId property
     */
    correlationId?: string | null;
    /**
     * The createdByUserId property
     */
    createdByUserId?: string | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The emailNotifications property
     */
    emailNotifications?: ManagedTenantEmailNotification[] | null;
    /**
     * The lastActionByUserId property
     */
    lastActionByUserId?: string | null;
    /**
     * The lastActionDateTime property
     */
    lastActionDateTime?: Date | null;
    /**
     * The message property
     */
    message?: string | null;
    /**
     * The severity property
     */
    severity?: AlertSeverity | null;
    /**
     * The status property
     */
    status?: AlertStatus | null;
    /**
     * The tenantId property
     */
    tenantId?: string | null;
    /**
     * The title property
     */
    title?: string | null;
}
export interface ManagedTenantAlertCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagedTenantAlert[] | null;
}
export interface ManagedTenantAlertLog extends Entity, Parsable {
    /**
     * The alert property
     */
    alert?: ManagedTenantAlert | null;
    /**
     * The content property
     */
    content?: AlertLogContent | null;
    /**
     * The createdByUserId property
     */
    createdByUserId?: string | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The lastActionByUserId property
     */
    lastActionByUserId?: string | null;
    /**
     * The lastActionDateTime property
     */
    lastActionDateTime?: Date | null;
}
export interface ManagedTenantAlertLogCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagedTenantAlertLog[] | null;
}
export interface ManagedTenantAlertRule extends Entity, Parsable {
    /**
     * The alertDisplayName property
     */
    alertDisplayName?: string | null;
    /**
     * The alerts property
     */
    alerts?: ManagedTenantAlert[] | null;
    /**
     * The alertTTL property
     */
    alertTTL?: number | null;
    /**
     * The createdByUserId property
     */
    createdByUserId?: string | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The lastActionByUserId property
     */
    lastActionByUserId?: string | null;
    /**
     * The lastActionDateTime property
     */
    lastActionDateTime?: Date | null;
    /**
     * The lastRunDateTime property
     */
    lastRunDateTime?: Date | null;
    /**
     * The notificationFinalDestinations property
     */
    notificationFinalDestinations?: NotificationDestination[] | null;
    /**
     * The ruleDefinition property
     */
    ruleDefinition?: ManagedTenantAlertRuleDefinition | null;
    /**
     * The severity property
     */
    severity?: AlertSeverity | null;
    /**
     * The targets property
     */
    targets?: NotificationTarget[] | null;
    /**
     * The tenantIds property
     */
    tenantIds?: TenantInfo[] | null;
}
export interface ManagedTenantAlertRuleCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagedTenantAlertRule[] | null;
}
export interface ManagedTenantAlertRuleDefinition extends Entity, Parsable {
    /**
     * The alertRules property
     */
    alertRules?: ManagedTenantAlertRule[] | null;
    /**
     * The createdByUserId property
     */
    createdByUserId?: string | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The definitionTemplate property
     */
    definitionTemplate?: AlertRuleDefinitionTemplate | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The lastActionByUserId property
     */
    lastActionByUserId?: string | null;
    /**
     * The lastActionDateTime property
     */
    lastActionDateTime?: Date | null;
}
export interface ManagedTenantAlertRuleDefinitionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagedTenantAlertRuleDefinition[] | null;
}
export interface ManagedTenantApiNotification extends Entity, Parsable {
    /**
     * The alert property
     */
    alert?: ManagedTenantAlert | null;
    /**
     * The createdByUserId property
     */
    createdByUserId?: string | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The isAcknowledged property
     */
    isAcknowledged?: boolean | null;
    /**
     * The lastActionByUserId property
     */
    lastActionByUserId?: string | null;
    /**
     * The lastActionDateTime property
     */
    lastActionDateTime?: Date | null;
    /**
     * The message property
     */
    message?: string | null;
    /**
     * The title property
     */
    title?: string | null;
    /**
     * The userId property
     */
    userId?: string | null;
}
export interface ManagedTenantApiNotificationCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagedTenantApiNotification[] | null;
}
export interface ManagedTenantEmailNotification extends Entity, Parsable {
    /**
     * The alert property
     */
    alert?: ManagedTenantAlert | null;
    /**
     * The createdByUserId property
     */
    createdByUserId?: string | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The emailAddresses property
     */
    emailAddresses?: Email[] | null;
    /**
     * The emailBody property
     */
    emailBody?: string | null;
    /**
     * The lastActionByUserId property
     */
    lastActionByUserId?: string | null;
    /**
     * The lastActionDateTime property
     */
    lastActionDateTime?: Date | null;
    /**
     * The subject property
     */
    subject?: string | null;
}
export interface ManagedTenantEmailNotificationCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagedTenantEmailNotification[] | null;
}
export interface ManagedTenantTicketingEndpoint extends Entity, Parsable {
    /**
     * The createdByUserId property
     */
    createdByUserId?: string | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The emailAddress property
     */
    emailAddress?: string | null;
    /**
     * The lastActionByUserId property
     */
    lastActionByUserId?: string | null;
    /**
     * The lastActionDateTime property
     */
    lastActionDateTime?: Date | null;
    /**
     * The phoneNumber property
     */
    phoneNumber?: string | null;
}
export interface ManagedTenantTicketingEndpointCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagedTenantTicketingEndpoint[] | null;
}
export interface ManagementAction extends Entity, Parsable {
    /**
     * The category property
     */
    category?: ManagementCategory | null;
    /**
     * The description for the management action. Optional. Read-only.
     */
    description?: string | null;
    /**
     * The display name for the management action. Optional. Read-only.
     */
    displayName?: string | null;
    /**
     * The reference for the management template used to generate the management action. Required. Read-only.
     */
    referenceTemplateId?: string | null;
    /**
     * The referenceTemplateVersion property
     */
    referenceTemplateVersion?: number | null;
    /**
     * The collection of workload actions associated with the management action. Required. Read-only.
     */
    workloadActions?: WorkloadAction[] | null;
}
export interface ManagementActionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagementAction[] | null;
}
export interface ManagementActionDeploymentStatus extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The identifier for the management action. Required. Read-only.
     */
    managementActionId?: string | null;
    /**
     * The management template identifier that was used to generate the management action. Required. Read-only.
     */
    managementTemplateId?: string | null;
    /**
     * The managementTemplateVersion property
     */
    managementTemplateVersion?: number | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The status property
     */
    status?: ManagementActionStatus | null;
    /**
     * The collection of workload action deployment statues for the given management action. Optional.
     */
    workloadActionDeploymentStatuses?: WorkloadActionDeploymentStatus[] | null;
}
export interface ManagementActionInfo extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The identifier for the management action. Required. Read-only.
     */
    managementActionId?: string | null;
    /**
     * The identifier for the management template. Required. Read-only.
     */
    managementTemplateId?: string | null;
    /**
     * The managementTemplateVersion property
     */
    managementTemplateVersion?: number | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type ManagementActionStatus = (typeof ManagementActionStatusObject)[keyof typeof ManagementActionStatusObject];
export interface ManagementActionTenantDeploymentStatus extends Entity, Parsable {
    /**
     * The collection of deployment status for each instance of a management action. Optional.
     */
    statuses?: ManagementActionDeploymentStatus[] | null;
    /**
     * The identifier for the tenant group that is associated with the management action. Required. Read-only.
     */
    tenantGroupId?: string | null;
    /**
     * The Microsoft Entra tenant identifier for the managed tenant. Required. Read-only.
     */
    tenantId?: string | null;
}
export interface ManagementActionTenantDeploymentStatusCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagementActionTenantDeploymentStatus[] | null;
}
export type ManagementCategory = (typeof ManagementCategoryObject)[keyof typeof ManagementCategoryObject];
export interface ManagementIntent extends Entity, Parsable {
    /**
     * The display name for the management intent. Optional. Read-only.
     */
    displayName?: string | null;
    /**
     * A flag indicating whether the management intent is global. Required. Read-only.
     */
    isGlobal?: boolean | null;
    /**
     * The collection of management templates associated with the management intent. Optional. Read-only.
     */
    managementTemplates?: ManagementTemplateDetailedInfo[] | null;
}
export interface ManagementIntentCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagementIntent[] | null;
}
export interface ManagementIntentInfo extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The display name for the management intent. Optional. Read-only.
     */
    managementIntentDisplayName?: string | null;
    /**
     * The identifier for the management intent. Required. Read-only.
     */
    managementIntentId?: string | null;
    /**
     * The collection of management template information associated with the management intent. Optional. Read-only.
     */
    managementTemplates?: ManagementTemplateDetailedInfo[] | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type ManagementParameterValueType = (typeof ManagementParameterValueTypeObject)[keyof typeof ManagementParameterValueTypeObject];
export type ManagementProvider = (typeof ManagementProviderObject)[keyof typeof ManagementProviderObject];
export interface ManagementTemplate extends Entity, Parsable {
    /**
     * The management category for the management template. Possible values are: custom, devices, identity, unknownFutureValue. Required. Read-only.
     */
    category?: ManagementCategory | null;
    /**
     * The createdByUserId property
     */
    createdByUserId?: string | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The description for the management template. Optional. Read-only.
     */
    description?: string | null;
    /**
     * The display name for the management template. Required. Read-only.
     */
    displayName?: string | null;
    /**
     * The informationLinks property
     */
    informationLinks?: ActionUrl[] | null;
    /**
     * The lastActionByUserId property
     */
    lastActionByUserId?: string | null;
    /**
     * The lastActionDateTime property
     */
    lastActionDateTime?: Date | null;
    /**
     * The managementTemplateCollections property
     */
    managementTemplateCollections?: ManagementTemplateCollection[] | null;
    /**
     * The managementTemplateSteps property
     */
    managementTemplateSteps?: ManagementTemplateStep[] | null;
    /**
     * The collection of parameters used by the management template. Optional. Read-only.
     */
    parameters?: TemplateParameter[] | null;
    /**
     * The priority property
     */
    priority?: number | null;
    /**
     * The provider property
     */
    provider?: ManagementProvider | null;
    /**
     * The userImpact property
     */
    userImpact?: string | null;
    /**
     * The version property
     */
    version?: number | null;
    /**
     * The collection of workload actions associated with the management template. Optional. Read-only.
     */
    workloadActions?: WorkloadAction[] | null;
}
export interface ManagementTemplateCollection extends Entity, Parsable {
    /**
     * The createdByUserId property
     */
    createdByUserId?: string | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The lastActionByUserId property
     */
    lastActionByUserId?: string | null;
    /**
     * The lastActionDateTime property
     */
    lastActionDateTime?: Date | null;
    /**
     * The managementTemplates property
     */
    managementTemplates?: ManagementTemplate[] | null;
}
export interface ManagementTemplateCollectionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagementTemplateCollection[] | null;
}
export interface ManagementTemplateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagementTemplate[] | null;
}
export interface ManagementTemplateCollectionTenantSummary extends Entity, Parsable {
    /**
     * The completeStepsCount property
     */
    completeStepsCount?: number | null;
    /**
     * The completeUsersCount property
     */
    completeUsersCount?: number | null;
    /**
     * The createdByUserId property
     */
    createdByUserId?: string | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The dismissedStepsCount property
     */
    dismissedStepsCount?: number | null;
    /**
     * The excludedUsersCount property
     */
    excludedUsersCount?: number | null;
    /**
     * The excludedUsersDistinctCount property
     */
    excludedUsersDistinctCount?: number | null;
    /**
     * The incompleteStepsCount property
     */
    incompleteStepsCount?: number | null;
    /**
     * The incompleteUsersCount property
     */
    incompleteUsersCount?: number | null;
    /**
     * The ineligibleStepsCount property
     */
    ineligibleStepsCount?: number | null;
    /**
     * The isComplete property
     */
    isComplete?: boolean | null;
    /**
     * The lastActionByUserId property
     */
    lastActionByUserId?: string | null;
    /**
     * The lastActionDateTime property
     */
    lastActionDateTime?: Date | null;
    /**
     * The managementTemplateCollectionDisplayName property
     */
    managementTemplateCollectionDisplayName?: string | null;
    /**
     * The managementTemplateCollectionId property
     */
    managementTemplateCollectionId?: string | null;
    /**
     * The regressedStepsCount property
     */
    regressedStepsCount?: number | null;
    /**
     * The regressedUsersCount property
     */
    regressedUsersCount?: number | null;
    /**
     * The tenantId property
     */
    tenantId?: string | null;
    /**
     * The unlicensedUsersCount property
     */
    unlicensedUsersCount?: number | null;
}
export interface ManagementTemplateCollectionTenantSummaryCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagementTemplateCollectionTenantSummary[] | null;
}
export type ManagementTemplateDeploymentStatus = (typeof ManagementTemplateDeploymentStatusObject)[keyof typeof ManagementTemplateDeploymentStatusObject];
export interface ManagementTemplateDetailedInfo extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The category property
     */
    category?: ManagementCategory | null;
    /**
     * The display name for the management template. Required. Read-only.
     */
    displayName?: string | null;
    /**
     * The unique identifier for the management template. Required. Read-only.
     */
    managementTemplateId?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The version property
     */
    version?: number | null;
}
export interface ManagementTemplateStep extends Entity, Parsable {
    /**
     * The acceptedVersion property
     */
    acceptedVersion?: ManagementTemplateStepVersion | null;
    /**
     * The category property
     */
    category?: ManagementCategory | null;
    /**
     * The createdByUserId property
     */
    createdByUserId?: string | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The informationLinks property
     */
    informationLinks?: ActionUrl[] | null;
    /**
     * The lastActionByUserId property
     */
    lastActionByUserId?: string | null;
    /**
     * The lastActionDateTime property
     */
    lastActionDateTime?: Date | null;
    /**
     * The managementTemplate property
     */
    managementTemplate?: ManagementTemplate | null;
    /**
     * The portalLink property
     */
    portalLink?: ActionUrl | null;
    /**
     * The priority property
     */
    priority?: number | null;
    /**
     * The userImpact property
     */
    userImpact?: string | null;
    /**
     * The versions property
     */
    versions?: ManagementTemplateStepVersion[] | null;
}
export interface ManagementTemplateStepCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagementTemplateStep[] | null;
}
export interface ManagementTemplateStepDeployment extends Entity, Parsable {
    /**
     * The createdByUserId property
     */
    createdByUserId?: string | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The error property
     */
    errorEscaped?: GraphAPIErrorDetails | null;
    /**
     * The lastActionByUserId property
     */
    lastActionByUserId?: string | null;
    /**
     * The lastActionDateTime property
     */
    lastActionDateTime?: Date | null;
    /**
     * The status property
     */
    status?: ManagementTemplateDeploymentStatus | null;
    /**
     * The templateStepVersion property
     */
    templateStepVersion?: ManagementTemplateStepVersion | null;
    /**
     * The tenantId property
     */
    tenantId?: string | null;
}
export interface ManagementTemplateStepDeploymentCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagementTemplateStepDeployment[] | null;
}
export interface ManagementTemplateStepTenantSummary extends Entity, Parsable {
    /**
     * The assignedTenantsCount property
     */
    assignedTenantsCount?: number | null;
    /**
     * The compliantTenantsCount property
     */
    compliantTenantsCount?: number | null;
    /**
     * The createdByUserId property
     */
    createdByUserId?: string | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The dismissedTenantsCount property
     */
    dismissedTenantsCount?: number | null;
    /**
     * The ineligibleTenantsCount property
     */
    ineligibleTenantsCount?: number | null;
    /**
     * The lastActionByUserId property
     */
    lastActionByUserId?: string | null;
    /**
     * The lastActionDateTime property
     */
    lastActionDateTime?: Date | null;
    /**
     * The managementTemplateCollectionDisplayName property
     */
    managementTemplateCollectionDisplayName?: string | null;
    /**
     * The managementTemplateCollectionId property
     */
    managementTemplateCollectionId?: string | null;
    /**
     * The managementTemplateDisplayName property
     */
    managementTemplateDisplayName?: string | null;
    /**
     * The managementTemplateId property
     */
    managementTemplateId?: string | null;
    /**
     * The managementTemplateStepDisplayName property
     */
    managementTemplateStepDisplayName?: string | null;
    /**
     * The managementTemplateStepId property
     */
    managementTemplateStepId?: string | null;
    /**
     * The notCompliantTenantsCount property
     */
    notCompliantTenantsCount?: number | null;
}
export interface ManagementTemplateStepTenantSummaryCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagementTemplateStepTenantSummary[] | null;
}
export interface ManagementTemplateStepVersion extends Entity, Parsable {
    /**
     * The acceptedFor property
     */
    acceptedFor?: ManagementTemplateStep | null;
    /**
     * The contentMarkdown property
     */
    contentMarkdown?: string | null;
    /**
     * The createdByUserId property
     */
    createdByUserId?: string | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The deployments property
     */
    deployments?: ManagementTemplateStepDeployment[] | null;
    /**
     * The lastActionByUserId property
     */
    lastActionByUserId?: string | null;
    /**
     * The lastActionDateTime property
     */
    lastActionDateTime?: Date | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The templateStep property
     */
    templateStep?: ManagementTemplateStep | null;
    /**
     * The version property
     */
    version?: number | null;
    /**
     * The versionInformation property
     */
    versionInformation?: string | null;
}
export interface ManagementTemplateStepVersionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagementTemplateStepVersion[] | null;
}
export interface MyRole extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * A collection of role assignments for the managed tenant.
     */
    assignments?: RoleAssignment[] | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The Microsoft Entra tenant identifier for the managed tenant. Optional. Read-only.
     */
    tenantId?: string | null;
}
export interface MyRoleCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: MyRole[] | null;
}
export type NotificationDestination = (typeof NotificationDestinationObject)[keyof typeof NotificationDestinationObject];
export interface NotificationTarget extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface RoleAssignment extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The type of the admin relationship(s) associated with the role assignment. Possible values are: none, delegatedAdminPrivileges, unknownFutureValue, granularDelegatedAdminPrivileges, delegatedAndGranularDelegetedAdminPrivileges. Use the Prefer: include-unknown-enum-members request header to get the following values from this evolvable enum: granularDelegatedAdminPrivileges , delegatedAndGranularDelegetedAdminPrivileges.
     */
    assignmentType?: DelegatedPrivilegeStatus | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The collection of roles assigned.
     */
    roles?: RoleDefinition[] | null;
}
export interface RoleDefinition extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The description for the role.
     */
    description?: string | null;
    /**
     * The display name for the role assignment.
     */
    displayName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The unique identifier for the template.
     */
    templateId?: string | null;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAggregatedPolicyCompliance(writer: SerializationWriter, aggregatedPolicyCompliance: Partial<AggregatedPolicyCompliance> | undefined | null = {}) : void {
    if (aggregatedPolicyCompliance) {
        serializeEntity(writer, aggregatedPolicyCompliance)
        writer.writeStringValue("compliancePolicyId", aggregatedPolicyCompliance.compliancePolicyId);
        writer.writeStringValue("compliancePolicyName", aggregatedPolicyCompliance.compliancePolicyName);
        writer.writeStringValue("compliancePolicyPlatform", aggregatedPolicyCompliance.compliancePolicyPlatform);
        writer.writeStringValue("compliancePolicyType", aggregatedPolicyCompliance.compliancePolicyType);
        writer.writeDateValue("lastRefreshedDateTime", aggregatedPolicyCompliance.lastRefreshedDateTime);
        writer.writeNumberValue("numberOfCompliantDevices", aggregatedPolicyCompliance.numberOfCompliantDevices);
        writer.writeNumberValue("numberOfErrorDevices", aggregatedPolicyCompliance.numberOfErrorDevices);
        writer.writeNumberValue("numberOfNonCompliantDevices", aggregatedPolicyCompliance.numberOfNonCompliantDevices);
        writer.writeDateValue("policyModifiedDateTime", aggregatedPolicyCompliance.policyModifiedDateTime);
        writer.writeStringValue("tenantDisplayName", aggregatedPolicyCompliance.tenantDisplayName);
        writer.writeStringValue("tenantId", aggregatedPolicyCompliance.tenantId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAggregatedPolicyComplianceCollectionResponse(writer: SerializationWriter, aggregatedPolicyComplianceCollectionResponse: Partial<AggregatedPolicyComplianceCollectionResponse> | undefined | null = {}) : void {
    if (aggregatedPolicyComplianceCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, aggregatedPolicyComplianceCollectionResponse)
        writer.writeCollectionOfObjectValues<AggregatedPolicyCompliance>("value", aggregatedPolicyComplianceCollectionResponse.value, serializeAggregatedPolicyCompliance);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlertData(writer: SerializationWriter, alertData: Partial<AlertData> | undefined | null = {}) : void {
    if (alertData) {
        writer.writeStringValue("displayName", alertData.displayName);
        writer.writeStringValue("@odata.type", alertData.odataType);
        writer.writeAdditionalData(alertData.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlertDataReferenceString(writer: SerializationWriter, alertDataReferenceString: Partial<AlertDataReferenceString> | undefined | null = {}) : void {
    if (alertDataReferenceString) {
        writer.writeStringValue("displayName", alertDataReferenceString.displayName);
        writer.writeStringValue("@odata.type", alertDataReferenceString.odataType);
        writer.writeAdditionalData(alertDataReferenceString.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlertLogContent(writer: SerializationWriter, alertLogContent: Partial<AlertLogContent> | undefined | null = {}) : void {
    if (alertLogContent) {
        writer.writeStringValue("displayName", alertLogContent.displayName);
        writer.writeStringValue("@odata.type", alertLogContent.odataType);
        writer.writeAdditionalData(alertLogContent.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlertRuleDefinitionTemplate(writer: SerializationWriter, alertRuleDefinitionTemplate: Partial<AlertRuleDefinitionTemplate> | undefined | null = {}) : void {
    if (alertRuleDefinitionTemplate) {
        writer.writeEnumValue<AlertSeverity>("defaultSeverity", alertRuleDefinitionTemplate.defaultSeverity);
        writer.writeStringValue("@odata.type", alertRuleDefinitionTemplate.odataType);
        writer.writeAdditionalData(alertRuleDefinitionTemplate.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAppPerformance(writer: SerializationWriter, appPerformance: Partial<AppPerformance> | undefined | null = {}) : void {
    if (appPerformance) {
        serializeEntity(writer, appPerformance)
        writer.writeStringValue("appFriendlyName", appPerformance.appFriendlyName);
        writer.writeStringValue("appName", appPerformance.appName);
        writer.writeStringValue("appPublisher", appPerformance.appPublisher);
        writer.writeDateValue("lastUpdatedDateTime", appPerformance.lastUpdatedDateTime);
        writer.writeNumberValue("meanTimeToFailureInMinutes", appPerformance.meanTimeToFailureInMinutes);
        writer.writeStringValue("tenantDisplayName", appPerformance.tenantDisplayName);
        writer.writeStringValue("tenantId", appPerformance.tenantId);
        writer.writeNumberValue("totalActiveDeviceCount", appPerformance.totalActiveDeviceCount);
        writer.writeNumberValue("totalAppCrashCount", appPerformance.totalAppCrashCount);
        writer.writeNumberValue("totalAppFreezeCount", appPerformance.totalAppFreezeCount);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAppPerformanceCollectionResponse(writer: SerializationWriter, appPerformanceCollectionResponse: Partial<AppPerformanceCollectionResponse> | undefined | null = {}) : void {
    if (appPerformanceCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, appPerformanceCollectionResponse)
        writer.writeCollectionOfObjectValues<AppPerformance>("value", appPerformanceCollectionResponse.value, serializeAppPerformance);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditEvent(writer: SerializationWriter, auditEvent: Partial<AuditEvent> | undefined | null = {}) : void {
    if (auditEvent) {
        serializeEntity(writer, auditEvent)
        writer.writeStringValue("activity", auditEvent.activity);
        writer.writeDateValue("activityDateTime", auditEvent.activityDateTime);
        writer.writeStringValue("activityId", auditEvent.activityId);
        writer.writeStringValue("category", auditEvent.category);
        writer.writeStringValue("httpVerb", auditEvent.httpVerb);
        writer.writeStringValue("initiatedByAppId", auditEvent.initiatedByAppId);
        writer.writeStringValue("initiatedByUpn", auditEvent.initiatedByUpn);
        writer.writeStringValue("initiatedByUserId", auditEvent.initiatedByUserId);
        writer.writeStringValue("ipAddress", auditEvent.ipAddress);
        writer.writeStringValue("requestBody", auditEvent.requestBody);
        writer.writeStringValue("requestUrl", auditEvent.requestUrl);
        writer.writeStringValue("tenantIds", auditEvent.tenantIds);
        writer.writeStringValue("tenantNames", auditEvent.tenantNames);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditEventCollectionResponse(writer: SerializationWriter, auditEventCollectionResponse: Partial<AuditEventCollectionResponse> | undefined | null = {}) : void {
    if (auditEventCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, auditEventCollectionResponse)
        writer.writeCollectionOfObjectValues<AuditEvent>("value", auditEventCollectionResponse.value, serializeAuditEvent);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCloudPcConnection(writer: SerializationWriter, cloudPcConnection: Partial<CloudPcConnection> | undefined | null = {}) : void {
    if (cloudPcConnection) {
        serializeEntity(writer, cloudPcConnection)
        writer.writeStringValue("displayName", cloudPcConnection.displayName);
        writer.writeStringValue("healthCheckStatus", cloudPcConnection.healthCheckStatus);
        writer.writeDateValue("lastRefreshedDateTime", cloudPcConnection.lastRefreshedDateTime);
        writer.writeStringValue("tenantDisplayName", cloudPcConnection.tenantDisplayName);
        writer.writeStringValue("tenantId", cloudPcConnection.tenantId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCloudPcConnectionCollectionResponse(writer: SerializationWriter, cloudPcConnectionCollectionResponse: Partial<CloudPcConnectionCollectionResponse> | undefined | null = {}) : void {
    if (cloudPcConnectionCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, cloudPcConnectionCollectionResponse)
        writer.writeCollectionOfObjectValues<CloudPcConnection>("value", cloudPcConnectionCollectionResponse.value, serializeCloudPcConnection);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCloudPcDevice(writer: SerializationWriter, cloudPcDevice: Partial<CloudPcDevice> | undefined | null = {}) : void {
    if (cloudPcDevice) {
        serializeEntity(writer, cloudPcDevice)
        writer.writeStringValue("cloudPcStatus", cloudPcDevice.cloudPcStatus);
        writer.writeStringValue("deviceSpecification", cloudPcDevice.deviceSpecification);
        writer.writeStringValue("displayName", cloudPcDevice.displayName);
        writer.writeDateValue("lastRefreshedDateTime", cloudPcDevice.lastRefreshedDateTime);
        writer.writeStringValue("managedDeviceId", cloudPcDevice.managedDeviceId);
        writer.writeStringValue("managedDeviceName", cloudPcDevice.managedDeviceName);
        writer.writeStringValue("provisioningPolicyId", cloudPcDevice.provisioningPolicyId);
        writer.writeStringValue("servicePlanName", cloudPcDevice.servicePlanName);
        writer.writeStringValue("servicePlanType", cloudPcDevice.servicePlanType);
        writer.writeStringValue("tenantDisplayName", cloudPcDevice.tenantDisplayName);
        writer.writeStringValue("tenantId", cloudPcDevice.tenantId);
        writer.writeStringValue("userPrincipalName", cloudPcDevice.userPrincipalName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCloudPcDeviceCollectionResponse(writer: SerializationWriter, cloudPcDeviceCollectionResponse: Partial<CloudPcDeviceCollectionResponse> | undefined | null = {}) : void {
    if (cloudPcDeviceCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, cloudPcDeviceCollectionResponse)
        writer.writeCollectionOfObjectValues<CloudPcDevice>("value", cloudPcDeviceCollectionResponse.value, serializeCloudPcDevice);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCloudPcOverview(writer: SerializationWriter, cloudPcOverview: Partial<CloudPcOverview> | undefined | null = {}) : void {
    if (cloudPcOverview) {
        serializeEntity(writer, cloudPcOverview)
        writer.writeNumberValue("frontlineLicensesCount", cloudPcOverview.frontlineLicensesCount);
        writer.writeDateValue("lastRefreshedDateTime", cloudPcOverview.lastRefreshedDateTime);
        writer.writeNumberValue("numberOfCloudPcConnectionStatusFailed", cloudPcOverview.numberOfCloudPcConnectionStatusFailed);
        writer.writeNumberValue("numberOfCloudPcConnectionStatusPassed", cloudPcOverview.numberOfCloudPcConnectionStatusPassed);
        writer.writeNumberValue("numberOfCloudPcConnectionStatusPending", cloudPcOverview.numberOfCloudPcConnectionStatusPending);
        writer.writeNumberValue("numberOfCloudPcConnectionStatusRunning", cloudPcOverview.numberOfCloudPcConnectionStatusRunning);
        writer.writeNumberValue("numberOfCloudPcConnectionStatusUnkownFutureValue", cloudPcOverview.numberOfCloudPcConnectionStatusUnkownFutureValue);
        writer.writeNumberValue("numberOfCloudPcStatusDeprovisioning", cloudPcOverview.numberOfCloudPcStatusDeprovisioning);
        writer.writeNumberValue("numberOfCloudPcStatusFailed", cloudPcOverview.numberOfCloudPcStatusFailed);
        writer.writeNumberValue("numberOfCloudPcStatusInGracePeriod", cloudPcOverview.numberOfCloudPcStatusInGracePeriod);
        writer.writeNumberValue("numberOfCloudPcStatusNotProvisioned", cloudPcOverview.numberOfCloudPcStatusNotProvisioned);
        writer.writeNumberValue("numberOfCloudPcStatusProvisioned", cloudPcOverview.numberOfCloudPcStatusProvisioned);
        writer.writeNumberValue("numberOfCloudPcStatusProvisioning", cloudPcOverview.numberOfCloudPcStatusProvisioning);
        writer.writeNumberValue("numberOfCloudPcStatusUnknown", cloudPcOverview.numberOfCloudPcStatusUnknown);
        writer.writeNumberValue("numberOfCloudPcStatusUpgrading", cloudPcOverview.numberOfCloudPcStatusUpgrading);
        writer.writeStringValue("tenantDisplayName", cloudPcOverview.tenantDisplayName);
        writer.writeStringValue("tenantId", cloudPcOverview.tenantId);
        writer.writeNumberValue("totalBusinessLicenses", cloudPcOverview.totalBusinessLicenses);
        writer.writeNumberValue("totalCloudPcConnectionStatus", cloudPcOverview.totalCloudPcConnectionStatus);
        writer.writeNumberValue("totalCloudPcStatus", cloudPcOverview.totalCloudPcStatus);
        writer.writeNumberValue("totalEnterpriseLicenses", cloudPcOverview.totalEnterpriseLicenses);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCloudPcOverviewCollectionResponse(writer: SerializationWriter, cloudPcOverviewCollectionResponse: Partial<CloudPcOverviewCollectionResponse> | undefined | null = {}) : void {
    if (cloudPcOverviewCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, cloudPcOverviewCollectionResponse)
        writer.writeCollectionOfObjectValues<CloudPcOverview>("value", cloudPcOverviewCollectionResponse.value, serializeCloudPcOverview);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeConditionalAccessPolicyCoverage(writer: SerializationWriter, conditionalAccessPolicyCoverage: Partial<ConditionalAccessPolicyCoverage> | undefined | null = {}) : void {
    if (conditionalAccessPolicyCoverage) {
        serializeEntity(writer, conditionalAccessPolicyCoverage)
        writer.writeStringValue("conditionalAccessPolicyState", conditionalAccessPolicyCoverage.conditionalAccessPolicyState);
        writer.writeDateValue("latestPolicyModifiedDateTime", conditionalAccessPolicyCoverage.latestPolicyModifiedDateTime);
        writer.writeBooleanValue("requiresDeviceCompliance", conditionalAccessPolicyCoverage.requiresDeviceCompliance);
        writer.writeStringValue("tenantDisplayName", conditionalAccessPolicyCoverage.tenantDisplayName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeConditionalAccessPolicyCoverageCollectionResponse(writer: SerializationWriter, conditionalAccessPolicyCoverageCollectionResponse: Partial<ConditionalAccessPolicyCoverageCollectionResponse> | undefined | null = {}) : void {
    if (conditionalAccessPolicyCoverageCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, conditionalAccessPolicyCoverageCollectionResponse)
        writer.writeCollectionOfObjectValues<ConditionalAccessPolicyCoverage>("value", conditionalAccessPolicyCoverageCollectionResponse.value, serializeConditionalAccessPolicyCoverage);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCredentialUserRegistrationsSummary(writer: SerializationWriter, credentialUserRegistrationsSummary: Partial<CredentialUserRegistrationsSummary> | undefined | null = {}) : void {
    if (credentialUserRegistrationsSummary) {
        serializeEntity(writer, credentialUserRegistrationsSummary)
        writer.writeDateValue("lastRefreshedDateTime", credentialUserRegistrationsSummary.lastRefreshedDateTime);
        writer.writeNumberValue("mfaAndSsprCapableUserCount", credentialUserRegistrationsSummary.mfaAndSsprCapableUserCount);
        writer.writeStringValue("mfaConditionalAccessPolicyState", credentialUserRegistrationsSummary.mfaConditionalAccessPolicyState);
        writer.writeNumberValue("mfaExcludedUserCount", credentialUserRegistrationsSummary.mfaExcludedUserCount);
        writer.writeNumberValue("mfaRegisteredUserCount", credentialUserRegistrationsSummary.mfaRegisteredUserCount);
        writer.writeBooleanValue("securityDefaultsEnabled", credentialUserRegistrationsSummary.securityDefaultsEnabled);
        writer.writeNumberValue("ssprEnabledUserCount", credentialUserRegistrationsSummary.ssprEnabledUserCount);
        writer.writeNumberValue("ssprRegisteredUserCount", credentialUserRegistrationsSummary.ssprRegisteredUserCount);
        writer.writeStringValue("tenantDisplayName", credentialUserRegistrationsSummary.tenantDisplayName);
        writer.writeStringValue("tenantId", credentialUserRegistrationsSummary.tenantId);
        writer.writeStringValue("tenantLicenseType", credentialUserRegistrationsSummary.tenantLicenseType);
        writer.writeNumberValue("totalUserCount", credentialUserRegistrationsSummary.totalUserCount);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCredentialUserRegistrationsSummaryCollectionResponse(writer: SerializationWriter, credentialUserRegistrationsSummaryCollectionResponse: Partial<CredentialUserRegistrationsSummaryCollectionResponse> | undefined | null = {}) : void {
    if (credentialUserRegistrationsSummaryCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, credentialUserRegistrationsSummaryCollectionResponse)
        writer.writeCollectionOfObjectValues<CredentialUserRegistrationsSummary>("value", credentialUserRegistrationsSummaryCollectionResponse.value, serializeCredentialUserRegistrationsSummary);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeviceAppPerformance(writer: SerializationWriter, deviceAppPerformance: Partial<DeviceAppPerformance> | undefined | null = {}) : void {
    if (deviceAppPerformance) {
        serializeEntity(writer, deviceAppPerformance)
        writer.writeStringValue("appFriendlyName", deviceAppPerformance.appFriendlyName);
        writer.writeStringValue("appName", deviceAppPerformance.appName);
        writer.writeStringValue("appPublisher", deviceAppPerformance.appPublisher);
        writer.writeStringValue("appVersion", deviceAppPerformance.appVersion);
        writer.writeStringValue("deviceId", deviceAppPerformance.deviceId);
        writer.writeStringValue("deviceManufacturer", deviceAppPerformance.deviceManufacturer);
        writer.writeStringValue("deviceModel", deviceAppPerformance.deviceModel);
        writer.writeStringValue("deviceName", deviceAppPerformance.deviceName);
        writer.writeStringValue("healthStatus", deviceAppPerformance.healthStatus);
        writer.writeNumberValue("isLatestUsedVersion", deviceAppPerformance.isLatestUsedVersion);
        writer.writeNumberValue("isMostUsedVersion", deviceAppPerformance.isMostUsedVersion);
        writer.writeDateValue("lastUpdatedDateTime", deviceAppPerformance.lastUpdatedDateTime);
        writer.writeStringValue("tenantDisplayName", deviceAppPerformance.tenantDisplayName);
        writer.writeStringValue("tenantId", deviceAppPerformance.tenantId);
        writer.writeNumberValue("totalAppCrashCount", deviceAppPerformance.totalAppCrashCount);
        writer.writeNumberValue("totalAppFreezeCount", deviceAppPerformance.totalAppFreezeCount);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeviceAppPerformanceCollectionResponse(writer: SerializationWriter, deviceAppPerformanceCollectionResponse: Partial<DeviceAppPerformanceCollectionResponse> | undefined | null = {}) : void {
    if (deviceAppPerformanceCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, deviceAppPerformanceCollectionResponse)
        writer.writeCollectionOfObjectValues<DeviceAppPerformance>("value", deviceAppPerformanceCollectionResponse.value, serializeDeviceAppPerformance);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeviceCompliancePolicySettingStateSummary(writer: SerializationWriter, deviceCompliancePolicySettingStateSummary: Partial<DeviceCompliancePolicySettingStateSummary> | undefined | null = {}) : void {
    if (deviceCompliancePolicySettingStateSummary) {
        serializeEntity(writer, deviceCompliancePolicySettingStateSummary)
        writer.writeNumberValue("conflictDeviceCount", deviceCompliancePolicySettingStateSummary.conflictDeviceCount);
        writer.writeNumberValue("errorDeviceCount", deviceCompliancePolicySettingStateSummary.errorDeviceCount);
        writer.writeNumberValue("failedDeviceCount", deviceCompliancePolicySettingStateSummary.failedDeviceCount);
        writer.writeStringValue("intuneAccountId", deviceCompliancePolicySettingStateSummary.intuneAccountId);
        writer.writeStringValue("intuneSettingId", deviceCompliancePolicySettingStateSummary.intuneSettingId);
        writer.writeDateValue("lastRefreshedDateTime", deviceCompliancePolicySettingStateSummary.lastRefreshedDateTime);
        writer.writeNumberValue("notApplicableDeviceCount", deviceCompliancePolicySettingStateSummary.notApplicableDeviceCount);
        writer.writeNumberValue("pendingDeviceCount", deviceCompliancePolicySettingStateSummary.pendingDeviceCount);
        writer.writeStringValue("policyType", deviceCompliancePolicySettingStateSummary.policyType);
        writer.writeStringValue("settingName", deviceCompliancePolicySettingStateSummary.settingName);
        writer.writeNumberValue("succeededDeviceCount", deviceCompliancePolicySettingStateSummary.succeededDeviceCount);
        writer.writeStringValue("tenantDisplayName", deviceCompliancePolicySettingStateSummary.tenantDisplayName);
        writer.writeStringValue("tenantId", deviceCompliancePolicySettingStateSummary.tenantId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeviceCompliancePolicySettingStateSummaryCollectionResponse(writer: SerializationWriter, deviceCompliancePolicySettingStateSummaryCollectionResponse: Partial<DeviceCompliancePolicySettingStateSummaryCollectionResponse> | undefined | null = {}) : void {
    if (deviceCompliancePolicySettingStateSummaryCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, deviceCompliancePolicySettingStateSummaryCollectionResponse)
        writer.writeCollectionOfObjectValues<DeviceCompliancePolicySettingStateSummary>("value", deviceCompliancePolicySettingStateSummaryCollectionResponse.value, serializeDeviceCompliancePolicySettingStateSummary);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeviceHealthStatus(writer: SerializationWriter, deviceHealthStatus: Partial<DeviceHealthStatus> | undefined | null = {}) : void {
    if (deviceHealthStatus) {
        serializeEntity(writer, deviceHealthStatus)
        writer.writeNumberValue("blueScreenCount", deviceHealthStatus.blueScreenCount);
        writer.writeNumberValue("bootTotalDurationInSeconds", deviceHealthStatus.bootTotalDurationInSeconds);
        writer.writeStringValue("deviceId", deviceHealthStatus.deviceId);
        writer.writeStringValue("deviceMake", deviceHealthStatus.deviceMake);
        writer.writeStringValue("deviceModel", deviceHealthStatus.deviceModel);
        writer.writeStringValue("deviceName", deviceHealthStatus.deviceName);
        writer.writeStringValue("healthStatus", deviceHealthStatus.healthStatus);
        writer.writeDateValue("lastUpdatedDateTime", deviceHealthStatus.lastUpdatedDateTime);
        writer.writeStringValue("osVersion", deviceHealthStatus.osVersion);
        writer.writeStringValue("primaryDiskType", deviceHealthStatus.primaryDiskType);
        writer.writeNumberValue("restartCount", deviceHealthStatus.restartCount);
        writer.writeNumberValue("startupPerformanceScore", deviceHealthStatus.startupPerformanceScore);
        writer.writeStringValue("tenantDisplayName", deviceHealthStatus.tenantDisplayName);
        writer.writeStringValue("tenantId", deviceHealthStatus.tenantId);
        writer.writeStringValue("topProcesses", deviceHealthStatus.topProcesses);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeviceHealthStatusCollectionResponse(writer: SerializationWriter, deviceHealthStatusCollectionResponse: Partial<DeviceHealthStatusCollectionResponse> | undefined | null = {}) : void {
    if (deviceHealthStatusCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, deviceHealthStatusCollectionResponse)
        writer.writeCollectionOfObjectValues<DeviceHealthStatus>("value", deviceHealthStatusCollectionResponse.value, serializeDeviceHealthStatus);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEmail(writer: SerializationWriter, email: Partial<Email> | undefined | null = {}) : void {
    if (email) {
        writer.writeStringValue("emailAddress", email.emailAddress);
        writer.writeStringValue("@odata.type", email.odataType);
        writer.writeAdditionalData(email.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGraphAPIErrorDetails(writer: SerializationWriter, graphAPIErrorDetails: Partial<GraphAPIErrorDetails> | undefined | null = {}) : void {
    if (graphAPIErrorDetails) {
        writer.writeStringValue("code", graphAPIErrorDetails.code);
        writer.writeStringValue("message", graphAPIErrorDetails.message);
        writer.writeStringValue("@odata.type", graphAPIErrorDetails.odataType);
        writer.writeAdditionalData(graphAPIErrorDetails.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedDeviceCompliance(writer: SerializationWriter, managedDeviceCompliance: Partial<ManagedDeviceCompliance> | undefined | null = {}) : void {
    if (managedDeviceCompliance) {
        serializeEntity(writer, managedDeviceCompliance)
        writer.writeStringValue("complianceStatus", managedDeviceCompliance.complianceStatus);
        writer.writeStringValue("deviceType", managedDeviceCompliance.deviceType);
        writer.writeDateValue("inGracePeriodUntilDateTime", managedDeviceCompliance.inGracePeriodUntilDateTime);
        writer.writeDateValue("lastRefreshedDateTime", managedDeviceCompliance.lastRefreshedDateTime);
        writer.writeDateValue("lastSyncDateTime", managedDeviceCompliance.lastSyncDateTime);
        writer.writeStringValue("managedDeviceId", managedDeviceCompliance.managedDeviceId);
        writer.writeStringValue("managedDeviceName", managedDeviceCompliance.managedDeviceName);
        writer.writeStringValue("manufacturer", managedDeviceCompliance.manufacturer);
        writer.writeStringValue("model", managedDeviceCompliance.model);
        writer.writeStringValue("osDescription", managedDeviceCompliance.osDescription);
        writer.writeStringValue("osVersion", managedDeviceCompliance.osVersion);
        writer.writeStringValue("ownerType", managedDeviceCompliance.ownerType);
        writer.writeStringValue("tenantDisplayName", managedDeviceCompliance.tenantDisplayName);
        writer.writeStringValue("tenantId", managedDeviceCompliance.tenantId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedDeviceComplianceCollectionResponse(writer: SerializationWriter, managedDeviceComplianceCollectionResponse: Partial<ManagedDeviceComplianceCollectionResponse> | undefined | null = {}) : void {
    if (managedDeviceComplianceCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managedDeviceComplianceCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagedDeviceCompliance>("value", managedDeviceComplianceCollectionResponse.value, serializeManagedDeviceCompliance);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedDeviceComplianceTrend(writer: SerializationWriter, managedDeviceComplianceTrend: Partial<ManagedDeviceComplianceTrend> | undefined | null = {}) : void {
    if (managedDeviceComplianceTrend) {
        serializeEntity(writer, managedDeviceComplianceTrend)
        writer.writeNumberValue("compliantDeviceCount", managedDeviceComplianceTrend.compliantDeviceCount);
        writer.writeNumberValue("configManagerDeviceCount", managedDeviceComplianceTrend.configManagerDeviceCount);
        writer.writeStringValue("countDateTime", managedDeviceComplianceTrend.countDateTime);
        writer.writeNumberValue("errorDeviceCount", managedDeviceComplianceTrend.errorDeviceCount);
        writer.writeNumberValue("inGracePeriodDeviceCount", managedDeviceComplianceTrend.inGracePeriodDeviceCount);
        writer.writeNumberValue("noncompliantDeviceCount", managedDeviceComplianceTrend.noncompliantDeviceCount);
        writer.writeStringValue("tenantDisplayName", managedDeviceComplianceTrend.tenantDisplayName);
        writer.writeStringValue("tenantId", managedDeviceComplianceTrend.tenantId);
        writer.writeNumberValue("unknownDeviceCount", managedDeviceComplianceTrend.unknownDeviceCount);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedDeviceComplianceTrendCollectionResponse(writer: SerializationWriter, managedDeviceComplianceTrendCollectionResponse: Partial<ManagedDeviceComplianceTrendCollectionResponse> | undefined | null = {}) : void {
    if (managedDeviceComplianceTrendCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managedDeviceComplianceTrendCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagedDeviceComplianceTrend>("value", managedDeviceComplianceTrendCollectionResponse.value, serializeManagedDeviceComplianceTrend);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenant(writer: SerializationWriter, managedTenant: Partial<ManagedTenant> | undefined | null = {}) : void {
    if (managedTenant) {
        serializeEntity(writer, managedTenant)
        writer.writeCollectionOfObjectValues<AggregatedPolicyCompliance>("aggregatedPolicyCompliances", managedTenant.aggregatedPolicyCompliances, serializeAggregatedPolicyCompliance);
        writer.writeCollectionOfObjectValues<AppPerformance>("appPerformances", managedTenant.appPerformances, serializeAppPerformance);
        writer.writeCollectionOfObjectValues<AuditEvent>("auditEvents", managedTenant.auditEvents, serializeAuditEvent);
        writer.writeCollectionOfObjectValues<CloudPcConnection>("cloudPcConnections", managedTenant.cloudPcConnections, serializeCloudPcConnection);
        writer.writeCollectionOfObjectValues<CloudPcDevice>("cloudPcDevices", managedTenant.cloudPcDevices, serializeCloudPcDevice);
        writer.writeCollectionOfObjectValues<CloudPcOverview>("cloudPcsOverview", managedTenant.cloudPcsOverview, serializeCloudPcOverview);
        writer.writeCollectionOfObjectValues<ConditionalAccessPolicyCoverage>("conditionalAccessPolicyCoverages", managedTenant.conditionalAccessPolicyCoverages, serializeConditionalAccessPolicyCoverage);
        writer.writeCollectionOfObjectValues<CredentialUserRegistrationsSummary>("credentialUserRegistrationsSummaries", managedTenant.credentialUserRegistrationsSummaries, serializeCredentialUserRegistrationsSummary);
        writer.writeCollectionOfObjectValues<DeviceAppPerformance>("deviceAppPerformances", managedTenant.deviceAppPerformances, serializeDeviceAppPerformance);
        writer.writeCollectionOfObjectValues<DeviceCompliancePolicySettingStateSummary>("deviceCompliancePolicySettingStateSummaries", managedTenant.deviceCompliancePolicySettingStateSummaries, serializeDeviceCompliancePolicySettingStateSummary);
        writer.writeCollectionOfObjectValues<DeviceHealthStatus>("deviceHealthStatuses", managedTenant.deviceHealthStatuses, serializeDeviceHealthStatus);
        writer.writeCollectionOfObjectValues<ManagedDeviceCompliance>("managedDeviceCompliances", managedTenant.managedDeviceCompliances, serializeManagedDeviceCompliance);
        writer.writeCollectionOfObjectValues<ManagedDeviceComplianceTrend>("managedDeviceComplianceTrends", managedTenant.managedDeviceComplianceTrends, serializeManagedDeviceComplianceTrend);
        writer.writeCollectionOfObjectValues<ManagedTenantAlertLog>("managedTenantAlertLogs", managedTenant.managedTenantAlertLogs, serializeManagedTenantAlertLog);
        writer.writeCollectionOfObjectValues<ManagedTenantAlertRuleDefinition>("managedTenantAlertRuleDefinitions", managedTenant.managedTenantAlertRuleDefinitions, serializeManagedTenantAlertRuleDefinition);
        writer.writeCollectionOfObjectValues<ManagedTenantAlertRule>("managedTenantAlertRules", managedTenant.managedTenantAlertRules, serializeManagedTenantAlertRule);
        writer.writeCollectionOfObjectValues<ManagedTenantAlert>("managedTenantAlerts", managedTenant.managedTenantAlerts, serializeManagedTenantAlert);
        writer.writeCollectionOfObjectValues<ManagedTenantApiNotification>("managedTenantApiNotifications", managedTenant.managedTenantApiNotifications, serializeManagedTenantApiNotification);
        writer.writeCollectionOfObjectValues<ManagedTenantEmailNotification>("managedTenantEmailNotifications", managedTenant.managedTenantEmailNotifications, serializeManagedTenantEmailNotification);
        writer.writeCollectionOfObjectValues<ManagedTenantTicketingEndpoint>("managedTenantTicketingEndpoints", managedTenant.managedTenantTicketingEndpoints, serializeManagedTenantTicketingEndpoint);
        writer.writeCollectionOfObjectValues<ManagementAction>("managementActions", managedTenant.managementActions, serializeManagementAction);
        writer.writeCollectionOfObjectValues<ManagementActionTenantDeploymentStatus>("managementActionTenantDeploymentStatuses", managedTenant.managementActionTenantDeploymentStatuses, serializeManagementActionTenantDeploymentStatus);
        writer.writeCollectionOfObjectValues<ManagementIntent>("managementIntents", managedTenant.managementIntents, serializeManagementIntent);
        writer.writeCollectionOfObjectValues<ManagementTemplateCollection>("managementTemplateCollections", managedTenant.managementTemplateCollections, serializeManagementTemplateCollection);
        writer.writeCollectionOfObjectValues<ManagementTemplateCollectionTenantSummary>("managementTemplateCollectionTenantSummaries", managedTenant.managementTemplateCollectionTenantSummaries, serializeManagementTemplateCollectionTenantSummary);
        writer.writeCollectionOfObjectValues<ManagementTemplate>("managementTemplates", managedTenant.managementTemplates, serializeManagementTemplate);
        writer.writeCollectionOfObjectValues<ManagementTemplateStep>("managementTemplateSteps", managedTenant.managementTemplateSteps, serializeManagementTemplateStep);
        writer.writeCollectionOfObjectValues<ManagementTemplateStepTenantSummary>("managementTemplateStepTenantSummaries", managedTenant.managementTemplateStepTenantSummaries, serializeManagementTemplateStepTenantSummary);
        writer.writeCollectionOfObjectValues<ManagementTemplateStepVersion>("managementTemplateStepVersions", managedTenant.managementTemplateStepVersions, serializeManagementTemplateStepVersion);
        writer.writeCollectionOfObjectValues<MyRole>("myRoles", managedTenant.myRoles, serializeMyRole);
        writer.writeCollectionOfObjectValues<TenantGroup>("tenantGroups", managedTenant.tenantGroups, serializeTenantGroup);
        writer.writeCollectionOfObjectValues<Tenant>("tenants", managedTenant.tenants, serializeTenant);
        writer.writeCollectionOfObjectValues<TenantCustomizedInformation>("tenantsCustomizedInformation", managedTenant.tenantsCustomizedInformation, serializeTenantCustomizedInformation);
        writer.writeCollectionOfObjectValues<TenantDetailedInformation>("tenantsDetailedInformation", managedTenant.tenantsDetailedInformation, serializeTenantDetailedInformation);
        writer.writeCollectionOfObjectValues<TenantTag>("tenantTags", managedTenant.tenantTags, serializeTenantTag);
        writer.writeCollectionOfObjectValues<WindowsDeviceMalwareState>("windowsDeviceMalwareStates", managedTenant.windowsDeviceMalwareStates, serializeWindowsDeviceMalwareState);
        writer.writeCollectionOfObjectValues<WindowsProtectionState>("windowsProtectionStates", managedTenant.windowsProtectionStates, serializeWindowsProtectionState);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenantAlert(writer: SerializationWriter, managedTenantAlert: Partial<ManagedTenantAlert> | undefined | null = {}) : void {
    if (managedTenantAlert) {
        serializeEntity(writer, managedTenantAlert)
        writer.writeObjectValue<AlertData>("alertData", managedTenantAlert.alertData, serializeAlertData);
        writer.writeCollectionOfObjectValues<AlertDataReferenceString>("alertDataReferenceStrings", managedTenantAlert.alertDataReferenceStrings, serializeAlertDataReferenceString);
        writer.writeCollectionOfObjectValues<ManagedTenantAlertLog>("alertLogs", managedTenantAlert.alertLogs, serializeManagedTenantAlertLog);
        writer.writeObjectValue<ManagedTenantAlertRule>("alertRule", managedTenantAlert.alertRule, serializeManagedTenantAlertRule);
        writer.writeStringValue("alertRuleDisplayName", managedTenantAlert.alertRuleDisplayName);
        writer.writeCollectionOfObjectValues<ManagedTenantApiNotification>("apiNotifications", managedTenantAlert.apiNotifications, serializeManagedTenantApiNotification);
        writer.writeStringValue("assignedToUserId", managedTenantAlert.assignedToUserId);
        writer.writeNumberValue("correlationCount", managedTenantAlert.correlationCount);
        writer.writeStringValue("correlationId", managedTenantAlert.correlationId);
        writer.writeStringValue("createdByUserId", managedTenantAlert.createdByUserId);
        writer.writeDateValue("createdDateTime", managedTenantAlert.createdDateTime);
        writer.writeCollectionOfObjectValues<ManagedTenantEmailNotification>("emailNotifications", managedTenantAlert.emailNotifications, serializeManagedTenantEmailNotification);
        writer.writeStringValue("lastActionByUserId", managedTenantAlert.lastActionByUserId);
        writer.writeDateValue("lastActionDateTime", managedTenantAlert.lastActionDateTime);
        writer.writeStringValue("message", managedTenantAlert.message);
        writer.writeEnumValue<AlertSeverity>("severity", managedTenantAlert.severity);
        writer.writeEnumValue<AlertStatus>("status", managedTenantAlert.status);
        writer.writeStringValue("tenantId", managedTenantAlert.tenantId);
        writer.writeStringValue("title", managedTenantAlert.title);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenantAlertCollectionResponse(writer: SerializationWriter, managedTenantAlertCollectionResponse: Partial<ManagedTenantAlertCollectionResponse> | undefined | null = {}) : void {
    if (managedTenantAlertCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managedTenantAlertCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagedTenantAlert>("value", managedTenantAlertCollectionResponse.value, serializeManagedTenantAlert);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenantAlertLog(writer: SerializationWriter, managedTenantAlertLog: Partial<ManagedTenantAlertLog> | undefined | null = {}) : void {
    if (managedTenantAlertLog) {
        serializeEntity(writer, managedTenantAlertLog)
        writer.writeObjectValue<ManagedTenantAlert>("alert", managedTenantAlertLog.alert, serializeManagedTenantAlert);
        writer.writeObjectValue<AlertLogContent>("content", managedTenantAlertLog.content, serializeAlertLogContent);
        writer.writeStringValue("createdByUserId", managedTenantAlertLog.createdByUserId);
        writer.writeDateValue("createdDateTime", managedTenantAlertLog.createdDateTime);
        writer.writeStringValue("lastActionByUserId", managedTenantAlertLog.lastActionByUserId);
        writer.writeDateValue("lastActionDateTime", managedTenantAlertLog.lastActionDateTime);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenantAlertLogCollectionResponse(writer: SerializationWriter, managedTenantAlertLogCollectionResponse: Partial<ManagedTenantAlertLogCollectionResponse> | undefined | null = {}) : void {
    if (managedTenantAlertLogCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managedTenantAlertLogCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagedTenantAlertLog>("value", managedTenantAlertLogCollectionResponse.value, serializeManagedTenantAlertLog);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenantAlertRule(writer: SerializationWriter, managedTenantAlertRule: Partial<ManagedTenantAlertRule> | undefined | null = {}) : void {
    if (managedTenantAlertRule) {
        serializeEntity(writer, managedTenantAlertRule)
        writer.writeStringValue("alertDisplayName", managedTenantAlertRule.alertDisplayName);
        writer.writeCollectionOfObjectValues<ManagedTenantAlert>("alerts", managedTenantAlertRule.alerts, serializeManagedTenantAlert);
        writer.writeNumberValue("alertTTL", managedTenantAlertRule.alertTTL);
        writer.writeStringValue("createdByUserId", managedTenantAlertRule.createdByUserId);
        writer.writeDateValue("createdDateTime", managedTenantAlertRule.createdDateTime);
        writer.writeStringValue("description", managedTenantAlertRule.description);
        writer.writeStringValue("displayName", managedTenantAlertRule.displayName);
        writer.writeStringValue("lastActionByUserId", managedTenantAlertRule.lastActionByUserId);
        writer.writeDateValue("lastActionDateTime", managedTenantAlertRule.lastActionDateTime);
        writer.writeDateValue("lastRunDateTime", managedTenantAlertRule.lastRunDateTime);
        writer.writeEnumValue<NotificationDestination[]>("notificationFinalDestinations", managedTenantAlertRule.notificationFinalDestinations);
        writer.writeObjectValue<ManagedTenantAlertRuleDefinition>("ruleDefinition", managedTenantAlertRule.ruleDefinition, serializeManagedTenantAlertRuleDefinition);
        writer.writeEnumValue<AlertSeverity>("severity", managedTenantAlertRule.severity);
        writer.writeCollectionOfObjectValues<NotificationTarget>("targets", managedTenantAlertRule.targets, serializeNotificationTarget);
        writer.writeCollectionOfObjectValues<TenantInfo>("tenantIds", managedTenantAlertRule.tenantIds, serializeTenantInfo);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenantAlertRuleCollectionResponse(writer: SerializationWriter, managedTenantAlertRuleCollectionResponse: Partial<ManagedTenantAlertRuleCollectionResponse> | undefined | null = {}) : void {
    if (managedTenantAlertRuleCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managedTenantAlertRuleCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagedTenantAlertRule>("value", managedTenantAlertRuleCollectionResponse.value, serializeManagedTenantAlertRule);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenantAlertRuleDefinition(writer: SerializationWriter, managedTenantAlertRuleDefinition: Partial<ManagedTenantAlertRuleDefinition> | undefined | null = {}) : void {
    if (managedTenantAlertRuleDefinition) {
        serializeEntity(writer, managedTenantAlertRuleDefinition)
        writer.writeCollectionOfObjectValues<ManagedTenantAlertRule>("alertRules", managedTenantAlertRuleDefinition.alertRules, serializeManagedTenantAlertRule);
        writer.writeStringValue("createdByUserId", managedTenantAlertRuleDefinition.createdByUserId);
        writer.writeDateValue("createdDateTime", managedTenantAlertRuleDefinition.createdDateTime);
        writer.writeObjectValue<AlertRuleDefinitionTemplate>("definitionTemplate", managedTenantAlertRuleDefinition.definitionTemplate, serializeAlertRuleDefinitionTemplate);
        writer.writeStringValue("displayName", managedTenantAlertRuleDefinition.displayName);
        writer.writeStringValue("lastActionByUserId", managedTenantAlertRuleDefinition.lastActionByUserId);
        writer.writeDateValue("lastActionDateTime", managedTenantAlertRuleDefinition.lastActionDateTime);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenantAlertRuleDefinitionCollectionResponse(writer: SerializationWriter, managedTenantAlertRuleDefinitionCollectionResponse: Partial<ManagedTenantAlertRuleDefinitionCollectionResponse> | undefined | null = {}) : void {
    if (managedTenantAlertRuleDefinitionCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managedTenantAlertRuleDefinitionCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagedTenantAlertRuleDefinition>("value", managedTenantAlertRuleDefinitionCollectionResponse.value, serializeManagedTenantAlertRuleDefinition);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenantApiNotification(writer: SerializationWriter, managedTenantApiNotification: Partial<ManagedTenantApiNotification> | undefined | null = {}) : void {
    if (managedTenantApiNotification) {
        serializeEntity(writer, managedTenantApiNotification)
        writer.writeObjectValue<ManagedTenantAlert>("alert", managedTenantApiNotification.alert, serializeManagedTenantAlert);
        writer.writeStringValue("createdByUserId", managedTenantApiNotification.createdByUserId);
        writer.writeDateValue("createdDateTime", managedTenantApiNotification.createdDateTime);
        writer.writeBooleanValue("isAcknowledged", managedTenantApiNotification.isAcknowledged);
        writer.writeStringValue("lastActionByUserId", managedTenantApiNotification.lastActionByUserId);
        writer.writeDateValue("lastActionDateTime", managedTenantApiNotification.lastActionDateTime);
        writer.writeStringValue("message", managedTenantApiNotification.message);
        writer.writeStringValue("title", managedTenantApiNotification.title);
        writer.writeStringValue("userId", managedTenantApiNotification.userId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenantApiNotificationCollectionResponse(writer: SerializationWriter, managedTenantApiNotificationCollectionResponse: Partial<ManagedTenantApiNotificationCollectionResponse> | undefined | null = {}) : void {
    if (managedTenantApiNotificationCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managedTenantApiNotificationCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagedTenantApiNotification>("value", managedTenantApiNotificationCollectionResponse.value, serializeManagedTenantApiNotification);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenantEmailNotification(writer: SerializationWriter, managedTenantEmailNotification: Partial<ManagedTenantEmailNotification> | undefined | null = {}) : void {
    if (managedTenantEmailNotification) {
        serializeEntity(writer, managedTenantEmailNotification)
        writer.writeObjectValue<ManagedTenantAlert>("alert", managedTenantEmailNotification.alert, serializeManagedTenantAlert);
        writer.writeStringValue("createdByUserId", managedTenantEmailNotification.createdByUserId);
        writer.writeDateValue("createdDateTime", managedTenantEmailNotification.createdDateTime);
        writer.writeCollectionOfObjectValues<Email>("emailAddresses", managedTenantEmailNotification.emailAddresses, serializeEmail);
        writer.writeStringValue("emailBody", managedTenantEmailNotification.emailBody);
        writer.writeStringValue("lastActionByUserId", managedTenantEmailNotification.lastActionByUserId);
        writer.writeDateValue("lastActionDateTime", managedTenantEmailNotification.lastActionDateTime);
        writer.writeStringValue("subject", managedTenantEmailNotification.subject);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenantEmailNotificationCollectionResponse(writer: SerializationWriter, managedTenantEmailNotificationCollectionResponse: Partial<ManagedTenantEmailNotificationCollectionResponse> | undefined | null = {}) : void {
    if (managedTenantEmailNotificationCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managedTenantEmailNotificationCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagedTenantEmailNotification>("value", managedTenantEmailNotificationCollectionResponse.value, serializeManagedTenantEmailNotification);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenantTicketingEndpoint(writer: SerializationWriter, managedTenantTicketingEndpoint: Partial<ManagedTenantTicketingEndpoint> | undefined | null = {}) : void {
    if (managedTenantTicketingEndpoint) {
        serializeEntity(writer, managedTenantTicketingEndpoint)
        writer.writeStringValue("createdByUserId", managedTenantTicketingEndpoint.createdByUserId);
        writer.writeDateValue("createdDateTime", managedTenantTicketingEndpoint.createdDateTime);
        writer.writeStringValue("displayName", managedTenantTicketingEndpoint.displayName);
        writer.writeStringValue("emailAddress", managedTenantTicketingEndpoint.emailAddress);
        writer.writeStringValue("lastActionByUserId", managedTenantTicketingEndpoint.lastActionByUserId);
        writer.writeDateValue("lastActionDateTime", managedTenantTicketingEndpoint.lastActionDateTime);
        writer.writeStringValue("phoneNumber", managedTenantTicketingEndpoint.phoneNumber);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenantTicketingEndpointCollectionResponse(writer: SerializationWriter, managedTenantTicketingEndpointCollectionResponse: Partial<ManagedTenantTicketingEndpointCollectionResponse> | undefined | null = {}) : void {
    if (managedTenantTicketingEndpointCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managedTenantTicketingEndpointCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagedTenantTicketingEndpoint>("value", managedTenantTicketingEndpointCollectionResponse.value, serializeManagedTenantTicketingEndpoint);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementAction(writer: SerializationWriter, managementAction: Partial<ManagementAction> | undefined | null = {}) : void {
    if (managementAction) {
        serializeEntity(writer, managementAction)
        writer.writeEnumValue<ManagementCategory>("category", managementAction.category);
        writer.writeStringValue("description", managementAction.description);
        writer.writeStringValue("displayName", managementAction.displayName);
        writer.writeStringValue("referenceTemplateId", managementAction.referenceTemplateId);
        writer.writeNumberValue("referenceTemplateVersion", managementAction.referenceTemplateVersion);
        writer.writeCollectionOfObjectValues<WorkloadAction>("workloadActions", managementAction.workloadActions, serializeWorkloadAction);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementActionCollectionResponse(writer: SerializationWriter, managementActionCollectionResponse: Partial<ManagementActionCollectionResponse> | undefined | null = {}) : void {
    if (managementActionCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managementActionCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagementAction>("value", managementActionCollectionResponse.value, serializeManagementAction);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementActionDeploymentStatus(writer: SerializationWriter, managementActionDeploymentStatus: Partial<ManagementActionDeploymentStatus> | undefined | null = {}) : void {
    if (managementActionDeploymentStatus) {
        writer.writeStringValue("managementActionId", managementActionDeploymentStatus.managementActionId);
        writer.writeStringValue("managementTemplateId", managementActionDeploymentStatus.managementTemplateId);
        writer.writeNumberValue("managementTemplateVersion", managementActionDeploymentStatus.managementTemplateVersion);
        writer.writeStringValue("@odata.type", managementActionDeploymentStatus.odataType);
        writer.writeEnumValue<ManagementActionStatus>("status", managementActionDeploymentStatus.status);
        writer.writeCollectionOfObjectValues<WorkloadActionDeploymentStatus>("workloadActionDeploymentStatuses", managementActionDeploymentStatus.workloadActionDeploymentStatuses, serializeWorkloadActionDeploymentStatus);
        writer.writeAdditionalData(managementActionDeploymentStatus.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementActionInfo(writer: SerializationWriter, managementActionInfo: Partial<ManagementActionInfo> | undefined | null = {}) : void {
    if (managementActionInfo) {
        writer.writeStringValue("managementActionId", managementActionInfo.managementActionId);
        writer.writeStringValue("managementTemplateId", managementActionInfo.managementTemplateId);
        writer.writeNumberValue("managementTemplateVersion", managementActionInfo.managementTemplateVersion);
        writer.writeStringValue("@odata.type", managementActionInfo.odataType);
        writer.writeAdditionalData(managementActionInfo.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementActionTenantDeploymentStatus(writer: SerializationWriter, managementActionTenantDeploymentStatus: Partial<ManagementActionTenantDeploymentStatus> | undefined | null = {}) : void {
    if (managementActionTenantDeploymentStatus) {
        serializeEntity(writer, managementActionTenantDeploymentStatus)
        writer.writeCollectionOfObjectValues<ManagementActionDeploymentStatus>("statuses", managementActionTenantDeploymentStatus.statuses, serializeManagementActionDeploymentStatus);
        writer.writeStringValue("tenantGroupId", managementActionTenantDeploymentStatus.tenantGroupId);
        writer.writeStringValue("tenantId", managementActionTenantDeploymentStatus.tenantId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementActionTenantDeploymentStatusCollectionResponse(writer: SerializationWriter, managementActionTenantDeploymentStatusCollectionResponse: Partial<ManagementActionTenantDeploymentStatusCollectionResponse> | undefined | null = {}) : void {
    if (managementActionTenantDeploymentStatusCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managementActionTenantDeploymentStatusCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagementActionTenantDeploymentStatus>("value", managementActionTenantDeploymentStatusCollectionResponse.value, serializeManagementActionTenantDeploymentStatus);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementIntent(writer: SerializationWriter, managementIntent: Partial<ManagementIntent> | undefined | null = {}) : void {
    if (managementIntent) {
        serializeEntity(writer, managementIntent)
        writer.writeStringValue("displayName", managementIntent.displayName);
        writer.writeBooleanValue("isGlobal", managementIntent.isGlobal);
        writer.writeCollectionOfObjectValues<ManagementTemplateDetailedInfo>("managementTemplates", managementIntent.managementTemplates, serializeManagementTemplateDetailedInfo);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementIntentCollectionResponse(writer: SerializationWriter, managementIntentCollectionResponse: Partial<ManagementIntentCollectionResponse> | undefined | null = {}) : void {
    if (managementIntentCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managementIntentCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagementIntent>("value", managementIntentCollectionResponse.value, serializeManagementIntent);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementIntentInfo(writer: SerializationWriter, managementIntentInfo: Partial<ManagementIntentInfo> | undefined | null = {}) : void {
    if (managementIntentInfo) {
        writer.writeStringValue("managementIntentDisplayName", managementIntentInfo.managementIntentDisplayName);
        writer.writeStringValue("managementIntentId", managementIntentInfo.managementIntentId);
        writer.writeCollectionOfObjectValues<ManagementTemplateDetailedInfo>("managementTemplates", managementIntentInfo.managementTemplates, serializeManagementTemplateDetailedInfo);
        writer.writeStringValue("@odata.type", managementIntentInfo.odataType);
        writer.writeAdditionalData(managementIntentInfo.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementTemplate(writer: SerializationWriter, managementTemplate: Partial<ManagementTemplate> | undefined | null = {}) : void {
    if (managementTemplate) {
        serializeEntity(writer, managementTemplate)
        writer.writeEnumValue<ManagementCategory>("category", managementTemplate.category);
        writer.writeStringValue("createdByUserId", managementTemplate.createdByUserId);
        writer.writeDateValue("createdDateTime", managementTemplate.createdDateTime);
        writer.writeStringValue("description", managementTemplate.description);
        writer.writeStringValue("displayName", managementTemplate.displayName);
        writer.writeCollectionOfObjectValues<ActionUrl>("informationLinks", managementTemplate.informationLinks, serializeActionUrl);
        writer.writeStringValue("lastActionByUserId", managementTemplate.lastActionByUserId);
        writer.writeDateValue("lastActionDateTime", managementTemplate.lastActionDateTime);
        writer.writeCollectionOfObjectValues<ManagementTemplateCollection>("managementTemplateCollections", managementTemplate.managementTemplateCollections, serializeManagementTemplateCollection);
        writer.writeCollectionOfObjectValues<ManagementTemplateStep>("managementTemplateSteps", managementTemplate.managementTemplateSteps, serializeManagementTemplateStep);
        writer.writeCollectionOfObjectValues<TemplateParameter>("parameters", managementTemplate.parameters, serializeTemplateParameter);
        writer.writeNumberValue("priority", managementTemplate.priority);
        writer.writeEnumValue<ManagementProvider>("provider", managementTemplate.provider);
        writer.writeStringValue("userImpact", managementTemplate.userImpact);
        writer.writeNumberValue("version", managementTemplate.version);
        writer.writeCollectionOfObjectValues<WorkloadAction>("workloadActions", managementTemplate.workloadActions, serializeWorkloadAction);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementTemplateCollection(writer: SerializationWriter, managementTemplateCollection: Partial<ManagementTemplateCollection> | undefined | null = {}) : void {
    if (managementTemplateCollection) {
        serializeEntity(writer, managementTemplateCollection)
        writer.writeStringValue("createdByUserId", managementTemplateCollection.createdByUserId);
        writer.writeDateValue("createdDateTime", managementTemplateCollection.createdDateTime);
        writer.writeStringValue("description", managementTemplateCollection.description);
        writer.writeStringValue("displayName", managementTemplateCollection.displayName);
        writer.writeStringValue("lastActionByUserId", managementTemplateCollection.lastActionByUserId);
        writer.writeDateValue("lastActionDateTime", managementTemplateCollection.lastActionDateTime);
        writer.writeCollectionOfObjectValues<ManagementTemplate>("managementTemplates", managementTemplateCollection.managementTemplates, serializeManagementTemplate);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementTemplateCollectionCollectionResponse(writer: SerializationWriter, managementTemplateCollectionCollectionResponse: Partial<ManagementTemplateCollectionCollectionResponse> | undefined | null = {}) : void {
    if (managementTemplateCollectionCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managementTemplateCollectionCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagementTemplateCollection>("value", managementTemplateCollectionCollectionResponse.value, serializeManagementTemplateCollection);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementTemplateCollectionResponse(writer: SerializationWriter, managementTemplateCollectionResponse: Partial<ManagementTemplateCollectionResponse> | undefined | null = {}) : void {
    if (managementTemplateCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managementTemplateCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagementTemplate>("value", managementTemplateCollectionResponse.value, serializeManagementTemplate);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementTemplateCollectionTenantSummary(writer: SerializationWriter, managementTemplateCollectionTenantSummary: Partial<ManagementTemplateCollectionTenantSummary> | undefined | null = {}) : void {
    if (managementTemplateCollectionTenantSummary) {
        serializeEntity(writer, managementTemplateCollectionTenantSummary)
        writer.writeNumberValue("completeStepsCount", managementTemplateCollectionTenantSummary.completeStepsCount);
        writer.writeNumberValue("completeUsersCount", managementTemplateCollectionTenantSummary.completeUsersCount);
        writer.writeStringValue("createdByUserId", managementTemplateCollectionTenantSummary.createdByUserId);
        writer.writeDateValue("createdDateTime", managementTemplateCollectionTenantSummary.createdDateTime);
        writer.writeNumberValue("dismissedStepsCount", managementTemplateCollectionTenantSummary.dismissedStepsCount);
        writer.writeNumberValue("excludedUsersCount", managementTemplateCollectionTenantSummary.excludedUsersCount);
        writer.writeNumberValue("excludedUsersDistinctCount", managementTemplateCollectionTenantSummary.excludedUsersDistinctCount);
        writer.writeNumberValue("incompleteStepsCount", managementTemplateCollectionTenantSummary.incompleteStepsCount);
        writer.writeNumberValue("incompleteUsersCount", managementTemplateCollectionTenantSummary.incompleteUsersCount);
        writer.writeNumberValue("ineligibleStepsCount", managementTemplateCollectionTenantSummary.ineligibleStepsCount);
        writer.writeBooleanValue("isComplete", managementTemplateCollectionTenantSummary.isComplete);
        writer.writeStringValue("lastActionByUserId", managementTemplateCollectionTenantSummary.lastActionByUserId);
        writer.writeDateValue("lastActionDateTime", managementTemplateCollectionTenantSummary.lastActionDateTime);
        writer.writeStringValue("managementTemplateCollectionDisplayName", managementTemplateCollectionTenantSummary.managementTemplateCollectionDisplayName);
        writer.writeStringValue("managementTemplateCollectionId", managementTemplateCollectionTenantSummary.managementTemplateCollectionId);
        writer.writeNumberValue("regressedStepsCount", managementTemplateCollectionTenantSummary.regressedStepsCount);
        writer.writeNumberValue("regressedUsersCount", managementTemplateCollectionTenantSummary.regressedUsersCount);
        writer.writeStringValue("tenantId", managementTemplateCollectionTenantSummary.tenantId);
        writer.writeNumberValue("unlicensedUsersCount", managementTemplateCollectionTenantSummary.unlicensedUsersCount);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementTemplateCollectionTenantSummaryCollectionResponse(writer: SerializationWriter, managementTemplateCollectionTenantSummaryCollectionResponse: Partial<ManagementTemplateCollectionTenantSummaryCollectionResponse> | undefined | null = {}) : void {
    if (managementTemplateCollectionTenantSummaryCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managementTemplateCollectionTenantSummaryCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagementTemplateCollectionTenantSummary>("value", managementTemplateCollectionTenantSummaryCollectionResponse.value, serializeManagementTemplateCollectionTenantSummary);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementTemplateDetailedInfo(writer: SerializationWriter, managementTemplateDetailedInfo: Partial<ManagementTemplateDetailedInfo> | undefined | null = {}) : void {
    if (managementTemplateDetailedInfo) {
        writer.writeEnumValue<ManagementCategory>("category", managementTemplateDetailedInfo.category);
        writer.writeStringValue("displayName", managementTemplateDetailedInfo.displayName);
        writer.writeStringValue("managementTemplateId", managementTemplateDetailedInfo.managementTemplateId);
        writer.writeStringValue("@odata.type", managementTemplateDetailedInfo.odataType);
        writer.writeNumberValue("version", managementTemplateDetailedInfo.version);
        writer.writeAdditionalData(managementTemplateDetailedInfo.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementTemplateStep(writer: SerializationWriter, managementTemplateStep: Partial<ManagementTemplateStep> | undefined | null = {}) : void {
    if (managementTemplateStep) {
        serializeEntity(writer, managementTemplateStep)
        writer.writeObjectValue<ManagementTemplateStepVersion>("acceptedVersion", managementTemplateStep.acceptedVersion, serializeManagementTemplateStepVersion);
        writer.writeEnumValue<ManagementCategory>("category", managementTemplateStep.category);
        writer.writeStringValue("createdByUserId", managementTemplateStep.createdByUserId);
        writer.writeDateValue("createdDateTime", managementTemplateStep.createdDateTime);
        writer.writeStringValue("description", managementTemplateStep.description);
        writer.writeStringValue("displayName", managementTemplateStep.displayName);
        writer.writeCollectionOfObjectValues<ActionUrl>("informationLinks", managementTemplateStep.informationLinks, serializeActionUrl);
        writer.writeStringValue("lastActionByUserId", managementTemplateStep.lastActionByUserId);
        writer.writeDateValue("lastActionDateTime", managementTemplateStep.lastActionDateTime);
        writer.writeObjectValue<ManagementTemplate>("managementTemplate", managementTemplateStep.managementTemplate, serializeManagementTemplate);
        writer.writeObjectValue<ActionUrl>("portalLink", managementTemplateStep.portalLink, serializeActionUrl);
        writer.writeNumberValue("priority", managementTemplateStep.priority);
        writer.writeStringValue("userImpact", managementTemplateStep.userImpact);
        writer.writeCollectionOfObjectValues<ManagementTemplateStepVersion>("versions", managementTemplateStep.versions, serializeManagementTemplateStepVersion);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementTemplateStepCollectionResponse(writer: SerializationWriter, managementTemplateStepCollectionResponse: Partial<ManagementTemplateStepCollectionResponse> | undefined | null = {}) : void {
    if (managementTemplateStepCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managementTemplateStepCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagementTemplateStep>("value", managementTemplateStepCollectionResponse.value, serializeManagementTemplateStep);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementTemplateStepDeployment(writer: SerializationWriter, managementTemplateStepDeployment: Partial<ManagementTemplateStepDeployment> | undefined | null = {}) : void {
    if (managementTemplateStepDeployment) {
        serializeEntity(writer, managementTemplateStepDeployment)
        writer.writeStringValue("createdByUserId", managementTemplateStepDeployment.createdByUserId);
        writer.writeDateValue("createdDateTime", managementTemplateStepDeployment.createdDateTime);
        writer.writeObjectValue<GraphAPIErrorDetails>("error", managementTemplateStepDeployment.errorEscaped, serializeGraphAPIErrorDetails);
        writer.writeStringValue("lastActionByUserId", managementTemplateStepDeployment.lastActionByUserId);
        writer.writeDateValue("lastActionDateTime", managementTemplateStepDeployment.lastActionDateTime);
        writer.writeEnumValue<ManagementTemplateDeploymentStatus>("status", managementTemplateStepDeployment.status);
        writer.writeObjectValue<ManagementTemplateStepVersion>("templateStepVersion", managementTemplateStepDeployment.templateStepVersion, serializeManagementTemplateStepVersion);
        writer.writeStringValue("tenantId", managementTemplateStepDeployment.tenantId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementTemplateStepDeploymentCollectionResponse(writer: SerializationWriter, managementTemplateStepDeploymentCollectionResponse: Partial<ManagementTemplateStepDeploymentCollectionResponse> | undefined | null = {}) : void {
    if (managementTemplateStepDeploymentCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managementTemplateStepDeploymentCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagementTemplateStepDeployment>("value", managementTemplateStepDeploymentCollectionResponse.value, serializeManagementTemplateStepDeployment);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementTemplateStepTenantSummary(writer: SerializationWriter, managementTemplateStepTenantSummary: Partial<ManagementTemplateStepTenantSummary> | undefined | null = {}) : void {
    if (managementTemplateStepTenantSummary) {
        serializeEntity(writer, managementTemplateStepTenantSummary)
        writer.writeNumberValue("assignedTenantsCount", managementTemplateStepTenantSummary.assignedTenantsCount);
        writer.writeNumberValue("compliantTenantsCount", managementTemplateStepTenantSummary.compliantTenantsCount);
        writer.writeStringValue("createdByUserId", managementTemplateStepTenantSummary.createdByUserId);
        writer.writeDateValue("createdDateTime", managementTemplateStepTenantSummary.createdDateTime);
        writer.writeNumberValue("dismissedTenantsCount", managementTemplateStepTenantSummary.dismissedTenantsCount);
        writer.writeNumberValue("ineligibleTenantsCount", managementTemplateStepTenantSummary.ineligibleTenantsCount);
        writer.writeStringValue("lastActionByUserId", managementTemplateStepTenantSummary.lastActionByUserId);
        writer.writeDateValue("lastActionDateTime", managementTemplateStepTenantSummary.lastActionDateTime);
        writer.writeStringValue("managementTemplateCollectionDisplayName", managementTemplateStepTenantSummary.managementTemplateCollectionDisplayName);
        writer.writeStringValue("managementTemplateCollectionId", managementTemplateStepTenantSummary.managementTemplateCollectionId);
        writer.writeStringValue("managementTemplateDisplayName", managementTemplateStepTenantSummary.managementTemplateDisplayName);
        writer.writeStringValue("managementTemplateId", managementTemplateStepTenantSummary.managementTemplateId);
        writer.writeStringValue("managementTemplateStepDisplayName", managementTemplateStepTenantSummary.managementTemplateStepDisplayName);
        writer.writeStringValue("managementTemplateStepId", managementTemplateStepTenantSummary.managementTemplateStepId);
        writer.writeNumberValue("notCompliantTenantsCount", managementTemplateStepTenantSummary.notCompliantTenantsCount);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementTemplateStepTenantSummaryCollectionResponse(writer: SerializationWriter, managementTemplateStepTenantSummaryCollectionResponse: Partial<ManagementTemplateStepTenantSummaryCollectionResponse> | undefined | null = {}) : void {
    if (managementTemplateStepTenantSummaryCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managementTemplateStepTenantSummaryCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagementTemplateStepTenantSummary>("value", managementTemplateStepTenantSummaryCollectionResponse.value, serializeManagementTemplateStepTenantSummary);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementTemplateStepVersion(writer: SerializationWriter, managementTemplateStepVersion: Partial<ManagementTemplateStepVersion> | undefined | null = {}) : void {
    if (managementTemplateStepVersion) {
        serializeEntity(writer, managementTemplateStepVersion)
        writer.writeObjectValue<ManagementTemplateStep>("acceptedFor", managementTemplateStepVersion.acceptedFor, serializeManagementTemplateStep);
        writer.writeStringValue("contentMarkdown", managementTemplateStepVersion.contentMarkdown);
        writer.writeStringValue("createdByUserId", managementTemplateStepVersion.createdByUserId);
        writer.writeDateValue("createdDateTime", managementTemplateStepVersion.createdDateTime);
        writer.writeCollectionOfObjectValues<ManagementTemplateStepDeployment>("deployments", managementTemplateStepVersion.deployments, serializeManagementTemplateStepDeployment);
        writer.writeStringValue("lastActionByUserId", managementTemplateStepVersion.lastActionByUserId);
        writer.writeDateValue("lastActionDateTime", managementTemplateStepVersion.lastActionDateTime);
        writer.writeStringValue("name", managementTemplateStepVersion.name);
        writer.writeObjectValue<ManagementTemplateStep>("templateStep", managementTemplateStepVersion.templateStep, serializeManagementTemplateStep);
        writer.writeNumberValue("version", managementTemplateStepVersion.version);
        writer.writeStringValue("versionInformation", managementTemplateStepVersion.versionInformation);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagementTemplateStepVersionCollectionResponse(writer: SerializationWriter, managementTemplateStepVersionCollectionResponse: Partial<ManagementTemplateStepVersionCollectionResponse> | undefined | null = {}) : void {
    if (managementTemplateStepVersionCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, managementTemplateStepVersionCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagementTemplateStepVersion>("value", managementTemplateStepVersionCollectionResponse.value, serializeManagementTemplateStepVersion);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMyRole(writer: SerializationWriter, myRole: Partial<MyRole> | undefined | null = {}) : void {
    if (myRole) {
        writer.writeCollectionOfObjectValues<RoleAssignment>("assignments", myRole.assignments, serializeRoleAssignment);
        writer.writeStringValue("@odata.type", myRole.odataType);
        writer.writeStringValue("tenantId", myRole.tenantId);
        writer.writeAdditionalData(myRole.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMyRoleCollectionResponse(writer: SerializationWriter, myRoleCollectionResponse: Partial<MyRoleCollectionResponse> | undefined | null = {}) : void {
    if (myRoleCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, myRoleCollectionResponse)
        writer.writeCollectionOfObjectValues<MyRole>("value", myRoleCollectionResponse.value, serializeMyRole);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeNotificationTarget(writer: SerializationWriter, notificationTarget: Partial<NotificationTarget> | undefined | null = {}) : void {
    if (notificationTarget) {
        writer.writeStringValue("displayName", notificationTarget.displayName);
        writer.writeStringValue("@odata.type", notificationTarget.odataType);
        writer.writeAdditionalData(notificationTarget.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRoleAssignment(writer: SerializationWriter, roleAssignment: Partial<RoleAssignment> | undefined | null = {}) : void {
    if (roleAssignment) {
        writer.writeEnumValue<DelegatedPrivilegeStatus>("assignmentType", roleAssignment.assignmentType);
        writer.writeStringValue("@odata.type", roleAssignment.odataType);
        writer.writeCollectionOfObjectValues<RoleDefinition>("roles", roleAssignment.roles, serializeRoleDefinition);
        writer.writeAdditionalData(roleAssignment.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRoleDefinition(writer: SerializationWriter, roleDefinition: Partial<RoleDefinition> | undefined | null = {}) : void {
    if (roleDefinition) {
        writer.writeStringValue("description", roleDefinition.description);
        writer.writeStringValue("displayName", roleDefinition.displayName);
        writer.writeStringValue("@odata.type", roleDefinition.odataType);
        writer.writeStringValue("templateId", roleDefinition.templateId);
        writer.writeAdditionalData(roleDefinition.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSetting(writer: SerializationWriter, setting: Partial<Setting> | undefined | null = {}) : void {
    if (setting) {
        writer.writeStringValue("displayName", setting.displayName);
        writer.writeStringValue("jsonValue", setting.jsonValue);
        writer.writeStringValue("@odata.type", setting.odataType);
        writer.writeBooleanValue("overwriteAllowed", setting.overwriteAllowed);
        writer.writeStringValue("settingId", setting.settingId);
        writer.writeEnumValue<ManagementParameterValueType>("valueType", setting.valueType);
        writer.writeAdditionalData(setting.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTemplateParameter(writer: SerializationWriter, templateParameter: Partial<TemplateParameter> | undefined | null = {}) : void {
    if (templateParameter) {
        writer.writeStringValue("description", templateParameter.description);
        writer.writeStringValue("displayName", templateParameter.displayName);
        writer.writeStringValue("jsonAllowedValues", templateParameter.jsonAllowedValues);
        writer.writeStringValue("jsonDefaultValue", templateParameter.jsonDefaultValue);
        writer.writeStringValue("@odata.type", templateParameter.odataType);
        writer.writeEnumValue<ManagementParameterValueType>("valueType", templateParameter.valueType);
        writer.writeAdditionalData(templateParameter.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenant(writer: SerializationWriter, tenant: Partial<Tenant> | undefined | null = {}) : void {
    if (tenant) {
        serializeEntity(writer, tenant)
        writer.writeObjectValue<TenantContract>("contract", tenant.contract, serializeTenantContract);
        writer.writeDateValue("createdDateTime", tenant.createdDateTime);
        writer.writeStringValue("displayName", tenant.displayName);
        writer.writeDateValue("lastUpdatedDateTime", tenant.lastUpdatedDateTime);
        writer.writeStringValue("tenantId", tenant.tenantId);
        writer.writeObjectValue<TenantStatusInformation>("tenantStatusInformation", tenant.tenantStatusInformation, serializeTenantStatusInformation);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantCollectionResponse(writer: SerializationWriter, tenantCollectionResponse: Partial<TenantCollectionResponse> | undefined | null = {}) : void {
    if (tenantCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, tenantCollectionResponse)
        writer.writeCollectionOfObjectValues<Tenant>("value", tenantCollectionResponse.value, serializeTenant);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantContactInformation(writer: SerializationWriter, tenantContactInformation: Partial<TenantContactInformation> | undefined | null = {}) : void {
    if (tenantContactInformation) {
        writer.writeStringValue("email", tenantContactInformation.email);
        writer.writeStringValue("name", tenantContactInformation.name);
        writer.writeStringValue("notes", tenantContactInformation.notes);
        writer.writeStringValue("@odata.type", tenantContactInformation.odataType);
        writer.writeStringValue("phone", tenantContactInformation.phone);
        writer.writeStringValue("title", tenantContactInformation.title);
        writer.writeAdditionalData(tenantContactInformation.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantContract(writer: SerializationWriter, tenantContract: Partial<TenantContract> | undefined | null = {}) : void {
    if (tenantContract) {
        writer.writeNumberValue("contractType", tenantContract.contractType);
        writer.writeStringValue("defaultDomainName", tenantContract.defaultDomainName);
        writer.writeStringValue("displayName", tenantContract.displayName);
        writer.writeStringValue("@odata.type", tenantContract.odataType);
        writer.writeAdditionalData(tenantContract.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantCustomizedInformation(writer: SerializationWriter, tenantCustomizedInformation: Partial<TenantCustomizedInformation> | undefined | null = {}) : void {
    if (tenantCustomizedInformation) {
        serializeEntity(writer, tenantCustomizedInformation)
        writer.writeStringValue("businessRelationship", tenantCustomizedInformation.businessRelationship);
        writer.writeCollectionOfPrimitiveValues<string>("complianceRequirements", tenantCustomizedInformation.complianceRequirements);
        writer.writeCollectionOfObjectValues<TenantContactInformation>("contacts", tenantCustomizedInformation.contacts, serializeTenantContactInformation);
        writer.writeStringValue("displayName", tenantCustomizedInformation.displayName);
        writer.writeCollectionOfPrimitiveValues<string>("managedServicesPlans", tenantCustomizedInformation.managedServicesPlans);
        writer.writeStringValue("note", tenantCustomizedInformation.note);
        writer.writeDateValue("noteLastModifiedDateTime", tenantCustomizedInformation.noteLastModifiedDateTime);
        writer.writeCollectionOfPrimitiveValues<string>("partnerRelationshipManagerUserIds", tenantCustomizedInformation.partnerRelationshipManagerUserIds);
        writer.writeStringValue("tenantId", tenantCustomizedInformation.tenantId);
        writer.writeStringValue("website", tenantCustomizedInformation.website);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantCustomizedInformationCollectionResponse(writer: SerializationWriter, tenantCustomizedInformationCollectionResponse: Partial<TenantCustomizedInformationCollectionResponse> | undefined | null = {}) : void {
    if (tenantCustomizedInformationCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, tenantCustomizedInformationCollectionResponse)
        writer.writeCollectionOfObjectValues<TenantCustomizedInformation>("value", tenantCustomizedInformationCollectionResponse.value, serializeTenantCustomizedInformation);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantDetailedInformation(writer: SerializationWriter, tenantDetailedInformation: Partial<TenantDetailedInformation> | undefined | null = {}) : void {
    if (tenantDetailedInformation) {
        serializeEntity(writer, tenantDetailedInformation)
        writer.writeStringValue("city", tenantDetailedInformation.city);
        writer.writeStringValue("countryCode", tenantDetailedInformation.countryCode);
        writer.writeStringValue("countryName", tenantDetailedInformation.countryName);
        writer.writeStringValue("defaultDomainName", tenantDetailedInformation.defaultDomainName);
        writer.writeStringValue("displayName", tenantDetailedInformation.displayName);
        writer.writeStringValue("industryName", tenantDetailedInformation.industryName);
        writer.writeStringValue("region", tenantDetailedInformation.region);
        writer.writeStringValue("segmentName", tenantDetailedInformation.segmentName);
        writer.writeStringValue("tenantId", tenantDetailedInformation.tenantId);
        writer.writeStringValue("verticalName", tenantDetailedInformation.verticalName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantDetailedInformationCollectionResponse(writer: SerializationWriter, tenantDetailedInformationCollectionResponse: Partial<TenantDetailedInformationCollectionResponse> | undefined | null = {}) : void {
    if (tenantDetailedInformationCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, tenantDetailedInformationCollectionResponse)
        writer.writeCollectionOfObjectValues<TenantDetailedInformation>("value", tenantDetailedInformationCollectionResponse.value, serializeTenantDetailedInformation);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantGroup(writer: SerializationWriter, tenantGroup: Partial<TenantGroup> | undefined | null = {}) : void {
    if (tenantGroup) {
        serializeEntity(writer, tenantGroup)
        writer.writeBooleanValue("allTenantsIncluded", tenantGroup.allTenantsIncluded);
        writer.writeStringValue("displayName", tenantGroup.displayName);
        writer.writeCollectionOfObjectValues<ManagementActionInfo>("managementActions", tenantGroup.managementActions, serializeManagementActionInfo);
        writer.writeCollectionOfObjectValues<ManagementIntentInfo>("managementIntents", tenantGroup.managementIntents, serializeManagementIntentInfo);
        writer.writeCollectionOfPrimitiveValues<string>("tenantIds", tenantGroup.tenantIds);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantGroupCollectionResponse(writer: SerializationWriter, tenantGroupCollectionResponse: Partial<TenantGroupCollectionResponse> | undefined | null = {}) : void {
    if (tenantGroupCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, tenantGroupCollectionResponse)
        writer.writeCollectionOfObjectValues<TenantGroup>("value", tenantGroupCollectionResponse.value, serializeTenantGroup);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantInfo(writer: SerializationWriter, tenantInfo: Partial<TenantInfo> | undefined | null = {}) : void {
    if (tenantInfo) {
        writer.writeStringValue("@odata.type", tenantInfo.odataType);
        writer.writeStringValue("tenantId", tenantInfo.tenantId);
        writer.writeAdditionalData(tenantInfo.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantStatusInformation(writer: SerializationWriter, tenantStatusInformation: Partial<TenantStatusInformation> | undefined | null = {}) : void {
    if (tenantStatusInformation) {
        writer.writeEnumValue<DelegatedPrivilegeStatus>("delegatedPrivilegeStatus", tenantStatusInformation.delegatedPrivilegeStatus);
        writer.writeDateValue("lastDelegatedPrivilegeRefreshDateTime", tenantStatusInformation.lastDelegatedPrivilegeRefreshDateTime);
        writer.writeStringValue("@odata.type", tenantStatusInformation.odataType);
        writer.writeStringValue("offboardedByUserId", tenantStatusInformation.offboardedByUserId);
        writer.writeDateValue("offboardedDateTime", tenantStatusInformation.offboardedDateTime);
        writer.writeStringValue("onboardedByUserId", tenantStatusInformation.onboardedByUserId);
        writer.writeDateValue("onboardedDateTime", tenantStatusInformation.onboardedDateTime);
        writer.writeEnumValue<TenantOnboardingStatus>("onboardingStatus", tenantStatusInformation.onboardingStatus);
        writer.writeEnumValue<TenantOnboardingEligibilityReason>("tenantOnboardingEligibilityReason", tenantStatusInformation.tenantOnboardingEligibilityReason);
        writer.writeCollectionOfObjectValues<WorkloadStatus>("workloadStatuses", tenantStatusInformation.workloadStatuses, serializeWorkloadStatus);
        writer.writeAdditionalData(tenantStatusInformation.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantTag(writer: SerializationWriter, tenantTag: Partial<TenantTag> | undefined | null = {}) : void {
    if (tenantTag) {
        serializeEntity(writer, tenantTag)
        writer.writeStringValue("createdByUserId", tenantTag.createdByUserId);
        writer.writeDateValue("createdDateTime", tenantTag.createdDateTime);
        writer.writeDateValue("deletedDateTime", tenantTag.deletedDateTime);
        writer.writeStringValue("description", tenantTag.description);
        writer.writeStringValue("displayName", tenantTag.displayName);
        writer.writeStringValue("lastActionByUserId", tenantTag.lastActionByUserId);
        writer.writeDateValue("lastActionDateTime", tenantTag.lastActionDateTime);
        writer.writeCollectionOfObjectValues<TenantInfo>("tenants", tenantTag.tenants, serializeTenantInfo);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantTagCollectionResponse(writer: SerializationWriter, tenantTagCollectionResponse: Partial<TenantTagCollectionResponse> | undefined | null = {}) : void {
    if (tenantTagCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, tenantTagCollectionResponse)
        writer.writeCollectionOfObjectValues<TenantTag>("value", tenantTagCollectionResponse.value, serializeTenantTag);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWindowsDeviceMalwareState(writer: SerializationWriter, windowsDeviceMalwareState: Partial<WindowsDeviceMalwareState> | undefined | null = {}) : void {
    if (windowsDeviceMalwareState) {
        serializeEntity(writer, windowsDeviceMalwareState)
        writer.writeStringValue("additionalInformationUrl", windowsDeviceMalwareState.additionalInformationUrl);
        writer.writeNumberValue("detectionCount", windowsDeviceMalwareState.detectionCount);
        writer.writeBooleanValue("deviceDeleted", windowsDeviceMalwareState.deviceDeleted);
        writer.writeDateValue("initialDetectionDateTime", windowsDeviceMalwareState.initialDetectionDateTime);
        writer.writeDateValue("lastRefreshedDateTime", windowsDeviceMalwareState.lastRefreshedDateTime);
        writer.writeDateValue("lastStateChangeDateTime", windowsDeviceMalwareState.lastStateChangeDateTime);
        writer.writeStringValue("malwareCategory", windowsDeviceMalwareState.malwareCategory);
        writer.writeStringValue("malwareDisplayName", windowsDeviceMalwareState.malwareDisplayName);
        writer.writeStringValue("malwareExecutionState", windowsDeviceMalwareState.malwareExecutionState);
        writer.writeStringValue("malwareId", windowsDeviceMalwareState.malwareId);
        writer.writeStringValue("malwareSeverity", windowsDeviceMalwareState.malwareSeverity);
        writer.writeStringValue("malwareThreatState", windowsDeviceMalwareState.malwareThreatState);
        writer.writeStringValue("managedDeviceId", windowsDeviceMalwareState.managedDeviceId);
        writer.writeStringValue("managedDeviceName", windowsDeviceMalwareState.managedDeviceName);
        writer.writeStringValue("tenantDisplayName", windowsDeviceMalwareState.tenantDisplayName);
        writer.writeStringValue("tenantId", windowsDeviceMalwareState.tenantId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWindowsDeviceMalwareStateCollectionResponse(writer: SerializationWriter, windowsDeviceMalwareStateCollectionResponse: Partial<WindowsDeviceMalwareStateCollectionResponse> | undefined | null = {}) : void {
    if (windowsDeviceMalwareStateCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, windowsDeviceMalwareStateCollectionResponse)
        writer.writeCollectionOfObjectValues<WindowsDeviceMalwareState>("value", windowsDeviceMalwareStateCollectionResponse.value, serializeWindowsDeviceMalwareState);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWindowsProtectionState(writer: SerializationWriter, windowsProtectionState: Partial<WindowsProtectionState> | undefined | null = {}) : void {
    if (windowsProtectionState) {
        serializeEntity(writer, windowsProtectionState)
        writer.writeStringValue("antiMalwareVersion", windowsProtectionState.antiMalwareVersion);
        writer.writeBooleanValue("attentionRequired", windowsProtectionState.attentionRequired);
        writer.writeBooleanValue("deviceDeleted", windowsProtectionState.deviceDeleted);
        writer.writeDateValue("devicePropertyRefreshDateTime", windowsProtectionState.devicePropertyRefreshDateTime);
        writer.writeStringValue("engineVersion", windowsProtectionState.engineVersion);
        writer.writeBooleanValue("fullScanOverdue", windowsProtectionState.fullScanOverdue);
        writer.writeBooleanValue("fullScanRequired", windowsProtectionState.fullScanRequired);
        writer.writeDateValue("lastFullScanDateTime", windowsProtectionState.lastFullScanDateTime);
        writer.writeStringValue("lastFullScanSignatureVersion", windowsProtectionState.lastFullScanSignatureVersion);
        writer.writeDateValue("lastQuickScanDateTime", windowsProtectionState.lastQuickScanDateTime);
        writer.writeStringValue("lastQuickScanSignatureVersion", windowsProtectionState.lastQuickScanSignatureVersion);
        writer.writeDateValue("lastRefreshedDateTime", windowsProtectionState.lastRefreshedDateTime);
        writer.writeDateValue("lastReportedDateTime", windowsProtectionState.lastReportedDateTime);
        writer.writeBooleanValue("malwareProtectionEnabled", windowsProtectionState.malwareProtectionEnabled);
        writer.writeStringValue("managedDeviceHealthState", windowsProtectionState.managedDeviceHealthState);
        writer.writeStringValue("managedDeviceId", windowsProtectionState.managedDeviceId);
        writer.writeStringValue("managedDeviceName", windowsProtectionState.managedDeviceName);
        writer.writeBooleanValue("networkInspectionSystemEnabled", windowsProtectionState.networkInspectionSystemEnabled);
        writer.writeBooleanValue("quickScanOverdue", windowsProtectionState.quickScanOverdue);
        writer.writeBooleanValue("realTimeProtectionEnabled", windowsProtectionState.realTimeProtectionEnabled);
        writer.writeBooleanValue("rebootRequired", windowsProtectionState.rebootRequired);
        writer.writeBooleanValue("signatureUpdateOverdue", windowsProtectionState.signatureUpdateOverdue);
        writer.writeStringValue("signatureVersion", windowsProtectionState.signatureVersion);
        writer.writeStringValue("tenantDisplayName", windowsProtectionState.tenantDisplayName);
        writer.writeStringValue("tenantId", windowsProtectionState.tenantId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWindowsProtectionStateCollectionResponse(writer: SerializationWriter, windowsProtectionStateCollectionResponse: Partial<WindowsProtectionStateCollectionResponse> | undefined | null = {}) : void {
    if (windowsProtectionStateCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, windowsProtectionStateCollectionResponse)
        writer.writeCollectionOfObjectValues<WindowsProtectionState>("value", windowsProtectionStateCollectionResponse.value, serializeWindowsProtectionState);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWorkloadAction(writer: SerializationWriter, workloadAction: Partial<WorkloadAction> | undefined | null = {}) : void {
    if (workloadAction) {
        writer.writeStringValue("actionId", workloadAction.actionId);
        writer.writeEnumValue<WorkloadActionCategory>("category", workloadAction.category);
        writer.writeStringValue("description", workloadAction.description);
        writer.writeStringValue("displayName", workloadAction.displayName);
        writer.writeCollectionOfPrimitiveValues<string>("licenses", workloadAction.licenses);
        writer.writeStringValue("@odata.type", workloadAction.odataType);
        writer.writeStringValue("service", workloadAction.service);
        writer.writeCollectionOfObjectValues<Setting>("settings", workloadAction.settings, serializeSetting);
        writer.writeAdditionalData(workloadAction.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWorkloadActionDeploymentStatus(writer: SerializationWriter, workloadActionDeploymentStatus: Partial<WorkloadActionDeploymentStatus> | undefined | null = {}) : void {
    if (workloadActionDeploymentStatus) {
        writer.writeStringValue("actionId", workloadActionDeploymentStatus.actionId);
        writer.writeStringValue("deployedPolicyId", workloadActionDeploymentStatus.deployedPolicyId);
        writer.writeObjectValue<GenericError>("error", workloadActionDeploymentStatus.errorEscaped, serializeGenericError);
        writer.writeCollectionOfPrimitiveValues<string>("excludeGroups", workloadActionDeploymentStatus.excludeGroups);
        writer.writeBooleanValue("includeAllUsers", workloadActionDeploymentStatus.includeAllUsers);
        writer.writeCollectionOfPrimitiveValues<string>("includeGroups", workloadActionDeploymentStatus.includeGroups);
        writer.writeDateValue("lastDeploymentDateTime", workloadActionDeploymentStatus.lastDeploymentDateTime);
        writer.writeStringValue("@odata.type", workloadActionDeploymentStatus.odataType);
        writer.writeEnumValue<WorkloadActionStatus>("status", workloadActionDeploymentStatus.status);
        writer.writeAdditionalData(workloadActionDeploymentStatus.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWorkloadStatus(writer: SerializationWriter, workloadStatus: Partial<WorkloadStatus> | undefined | null = {}) : void {
    if (workloadStatus) {
        writer.writeStringValue("displayName", workloadStatus.displayName);
        writer.writeStringValue("@odata.type", workloadStatus.odataType);
        writer.writeDateValue("offboardedDateTime", workloadStatus.offboardedDateTime);
        writer.writeDateValue("onboardedDateTime", workloadStatus.onboardedDateTime);
        writer.writeEnumValue<WorkloadOnboardingStatus>("onboardingStatus", workloadStatus.onboardingStatus);
        writer.writeAdditionalData(workloadStatus.additionalData);
    }
}
export interface Setting extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The display name for the setting. Required. Read-only.
     */
    displayName?: string | null;
    /**
     * The value for the setting serialized as string of JSON. Required. Read-only.
     */
    jsonValue?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * A flag indicating whether the setting can be override existing configurations when applied. Required. Read-only.
     */
    overwriteAllowed?: boolean | null;
    /**
     * The settingId property
     */
    settingId?: string | null;
    /**
     * The valueType property
     */
    valueType?: ManagementParameterValueType | null;
}
export interface TemplateParameter extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The description for the template parameter. Optional. Read-only.
     */
    description?: string | null;
    /**
     * The display name for the template parameter. Required. Read-only.
     */
    displayName?: string | null;
    /**
     * The allowed values for the template parameter represented by a serialized string of JSON. Optional. Read-only.
     */
    jsonAllowedValues?: string | null;
    /**
     * The default value for the template parameter represented by a serialized string of JSON. Required. Read-only.
     */
    jsonDefaultValue?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The valueType property
     */
    valueType?: ManagementParameterValueType | null;
}
export interface Tenant extends Entity, Parsable {
    /**
     * The relationship details for the tenant with the managing entity.
     */
    contract?: TenantContract | null;
    /**
     * The date and time the tenant was created in the multi-tenant management platform. Optional. Read-only.
     */
    createdDateTime?: Date | null;
    /**
     * The display name for the tenant. Required. Read-only.
     */
    displayName?: string | null;
    /**
     * The date and time the tenant was last updated within the multi-tenant management platform. Optional. Read-only.
     */
    lastUpdatedDateTime?: Date | null;
    /**
     * The Microsoft Entra tenant identifier for the managed tenant. Optional. Read-only.
     */
    tenantId?: string | null;
    /**
     * The onboarding status information for the tenant. Optional. Read-only.
     */
    tenantStatusInformation?: TenantStatusInformation | null;
}
export interface TenantCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Tenant[] | null;
}
export interface TenantContactInformation extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The email address for the contact. Optional
     */
    email?: string | null;
    /**
     * The name for the contact. Required.
     */
    name?: string | null;
    /**
     * The notes associated with the contact. Optional
     */
    notes?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The phone number for the contact. Optional.
     */
    phone?: string | null;
    /**
     * The title for the contact. Required.
     */
    title?: string | null;
}
export interface TenantContract extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The type of relationship that exists between the managing entity and tenant. Optional. Read-only.
     */
    contractType?: number | null;
    /**
     * The default domain name for the tenant. Required. Read-only.
     */
    defaultDomainName?: string | null;
    /**
     * The display name for the tenant. Optional. Read-only.
     */
    displayName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface TenantCustomizedInformation extends Entity, Parsable {
    /**
     * Describes the relationship between the Managed Services Provider and the managed tenant; for example, Managed, Co-managed, Licensing. The maximum length is 250 characters. Optional.
     */
    businessRelationship?: string | null;
    /**
     * Contains the compliance requirements for the customer tenant; for example, HIPPA, NIST, CMMC. The maximum length is 250 characters per compliance requirement. Optional.
     */
    complianceRequirements?: string[] | null;
    /**
     * The collection of contacts for the managed tenant. Optional.
     */
    contacts?: TenantContactInformation[] | null;
    /**
     * The display name for the managed tenant. Required. Read-only.
     */
    displayName?: string | null;
    /**
     * This is the Managed Services Plans for the customer tenant that the Managed Services Provider manages. The maximum length is 250 characters per managed service plan. Optional.
     */
    managedServicesPlans?: string[] | null;
    /**
     * A field for the Managed Services Provider technician to input custom text to share notes between technicians within the Managed Service Providers. The maximum length is 5000 characters. Optional.
     */
    note?: string | null;
    /**
     * The date on which the note field of this entity was last modified. Optional.
     */
    noteLastModifiedDateTime?: Date | null;
    /**
     * The list of Entra user IDs for users in the Managed Services Provider that manage the relationship with the managed tenant. Optional.
     */
    partnerRelationshipManagerUserIds?: string[] | null;
    /**
     * The Microsoft Entra tenant identifier for the managed tenant. Optional. Read-only.
     */
    tenantId?: string | null;
    /**
     * The website for the managed tenant. Required.
     */
    website?: string | null;
}
export interface TenantCustomizedInformationCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: TenantCustomizedInformation[] | null;
}
export interface TenantDetailedInformation extends Entity, Parsable {
    /**
     * The city where the managed tenant is located. Optional. Read-only.
     */
    city?: string | null;
    /**
     * The code for the country where the managed tenant is located. Optional. Read-only.
     */
    countryCode?: string | null;
    /**
     * The name for the country where the managed tenant is located. Optional. Read-only.
     */
    countryName?: string | null;
    /**
     * The default domain name for the managed tenant. Optional. Read-only.
     */
    defaultDomainName?: string | null;
    /**
     * The display name for the managed tenant.
     */
    displayName?: string | null;
    /**
     * The business industry associated with the managed tenant. Optional. Read-only.
     */
    industryName?: string | null;
    /**
     * The region where the managed tenant is located. Optional. Read-only.
     */
    region?: string | null;
    /**
     * The business segment associated with the managed tenant. Optional. Read-only.
     */
    segmentName?: string | null;
    /**
     * The Microsoft Entra tenant identifier for the managed tenant.
     */
    tenantId?: string | null;
    /**
     * The vertical associated with the managed tenant. Optional. Read-only.
     */
    verticalName?: string | null;
}
export interface TenantDetailedInformationCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: TenantDetailedInformation[] | null;
}
export interface TenantGroup extends Entity, Parsable {
    /**
     * A flag indicating whether all managed tenant are included in the tenant group. Required. Read-only.
     */
    allTenantsIncluded?: boolean | null;
    /**
     * The display name for the tenant group. Optional. Read-only.
     */
    displayName?: string | null;
    /**
     * The collection of management action associated with the tenant group. Optional. Read-only.
     */
    managementActions?: ManagementActionInfo[] | null;
    /**
     * The collection of management intents associated with the tenant group. Optional. Read-only.
     */
    managementIntents?: ManagementIntentInfo[] | null;
    /**
     * The collection of managed tenant identifiers include in the tenant group. Optional. Read-only.
     */
    tenantIds?: string[] | null;
}
export interface TenantGroupCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: TenantGroup[] | null;
}
export interface TenantInfo extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The Microsoft Entra tenant identifier for the managed tenant. Optional.
     */
    tenantId?: string | null;
}
export type TenantOnboardingEligibilityReason = (typeof TenantOnboardingEligibilityReasonObject)[keyof typeof TenantOnboardingEligibilityReasonObject];
export type TenantOnboardingStatus = (typeof TenantOnboardingStatusObject)[keyof typeof TenantOnboardingStatusObject];
export interface TenantStatusInformation extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The status of the delegated admin privilege relationship between the managing entity and the managed tenant. Possible values are: none, delegatedAdminPrivileges, unknownFutureValue, granularDelegatedAdminPrivileges, delegatedAndGranularDelegetedAdminPrivileges. Use the Prefer: include-unknown-enum-members request header to get the following values from this evolvable enum: granularDelegatedAdminPrivileges , delegatedAndGranularDelegetedAdminPrivileges. Optional. Read-only.
     */
    delegatedPrivilegeStatus?: DelegatedPrivilegeStatus | null;
    /**
     * The date and time the delegated admin privileges status was updated. Optional. Read-only.
     */
    lastDelegatedPrivilegeRefreshDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The identifier for the account that offboarded the managed tenant. Optional. Read-only.
     */
    offboardedByUserId?: string | null;
    /**
     * The date and time when the managed tenant was offboarded. Optional. Read-only.
     */
    offboardedDateTime?: Date | null;
    /**
     * The identifier for the account that onboarded the managed tenant. Optional. Read-only.
     */
    onboardedByUserId?: string | null;
    /**
     * The date and time when the managed tenant was onboarded. Optional. Read-only.
     */
    onboardedDateTime?: Date | null;
    /**
     * The onboarding status for the managed tenant.. Possible values are: ineligible, inProcess, active, inactive, unknownFutureValue. Optional. Read-only.
     */
    onboardingStatus?: TenantOnboardingStatus | null;
    /**
     * Organization's onboarding eligibility reason in Microsoft 365 Lighthouse.. Possible values are: none, contractType, delegatedAdminPrivileges,usersCount,license and unknownFutureValue. Optional. Read-only.
     */
    tenantOnboardingEligibilityReason?: TenantOnboardingEligibilityReason | null;
    /**
     * The collection of workload statues for the managed tenant. Optional. Read-only.
     */
    workloadStatuses?: WorkloadStatus[] | null;
}
export interface TenantTag extends Entity, Parsable {
    /**
     * The identifier for the account that created the tenant tag. Required. Read-only.
     */
    createdByUserId?: string | null;
    /**
     * The date and time when the tenant tag was created. Required. Read-only.
     */
    createdDateTime?: Date | null;
    /**
     * The date and time when the tenant tag was deleted. Required. Read-only.
     */
    deletedDateTime?: Date | null;
    /**
     * The description for the tenant tag. Optional. Read-only.
     */
    description?: string | null;
    /**
     * The display name for the tenant tag. Required. Read-only.
     */
    displayName?: string | null;
    /**
     * The identifier for the account that lasted on the tenant tag. Optional. Read-only.
     */
    lastActionByUserId?: string | null;
    /**
     * The date and time the last action was performed against the tenant tag. Optional. Read-only.
     */
    lastActionDateTime?: Date | null;
    /**
     * The collection of managed tenants associated with the tenant tag. Optional.
     */
    tenants?: TenantInfo[] | null;
}
export interface TenantTagCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: TenantTag[] | null;
}
export interface WindowsDeviceMalwareState extends Entity, Parsable {
    /**
     * The additional information URL for the discovered malware. Optional. Read-only.
     */
    additionalInformationUrl?: string | null;
    /**
     * The number of times the piece of malware has been detected. Optional. Read-only.
     */
    detectionCount?: number | null;
    /**
     * A flag indicating whether the device has been deleted. Optional. Read-only.
     */
    deviceDeleted?: boolean | null;
    /**
     * The date and time the piece of malware was initially detected. Optional. Read-only.
     */
    initialDetectionDateTime?: Date | null;
    /**
     * Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.
     */
    lastRefreshedDateTime?: Date | null;
    /**
     * The date and time the malware state was last changed. Optional. Read-only.
     */
    lastStateChangeDateTime?: Date | null;
    /**
     * The category for the detected malware. Optional. Read-only.
     */
    malwareCategory?: string | null;
    /**
     * The display name for the detected malware. Optional. Read-only.
     */
    malwareDisplayName?: string | null;
    /**
     * The execution state for the detected malware. Optional. Read-only.
     */
    malwareExecutionState?: string | null;
    /**
     * The unique identifier for the detected malware. Optional. Read-only.
     */
    malwareId?: string | null;
    /**
     * The severity for the detected malware. Optional. Read-only.
     */
    malwareSeverity?: string | null;
    /**
     * The threat state for the detected malware. Optional. Read-only.
     */
    malwareThreatState?: string | null;
    /**
     * The identifier for the managed device where the malware was detected. Optional. Read-only.
     */
    managedDeviceId?: string | null;
    /**
     * The display name for the managed device where the malware was detected. Optional. Read-only.
     */
    managedDeviceName?: string | null;
    /**
     * The display name for the managed tenant. Optional. Read-only.
     */
    tenantDisplayName?: string | null;
    /**
     * The Microsoft Entra tenant identifier for the managed tenant. Optional. Read-only.
     */
    tenantId?: string | null;
}
export interface WindowsDeviceMalwareStateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: WindowsDeviceMalwareState[] | null;
}
export interface WindowsProtectionState extends Entity, Parsable {
    /**
     * The anti-malware version for the managed device. Optional. Read-only.
     */
    antiMalwareVersion?: string | null;
    /**
     * A flag indicating whether attention is required for the managed device. Optional. Read-only.
     */
    attentionRequired?: boolean | null;
    /**
     * A flag indicating whether the managed device has been deleted. Optional. Read-only.
     */
    deviceDeleted?: boolean | null;
    /**
     * The date and time the device property has been refreshed. Optional. Read-only.
     */
    devicePropertyRefreshDateTime?: Date | null;
    /**
     * The anti-virus engine version for the managed device. Optional. Read-only.
     */
    engineVersion?: string | null;
    /**
     * A flag indicating whether quick scan is overdue for the managed device. Optional. Read-only.
     */
    fullScanOverdue?: boolean | null;
    /**
     * A flag indicating whether full scan is overdue for the managed device. Optional. Read-only.
     */
    fullScanRequired?: boolean | null;
    /**
     * The date and time a full scan was completed. Optional. Read-only.
     */
    lastFullScanDateTime?: Date | null;
    /**
     * The version anti-malware version used to perform the last full scan. Optional. Read-only.
     */
    lastFullScanSignatureVersion?: string | null;
    /**
     * The date and time a quick scan was completed. Optional. Read-only.
     */
    lastQuickScanDateTime?: Date | null;
    /**
     * The version anti-malware version used to perform the last full scan. Optional. Read-only.
     */
    lastQuickScanSignatureVersion?: string | null;
    /**
     * Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.
     */
    lastRefreshedDateTime?: Date | null;
    /**
     * The date and time the protection state was last reported for the managed device. Optional. Read-only.
     */
    lastReportedDateTime?: Date | null;
    /**
     * A flag indicating whether malware protection is enabled for the managed device. Optional. Read-only.
     */
    malwareProtectionEnabled?: boolean | null;
    /**
     * The health state for the managed device. Optional. Read-only.
     */
    managedDeviceHealthState?: string | null;
    /**
     * The unique identifier for the managed device. Optional. Read-only.
     */
    managedDeviceId?: string | null;
    /**
     * The display name for the managed device. Optional. Read-only.
     */
    managedDeviceName?: string | null;
    /**
     * A flag indicating whether the network inspection system is enabled. Optional. Read-only.
     */
    networkInspectionSystemEnabled?: boolean | null;
    /**
     * A flag indicating weather a quick scan is overdue. Optional. Read-only.
     */
    quickScanOverdue?: boolean | null;
    /**
     * A flag indicating whether real time protection is enabled. Optional. Read-only.
     */
    realTimeProtectionEnabled?: boolean | null;
    /**
     * A flag indicating whether a reboot is required. Optional. Read-only.
     */
    rebootRequired?: boolean | null;
    /**
     * A flag indicating whether an signature update is overdue. Optional. Read-only.
     */
    signatureUpdateOverdue?: boolean | null;
    /**
     * The signature version for the managed device. Optional. Read-only.
     */
    signatureVersion?: string | null;
    /**
     * The display name for the managed tenant. Optional. Read-only.
     */
    tenantDisplayName?: string | null;
    /**
     * The Microsoft Entra tenant identifier for the managed tenant. Optional. Read-only.
     */
    tenantId?: string | null;
}
export interface WindowsProtectionStateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: WindowsProtectionState[] | null;
}
export interface WorkloadAction extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The unique identifier for the workload action. Required. Read-only.
     */
    actionId?: string | null;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The category for the workload action. Possible values are: automated, manual, unknownFutureValue. Optional. Read-only.
     */
    category?: WorkloadActionCategory | null;
    /**
     * The description for the workload action. Optional. Read-only.
     */
    description?: string | null;
    /**
     * The display name for the workload action. Optional. Read-only.
     */
    displayName?: string | null;
    /**
     * The licenses property
     */
    licenses?: string[] | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The service associated with workload action. Optional. Read-only.
     */
    service?: string | null;
    /**
     * The collection of settings associated with the workload action. Optional. Read-only.
     */
    settings?: Setting[] | null;
}
export type WorkloadActionCategory = (typeof WorkloadActionCategoryObject)[keyof typeof WorkloadActionCategoryObject];
export interface WorkloadActionDeploymentStatus extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The unique identifier for the workload action. Required. Read-only.
     */
    actionId?: string | null;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The identifier of any policy that was created by applying the workload action. Optional. Read-only.
     */
    deployedPolicyId?: string | null;
    /**
     * The detailed information for exceptions that occur when deploying the workload action. Optional. Required.
     */
    errorEscaped?: GenericError | null;
    /**
     * The excludeGroups property
     */
    excludeGroups?: string[] | null;
    /**
     * The includeAllUsers property
     */
    includeAllUsers?: boolean | null;
    /**
     * The includeGroups property
     */
    includeGroups?: string[] | null;
    /**
     * The date and time the workload action was last deployed. Optional.
     */
    lastDeploymentDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The status property
     */
    status?: WorkloadActionStatus | null;
}
export type WorkloadActionStatus = (typeof WorkloadActionStatusObject)[keyof typeof WorkloadActionStatusObject];
export type WorkloadOnboardingStatus = (typeof WorkloadOnboardingStatusObject)[keyof typeof WorkloadOnboardingStatusObject];
export interface WorkloadStatus extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The display name for the workload. Required. Read-only.
     */
    displayName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The date and time the workload was offboarded. Optional. Read-only.
     */
    offboardedDateTime?: Date | null;
    /**
     * The date and time the workload was onboarded. Optional. Read-only.
     */
    onboardedDateTime?: Date | null;
    /**
     * The onboardingStatus property
     */
    onboardingStatus?: WorkloadOnboardingStatus | null;
}
export const AlertSeverityObject = {
    Unknown: "unknown",
    Informational: "informational",
    Low: "low",
    Medium: "medium",
    High: "high",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AlertStatusObject = {
    Unknown: "unknown",
    NewAlert: "newAlert",
    InProgress: "inProgress",
    Resolved: "resolved",
    Dismissed: "dismissed",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DelegatedPrivilegeStatusObject = {
    None: "none",
    DelegatedAdminPrivileges: "delegatedAdminPrivileges",
    UnknownFutureValue: "unknownFutureValue",
    GranularDelegatedAdminPrivileges: "granularDelegatedAdminPrivileges",
    DelegatedAndGranularDelegetedAdminPrivileges: "delegatedAndGranularDelegetedAdminPrivileges",
} as const;
export const ManagementActionStatusObject = {
    ToAddress: "toAddress",
    Completed: "completed",
    ErrorEscaped: "error",
    TimeOut: "timeOut",
    InProgress: "inProgress",
    Planned: "planned",
    ResolvedBy3rdParty: "resolvedBy3rdParty",
    ResolvedThroughAlternateMitigation: "resolvedThroughAlternateMitigation",
    RiskAccepted: "riskAccepted",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ManagementCategoryObject = {
    Custom: "custom",
    Devices: "devices",
    Identity: "identity",
    Data: "data",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ManagementParameterValueTypeObject = {
    String: "string",
    Integer: "integer",
    Boolean: "boolean",
    Guid: "guid",
    StringCollection: "stringCollection",
    IntegerCollection: "integerCollection",
    BooleanCollection: "booleanCollection",
    GuidCollection: "guidCollection",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ManagementProviderObject = {
    Microsoft: "microsoft",
    Community: "community",
    IndirectProvider: "indirectProvider",
    Self: "self",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ManagementTemplateDeploymentStatusObject = {
    Unknown: "unknown",
    InProgress: "inProgress",
    Completed: "completed",
    Failed: "failed",
    Ineligible: "ineligible",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const NotificationDestinationObject = {
    None: "none",
    Api: "api",
    Email: "email",
    Sms: "sms",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const TenantOnboardingEligibilityReasonObject = {
    None: "none",
    ContractType: "contractType",
    DelegatedAdminPrivileges: "delegatedAdminPrivileges",
    UsersCount: "usersCount",
    License: "license",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const TenantOnboardingStatusObject = {
    Ineligible: "ineligible",
    InProcess: "inProcess",
    Active: "active",
    Inactive: "inactive",
    UnknownFutureValue: "unknownFutureValue",
    Disabled: "disabled",
} as const;
export const WorkloadActionCategoryObject = {
    Automated: "automated",
    Manual: "manual",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const WorkloadActionStatusObject = {
    ToAddress: "toAddress",
    Completed: "completed",
    ErrorEscaped: "error",
    TimeOut: "timeOut",
    InProgress: "inProgress",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const WorkloadOnboardingStatusObject = {
    NotOnboarded: "notOnboarded",
    Onboarded: "onboarded",
    UnknownFutureValue: "unknownFutureValue",
} as const;
/* tslint:enable */
/* eslint-enable */
