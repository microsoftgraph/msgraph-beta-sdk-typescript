/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createLongRunningOperationFromDiscriminatorValue, createPublicErrorFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, deserializeIntoEntity, deserializeIntoLongRunningOperation, serializeBaseCollectionPaginationCountResponse, serializeEntity, serializeLongRunningOperation, serializePublicError, type BaseCollectionPaginationCountResponse, type Entity, type LongRunningOperation, type PublicError } from '../index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type DateOnly, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export type AdditionalClassGroupAttributes = (typeof AdditionalClassGroupAttributesObject)[keyof typeof AdditionalClassGroupAttributesObject];
export interface AdditionalClassGroupOptions extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Indicates whether a team should be created for the class group.
     */
    createTeam?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Indicates whether the class group display name should be set on create.
     */
    writeDisplayNameOnCreateOnly?: boolean | null;
}
export type AdditionalUserAttributes = (typeof AdditionalUserAttributesObject)[keyof typeof AdditionalUserAttributesObject];
export interface AdditionalUserOptions extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Indicates whether student contact association should be allowed.
     */
    allowStudentContactAssociation?: boolean | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Indicates whether all students should be marked as minors.
     */
    markAllStudentsAsMinors?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface AdministrativeUnitProvisioningFlow extends Parsable, ProvisioningFlow {
    /**
     * The creationOptions property
     */
    creationOptions?: AdminUnitCreationOptions | null;
}
export interface AdminUnitCreationOptions extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Indicates whether the administrative unit should be created based on the org.
     */
    createBasedOnOrg?: boolean | null;
    /**
     * Indicates whether the administrative unit should be created based on the org and role group.
     */
    createBasedOnOrgPlusRoleGroup?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface AggregatedInboundStatistics extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The aggregate count of errors encountered by activities during this run.
     */
    errors?: number | null;
    /**
     * The aggregate count of active inbound groups processed during the run.
     */
    groups?: number | null;
    /**
     * The aggregate count of active people matched to a Microsoft Entra user, by role.
     */
    matchedPeopleByRole?: IndustryDataRunRoleCountMetric[] | null;
    /**
     * The aggregate count of active inbound memberships processed during the run.
     */
    memberships?: number | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The aggregate count of active inbound organizations processed during the run.
     */
    organizations?: number | null;
    /**
     * The aggregate count of active inbound people processed during the run.
     */
    people?: number | null;
    /**
     * The aggregate count of active people not matched to a Microsoft Entra user, by role.
     */
    unmatchedPeopleByRole?: IndustryDataRunRoleCountMetric[] | null;
    /**
     * The aggregate count of warnings generated by activities during this run.
     */
    warnings?: number | null;
}
export interface ApiDataConnector extends IndustryDataConnector, Parsable {
    /**
     * The apiFormat property
     */
    apiFormat?: ApiFormat | null;
    /**
     * The base URL, including the scheme, host, and path for the API, with or without a trailing '/'. For example, 'https://example.com/ims/oneRoster/v1p1'
     */
    baseUrl?: string | null;
    /**
     * The credential property
     */
    credential?: Credential | null;
}
export type ApiFormat = (typeof ApiFormatObject)[keyof typeof ApiFormatObject];
export interface AzureDataLakeConnector extends FileDataConnector, Parsable {
    /**
     * The file format that external systems can upload using this connector.
     */
    fileFormat?: FileFormatReferenceValue | null;
}
export interface BasicFilter extends Filter, Parsable {
    /**
     * The attribute property
     */
    attribute?: FilterOptions | null;
    /**
     * The condition to filter with.
     */
    inEscaped?: string[] | null;
}
export interface ClassGroupConfiguration extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The different attributes to sync for the class groups. The possible values are: courseTitle, courseCode, courseSubject, courseGradeLevel, courseExternalId, academicSessionTitle, academicSessionExternalId, classCode, unknownFutureValue.
     */
    additionalAttributes?: AdditionalClassGroupAttributes[] | null;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The additionalOptions property
     */
    additionalOptions?: AdditionalClassGroupOptions | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The enrollmentMappings property
     */
    enrollmentMappings?: EnrollmentMappings | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface ClassGroupProvisioningFlow extends Parsable, ProvisioningFlow {
    /**
     * The configuration property
     */
    configuration?: ClassGroupConfiguration | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AdditionalClassGroupOptions}
 */
// @ts-ignore
export function createAdditionalClassGroupOptionsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAdditionalClassGroupOptions;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AdditionalUserOptions}
 */
// @ts-ignore
export function createAdditionalUserOptionsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAdditionalUserOptions;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AdministrativeUnitProvisioningFlow}
 */
// @ts-ignore
export function createAdministrativeUnitProvisioningFlowFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAdministrativeUnitProvisioningFlow;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AdminUnitCreationOptions}
 */
// @ts-ignore
export function createAdminUnitCreationOptionsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAdminUnitCreationOptions;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AggregatedInboundStatistics}
 */
// @ts-ignore
export function createAggregatedInboundStatisticsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAggregatedInboundStatistics;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ApiDataConnector}
 */
// @ts-ignore
export function createApiDataConnectorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.industryData.oneRosterApiDataConnector":
                    return deserializeIntoOneRosterApiDataConnector;
            }
        }
    }
    return deserializeIntoApiDataConnector;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AzureDataLakeConnector}
 */
// @ts-ignore
export function createAzureDataLakeConnectorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAzureDataLakeConnector;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BasicFilter}
 */
// @ts-ignore
export function createBasicFilterFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBasicFilter;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ClassGroupConfiguration}
 */
// @ts-ignore
export function createClassGroupConfigurationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoClassGroupConfiguration;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ClassGroupProvisioningFlow}
 */
// @ts-ignore
export function createClassGroupProvisioningFlowFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoClassGroupProvisioningFlow;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Credential}
 */
// @ts-ignore
export function createCredentialFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.industryData.oAuth1ClientCredential":
                    return deserializeIntoOAuth1ClientCredential;
                case "#microsoft.graph.industryData.oAuth2ClientCredential":
                    return deserializeIntoOAuth2ClientCredential;
                case "#microsoft.graph.industryData.oAuthClientCredential":
                    return deserializeIntoOAuthClientCredential;
            }
        }
    }
    return deserializeIntoCredential;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EnrollmentMappings}
 */
// @ts-ignore
export function createEnrollmentMappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEnrollmentMappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileDataConnector}
 */
// @ts-ignore
export function createFileDataConnectorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.industryData.azureDataLakeConnector":
                    return deserializeIntoAzureDataLakeConnector;
            }
        }
    }
    return deserializeIntoFileDataConnector;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileFormatReferenceValue}
 */
// @ts-ignore
export function createFileFormatReferenceValueFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileFormatReferenceValue;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileValidateOperation}
 */
// @ts-ignore
export function createFileValidateOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileValidateOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Filter}
 */
// @ts-ignore
export function createFilterFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.industryData.basicFilter":
                    return deserializeIntoBasicFilter;
            }
        }
    }
    return deserializeIntoFilter;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IdentifierTypeReferenceValue}
 */
// @ts-ignore
export function createIdentifierTypeReferenceValueFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIdentifierTypeReferenceValue;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InboundActivityResults}
 */
// @ts-ignore
export function createInboundActivityResultsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInboundActivityResults;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InboundApiFlow}
 */
// @ts-ignore
export function createInboundApiFlowFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInboundApiFlow;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InboundFileFlow}
 */
// @ts-ignore
export function createInboundFileFlowFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInboundFileFlow;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InboundFlowActivity}
 */
// @ts-ignore
export function createInboundFlowActivityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInboundFlowActivity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InboundFlowCollectionResponse}
 */
// @ts-ignore
export function createInboundFlowCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInboundFlowCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InboundFlow}
 */
// @ts-ignore
export function createInboundFlowFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.industryData.inboundApiFlow":
                    return deserializeIntoInboundApiFlow;
                case "#microsoft.graph.industryData.inboundFileFlow":
                    return deserializeIntoInboundFileFlow;
            }
        }
    }
    return deserializeIntoInboundFlow;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IndustryDataActivity}
 */
// @ts-ignore
export function createIndustryDataActivityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.industryData.inboundApiFlow":
                    return deserializeIntoInboundApiFlow;
                case "#microsoft.graph.industryData.inboundFileFlow":
                    return deserializeIntoInboundFileFlow;
                case "#microsoft.graph.industryData.inboundFlow":
                    return deserializeIntoInboundFlow;
            }
        }
    }
    return deserializeIntoIndustryDataActivity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IndustryDataActivityStatistics}
 */
// @ts-ignore
export function createIndustryDataActivityStatisticsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.industryData.inboundActivityResults":
                    return deserializeIntoInboundActivityResults;
            }
        }
    }
    return deserializeIntoIndustryDataActivityStatistics;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IndustryDataConnectorCollectionResponse}
 */
// @ts-ignore
export function createIndustryDataConnectorCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIndustryDataConnectorCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IndustryDataConnector}
 */
// @ts-ignore
export function createIndustryDataConnectorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.industryData.apiDataConnector":
                    return deserializeIntoApiDataConnector;
                case "#microsoft.graph.industryData.azureDataLakeConnector":
                    return deserializeIntoAzureDataLakeConnector;
                case "#microsoft.graph.industryData.fileDataConnector":
                    return deserializeIntoFileDataConnector;
                case "#microsoft.graph.industryData.oneRosterApiDataConnector":
                    return deserializeIntoOneRosterApiDataConnector;
            }
        }
    }
    return deserializeIntoIndustryDataConnector;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IndustryDataRoot}
 */
// @ts-ignore
export function createIndustryDataRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIndustryDataRoot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IndustryDataRunActivityCollectionResponse}
 */
// @ts-ignore
export function createIndustryDataRunActivityCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIndustryDataRunActivityCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IndustryDataRunActivity}
 */
// @ts-ignore
export function createIndustryDataRunActivityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.industryData.inboundFlowActivity":
                    return deserializeIntoInboundFlowActivity;
                case "#microsoft.graph.industryData.outboundFlowActivity":
                    return deserializeIntoOutboundFlowActivity;
            }
        }
    }
    return deserializeIntoIndustryDataRunActivity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IndustryDataRunCollectionResponse}
 */
// @ts-ignore
export function createIndustryDataRunCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIndustryDataRunCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IndustryDataRunEntityCountMetric}
 */
// @ts-ignore
export function createIndustryDataRunEntityCountMetricFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIndustryDataRunEntityCountMetric;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IndustryDataRun}
 */
// @ts-ignore
export function createIndustryDataRunFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIndustryDataRun;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IndustryDataRunRoleCountMetric}
 */
// @ts-ignore
export function createIndustryDataRunRoleCountMetricFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIndustryDataRunRoleCountMetric;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IndustryDataRunStatistics}
 */
// @ts-ignore
export function createIndustryDataRunStatisticsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIndustryDataRunStatistics;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OAuth1ClientCredential}
 */
// @ts-ignore
export function createOAuth1ClientCredentialFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOAuth1ClientCredential;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OAuth2ClientCredential}
 */
// @ts-ignore
export function createOAuth2ClientCredentialFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOAuth2ClientCredential;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OAuthClientCredential}
 */
// @ts-ignore
export function createOAuthClientCredentialFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.industryData.oAuth1ClientCredential":
                    return deserializeIntoOAuth1ClientCredential;
                case "#microsoft.graph.industryData.oAuth2ClientCredential":
                    return deserializeIntoOAuth2ClientCredential;
            }
        }
    }
    return deserializeIntoOAuthClientCredential;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OneRosterApiDataConnector}
 */
// @ts-ignore
export function createOneRosterApiDataConnectorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOneRosterApiDataConnector;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OutboundFlowActivity}
 */
// @ts-ignore
export function createOutboundFlowActivityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOutboundFlowActivity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OutboundProvisioningFlowSetCollectionResponse}
 */
// @ts-ignore
export function createOutboundProvisioningFlowSetCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOutboundProvisioningFlowSetCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OutboundProvisioningFlowSet}
 */
// @ts-ignore
export function createOutboundProvisioningFlowSetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOutboundProvisioningFlowSet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PasswordSettings}
 */
// @ts-ignore
export function createPasswordSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.industryData.simplePasswordSettings":
                    return deserializeIntoSimplePasswordSettings;
            }
        }
    }
    return deserializeIntoPasswordSettings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProvisioningFlowCollectionResponse}
 */
// @ts-ignore
export function createProvisioningFlowCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProvisioningFlowCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProvisioningFlow}
 */
// @ts-ignore
export function createProvisioningFlowFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.industryData.administrativeUnitProvisioningFlow":
                    return deserializeIntoAdministrativeUnitProvisioningFlow;
                case "#microsoft.graph.industryData.classGroupProvisioningFlow":
                    return deserializeIntoClassGroupProvisioningFlow;
                case "#microsoft.graph.industryData.securityGroupProvisioningFlow":
                    return deserializeIntoSecurityGroupProvisioningFlow;
                case "#microsoft.graph.industryData.userProvisioningFlow":
                    return deserializeIntoUserProvisioningFlow;
            }
        }
    }
    return deserializeIntoProvisioningFlow;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ReferenceDefinitionCollectionResponse}
 */
// @ts-ignore
export function createReferenceDefinitionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoReferenceDefinitionCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ReferenceDefinition}
 */
// @ts-ignore
export function createReferenceDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoReferenceDefinition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ReferenceValue}
 */
// @ts-ignore
export function createReferenceValueFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.industryData.fileFormatReferenceValue":
                    return deserializeIntoFileFormatReferenceValue;
                case "#microsoft.graph.industryData.identifierTypeReferenceValue":
                    return deserializeIntoIdentifierTypeReferenceValue;
                case "#microsoft.graph.industryData.roleReferenceValue":
                    return deserializeIntoRoleReferenceValue;
                case "#microsoft.graph.industryData.sectionRoleReferenceValue":
                    return deserializeIntoSectionRoleReferenceValue;
                case "#microsoft.graph.industryData.userMatchTargetReferenceValue":
                    return deserializeIntoUserMatchTargetReferenceValue;
                case "#microsoft.graph.industryData.yearReferenceValue":
                    return deserializeIntoYearReferenceValue;
            }
        }
    }
    return deserializeIntoReferenceValue;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RoleGroupCollectionResponse}
 */
// @ts-ignore
export function createRoleGroupCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRoleGroupCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RoleGroup}
 */
// @ts-ignore
export function createRoleGroupFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRoleGroup;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RoleReferenceValue}
 */
// @ts-ignore
export function createRoleReferenceValueFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRoleReferenceValue;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SectionRoleReferenceValue}
 */
// @ts-ignore
export function createSectionRoleReferenceValueFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSectionRoleReferenceValue;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SecurityGroupCreationOptions}
 */
// @ts-ignore
export function createSecurityGroupCreationOptionsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecurityGroupCreationOptions;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SecurityGroupProvisioningFlow}
 */
// @ts-ignore
export function createSecurityGroupProvisioningFlowFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecurityGroupProvisioningFlow;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SimplePasswordSettings}
 */
// @ts-ignore
export function createSimplePasswordSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSimplePasswordSettings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SourceSystemDefinitionCollectionResponse}
 */
// @ts-ignore
export function createSourceSystemDefinitionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSourceSystemDefinitionCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SourceSystemDefinition}
 */
// @ts-ignore
export function createSourceSystemDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSourceSystemDefinition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserConfiguration}
 */
// @ts-ignore
export function createUserConfigurationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserConfiguration;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserCreationOptions}
 */
// @ts-ignore
export function createUserCreationOptionsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserCreationOptions;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserManagementOptions}
 */
// @ts-ignore
export function createUserManagementOptionsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserManagementOptions;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserMatchingSetting}
 */
// @ts-ignore
export function createUserMatchingSettingFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserMatchingSetting;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserMatchTargetReferenceValue}
 */
// @ts-ignore
export function createUserMatchTargetReferenceValueFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserMatchTargetReferenceValue;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserProvisioningFlow}
 */
// @ts-ignore
export function createUserProvisioningFlowFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserProvisioningFlow;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ValidateOperation}
 */
// @ts-ignore
export function createValidateOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.industryData.fileValidateOperation":
                    return deserializeIntoFileValidateOperation;
            }
        }
    }
    return deserializeIntoValidateOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {YearReferenceValue}
 */
// @ts-ignore
export function createYearReferenceValueFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoYearReferenceValue;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {YearTimePeriodDefinitionCollectionResponse}
 */
// @ts-ignore
export function createYearTimePeriodDefinitionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoYearTimePeriodDefinitionCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {YearTimePeriodDefinition}
 */
// @ts-ignore
export function createYearTimePeriodDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoYearTimePeriodDefinition;
}
export interface Credential extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name of the credential.
     */
    displayName?: string | null;
    /**
     * Indicates whether the credential provided is valid based on the last data connector validate operation.
     */
    isValid?: boolean | null;
    /**
     * The time that the credential was last successfully validated by the data connector validate operation.
     */
    lastValidDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAdditionalClassGroupOptions(additionalClassGroupOptions: Partial<AdditionalClassGroupOptions> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { additionalClassGroupOptions.backingStoreEnabled = true; },
        "createTeam": n => { additionalClassGroupOptions.createTeam = n.getBooleanValue(); },
        "@odata.type": n => { additionalClassGroupOptions.odataType = n.getStringValue(); },
        "writeDisplayNameOnCreateOnly": n => { additionalClassGroupOptions.writeDisplayNameOnCreateOnly = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAdditionalUserOptions(additionalUserOptions: Partial<AdditionalUserOptions> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "allowStudentContactAssociation": n => { additionalUserOptions.allowStudentContactAssociation = n.getBooleanValue(); },
        "backingStoreEnabled": n => { additionalUserOptions.backingStoreEnabled = true; },
        "markAllStudentsAsMinors": n => { additionalUserOptions.markAllStudentsAsMinors = n.getBooleanValue(); },
        "@odata.type": n => { additionalUserOptions.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAdministrativeUnitProvisioningFlow(administrativeUnitProvisioningFlow: Partial<AdministrativeUnitProvisioningFlow> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoProvisioningFlow(administrativeUnitProvisioningFlow),
        "creationOptions": n => { administrativeUnitProvisioningFlow.creationOptions = n.getObjectValue<AdminUnitCreationOptions>(createAdminUnitCreationOptionsFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAdminUnitCreationOptions(adminUnitCreationOptions: Partial<AdminUnitCreationOptions> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { adminUnitCreationOptions.backingStoreEnabled = true; },
        "createBasedOnOrg": n => { adminUnitCreationOptions.createBasedOnOrg = n.getBooleanValue(); },
        "createBasedOnOrgPlusRoleGroup": n => { adminUnitCreationOptions.createBasedOnOrgPlusRoleGroup = n.getBooleanValue(); },
        "@odata.type": n => { adminUnitCreationOptions.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAggregatedInboundStatistics(aggregatedInboundStatistics: Partial<AggregatedInboundStatistics> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { aggregatedInboundStatistics.backingStoreEnabled = true; },
        "errors": n => { aggregatedInboundStatistics.errors = n.getNumberValue(); },
        "groups": n => { aggregatedInboundStatistics.groups = n.getNumberValue(); },
        "matchedPeopleByRole": n => { aggregatedInboundStatistics.matchedPeopleByRole = n.getCollectionOfObjectValues<IndustryDataRunRoleCountMetric>(createIndustryDataRunRoleCountMetricFromDiscriminatorValue); },
        "memberships": n => { aggregatedInboundStatistics.memberships = n.getNumberValue(); },
        "@odata.type": n => { aggregatedInboundStatistics.odataType = n.getStringValue(); },
        "organizations": n => { aggregatedInboundStatistics.organizations = n.getNumberValue(); },
        "people": n => { aggregatedInboundStatistics.people = n.getNumberValue(); },
        "unmatchedPeopleByRole": n => { aggregatedInboundStatistics.unmatchedPeopleByRole = n.getCollectionOfObjectValues<IndustryDataRunRoleCountMetric>(createIndustryDataRunRoleCountMetricFromDiscriminatorValue); },
        "warnings": n => { aggregatedInboundStatistics.warnings = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoApiDataConnector(apiDataConnector: Partial<ApiDataConnector> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIndustryDataConnector(apiDataConnector),
        "apiFormat": n => { apiDataConnector.apiFormat = n.getEnumValue<ApiFormat>(ApiFormatObject); },
        "baseUrl": n => { apiDataConnector.baseUrl = n.getStringValue(); },
        "credential": n => { apiDataConnector.credential = n.getObjectValue<Credential>(createCredentialFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAzureDataLakeConnector(azureDataLakeConnector: Partial<AzureDataLakeConnector> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFileDataConnector(azureDataLakeConnector),
        "fileFormat": n => { azureDataLakeConnector.fileFormat = n.getObjectValue<FileFormatReferenceValue>(createFileFormatReferenceValueFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBasicFilter(basicFilter: Partial<BasicFilter> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilter(basicFilter),
        "attribute": n => { basicFilter.attribute = n.getEnumValue<FilterOptions>(FilterOptionsObject); },
        "in": n => { basicFilter.inEscaped = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoClassGroupConfiguration(classGroupConfiguration: Partial<ClassGroupConfiguration> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "additionalAttributes": n => { classGroupConfiguration.additionalAttributes = n.getCollectionOfEnumValues<AdditionalClassGroupAttributes>(AdditionalClassGroupAttributesObject); },
        "additionalOptions": n => { classGroupConfiguration.additionalOptions = n.getObjectValue<AdditionalClassGroupOptions>(createAdditionalClassGroupOptionsFromDiscriminatorValue); },
        "backingStoreEnabled": n => { classGroupConfiguration.backingStoreEnabled = true; },
        "enrollmentMappings": n => { classGroupConfiguration.enrollmentMappings = n.getObjectValue<EnrollmentMappings>(createEnrollmentMappingsFromDiscriminatorValue); },
        "@odata.type": n => { classGroupConfiguration.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoClassGroupProvisioningFlow(classGroupProvisioningFlow: Partial<ClassGroupProvisioningFlow> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoProvisioningFlow(classGroupProvisioningFlow),
        "configuration": n => { classGroupProvisioningFlow.configuration = n.getObjectValue<ClassGroupConfiguration>(createClassGroupConfigurationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCredential(credential: Partial<Credential> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { credential.backingStoreEnabled = true; },
        "displayName": n => { credential.displayName = n.getStringValue(); },
        "isValid": n => { credential.isValid = n.getBooleanValue(); },
        "lastValidDateTime": n => { credential.lastValidDateTime = n.getDateValue(); },
        "@odata.type": n => { credential.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEnrollmentMappings(enrollmentMappings: Partial<EnrollmentMappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { enrollmentMappings.backingStoreEnabled = true; },
        "memberEnrollmentMappings": n => { enrollmentMappings.memberEnrollmentMappings = n.getCollectionOfObjectValues<SectionRoleReferenceValue>(createSectionRoleReferenceValueFromDiscriminatorValue); },
        "@odata.type": n => { enrollmentMappings.odataType = n.getStringValue(); },
        "ownerEnrollmentMappings": n => { enrollmentMappings.ownerEnrollmentMappings = n.getCollectionOfObjectValues<SectionRoleReferenceValue>(createSectionRoleReferenceValueFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileDataConnector(fileDataConnector: Partial<FileDataConnector> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIndustryDataConnector(fileDataConnector),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileFormatReferenceValue(fileFormatReferenceValue: Partial<FileFormatReferenceValue> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoReferenceValue(fileFormatReferenceValue),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileValidateOperation(fileValidateOperation: Partial<FileValidateOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoValidateOperation(fileValidateOperation),
        "validatedFiles": n => { fileValidateOperation.validatedFiles = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilter(filter: Partial<Filter> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { filter.backingStoreEnabled = true; },
        "@odata.type": n => { filter.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIdentifierTypeReferenceValue(identifierTypeReferenceValue: Partial<IdentifierTypeReferenceValue> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoReferenceValue(identifierTypeReferenceValue),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInboundActivityResults(inboundActivityResults: Partial<InboundActivityResults> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIndustryDataActivityStatistics(inboundActivityResults),
        "errors": n => { inboundActivityResults.errors = n.getNumberValue(); },
        "groups": n => { inboundActivityResults.groups = n.getObjectValue<IndustryDataRunEntityCountMetric>(createIndustryDataRunEntityCountMetricFromDiscriminatorValue); },
        "matchedPeopleByRole": n => { inboundActivityResults.matchedPeopleByRole = n.getCollectionOfObjectValues<IndustryDataRunRoleCountMetric>(createIndustryDataRunRoleCountMetricFromDiscriminatorValue); },
        "memberships": n => { inboundActivityResults.memberships = n.getObjectValue<IndustryDataRunEntityCountMetric>(createIndustryDataRunEntityCountMetricFromDiscriminatorValue); },
        "organizations": n => { inboundActivityResults.organizations = n.getObjectValue<IndustryDataRunEntityCountMetric>(createIndustryDataRunEntityCountMetricFromDiscriminatorValue); },
        "people": n => { inboundActivityResults.people = n.getObjectValue<IndustryDataRunEntityCountMetric>(createIndustryDataRunEntityCountMetricFromDiscriminatorValue); },
        "unmatchedPeopleByRole": n => { inboundActivityResults.unmatchedPeopleByRole = n.getCollectionOfObjectValues<IndustryDataRunRoleCountMetric>(createIndustryDataRunRoleCountMetricFromDiscriminatorValue); },
        "warnings": n => { inboundActivityResults.warnings = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInboundApiFlow(inboundApiFlow: Partial<InboundApiFlow> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInboundFlow(inboundApiFlow),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInboundFileFlow(inboundFileFlow: Partial<InboundFileFlow> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoInboundFlow(inboundFileFlow),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInboundFlow(inboundFlow: Partial<InboundFlow> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIndustryDataActivity(inboundFlow),
        "dataConnector": n => { inboundFlow.dataConnector = n.getObjectValue<IndustryDataConnector>(createIndustryDataConnectorFromDiscriminatorValue); },
        "dataDomain": n => { inboundFlow.dataDomain = n.getEnumValue<InboundDomain>(InboundDomainObject); },
        "effectiveDateTime": n => { inboundFlow.effectiveDateTime = n.getDateValue(); },
        "expirationDateTime": n => { inboundFlow.expirationDateTime = n.getDateValue(); },
        "year": n => { inboundFlow.year = n.getObjectValue<YearTimePeriodDefinition>(createYearTimePeriodDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInboundFlowActivity(inboundFlowActivity: Partial<InboundFlowActivity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIndustryDataRunActivity(inboundFlowActivity),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInboundFlowCollectionResponse(inboundFlowCollectionResponse: Partial<InboundFlowCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(inboundFlowCollectionResponse),
        "value": n => { inboundFlowCollectionResponse.value = n.getCollectionOfObjectValues<InboundFlow>(createInboundFlowFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIndustryDataActivity(industryDataActivity: Partial<IndustryDataActivity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(industryDataActivity),
        "displayName": n => { industryDataActivity.displayName = n.getStringValue(); },
        "readinessStatus": n => { industryDataActivity.readinessStatus = n.getEnumValue<ReadinessStatus>(ReadinessStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIndustryDataActivityStatistics(industryDataActivityStatistics: Partial<IndustryDataActivityStatistics> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "activityId": n => { industryDataActivityStatistics.activityId = n.getStringValue(); },
        "backingStoreEnabled": n => { industryDataActivityStatistics.backingStoreEnabled = true; },
        "displayName": n => { industryDataActivityStatistics.displayName = n.getStringValue(); },
        "@odata.type": n => { industryDataActivityStatistics.odataType = n.getStringValue(); },
        "status": n => { industryDataActivityStatistics.status = n.getEnumValue<IndustryDataActivityStatus>(IndustryDataActivityStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIndustryDataConnector(industryDataConnector: Partial<IndustryDataConnector> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(industryDataConnector),
        "displayName": n => { industryDataConnector.displayName = n.getStringValue(); },
        "sourceSystem": n => { industryDataConnector.sourceSystem = n.getObjectValue<SourceSystemDefinition>(createSourceSystemDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIndustryDataConnectorCollectionResponse(industryDataConnectorCollectionResponse: Partial<IndustryDataConnectorCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(industryDataConnectorCollectionResponse),
        "value": n => { industryDataConnectorCollectionResponse.value = n.getCollectionOfObjectValues<IndustryDataConnector>(createIndustryDataConnectorFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIndustryDataRoot(industryDataRoot: Partial<IndustryDataRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(industryDataRoot),
        "dataConnectors": n => { industryDataRoot.dataConnectors = n.getCollectionOfObjectValues<IndustryDataConnector>(createIndustryDataConnectorFromDiscriminatorValue); },
        "inboundFlows": n => { industryDataRoot.inboundFlows = n.getCollectionOfObjectValues<InboundFlow>(createInboundFlowFromDiscriminatorValue); },
        "operations": n => { industryDataRoot.operations = n.getCollectionOfObjectValues<LongRunningOperation>(createLongRunningOperationFromDiscriminatorValue); },
        "outboundProvisioningFlowSets": n => { industryDataRoot.outboundProvisioningFlowSets = n.getCollectionOfObjectValues<OutboundProvisioningFlowSet>(createOutboundProvisioningFlowSetFromDiscriminatorValue); },
        "referenceDefinitions": n => { industryDataRoot.referenceDefinitions = n.getCollectionOfObjectValues<ReferenceDefinition>(createReferenceDefinitionFromDiscriminatorValue); },
        "roleGroups": n => { industryDataRoot.roleGroups = n.getCollectionOfObjectValues<RoleGroup>(createRoleGroupFromDiscriminatorValue); },
        "runs": n => { industryDataRoot.runs = n.getCollectionOfObjectValues<IndustryDataRun>(createIndustryDataRunFromDiscriminatorValue); },
        "sourceSystems": n => { industryDataRoot.sourceSystems = n.getCollectionOfObjectValues<SourceSystemDefinition>(createSourceSystemDefinitionFromDiscriminatorValue); },
        "years": n => { industryDataRoot.years = n.getCollectionOfObjectValues<YearTimePeriodDefinition>(createYearTimePeriodDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIndustryDataRun(industryDataRun: Partial<IndustryDataRun> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(industryDataRun),
        "activities": n => { industryDataRun.activities = n.getCollectionOfObjectValues<IndustryDataRunActivity>(createIndustryDataRunActivityFromDiscriminatorValue); },
        "blockingError": n => { industryDataRun.blockingError = n.getObjectValue<PublicError>(createPublicErrorFromDiscriminatorValue); },
        "displayName": n => { industryDataRun.displayName = n.getStringValue(); },
        "endDateTime": n => { industryDataRun.endDateTime = n.getDateValue(); },
        "startDateTime": n => { industryDataRun.startDateTime = n.getDateValue(); },
        "status": n => { industryDataRun.status = n.getEnumValue<IndustryDataRunStatus>(IndustryDataRunStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIndustryDataRunActivity(industryDataRunActivity: Partial<IndustryDataRunActivity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(industryDataRunActivity),
        "activity": n => { industryDataRunActivity.activity = n.getObjectValue<IndustryDataActivity>(createIndustryDataActivityFromDiscriminatorValue); },
        "blockingError": n => { industryDataRunActivity.blockingError = n.getObjectValue<PublicError>(createPublicErrorFromDiscriminatorValue); },
        "displayName": n => { industryDataRunActivity.displayName = n.getStringValue(); },
        "status": n => { industryDataRunActivity.status = n.getEnumValue<IndustryDataActivityStatus>(IndustryDataActivityStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIndustryDataRunActivityCollectionResponse(industryDataRunActivityCollectionResponse: Partial<IndustryDataRunActivityCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(industryDataRunActivityCollectionResponse),
        "value": n => { industryDataRunActivityCollectionResponse.value = n.getCollectionOfObjectValues<IndustryDataRunActivity>(createIndustryDataRunActivityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIndustryDataRunCollectionResponse(industryDataRunCollectionResponse: Partial<IndustryDataRunCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(industryDataRunCollectionResponse),
        "value": n => { industryDataRunCollectionResponse.value = n.getCollectionOfObjectValues<IndustryDataRun>(createIndustryDataRunFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIndustryDataRunEntityCountMetric(industryDataRunEntityCountMetric: Partial<IndustryDataRunEntityCountMetric> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "active": n => { industryDataRunEntityCountMetric.active = n.getNumberValue(); },
        "backingStoreEnabled": n => { industryDataRunEntityCountMetric.backingStoreEnabled = true; },
        "inactive": n => { industryDataRunEntityCountMetric.inactive = n.getNumberValue(); },
        "@odata.type": n => { industryDataRunEntityCountMetric.odataType = n.getStringValue(); },
        "total": n => { industryDataRunEntityCountMetric.total = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIndustryDataRunRoleCountMetric(industryDataRunRoleCountMetric: Partial<IndustryDataRunRoleCountMetric> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { industryDataRunRoleCountMetric.backingStoreEnabled = true; },
        "count": n => { industryDataRunRoleCountMetric.count = n.getNumberValue(); },
        "@odata.type": n => { industryDataRunRoleCountMetric.odataType = n.getStringValue(); },
        "role": n => { industryDataRunRoleCountMetric.role = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIndustryDataRunStatistics(industryDataRunStatistics: Partial<IndustryDataRunStatistics> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "activityStatistics": n => { industryDataRunStatistics.activityStatistics = n.getCollectionOfObjectValues<IndustryDataActivityStatistics>(createIndustryDataActivityStatisticsFromDiscriminatorValue); },
        "backingStoreEnabled": n => { industryDataRunStatistics.backingStoreEnabled = true; },
        "inboundTotals": n => { industryDataRunStatistics.inboundTotals = n.getObjectValue<AggregatedInboundStatistics>(createAggregatedInboundStatisticsFromDiscriminatorValue); },
        "@odata.type": n => { industryDataRunStatistics.odataType = n.getStringValue(); },
        "runId": n => { industryDataRunStatistics.runId = n.getStringValue(); },
        "status": n => { industryDataRunStatistics.status = n.getEnumValue<IndustryDataRunStatus>(IndustryDataRunStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOAuth1ClientCredential(oAuth1ClientCredential: Partial<OAuth1ClientCredential> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoOAuthClientCredential(oAuth1ClientCredential),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOAuth2ClientCredential(oAuth2ClientCredential: Partial<OAuth2ClientCredential> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoOAuthClientCredential(oAuth2ClientCredential),
        "scope": n => { oAuth2ClientCredential.scope = n.getStringValue(); },
        "tokenUrl": n => { oAuth2ClientCredential.tokenUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOAuthClientCredential(oAuthClientCredential: Partial<OAuthClientCredential> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCredential(oAuthClientCredential),
        "clientId": n => { oAuthClientCredential.clientId = n.getStringValue(); },
        "clientSecret": n => { oAuthClientCredential.clientSecret = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOneRosterApiDataConnector(oneRosterApiDataConnector: Partial<OneRosterApiDataConnector> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoApiDataConnector(oneRosterApiDataConnector),
        "apiVersion": n => { oneRosterApiDataConnector.apiVersion = n.getStringValue(); },
        "isContactsEnabled": n => { oneRosterApiDataConnector.isContactsEnabled = n.getBooleanValue(); },
        "isDemographicsEnabled": n => { oneRosterApiDataConnector.isDemographicsEnabled = n.getBooleanValue(); },
        "isFlagsEnabled": n => { oneRosterApiDataConnector.isFlagsEnabled = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOutboundFlowActivity(outboundFlowActivity: Partial<OutboundFlowActivity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIndustryDataRunActivity(outboundFlowActivity),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOutboundProvisioningFlowSet(outboundProvisioningFlowSet: Partial<OutboundProvisioningFlowSet> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(outboundProvisioningFlowSet),
        "createdDateTime": n => { outboundProvisioningFlowSet.createdDateTime = n.getDateValue(); },
        "displayName": n => { outboundProvisioningFlowSet.displayName = n.getStringValue(); },
        "filter": n => { outboundProvisioningFlowSet.filter = n.getObjectValue<Filter>(createFilterFromDiscriminatorValue); },
        "lastModifiedDateTime": n => { outboundProvisioningFlowSet.lastModifiedDateTime = n.getDateValue(); },
        "provisioningFlows": n => { outboundProvisioningFlowSet.provisioningFlows = n.getCollectionOfObjectValues<ProvisioningFlow>(createProvisioningFlowFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOutboundProvisioningFlowSetCollectionResponse(outboundProvisioningFlowSetCollectionResponse: Partial<OutboundProvisioningFlowSetCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(outboundProvisioningFlowSetCollectionResponse),
        "value": n => { outboundProvisioningFlowSetCollectionResponse.value = n.getCollectionOfObjectValues<OutboundProvisioningFlowSet>(createOutboundProvisioningFlowSetFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPasswordSettings(passwordSettings: Partial<PasswordSettings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { passwordSettings.backingStoreEnabled = true; },
        "@odata.type": n => { passwordSettings.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProvisioningFlow(provisioningFlow: Partial<ProvisioningFlow> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(provisioningFlow),
        "createdDateTime": n => { provisioningFlow.createdDateTime = n.getDateValue(); },
        "lastModifiedDateTime": n => { provisioningFlow.lastModifiedDateTime = n.getDateValue(); },
        "readinessStatus": n => { provisioningFlow.readinessStatus = n.getEnumValue<ReadinessStatus>(ReadinessStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProvisioningFlowCollectionResponse(provisioningFlowCollectionResponse: Partial<ProvisioningFlowCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(provisioningFlowCollectionResponse),
        "value": n => { provisioningFlowCollectionResponse.value = n.getCollectionOfObjectValues<ProvisioningFlow>(createProvisioningFlowFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReferenceDefinition(referenceDefinition: Partial<ReferenceDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(referenceDefinition),
        "code": n => { referenceDefinition.code = n.getStringValue(); },
        "createdDateTime": n => { referenceDefinition.createdDateTime = n.getDateValue(); },
        "displayName": n => { referenceDefinition.displayName = n.getStringValue(); },
        "isDisabled": n => { referenceDefinition.isDisabled = n.getBooleanValue(); },
        "lastModifiedDateTime": n => { referenceDefinition.lastModifiedDateTime = n.getDateValue(); },
        "referenceType": n => { referenceDefinition.referenceType = n.getStringValue(); },
        "sortIndex": n => { referenceDefinition.sortIndex = n.getNumberValue(); },
        "source": n => { referenceDefinition.source = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReferenceDefinitionCollectionResponse(referenceDefinitionCollectionResponse: Partial<ReferenceDefinitionCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(referenceDefinitionCollectionResponse),
        "value": n => { referenceDefinitionCollectionResponse.value = n.getCollectionOfObjectValues<ReferenceDefinition>(createReferenceDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReferenceValue(referenceValue: Partial<ReferenceValue> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { referenceValue.backingStoreEnabled = true; },
        "code": n => { referenceValue.code = n.getStringValue(); },
        "@odata.type": n => { referenceValue.odataType = n.getStringValue(); },
        "value": n => { referenceValue.value = n.getObjectValue<ReferenceDefinition>(createReferenceDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRoleGroup(roleGroup: Partial<RoleGroup> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(roleGroup),
        "displayName": n => { roleGroup.displayName = n.getStringValue(); },
        "roles": n => { roleGroup.roles = n.getCollectionOfObjectValues<RoleReferenceValue>(createRoleReferenceValueFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRoleGroupCollectionResponse(roleGroupCollectionResponse: Partial<RoleGroupCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(roleGroupCollectionResponse),
        "value": n => { roleGroupCollectionResponse.value = n.getCollectionOfObjectValues<RoleGroup>(createRoleGroupFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRoleReferenceValue(roleReferenceValue: Partial<RoleReferenceValue> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoReferenceValue(roleReferenceValue),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSectionRoleReferenceValue(sectionRoleReferenceValue: Partial<SectionRoleReferenceValue> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoReferenceValue(sectionRoleReferenceValue),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecurityGroupCreationOptions(securityGroupCreationOptions: Partial<SecurityGroupCreationOptions> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { securityGroupCreationOptions.backingStoreEnabled = true; },
        "createBasedOnOrgPlusRoleGroup": n => { securityGroupCreationOptions.createBasedOnOrgPlusRoleGroup = n.getBooleanValue(); },
        "createBasedOnRoleGroup": n => { securityGroupCreationOptions.createBasedOnRoleGroup = n.getBooleanValue(); },
        "@odata.type": n => { securityGroupCreationOptions.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecurityGroupProvisioningFlow(securityGroupProvisioningFlow: Partial<SecurityGroupProvisioningFlow> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoProvisioningFlow(securityGroupProvisioningFlow),
        "creationOptions": n => { securityGroupProvisioningFlow.creationOptions = n.getObjectValue<SecurityGroupCreationOptions>(createSecurityGroupCreationOptionsFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSimplePasswordSettings(simplePasswordSettings: Partial<SimplePasswordSettings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoPasswordSettings(simplePasswordSettings),
        "password": n => { simplePasswordSettings.password = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSourceSystemDefinition(sourceSystemDefinition: Partial<SourceSystemDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(sourceSystemDefinition),
        "displayName": n => { sourceSystemDefinition.displayName = n.getStringValue(); },
        "userMatchingSettings": n => { sourceSystemDefinition.userMatchingSettings = n.getCollectionOfObjectValues<UserMatchingSetting>(createUserMatchingSettingFromDiscriminatorValue); },
        "vendor": n => { sourceSystemDefinition.vendor = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSourceSystemDefinitionCollectionResponse(sourceSystemDefinitionCollectionResponse: Partial<SourceSystemDefinitionCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(sourceSystemDefinitionCollectionResponse),
        "value": n => { sourceSystemDefinitionCollectionResponse.value = n.getCollectionOfObjectValues<SourceSystemDefinition>(createSourceSystemDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserConfiguration(userConfiguration: Partial<UserConfiguration> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { userConfiguration.backingStoreEnabled = true; },
        "defaultPasswordSettings": n => { userConfiguration.defaultPasswordSettings = n.getObjectValue<PasswordSettings>(createPasswordSettingsFromDiscriminatorValue); },
        "licenseSkus": n => { userConfiguration.licenseSkus = n.getCollectionOfPrimitiveValues<string>(); },
        "@odata.type": n => { userConfiguration.odataType = n.getStringValue(); },
        "roleGroup": n => { userConfiguration.roleGroup = n.getObjectValue<RoleGroup>(createRoleGroupFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserCreationOptions(userCreationOptions: Partial<UserCreationOptions> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { userCreationOptions.backingStoreEnabled = true; },
        "configurations": n => { userCreationOptions.configurations = n.getCollectionOfObjectValues<UserConfiguration>(createUserConfigurationFromDiscriminatorValue); },
        "@odata.type": n => { userCreationOptions.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserManagementOptions(userManagementOptions: Partial<UserManagementOptions> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "additionalAttributes": n => { userManagementOptions.additionalAttributes = n.getCollectionOfEnumValues<AdditionalUserAttributes>(AdditionalUserAttributesObject); },
        "additionalOptions": n => { userManagementOptions.additionalOptions = n.getObjectValue<AdditionalUserOptions>(createAdditionalUserOptionsFromDiscriminatorValue); },
        "backingStoreEnabled": n => { userManagementOptions.backingStoreEnabled = true; },
        "@odata.type": n => { userManagementOptions.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserMatchingSetting(userMatchingSetting: Partial<UserMatchingSetting> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { userMatchingSetting.backingStoreEnabled = true; },
        "matchTarget": n => { userMatchingSetting.matchTarget = n.getObjectValue<UserMatchTargetReferenceValue>(createUserMatchTargetReferenceValueFromDiscriminatorValue); },
        "@odata.type": n => { userMatchingSetting.odataType = n.getStringValue(); },
        "priorityOrder": n => { userMatchingSetting.priorityOrder = n.getNumberValue(); },
        "roleGroup": n => { userMatchingSetting.roleGroup = n.getObjectValue<RoleGroup>(createRoleGroupFromDiscriminatorValue); },
        "sourceIdentifier": n => { userMatchingSetting.sourceIdentifier = n.getObjectValue<IdentifierTypeReferenceValue>(createIdentifierTypeReferenceValueFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserMatchTargetReferenceValue(userMatchTargetReferenceValue: Partial<UserMatchTargetReferenceValue> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoReferenceValue(userMatchTargetReferenceValue),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserProvisioningFlow(userProvisioningFlow: Partial<UserProvisioningFlow> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoProvisioningFlow(userProvisioningFlow),
        "createUnmatchedUsers": n => { userProvisioningFlow.createUnmatchedUsers = n.getBooleanValue(); },
        "creationOptions": n => { userProvisioningFlow.creationOptions = n.getObjectValue<UserCreationOptions>(createUserCreationOptionsFromDiscriminatorValue); },
        "managementOptions": n => { userProvisioningFlow.managementOptions = n.getObjectValue<UserManagementOptions>(createUserManagementOptionsFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoValidateOperation(validateOperation: Partial<ValidateOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoLongRunningOperation(validateOperation),
        "errors": n => { validateOperation.errors = n.getCollectionOfObjectValues<PublicError>(createPublicErrorFromDiscriminatorValue); },
        "warnings": n => { validateOperation.warnings = n.getCollectionOfObjectValues<PublicError>(createPublicErrorFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoYearReferenceValue(yearReferenceValue: Partial<YearReferenceValue> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoReferenceValue(yearReferenceValue),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoYearTimePeriodDefinition(yearTimePeriodDefinition: Partial<YearTimePeriodDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(yearTimePeriodDefinition),
        "displayName": n => { yearTimePeriodDefinition.displayName = n.getStringValue(); },
        "endDate": n => { yearTimePeriodDefinition.endDate = n.getDateOnlyValue(); },
        "startDate": n => { yearTimePeriodDefinition.startDate = n.getDateOnlyValue(); },
        "year": n => { yearTimePeriodDefinition.year = n.getObjectValue<YearReferenceValue>(createYearReferenceValueFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoYearTimePeriodDefinitionCollectionResponse(yearTimePeriodDefinitionCollectionResponse: Partial<YearTimePeriodDefinitionCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(yearTimePeriodDefinitionCollectionResponse),
        "value": n => { yearTimePeriodDefinitionCollectionResponse.value = n.getCollectionOfObjectValues<YearTimePeriodDefinition>(createYearTimePeriodDefinitionFromDiscriminatorValue); },
    }
}
export interface EnrollmentMappings extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The enrollmentMappings member for the class group.
     */
    memberEnrollmentMappings?: SectionRoleReferenceValue[] | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The enrollmentMappings owner for the class group.
     */
    ownerEnrollmentMappings?: SectionRoleReferenceValue[] | null;
}
export interface FileDataConnector extends IndustryDataConnector, Parsable {
}
export interface FileFormatReferenceValue extends Parsable, ReferenceValue {
}
/**
 * The status of a long-running operation.
 */
export interface FileValidateOperation extends Parsable, ValidateOperation {
    /**
     * Set of files validated by the validate operation.
     */
    validatedFiles?: string[] | null;
}
export interface Filter extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type FilterOptions = (typeof FilterOptionsObject)[keyof typeof FilterOptionsObject];
export interface IdentifierTypeReferenceValue extends Parsable, ReferenceValue {
}
export interface InboundActivityResults extends IndustryDataActivityStatistics, Parsable {
    /**
     * Number of errors encountered while processing the inbound flow.
     */
    errors?: number | null;
    /**
     * Counts of active and inactive groups processed by the inbound flow.
     */
    groups?: IndustryDataRunEntityCountMetric | null;
    /**
     * Number of people matched to a Microsoft Entra user, by role.
     */
    matchedPeopleByRole?: IndustryDataRunRoleCountMetric[] | null;
    /**
     * Counts of active and inactive memberships processed by the inbound flow.
     */
    memberships?: IndustryDataRunEntityCountMetric | null;
    /**
     * Counts of active and inactive organizations processed by the inbound flow.
     */
    organizations?: IndustryDataRunEntityCountMetric | null;
    /**
     * Counts of active and inactive people processed by the inbound flow.
     */
    people?: IndustryDataRunEntityCountMetric | null;
    /**
     * Number of people not matched to a Microsoft Entra user, by role.
     */
    unmatchedPeopleByRole?: IndustryDataRunRoleCountMetric[] | null;
    /**
     * Number of warnings encountered while processing the inbound flow.
     */
    warnings?: number | null;
}
export interface InboundApiFlow extends InboundFlow, Parsable {
}
export type InboundDomain = (typeof InboundDomainObject)[keyof typeof InboundDomainObject];
export interface InboundFileFlow extends InboundFlow, Parsable {
}
export interface InboundFlow extends IndustryDataActivity, Parsable {
    /**
     * The dataConnector property
     */
    dataConnector?: IndustryDataConnector | null;
    /**
     * The dataDomain property
     */
    dataDomain?: InboundDomain | null;
    /**
     * The start of the time window when the flow is allowed to run. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    effectiveDateTime?: Date | null;
    /**
     * The end of the time window when the flow is allowed to run. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    expirationDateTime?: Date | null;
    /**
     * The year property
     */
    year?: YearTimePeriodDefinition | null;
}
export interface InboundFlowActivity extends IndustryDataRunActivity, Parsable {
}
export interface InboundFlowCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: InboundFlow[] | null;
}
export interface IndustryDataActivity extends Entity, Parsable {
    /**
     * The name of the activity. Maximum supported length is 100 characters.
     */
    displayName?: string | null;
    /**
     * The readinessStatus property
     */
    readinessStatus?: ReadinessStatus | null;
}
export interface IndustryDataActivityStatistics extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The identifier for the activity that is being reported on.
     */
    activityId?: string | null;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The display name of the underlying flow.
     */
    displayName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The status property
     */
    status?: IndustryDataActivityStatus | null;
}
export type IndustryDataActivityStatus = (typeof IndustryDataActivityStatusObject)[keyof typeof IndustryDataActivityStatusObject];
export interface IndustryDataConnector extends Entity, Parsable {
    /**
     * The name of the data connector. Maximum supported length is 100 characters.
     */
    displayName?: string | null;
    /**
     * The sourceSystem property
     */
    sourceSystem?: SourceSystemDefinition | null;
}
export interface IndustryDataConnectorCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: IndustryDataConnector[] | null;
}
export interface IndustryDataRoot extends Entity, Parsable {
    /**
     * Set of connectors for importing data from source systems.
     */
    dataConnectors?: IndustryDataConnector[] | null;
    /**
     * Set of data import flow activities to bring data into the canonical store via a connector.
     */
    inboundFlows?: InboundFlow[] | null;
    /**
     * Set of ephemeral operations that the system runs currently. Read-only.
     */
    operations?: LongRunningOperation[] | null;
    /**
     * The outboundProvisioningFlowSets property
     */
    outboundProvisioningFlowSets?: OutboundProvisioningFlowSet[] | null;
    /**
     * Set of user modifiable system picker types.
     */
    referenceDefinitions?: ReferenceDefinition[] | null;
    /**
     * Set of groups of individual roles that makes role-based admin simpler.
     */
    roleGroups?: RoleGroup[] | null;
    /**
     * Set of ephemeral runs which present the point-in-time that diagnostic state of activities performed by the system. Read-only.
     */
    runs?: IndustryDataRun[] | null;
    /**
     * Set of source definitions that represents real-world external systems.
     */
    sourceSystems?: SourceSystemDefinition[] | null;
    /**
     * Set of years represented in the system.
     */
    years?: YearTimePeriodDefinition[] | null;
}
export interface IndustryDataRun extends Entity, Parsable {
    /**
     * The set of activities performed during the run.
     */
    activities?: IndustryDataRunActivity[] | null;
    /**
     * An error object to diagnose critical failures in the run.
     */
    blockingError?: PublicError | null;
    /**
     * The name of the run for rendering in a user interface.
     */
    displayName?: string | null;
    /**
     * The date and time when the run finished or null if the run is still in-progress. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    endDateTime?: Date | null;
    /**
     * The date and time when the run started. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    startDateTime?: Date | null;
    /**
     * The status property
     */
    status?: IndustryDataRunStatus | null;
}
export interface IndustryDataRunActivity extends Entity, Parsable {
    /**
     * The flow that was run by this activity.
     */
    activity?: IndustryDataActivity | null;
    /**
     * An error object to diagnose critical failures in an activity.
     */
    blockingError?: PublicError | null;
    /**
     * The name of the running flow.
     */
    displayName?: string | null;
    /**
     * The status property
     */
    status?: IndustryDataActivityStatus | null;
}
export interface IndustryDataRunActivityCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: IndustryDataRunActivity[] | null;
}
export interface IndustryDataRunCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: IndustryDataRun[] | null;
}
export interface IndustryDataRunEntityCountMetric extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The count of entries for the entity marked as Active.
     */
    active?: number | null;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The count of entries for the entity marked as Inactive.
     */
    inactive?: number | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Total count of the entity.
     */
    total?: number | null;
}
export interface IndustryDataRunRoleCountMetric extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The number of people in this role.
     */
    count?: number | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The role that is being measured.
     */
    role?: string | null;
}
export interface IndustryDataRunStatistics extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The collection of statistics for each activity included in this run.
     */
    activityStatistics?: IndustryDataActivityStatistics[] | null;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The aggregate statistics for all inbound flows.
     */
    inboundTotals?: AggregatedInboundStatistics | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The ID of the underlying run for the statistics.
     */
    runId?: string | null;
    /**
     * The status property
     */
    status?: IndustryDataRunStatus | null;
}
export type IndustryDataRunStatus = (typeof IndustryDataRunStatusObject)[keyof typeof IndustryDataRunStatusObject];
export interface OAuth1ClientCredential extends OAuthClientCredential, Parsable {
}
export interface OAuth2ClientCredential extends OAuthClientCredential, Parsable {
    /**
     * The OAuth scope that is provided to the authentication process.
     */
    scope?: string | null;
    /**
     * The URL with which to retrieve the token after authentication happens.
     */
    tokenUrl?: string | null;
}
export interface OAuthClientCredential extends Credential, Parsable {
    /**
     * The client identifier of the application that is authenticating.
     */
    clientId?: string | null;
    /**
     * The client secret that is used to authenticate (write-only).
     */
    clientSecret?: string | null;
}
export interface OneRosterApiDataConnector extends ApiDataConnector, Parsable {
    /**
     * The API version of the OneRoster source. Example: 1.1, 1.2
     */
    apiVersion?: string | null;
    /**
     * Indicates whether the user specified to import optional contacts data.
     */
    isContactsEnabled?: boolean | null;
    /**
     * Indicates whether the user specified to import optional demographics data.
     */
    isDemographicsEnabled?: boolean | null;
    /**
     * Indicates whether the user specified to import optional flags data.
     */
    isFlagsEnabled?: boolean | null;
}
export interface OutboundFlowActivity extends IndustryDataRunActivity, Parsable {
}
export interface OutboundProvisioningFlowSet extends Entity, Parsable {
    /**
     * The date and time when the flowSet was created. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    createdDateTime?: Date | null;
    /**
     * The display name of the flowSet provided by the caller.
     */
    displayName?: string | null;
    /**
     * The collection of provisioning filters applicable to all the flows under the given flowSet.
     */
    filter?: Filter | null;
    /**
     * The date and time when the flowSet was most recently changed. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastModifiedDateTime?: Date | null;
    /**
     * A flow that provisions relevant records of a given entity type in the Microsoft 365 tenant.
     */
    provisioningFlows?: ProvisioningFlow[] | null;
}
export interface OutboundProvisioningFlowSetCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: OutboundProvisioningFlowSet[] | null;
}
export interface PasswordSettings extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface ProvisioningFlow extends Entity, Parsable {
    /**
     * The date and time when the provisioning flow was created. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    createdDateTime?: Date | null;
    /**
     * The date and time when the provisioning flow was most recently changed. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastModifiedDateTime?: Date | null;
    /**
     * The state of the activity from creation through to ready to do work. The possible values are: notReady, ready, failed, disabled, expired, unknownFutureValue.
     */
    readinessStatus?: ReadinessStatus | null;
}
export interface ProvisioningFlowCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ProvisioningFlow[] | null;
}
export type ReadinessStatus = (typeof ReadinessStatusObject)[keyof typeof ReadinessStatusObject];
export interface ReferenceDefinition extends Entity, Parsable {
    /**
     * The code value for the definition that must be unique within the referenceType.
     */
    code?: string | null;
    /**
     * The date and time when the definition was created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    createdDateTime?: Date | null;
    /**
     * A human-readable representation of the reference code value for display in a user interface.
     */
    displayName?: string | null;
    /**
     * Indicates whether the definition is disabled.
     */
    isDisabled?: boolean | null;
    /**
     * The date and time when the definition was most recently changed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastModifiedDateTime?: Date | null;
    /**
     * The categorical type for a collection of enumerated values.
     */
    referenceType?: string | null;
    /**
     * The index that specifies the order in which to present the definition to the user. Must be unique within the referenceType.
     */
    sortIndex?: number | null;
    /**
     * The standards body or organization source which defined the code.
     */
    source?: string | null;
}
export interface ReferenceDefinitionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ReferenceDefinition[] | null;
}
export interface ReferenceValue extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The code of the desired referenceDefinition entry.
     */
    code?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The value property
     */
    value?: ReferenceDefinition | null;
}
export interface RoleGroup extends Entity, Parsable {
    /**
     * The name of the role group.
     */
    displayName?: string | null;
    /**
     * The set of roles included in the role group.
     */
    roles?: RoleReferenceValue[] | null;
}
export interface RoleGroupCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: RoleGroup[] | null;
}
export interface RoleReferenceValue extends Parsable, ReferenceValue {
}
export interface SectionRoleReferenceValue extends Parsable, ReferenceValue {
}
export interface SecurityGroupCreationOptions extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Indicates whether the security group should be created based on the org and role group.
     */
    createBasedOnOrgPlusRoleGroup?: boolean | null;
    /**
     * A Boolean choice indicating whether the security group should be created based on the role group
     */
    createBasedOnRoleGroup?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface SecurityGroupProvisioningFlow extends Parsable, ProvisioningFlow {
    /**
     * The creationOptions property
     */
    creationOptions?: SecurityGroupCreationOptions | null;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAdditionalClassGroupOptions(writer: SerializationWriter, additionalClassGroupOptions: Partial<AdditionalClassGroupOptions> | undefined | null = {}) : void {
    if (additionalClassGroupOptions) {
        writer.writeBooleanValue("createTeam", additionalClassGroupOptions.createTeam);
        writer.writeStringValue("@odata.type", additionalClassGroupOptions.odataType);
        writer.writeBooleanValue("writeDisplayNameOnCreateOnly", additionalClassGroupOptions.writeDisplayNameOnCreateOnly);
        writer.writeAdditionalData(additionalClassGroupOptions.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAdditionalUserOptions(writer: SerializationWriter, additionalUserOptions: Partial<AdditionalUserOptions> | undefined | null = {}) : void {
    if (additionalUserOptions) {
        writer.writeBooleanValue("allowStudentContactAssociation", additionalUserOptions.allowStudentContactAssociation);
        writer.writeBooleanValue("markAllStudentsAsMinors", additionalUserOptions.markAllStudentsAsMinors);
        writer.writeStringValue("@odata.type", additionalUserOptions.odataType);
        writer.writeAdditionalData(additionalUserOptions.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAdministrativeUnitProvisioningFlow(writer: SerializationWriter, administrativeUnitProvisioningFlow: Partial<AdministrativeUnitProvisioningFlow> | undefined | null = {}) : void {
    if (administrativeUnitProvisioningFlow) {
        serializeProvisioningFlow(writer, administrativeUnitProvisioningFlow)
        writer.writeObjectValue<AdminUnitCreationOptions>("creationOptions", administrativeUnitProvisioningFlow.creationOptions, serializeAdminUnitCreationOptions);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAdminUnitCreationOptions(writer: SerializationWriter, adminUnitCreationOptions: Partial<AdminUnitCreationOptions> | undefined | null = {}) : void {
    if (adminUnitCreationOptions) {
        writer.writeBooleanValue("createBasedOnOrg", adminUnitCreationOptions.createBasedOnOrg);
        writer.writeBooleanValue("createBasedOnOrgPlusRoleGroup", adminUnitCreationOptions.createBasedOnOrgPlusRoleGroup);
        writer.writeStringValue("@odata.type", adminUnitCreationOptions.odataType);
        writer.writeAdditionalData(adminUnitCreationOptions.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAggregatedInboundStatistics(writer: SerializationWriter, aggregatedInboundStatistics: Partial<AggregatedInboundStatistics> | undefined | null = {}) : void {
    if (aggregatedInboundStatistics) {
        writer.writeStringValue("@odata.type", aggregatedInboundStatistics.odataType);
        writer.writeAdditionalData(aggregatedInboundStatistics.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeApiDataConnector(writer: SerializationWriter, apiDataConnector: Partial<ApiDataConnector> | undefined | null = {}) : void {
    if (apiDataConnector) {
        serializeIndustryDataConnector(writer, apiDataConnector)
        writer.writeEnumValue<ApiFormat>("apiFormat", apiDataConnector.apiFormat);
        writer.writeStringValue("baseUrl", apiDataConnector.baseUrl);
        writer.writeObjectValue<Credential>("credential", apiDataConnector.credential, serializeCredential);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAzureDataLakeConnector(writer: SerializationWriter, azureDataLakeConnector: Partial<AzureDataLakeConnector> | undefined | null = {}) : void {
    if (azureDataLakeConnector) {
        serializeFileDataConnector(writer, azureDataLakeConnector)
        writer.writeObjectValue<FileFormatReferenceValue>("fileFormat", azureDataLakeConnector.fileFormat, serializeFileFormatReferenceValue);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBasicFilter(writer: SerializationWriter, basicFilter: Partial<BasicFilter> | undefined | null = {}) : void {
    if (basicFilter) {
        serializeFilter(writer, basicFilter)
        writer.writeEnumValue<FilterOptions>("attribute", basicFilter.attribute);
        writer.writeCollectionOfPrimitiveValues<string>("in", basicFilter.inEscaped);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeClassGroupConfiguration(writer: SerializationWriter, classGroupConfiguration: Partial<ClassGroupConfiguration> | undefined | null = {}) : void {
    if (classGroupConfiguration) {
        if(classGroupConfiguration.additionalAttributes)
        writer.writeCollectionOfEnumValues<AdditionalClassGroupAttributes>("additionalAttributes", classGroupConfiguration.additionalAttributes);
        writer.writeObjectValue<AdditionalClassGroupOptions>("additionalOptions", classGroupConfiguration.additionalOptions, serializeAdditionalClassGroupOptions);
        writer.writeObjectValue<EnrollmentMappings>("enrollmentMappings", classGroupConfiguration.enrollmentMappings, serializeEnrollmentMappings);
        writer.writeStringValue("@odata.type", classGroupConfiguration.odataType);
        writer.writeAdditionalData(classGroupConfiguration.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeClassGroupProvisioningFlow(writer: SerializationWriter, classGroupProvisioningFlow: Partial<ClassGroupProvisioningFlow> | undefined | null = {}) : void {
    if (classGroupProvisioningFlow) {
        serializeProvisioningFlow(writer, classGroupProvisioningFlow)
        writer.writeObjectValue<ClassGroupConfiguration>("configuration", classGroupProvisioningFlow.configuration, serializeClassGroupConfiguration);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCredential(writer: SerializationWriter, credential: Partial<Credential> | undefined | null = {}) : void {
    if (credential) {
        writer.writeStringValue("displayName", credential.displayName);
        writer.writeStringValue("@odata.type", credential.odataType);
        writer.writeAdditionalData(credential.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEnrollmentMappings(writer: SerializationWriter, enrollmentMappings: Partial<EnrollmentMappings> | undefined | null = {}) : void {
    if (enrollmentMappings) {
        writer.writeCollectionOfObjectValues<SectionRoleReferenceValue>("memberEnrollmentMappings", enrollmentMappings.memberEnrollmentMappings, serializeSectionRoleReferenceValue);
        writer.writeStringValue("@odata.type", enrollmentMappings.odataType);
        writer.writeCollectionOfObjectValues<SectionRoleReferenceValue>("ownerEnrollmentMappings", enrollmentMappings.ownerEnrollmentMappings, serializeSectionRoleReferenceValue);
        writer.writeAdditionalData(enrollmentMappings.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileDataConnector(writer: SerializationWriter, fileDataConnector: Partial<FileDataConnector> | undefined | null = {}) : void {
    if (fileDataConnector) {
        serializeIndustryDataConnector(writer, fileDataConnector)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileFormatReferenceValue(writer: SerializationWriter, fileFormatReferenceValue: Partial<FileFormatReferenceValue> | undefined | null = {}) : void {
    if (fileFormatReferenceValue) {
        serializeReferenceValue(writer, fileFormatReferenceValue)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileValidateOperation(writer: SerializationWriter, fileValidateOperation: Partial<FileValidateOperation> | undefined | null = {}) : void {
    if (fileValidateOperation) {
        serializeValidateOperation(writer, fileValidateOperation)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilter(writer: SerializationWriter, filter: Partial<Filter> | undefined | null = {}) : void {
    if (filter) {
        writer.writeStringValue("@odata.type", filter.odataType);
        writer.writeAdditionalData(filter.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIdentifierTypeReferenceValue(writer: SerializationWriter, identifierTypeReferenceValue: Partial<IdentifierTypeReferenceValue> | undefined | null = {}) : void {
    if (identifierTypeReferenceValue) {
        serializeReferenceValue(writer, identifierTypeReferenceValue)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInboundActivityResults(writer: SerializationWriter, inboundActivityResults: Partial<InboundActivityResults> | undefined | null = {}) : void {
    if (inboundActivityResults) {
        serializeIndustryDataActivityStatistics(writer, inboundActivityResults)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInboundApiFlow(writer: SerializationWriter, inboundApiFlow: Partial<InboundApiFlow> | undefined | null = {}) : void {
    if (inboundApiFlow) {
        serializeInboundFlow(writer, inboundApiFlow)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInboundFileFlow(writer: SerializationWriter, inboundFileFlow: Partial<InboundFileFlow> | undefined | null = {}) : void {
    if (inboundFileFlow) {
        serializeInboundFlow(writer, inboundFileFlow)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInboundFlow(writer: SerializationWriter, inboundFlow: Partial<InboundFlow> | undefined | null = {}) : void {
    if (inboundFlow) {
        serializeIndustryDataActivity(writer, inboundFlow)
        writer.writeObjectValue<IndustryDataConnector>("dataConnector", inboundFlow.dataConnector, serializeIndustryDataConnector);
        writer.writeEnumValue<InboundDomain>("dataDomain", inboundFlow.dataDomain);
        writer.writeDateValue("effectiveDateTime", inboundFlow.effectiveDateTime);
        writer.writeDateValue("expirationDateTime", inboundFlow.expirationDateTime);
        writer.writeObjectValue<YearTimePeriodDefinition>("year", inboundFlow.year, serializeYearTimePeriodDefinition);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInboundFlowActivity(writer: SerializationWriter, inboundFlowActivity: Partial<InboundFlowActivity> | undefined | null = {}) : void {
    if (inboundFlowActivity) {
        serializeIndustryDataRunActivity(writer, inboundFlowActivity)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInboundFlowCollectionResponse(writer: SerializationWriter, inboundFlowCollectionResponse: Partial<InboundFlowCollectionResponse> | undefined | null = {}) : void {
    if (inboundFlowCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, inboundFlowCollectionResponse)
        writer.writeCollectionOfObjectValues<InboundFlow>("value", inboundFlowCollectionResponse.value, serializeInboundFlow);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIndustryDataActivity(writer: SerializationWriter, industryDataActivity: Partial<IndustryDataActivity> | undefined | null = {}) : void {
    if (industryDataActivity) {
        serializeEntity(writer, industryDataActivity)
        writer.writeStringValue("displayName", industryDataActivity.displayName);
        writer.writeEnumValue<ReadinessStatus>("readinessStatus", industryDataActivity.readinessStatus);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIndustryDataActivityStatistics(writer: SerializationWriter, industryDataActivityStatistics: Partial<IndustryDataActivityStatistics> | undefined | null = {}) : void {
    if (industryDataActivityStatistics) {
        writer.writeStringValue("@odata.type", industryDataActivityStatistics.odataType);
        writer.writeEnumValue<IndustryDataActivityStatus>("status", industryDataActivityStatistics.status);
        writer.writeAdditionalData(industryDataActivityStatistics.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIndustryDataConnector(writer: SerializationWriter, industryDataConnector: Partial<IndustryDataConnector> | undefined | null = {}) : void {
    if (industryDataConnector) {
        serializeEntity(writer, industryDataConnector)
        writer.writeStringValue("displayName", industryDataConnector.displayName);
        writer.writeObjectValue<SourceSystemDefinition>("sourceSystem", industryDataConnector.sourceSystem, serializeSourceSystemDefinition);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIndustryDataConnectorCollectionResponse(writer: SerializationWriter, industryDataConnectorCollectionResponse: Partial<IndustryDataConnectorCollectionResponse> | undefined | null = {}) : void {
    if (industryDataConnectorCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, industryDataConnectorCollectionResponse)
        writer.writeCollectionOfObjectValues<IndustryDataConnector>("value", industryDataConnectorCollectionResponse.value, serializeIndustryDataConnector);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIndustryDataRoot(writer: SerializationWriter, industryDataRoot: Partial<IndustryDataRoot> | undefined | null = {}) : void {
    if (industryDataRoot) {
        serializeEntity(writer, industryDataRoot)
        writer.writeCollectionOfObjectValues<IndustryDataConnector>("dataConnectors", industryDataRoot.dataConnectors, serializeIndustryDataConnector);
        writer.writeCollectionOfObjectValues<InboundFlow>("inboundFlows", industryDataRoot.inboundFlows, serializeInboundFlow);
        writer.writeCollectionOfObjectValues<LongRunningOperation>("operations", industryDataRoot.operations, serializeLongRunningOperation);
        writer.writeCollectionOfObjectValues<OutboundProvisioningFlowSet>("outboundProvisioningFlowSets", industryDataRoot.outboundProvisioningFlowSets, serializeOutboundProvisioningFlowSet);
        writer.writeCollectionOfObjectValues<ReferenceDefinition>("referenceDefinitions", industryDataRoot.referenceDefinitions, serializeReferenceDefinition);
        writer.writeCollectionOfObjectValues<RoleGroup>("roleGroups", industryDataRoot.roleGroups, serializeRoleGroup);
        writer.writeCollectionOfObjectValues<IndustryDataRun>("runs", industryDataRoot.runs, serializeIndustryDataRun);
        writer.writeCollectionOfObjectValues<SourceSystemDefinition>("sourceSystems", industryDataRoot.sourceSystems, serializeSourceSystemDefinition);
        writer.writeCollectionOfObjectValues<YearTimePeriodDefinition>("years", industryDataRoot.years, serializeYearTimePeriodDefinition);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIndustryDataRun(writer: SerializationWriter, industryDataRun: Partial<IndustryDataRun> | undefined | null = {}) : void {
    if (industryDataRun) {
        serializeEntity(writer, industryDataRun)
        writer.writeCollectionOfObjectValues<IndustryDataRunActivity>("activities", industryDataRun.activities, serializeIndustryDataRunActivity);
        writer.writeEnumValue<IndustryDataRunStatus>("status", industryDataRun.status);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIndustryDataRunActivity(writer: SerializationWriter, industryDataRunActivity: Partial<IndustryDataRunActivity> | undefined | null = {}) : void {
    if (industryDataRunActivity) {
        serializeEntity(writer, industryDataRunActivity)
        writer.writeObjectValue<IndustryDataActivity>("activity", industryDataRunActivity.activity, serializeIndustryDataActivity);
        writer.writeEnumValue<IndustryDataActivityStatus>("status", industryDataRunActivity.status);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIndustryDataRunActivityCollectionResponse(writer: SerializationWriter, industryDataRunActivityCollectionResponse: Partial<IndustryDataRunActivityCollectionResponse> | undefined | null = {}) : void {
    if (industryDataRunActivityCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, industryDataRunActivityCollectionResponse)
        writer.writeCollectionOfObjectValues<IndustryDataRunActivity>("value", industryDataRunActivityCollectionResponse.value, serializeIndustryDataRunActivity);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIndustryDataRunCollectionResponse(writer: SerializationWriter, industryDataRunCollectionResponse: Partial<IndustryDataRunCollectionResponse> | undefined | null = {}) : void {
    if (industryDataRunCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, industryDataRunCollectionResponse)
        writer.writeCollectionOfObjectValues<IndustryDataRun>("value", industryDataRunCollectionResponse.value, serializeIndustryDataRun);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIndustryDataRunEntityCountMetric(writer: SerializationWriter, industryDataRunEntityCountMetric: Partial<IndustryDataRunEntityCountMetric> | undefined | null = {}) : void {
    if (industryDataRunEntityCountMetric) {
        writer.writeStringValue("@odata.type", industryDataRunEntityCountMetric.odataType);
        writer.writeAdditionalData(industryDataRunEntityCountMetric.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIndustryDataRunRoleCountMetric(writer: SerializationWriter, industryDataRunRoleCountMetric: Partial<IndustryDataRunRoleCountMetric> | undefined | null = {}) : void {
    if (industryDataRunRoleCountMetric) {
        writer.writeStringValue("@odata.type", industryDataRunRoleCountMetric.odataType);
        writer.writeAdditionalData(industryDataRunRoleCountMetric.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIndustryDataRunStatistics(writer: SerializationWriter, industryDataRunStatistics: Partial<IndustryDataRunStatistics> | undefined | null = {}) : void {
    if (industryDataRunStatistics) {
        writer.writeStringValue("@odata.type", industryDataRunStatistics.odataType);
        writer.writeEnumValue<IndustryDataRunStatus>("status", industryDataRunStatistics.status);
        writer.writeAdditionalData(industryDataRunStatistics.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOAuth1ClientCredential(writer: SerializationWriter, oAuth1ClientCredential: Partial<OAuth1ClientCredential> | undefined | null = {}) : void {
    if (oAuth1ClientCredential) {
        serializeOAuthClientCredential(writer, oAuth1ClientCredential)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOAuth2ClientCredential(writer: SerializationWriter, oAuth2ClientCredential: Partial<OAuth2ClientCredential> | undefined | null = {}) : void {
    if (oAuth2ClientCredential) {
        serializeOAuthClientCredential(writer, oAuth2ClientCredential)
        writer.writeStringValue("scope", oAuth2ClientCredential.scope);
        writer.writeStringValue("tokenUrl", oAuth2ClientCredential.tokenUrl);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOAuthClientCredential(writer: SerializationWriter, oAuthClientCredential: Partial<OAuthClientCredential> | undefined | null = {}) : void {
    if (oAuthClientCredential) {
        serializeCredential(writer, oAuthClientCredential)
        writer.writeStringValue("clientId", oAuthClientCredential.clientId);
        writer.writeStringValue("clientSecret", oAuthClientCredential.clientSecret);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOneRosterApiDataConnector(writer: SerializationWriter, oneRosterApiDataConnector: Partial<OneRosterApiDataConnector> | undefined | null = {}) : void {
    if (oneRosterApiDataConnector) {
        serializeApiDataConnector(writer, oneRosterApiDataConnector)
        writer.writeStringValue("apiVersion", oneRosterApiDataConnector.apiVersion);
        writer.writeBooleanValue("isContactsEnabled", oneRosterApiDataConnector.isContactsEnabled);
        writer.writeBooleanValue("isDemographicsEnabled", oneRosterApiDataConnector.isDemographicsEnabled);
        writer.writeBooleanValue("isFlagsEnabled", oneRosterApiDataConnector.isFlagsEnabled);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOutboundFlowActivity(writer: SerializationWriter, outboundFlowActivity: Partial<OutboundFlowActivity> | undefined | null = {}) : void {
    if (outboundFlowActivity) {
        serializeIndustryDataRunActivity(writer, outboundFlowActivity)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOutboundProvisioningFlowSet(writer: SerializationWriter, outboundProvisioningFlowSet: Partial<OutboundProvisioningFlowSet> | undefined | null = {}) : void {
    if (outboundProvisioningFlowSet) {
        serializeEntity(writer, outboundProvisioningFlowSet)
        writer.writeStringValue("displayName", outboundProvisioningFlowSet.displayName);
        writer.writeObjectValue<Filter>("filter", outboundProvisioningFlowSet.filter, serializeFilter);
        writer.writeCollectionOfObjectValues<ProvisioningFlow>("provisioningFlows", outboundProvisioningFlowSet.provisioningFlows, serializeProvisioningFlow);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOutboundProvisioningFlowSetCollectionResponse(writer: SerializationWriter, outboundProvisioningFlowSetCollectionResponse: Partial<OutboundProvisioningFlowSetCollectionResponse> | undefined | null = {}) : void {
    if (outboundProvisioningFlowSetCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, outboundProvisioningFlowSetCollectionResponse)
        writer.writeCollectionOfObjectValues<OutboundProvisioningFlowSet>("value", outboundProvisioningFlowSetCollectionResponse.value, serializeOutboundProvisioningFlowSet);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePasswordSettings(writer: SerializationWriter, passwordSettings: Partial<PasswordSettings> | undefined | null = {}) : void {
    if (passwordSettings) {
        writer.writeStringValue("@odata.type", passwordSettings.odataType);
        writer.writeAdditionalData(passwordSettings.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProvisioningFlow(writer: SerializationWriter, provisioningFlow: Partial<ProvisioningFlow> | undefined | null = {}) : void {
    if (provisioningFlow) {
        serializeEntity(writer, provisioningFlow)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProvisioningFlowCollectionResponse(writer: SerializationWriter, provisioningFlowCollectionResponse: Partial<ProvisioningFlowCollectionResponse> | undefined | null = {}) : void {
    if (provisioningFlowCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, provisioningFlowCollectionResponse)
        writer.writeCollectionOfObjectValues<ProvisioningFlow>("value", provisioningFlowCollectionResponse.value, serializeProvisioningFlow);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReferenceDefinition(writer: SerializationWriter, referenceDefinition: Partial<ReferenceDefinition> | undefined | null = {}) : void {
    if (referenceDefinition) {
        serializeEntity(writer, referenceDefinition)
        writer.writeStringValue("code", referenceDefinition.code);
        writer.writeStringValue("displayName", referenceDefinition.displayName);
        writer.writeBooleanValue("isDisabled", referenceDefinition.isDisabled);
        writer.writeStringValue("referenceType", referenceDefinition.referenceType);
        writer.writeNumberValue("sortIndex", referenceDefinition.sortIndex);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReferenceDefinitionCollectionResponse(writer: SerializationWriter, referenceDefinitionCollectionResponse: Partial<ReferenceDefinitionCollectionResponse> | undefined | null = {}) : void {
    if (referenceDefinitionCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, referenceDefinitionCollectionResponse)
        writer.writeCollectionOfObjectValues<ReferenceDefinition>("value", referenceDefinitionCollectionResponse.value, serializeReferenceDefinition);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReferenceValue(writer: SerializationWriter, referenceValue: Partial<ReferenceValue> | undefined | null = {}) : void {
    if (referenceValue) {
        writer.writeStringValue("code", referenceValue.code);
        writer.writeStringValue("@odata.type", referenceValue.odataType);
        writer.writeObjectValue<ReferenceDefinition>("value", referenceValue.value, serializeReferenceDefinition);
        writer.writeAdditionalData(referenceValue.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRoleGroup(writer: SerializationWriter, roleGroup: Partial<RoleGroup> | undefined | null = {}) : void {
    if (roleGroup) {
        serializeEntity(writer, roleGroup)
        writer.writeStringValue("displayName", roleGroup.displayName);
        writer.writeCollectionOfObjectValues<RoleReferenceValue>("roles", roleGroup.roles, serializeRoleReferenceValue);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRoleGroupCollectionResponse(writer: SerializationWriter, roleGroupCollectionResponse: Partial<RoleGroupCollectionResponse> | undefined | null = {}) : void {
    if (roleGroupCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, roleGroupCollectionResponse)
        writer.writeCollectionOfObjectValues<RoleGroup>("value", roleGroupCollectionResponse.value, serializeRoleGroup);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRoleReferenceValue(writer: SerializationWriter, roleReferenceValue: Partial<RoleReferenceValue> | undefined | null = {}) : void {
    if (roleReferenceValue) {
        serializeReferenceValue(writer, roleReferenceValue)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSectionRoleReferenceValue(writer: SerializationWriter, sectionRoleReferenceValue: Partial<SectionRoleReferenceValue> | undefined | null = {}) : void {
    if (sectionRoleReferenceValue) {
        serializeReferenceValue(writer, sectionRoleReferenceValue)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecurityGroupCreationOptions(writer: SerializationWriter, securityGroupCreationOptions: Partial<SecurityGroupCreationOptions> | undefined | null = {}) : void {
    if (securityGroupCreationOptions) {
        writer.writeBooleanValue("createBasedOnOrgPlusRoleGroup", securityGroupCreationOptions.createBasedOnOrgPlusRoleGroup);
        writer.writeBooleanValue("createBasedOnRoleGroup", securityGroupCreationOptions.createBasedOnRoleGroup);
        writer.writeStringValue("@odata.type", securityGroupCreationOptions.odataType);
        writer.writeAdditionalData(securityGroupCreationOptions.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecurityGroupProvisioningFlow(writer: SerializationWriter, securityGroupProvisioningFlow: Partial<SecurityGroupProvisioningFlow> | undefined | null = {}) : void {
    if (securityGroupProvisioningFlow) {
        serializeProvisioningFlow(writer, securityGroupProvisioningFlow)
        writer.writeObjectValue<SecurityGroupCreationOptions>("creationOptions", securityGroupProvisioningFlow.creationOptions, serializeSecurityGroupCreationOptions);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSimplePasswordSettings(writer: SerializationWriter, simplePasswordSettings: Partial<SimplePasswordSettings> | undefined | null = {}) : void {
    if (simplePasswordSettings) {
        serializePasswordSettings(writer, simplePasswordSettings)
        writer.writeStringValue("password", simplePasswordSettings.password);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSourceSystemDefinition(writer: SerializationWriter, sourceSystemDefinition: Partial<SourceSystemDefinition> | undefined | null = {}) : void {
    if (sourceSystemDefinition) {
        serializeEntity(writer, sourceSystemDefinition)
        writer.writeStringValue("displayName", sourceSystemDefinition.displayName);
        writer.writeCollectionOfObjectValues<UserMatchingSetting>("userMatchingSettings", sourceSystemDefinition.userMatchingSettings, serializeUserMatchingSetting);
        writer.writeStringValue("vendor", sourceSystemDefinition.vendor);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSourceSystemDefinitionCollectionResponse(writer: SerializationWriter, sourceSystemDefinitionCollectionResponse: Partial<SourceSystemDefinitionCollectionResponse> | undefined | null = {}) : void {
    if (sourceSystemDefinitionCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, sourceSystemDefinitionCollectionResponse)
        writer.writeCollectionOfObjectValues<SourceSystemDefinition>("value", sourceSystemDefinitionCollectionResponse.value, serializeSourceSystemDefinition);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserConfiguration(writer: SerializationWriter, userConfiguration: Partial<UserConfiguration> | undefined | null = {}) : void {
    if (userConfiguration) {
        writer.writeObjectValue<PasswordSettings>("defaultPasswordSettings", userConfiguration.defaultPasswordSettings, serializePasswordSettings);
        writer.writeCollectionOfPrimitiveValues<string>("licenseSkus", userConfiguration.licenseSkus);
        writer.writeStringValue("@odata.type", userConfiguration.odataType);
        writer.writeObjectValue<RoleGroup>("roleGroup", userConfiguration.roleGroup, serializeRoleGroup);
        writer.writeAdditionalData(userConfiguration.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserCreationOptions(writer: SerializationWriter, userCreationOptions: Partial<UserCreationOptions> | undefined | null = {}) : void {
    if (userCreationOptions) {
        writer.writeCollectionOfObjectValues<UserConfiguration>("configurations", userCreationOptions.configurations, serializeUserConfiguration);
        writer.writeStringValue("@odata.type", userCreationOptions.odataType);
        writer.writeAdditionalData(userCreationOptions.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserManagementOptions(writer: SerializationWriter, userManagementOptions: Partial<UserManagementOptions> | undefined | null = {}) : void {
    if (userManagementOptions) {
        if(userManagementOptions.additionalAttributes)
        writer.writeCollectionOfEnumValues<AdditionalUserAttributes>("additionalAttributes", userManagementOptions.additionalAttributes);
        writer.writeObjectValue<AdditionalUserOptions>("additionalOptions", userManagementOptions.additionalOptions, serializeAdditionalUserOptions);
        writer.writeStringValue("@odata.type", userManagementOptions.odataType);
        writer.writeAdditionalData(userManagementOptions.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserMatchingSetting(writer: SerializationWriter, userMatchingSetting: Partial<UserMatchingSetting> | undefined | null = {}) : void {
    if (userMatchingSetting) {
        writer.writeObjectValue<UserMatchTargetReferenceValue>("matchTarget", userMatchingSetting.matchTarget, serializeUserMatchTargetReferenceValue);
        writer.writeStringValue("@odata.type", userMatchingSetting.odataType);
        writer.writeNumberValue("priorityOrder", userMatchingSetting.priorityOrder);
        writer.writeObjectValue<RoleGroup>("roleGroup", userMatchingSetting.roleGroup, serializeRoleGroup);
        writer.writeObjectValue<IdentifierTypeReferenceValue>("sourceIdentifier", userMatchingSetting.sourceIdentifier, serializeIdentifierTypeReferenceValue);
        writer.writeAdditionalData(userMatchingSetting.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserMatchTargetReferenceValue(writer: SerializationWriter, userMatchTargetReferenceValue: Partial<UserMatchTargetReferenceValue> | undefined | null = {}) : void {
    if (userMatchTargetReferenceValue) {
        serializeReferenceValue(writer, userMatchTargetReferenceValue)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserProvisioningFlow(writer: SerializationWriter, userProvisioningFlow: Partial<UserProvisioningFlow> | undefined | null = {}) : void {
    if (userProvisioningFlow) {
        serializeProvisioningFlow(writer, userProvisioningFlow)
        writer.writeBooleanValue("createUnmatchedUsers", userProvisioningFlow.createUnmatchedUsers);
        writer.writeObjectValue<UserCreationOptions>("creationOptions", userProvisioningFlow.creationOptions, serializeUserCreationOptions);
        writer.writeObjectValue<UserManagementOptions>("managementOptions", userProvisioningFlow.managementOptions, serializeUserManagementOptions);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeValidateOperation(writer: SerializationWriter, validateOperation: Partial<ValidateOperation> | undefined | null = {}) : void {
    if (validateOperation) {
        serializeLongRunningOperation(writer, validateOperation)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeYearReferenceValue(writer: SerializationWriter, yearReferenceValue: Partial<YearReferenceValue> | undefined | null = {}) : void {
    if (yearReferenceValue) {
        serializeReferenceValue(writer, yearReferenceValue)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeYearTimePeriodDefinition(writer: SerializationWriter, yearTimePeriodDefinition: Partial<YearTimePeriodDefinition> | undefined | null = {}) : void {
    if (yearTimePeriodDefinition) {
        serializeEntity(writer, yearTimePeriodDefinition)
        writer.writeStringValue("displayName", yearTimePeriodDefinition.displayName);
        writer.writeDateOnlyValue("endDate", yearTimePeriodDefinition.endDate);
        writer.writeDateOnlyValue("startDate", yearTimePeriodDefinition.startDate);
        writer.writeObjectValue<YearReferenceValue>("year", yearTimePeriodDefinition.year, serializeYearReferenceValue);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeYearTimePeriodDefinitionCollectionResponse(writer: SerializationWriter, yearTimePeriodDefinitionCollectionResponse: Partial<YearTimePeriodDefinitionCollectionResponse> | undefined | null = {}) : void {
    if (yearTimePeriodDefinitionCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, yearTimePeriodDefinitionCollectionResponse)
        writer.writeCollectionOfObjectValues<YearTimePeriodDefinition>("value", yearTimePeriodDefinitionCollectionResponse.value, serializeYearTimePeriodDefinition);
    }
}
export interface SimplePasswordSettings extends Parsable, PasswordSettings {
    /**
     * The password for the user.
     */
    password?: string | null;
}
export interface SourceSystemDefinition extends Entity, Parsable {
    /**
     * The name of the source system. Maximum supported length is 100 characters.
     */
    displayName?: string | null;
    /**
     * A collection of user matching settings by roleGroup.
     */
    userMatchingSettings?: UserMatchingSetting[] | null;
    /**
     * The name of the vendor who supplies the source system. Maximum supported length is 100 characters.
     */
    vendor?: string | null;
}
export interface SourceSystemDefinitionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: SourceSystemDefinition[] | null;
}
export interface UserConfiguration extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The password settings for the users to be provisioned with.
     */
    defaultPasswordSettings?: PasswordSettings | null;
    /**
     * The license skus for the users to be provisioned with.
     */
    licenseSkus?: string[] | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The roleGroup property
     */
    roleGroup?: RoleGroup | null;
}
export interface UserCreationOptions extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The different management choices for the users to be provisioned.
     */
    configurations?: UserConfiguration[] | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface UserManagementOptions extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The different attribute choices for the users to be provisioned. The possible values are: userGradeLevel, userNumber, unknownFutureValue.
     */
    additionalAttributes?: AdditionalUserAttributes[] | null;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The additionalOptions property
     */
    additionalOptions?: AdditionalUserOptions | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface UserMatchingSetting extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The RefUserMatchTarget for matching a user from the source with a Microsoft Entra user object.
     */
    matchTarget?: UserMatchTargetReferenceValue | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The priority order to apply when a user has multiple RefRole codes assigned.
     */
    priorityOrder?: number | null;
    /**
     * The roleGroup property
     */
    roleGroup?: RoleGroup | null;
    /**
     * The sourceIdentifier property
     */
    sourceIdentifier?: IdentifierTypeReferenceValue | null;
}
export interface UserMatchTargetReferenceValue extends Parsable, ReferenceValue {
}
export interface UserProvisioningFlow extends Parsable, ProvisioningFlow {
    /**
     * A Boolean choice indicating whether unmatched users should be created or ignored.
     */
    createUnmatchedUsers?: boolean | null;
    /**
     * The different management choices for the new users to be provisioned.
     */
    creationOptions?: UserCreationOptions | null;
    /**
     * The managementOptions property
     */
    managementOptions?: UserManagementOptions | null;
}
/**
 * The status of a long-running operation.
 */
export interface ValidateOperation extends LongRunningOperation, Parsable {
    /**
     * Set of errors discovered through validation.
     */
    errors?: PublicError[] | null;
    /**
     * Set of warnings discovered through validation.
     */
    warnings?: PublicError[] | null;
}
export interface YearReferenceValue extends Parsable, ReferenceValue {
}
export interface YearTimePeriodDefinition extends Entity, Parsable {
    /**
     * The name of the year. Maximum supported length is 100 characters.
     */
    displayName?: string | null;
    /**
     * The last day of the year using ISO 8601 format for date.
     */
    endDate?: DateOnly | null;
    /**
     * The first day of the year using ISO 8601 format for date.
     */
    startDate?: DateOnly | null;
    /**
     * The year property
     */
    year?: YearReferenceValue | null;
}
export interface YearTimePeriodDefinitionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: YearTimePeriodDefinition[] | null;
}
export const AdditionalClassGroupAttributesObject = {
    CourseTitle: "courseTitle",
    CourseCode: "courseCode",
    CourseSubject: "courseSubject",
    CourseGradeLevel: "courseGradeLevel",
    CourseExternalId: "courseExternalId",
    AcademicSessionTitle: "academicSessionTitle",
    AcademicSessionExternalId: "academicSessionExternalId",
    ClassCode: "classCode",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AdditionalUserAttributesObject = {
    UserGradeLevel: "userGradeLevel",
    UserNumber: "userNumber",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ApiFormatObject = {
    OneRoster: "oneRoster",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const FilterOptionsObject = {
    OrgExternalId: "orgExternalId",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const InboundDomainObject = {
    EducationRostering: "educationRostering",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const IndustryDataActivityStatusObject = {
    InProgress: "inProgress",
    Skipped: "skipped",
    Failed: "failed",
    Completed: "completed",
    CompletedWithErrors: "completedWithErrors",
    CompletedWithWarnings: "completedWithWarnings",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const IndustryDataRunStatusObject = {
    Running: "running",
    Failed: "failed",
    Completed: "completed",
    CompletedWithErrors: "completedWithErrors",
    CompletedWithWarnings: "completedWithWarnings",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ReadinessStatusObject = {
    NotReady: "notReady",
    Ready: "ready",
    Failed: "failed",
    Disabled: "disabled",
    Expired: "expired",
    UnknownFutureValue: "unknownFutureValue",
} as const;
/* tslint:enable */
/* eslint-enable */
