/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createUserFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, deserializeIntoEntity, LongRunningOperationStatus, LongRunningOperationStatusObject, serializeBaseCollectionPaginationCountResponse, serializeEntity, serializeUser, type BaseCollectionPaginationCountResponse, type Entity, type User } from '../index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export type AccountType = (typeof AccountTypeObject)[keyof typeof AccountTypeObject];
export type ActivationState = (typeof ActivationStateObject)[keyof typeof ActivationStateObject];
export interface AssignedTelephoneNumber extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The assignmentCategory property
     */
    assignmentCategory?: AssignmentCategory | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The assigned phone number.
     */
    telephoneNumber?: string | null;
}
export type AssignmentCategory = (typeof AssignmentCategoryObject)[keyof typeof AssignmentCategoryObject];
export type AssignmentStatus = (typeof AssignmentStatusObject)[keyof typeof AssignmentStatusObject];
export type AssignmentType = (typeof AssignmentTypeObject)[keyof typeof AssignmentTypeObject];
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AssignedTelephoneNumber}
 */
// @ts-ignore
export function createAssignedTelephoneNumberFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAssignedTelephoneNumber;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EffectivePolicyAssignment}
 */
// @ts-ignore
export function createEffectivePolicyAssignmentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEffectivePolicyAssignment;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {NumberAssignmentCollectionResponse}
 */
// @ts-ignore
export function createNumberAssignmentCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoNumberAssignmentCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {NumberAssignment}
 */
// @ts-ignore
export function createNumberAssignmentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoNumberAssignment;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PolicyAssignment}
 */
// @ts-ignore
export function createPolicyAssignmentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPolicyAssignment;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PolicyIdentifierDetail}
 */
// @ts-ignore
export function createPolicyIdentifierDetailFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPolicyIdentifierDetail;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamsAdminRoot}
 */
// @ts-ignore
export function createTeamsAdminRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamsAdminRoot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamsPolicyAssignment}
 */
// @ts-ignore
export function createTeamsPolicyAssignmentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamsPolicyAssignment;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamsPolicyUserAssignmentCollectionResponse}
 */
// @ts-ignore
export function createTeamsPolicyUserAssignmentCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamsPolicyUserAssignmentCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamsPolicyUserAssignment}
 */
// @ts-ignore
export function createTeamsPolicyUserAssignmentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamsPolicyUserAssignment;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamsUserConfigurationCollectionResponse}
 */
// @ts-ignore
export function createTeamsUserConfigurationCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamsUserConfigurationCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamsUserConfiguration}
 */
// @ts-ignore
export function createTeamsUserConfigurationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamsUserConfiguration;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TelephoneNumberLongRunningOperationCollectionResponse}
 */
// @ts-ignore
export function createTelephoneNumberLongRunningOperationCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTelephoneNumberLongRunningOperationCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TelephoneNumberLongRunningOperationDetails}
 */
// @ts-ignore
export function createTelephoneNumberLongRunningOperationDetailsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTelephoneNumberLongRunningOperationDetails;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TelephoneNumberLongRunningOperation}
 */
// @ts-ignore
export function createTelephoneNumberLongRunningOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTelephoneNumberLongRunningOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TelephoneNumberManagementRoot}
 */
// @ts-ignore
export function createTelephoneNumberManagementRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTelephoneNumberManagementRoot;
}
export type CustomerAction = (typeof CustomerActionObject)[keyof typeof CustomerActionObject];
/**
 * The deserialization information for the current model
 * @param AssignedTelephoneNumber The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAssignedTelephoneNumber(assignedTelephoneNumber: Partial<AssignedTelephoneNumber> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "assignmentCategory": n => { assignedTelephoneNumber.assignmentCategory = n.getEnumValue<AssignmentCategory>(AssignmentCategoryObject); },
        "backingStoreEnabled": n => { assignedTelephoneNumber.backingStoreEnabled = true; },
        "@odata.type": n => { assignedTelephoneNumber.odataType = n.getStringValue(); },
        "telephoneNumber": n => { assignedTelephoneNumber.telephoneNumber = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param EffectivePolicyAssignment The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEffectivePolicyAssignment(effectivePolicyAssignment: Partial<EffectivePolicyAssignment> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { effectivePolicyAssignment.backingStoreEnabled = true; },
        "@odata.type": n => { effectivePolicyAssignment.odataType = n.getStringValue(); },
        "policyAssignment": n => { effectivePolicyAssignment.policyAssignment = n.getObjectValue<PolicyAssignment>(createPolicyAssignmentFromDiscriminatorValue); },
        "policyType": n => { effectivePolicyAssignment.policyType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param NumberAssignment The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoNumberAssignment(numberAssignment: Partial<NumberAssignment> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(numberAssignment),
        "activationState": n => { numberAssignment.activationState = n.getEnumValue<ActivationState>(ActivationStateObject); },
        "assignmentCategory": n => { numberAssignment.assignmentCategory = n.getEnumValue<AssignmentCategory>(AssignmentCategoryObject); },
        "assignmentStatus": n => { numberAssignment.assignmentStatus = n.getEnumValue<AssignmentStatus>(AssignmentStatusObject); },
        "assignmentTargetId": n => { numberAssignment.assignmentTargetId = n.getStringValue(); },
        "capabilities": n => { numberAssignment.capabilities = n.getCollectionOfEnumValues<NumberCapability>(NumberCapabilityObject); },
        "city": n => { numberAssignment.city = n.getStringValue(); },
        "civicAddressId": n => { numberAssignment.civicAddressId = n.getStringValue(); },
        "isoCountryCode": n => { numberAssignment.isoCountryCode = n.getStringValue(); },
        "locationId": n => { numberAssignment.locationId = n.getStringValue(); },
        "networkSiteId": n => { numberAssignment.networkSiteId = n.getStringValue(); },
        "numberSource": n => { numberAssignment.numberSource = n.getEnumValue<NumberSource>(NumberSourceObject); },
        "numberType": n => { numberAssignment.numberType = n.getEnumValue<NumberType>(NumberTypeObject); },
        "operatorId": n => { numberAssignment.operatorId = n.getStringValue(); },
        "portInStatus": n => { numberAssignment.portInStatus = n.getEnumValue<PortInStatus>(PortInStatusObject); },
        "reverseNumberLookupOptions": n => { numberAssignment.reverseNumberLookupOptions = n.getCollectionOfEnumValues<ReverseNumberLookupOption>(ReverseNumberLookupOptionObject); },
        "supportedCustomerActions": n => { numberAssignment.supportedCustomerActions = n.getCollectionOfEnumValues<CustomerAction>(CustomerActionObject); },
        "telephoneNumber": n => { numberAssignment.telephoneNumber = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param NumberAssignmentCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoNumberAssignmentCollectionResponse(numberAssignmentCollectionResponse: Partial<NumberAssignmentCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(numberAssignmentCollectionResponse),
        "value": n => { numberAssignmentCollectionResponse.value = n.getCollectionOfObjectValues<NumberAssignment>(createNumberAssignmentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param PolicyAssignment The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPolicyAssignment(policyAssignment: Partial<PolicyAssignment> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "assignmentType": n => { policyAssignment.assignmentType = n.getEnumValue<AssignmentType>(AssignmentTypeObject); },
        "backingStoreEnabled": n => { policyAssignment.backingStoreEnabled = true; },
        "displayName": n => { policyAssignment.displayName = n.getStringValue(); },
        "groupId": n => { policyAssignment.groupId = n.getStringValue(); },
        "@odata.type": n => { policyAssignment.odataType = n.getStringValue(); },
        "policyId": n => { policyAssignment.policyId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PolicyIdentifierDetail The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPolicyIdentifierDetail(policyIdentifierDetail: Partial<PolicyIdentifierDetail> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(policyIdentifierDetail),
        "name": n => { policyIdentifierDetail.name = n.getStringValue(); },
        "policyId": n => { policyIdentifierDetail.policyId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param TeamsAdminRoot The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamsAdminRoot(teamsAdminRoot: Partial<TeamsAdminRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(teamsAdminRoot),
        "policy": n => { teamsAdminRoot.policy = n.getObjectValue<TeamsPolicyAssignment>(createTeamsPolicyAssignmentFromDiscriminatorValue); },
        "telephoneNumberManagement": n => { teamsAdminRoot.telephoneNumberManagement = n.getObjectValue<TelephoneNumberManagementRoot>(createTelephoneNumberManagementRootFromDiscriminatorValue); },
        "userConfigurations": n => { teamsAdminRoot.userConfigurations = n.getCollectionOfObjectValues<TeamsUserConfiguration>(createTeamsUserConfigurationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param TeamsPolicyAssignment The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamsPolicyAssignment(teamsPolicyAssignment: Partial<TeamsPolicyAssignment> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(teamsPolicyAssignment),
        "userAssignments": n => { teamsPolicyAssignment.userAssignments = n.getCollectionOfObjectValues<TeamsPolicyUserAssignment>(createTeamsPolicyUserAssignmentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param TeamsPolicyUserAssignment The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamsPolicyUserAssignment(teamsPolicyUserAssignment: Partial<TeamsPolicyUserAssignment> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(teamsPolicyUserAssignment),
        "policyId": n => { teamsPolicyUserAssignment.policyId = n.getStringValue(); },
        "policyType": n => { teamsPolicyUserAssignment.policyType = n.getStringValue(); },
        "userId": n => { teamsPolicyUserAssignment.userId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param TeamsPolicyUserAssignmentCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamsPolicyUserAssignmentCollectionResponse(teamsPolicyUserAssignmentCollectionResponse: Partial<TeamsPolicyUserAssignmentCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(teamsPolicyUserAssignmentCollectionResponse),
        "value": n => { teamsPolicyUserAssignmentCollectionResponse.value = n.getCollectionOfObjectValues<TeamsPolicyUserAssignment>(createTeamsPolicyUserAssignmentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param TeamsUserConfiguration The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamsUserConfiguration(teamsUserConfiguration: Partial<TeamsUserConfiguration> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(teamsUserConfiguration),
        "accountType": n => { teamsUserConfiguration.accountType = n.getEnumValue<AccountType>(AccountTypeObject); },
        "createdDateTime": n => { teamsUserConfiguration.createdDateTime = n.getDateValue(); },
        "effectivePolicyAssignments": n => { teamsUserConfiguration.effectivePolicyAssignments = n.getCollectionOfObjectValues<EffectivePolicyAssignment>(createEffectivePolicyAssignmentFromDiscriminatorValue); },
        "featureTypes": n => { teamsUserConfiguration.featureTypes = n.getCollectionOfPrimitiveValues<string>(); },
        "isEnterpriseVoiceEnabled": n => { teamsUserConfiguration.isEnterpriseVoiceEnabled = n.getBooleanValue(); },
        "modifiedDateTime": n => { teamsUserConfiguration.modifiedDateTime = n.getDateValue(); },
        "telephoneNumbers": n => { teamsUserConfiguration.telephoneNumbers = n.getCollectionOfObjectValues<AssignedTelephoneNumber>(createAssignedTelephoneNumberFromDiscriminatorValue); },
        "tenantId": n => { teamsUserConfiguration.tenantId = n.getStringValue(); },
        "user": n => { teamsUserConfiguration.user = n.getObjectValue<User>(createUserFromDiscriminatorValue); },
        "userPrincipalName": n => { teamsUserConfiguration.userPrincipalName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param TeamsUserConfigurationCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamsUserConfigurationCollectionResponse(teamsUserConfigurationCollectionResponse: Partial<TeamsUserConfigurationCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(teamsUserConfigurationCollectionResponse),
        "value": n => { teamsUserConfigurationCollectionResponse.value = n.getCollectionOfObjectValues<TeamsUserConfiguration>(createTeamsUserConfigurationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param TelephoneNumberLongRunningOperation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTelephoneNumberLongRunningOperation(telephoneNumberLongRunningOperation: Partial<TelephoneNumberLongRunningOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(telephoneNumberLongRunningOperation),
        "createdDateTime": n => { telephoneNumberLongRunningOperation.createdDateTime = n.getStringValue(); },
        "numbers": n => { telephoneNumberLongRunningOperation.numbers = n.getCollectionOfObjectValues<TelephoneNumberLongRunningOperationDetails>(createTelephoneNumberLongRunningOperationDetailsFromDiscriminatorValue); },
        "status": n => { telephoneNumberLongRunningOperation.status = n.getEnumValue<LongRunningOperationStatus>(LongRunningOperationStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param TelephoneNumberLongRunningOperationCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTelephoneNumberLongRunningOperationCollectionResponse(telephoneNumberLongRunningOperationCollectionResponse: Partial<TelephoneNumberLongRunningOperationCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(telephoneNumberLongRunningOperationCollectionResponse),
        "value": n => { telephoneNumberLongRunningOperationCollectionResponse.value = n.getCollectionOfObjectValues<TelephoneNumberLongRunningOperation>(createTelephoneNumberLongRunningOperationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param TelephoneNumberLongRunningOperationDetails The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTelephoneNumberLongRunningOperationDetails(telephoneNumberLongRunningOperationDetails: Partial<TelephoneNumberLongRunningOperationDetails> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { telephoneNumberLongRunningOperationDetails.backingStoreEnabled = true; },
        "@odata.type": n => { telephoneNumberLongRunningOperationDetails.odataType = n.getStringValue(); },
        "resourceLocation": n => { telephoneNumberLongRunningOperationDetails.resourceLocation = n.getStringValue(); },
        "status": n => { telephoneNumberLongRunningOperationDetails.status = n.getEnumValue<LongRunningOperationStatus>(LongRunningOperationStatusObject); },
        "statusDetail": n => { telephoneNumberLongRunningOperationDetails.statusDetail = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param TelephoneNumberManagementRoot The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTelephoneNumberManagementRoot(telephoneNumberManagementRoot: Partial<TelephoneNumberManagementRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(telephoneNumberManagementRoot),
        "numberAssignments": n => { telephoneNumberManagementRoot.numberAssignments = n.getCollectionOfObjectValues<NumberAssignment>(createNumberAssignmentFromDiscriminatorValue); },
        "operations": n => { telephoneNumberManagementRoot.operations = n.getCollectionOfObjectValues<TelephoneNumberLongRunningOperation>(createTelephoneNumberLongRunningOperationFromDiscriminatorValue); },
    }
}
export interface EffectivePolicyAssignment extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The policyAssignment property
     */
    policyAssignment?: PolicyAssignment | null;
    /**
     * The type of the assigned policy; for example, TeamsMeetingPolicy and TeamsCallingPolicy.
     */
    policyType?: string | null;
}
export interface NumberAssignment extends Entity, Parsable {
    /**
     * The activationState property
     */
    activationState?: ActivationState | null;
    /**
     * Contains the assignment category such as Primary or Private. The possible values are: primary, private, alternate, unknownFutureValue.
     */
    assignmentCategory?: AssignmentCategory | null;
    /**
     * The assignment status of the phone number. The possible values are: unassigned, internalError, userAssigned, conferenceAssigned, voiceApplicationAssigned, thirdPartyAppAssigned, policyAssigned, unknownFutureValue.
     */
    assignmentStatus?: AssignmentStatus | null;
    /**
     * The ID of the object the phone number is assigned to, either the ObjectId of a user or resource account, or the policy instance ID of a Teams shared calling routing policy instance.
     */
    assignmentTargetId?: string | null;
    /**
     * The list of capabilities assigned to the phone number.
     */
    capabilities?: NumberCapability[] | null;
    /**
     * The city where the phone number is located or associated with.
     */
    city?: string | null;
    /**
     * The ID of the civic address assigned to the phone number.
     */
    civicAddressId?: string | null;
    /**
     * The ISO country code assigned to the phone number.
     */
    isoCountryCode?: string | null;
    /**
     * The ID of the location assigned to the phone number.
     */
    locationId?: string | null;
    /**
     * This property is reserved for internal Microsoft use.
     */
    networkSiteId?: string | null;
    /**
     * The source of the phone number. online is used for phone numbers assigned in Microsoft 365, and onPremises is used for phone numbers assigned in AD on-premises, which are synchronized into Microsoft 365. The possible values are: online, onPremises, unknownFutureValue.
     */
    numberSource?: NumberSource | null;
    /**
     * The numberType property
     */
    numberType?: NumberType | null;
    /**
     * The ID of the operator.
     */
    operatorId?: string | null;
    /**
     * The status of any port in order covering the phone number. The possible values are: completed, firmOrderCommitmentAccepted, unknownFutureValue.
     */
    portInStatus?: PortInStatus | null;
    /**
     * Status of Reverse Number Lookup (RNL). If set to skipInternalVoip, calls are routed through the external Public Switched Telephone Network (PSTN) instead of using internal VoIP resolution.
     */
    reverseNumberLookupOptions?: ReverseNumberLookupOption[] | null;
    /**
     * Indicates what customer actions are available to modify the number.
     */
    supportedCustomerActions?: CustomerAction[] | null;
    /**
     * The telephone number in the record. The recorded telephone number is always displayed with a '+' prefix, regardless of whether it was originally assigned with one.
     */
    telephoneNumber?: string | null;
}
export interface NumberAssignmentCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: NumberAssignment[] | null;
}
export type NumberCapability = (typeof NumberCapabilityObject)[keyof typeof NumberCapabilityObject];
export type NumberSource = (typeof NumberSourceObject)[keyof typeof NumberSourceObject];
export type NumberType = (typeof NumberTypeObject)[keyof typeof NumberTypeObject];
export interface PolicyAssignment extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The assignmentType property
     */
    assignmentType?: AssignmentType | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Represents the name of the policy.
     */
    displayName?: string | null;
    /**
     * Represents the group identifier.
     */
    groupId?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Represents the unique identifier for the policy.
     */
    policyId?: string | null;
}
export interface PolicyIdentifierDetail extends Entity, Parsable {
    /**
     * The display name of the policy instance.
     */
    name?: string | null;
    /**
     * The unique ID associated with the policy instance.
     */
    policyId?: string | null;
}
export type PortInStatus = (typeof PortInStatusObject)[keyof typeof PortInStatusObject];
export type ReverseNumberLookupOption = (typeof ReverseNumberLookupOptionObject)[keyof typeof ReverseNumberLookupOptionObject];
/**
 * Serializes information the current object
 * @param AssignedTelephoneNumber The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAssignedTelephoneNumber(writer: SerializationWriter, assignedTelephoneNumber: Partial<AssignedTelephoneNumber> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!assignedTelephoneNumber || isSerializingDerivedType) { return; }
    writer.writeEnumValue<AssignmentCategory>("assignmentCategory", assignedTelephoneNumber.assignmentCategory);
    writer.writeStringValue("@odata.type", assignedTelephoneNumber.odataType);
    writer.writeStringValue("telephoneNumber", assignedTelephoneNumber.telephoneNumber);
    writer.writeAdditionalData(assignedTelephoneNumber.additionalData);
}
/**
 * Serializes information the current object
 * @param EffectivePolicyAssignment The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEffectivePolicyAssignment(writer: SerializationWriter, effectivePolicyAssignment: Partial<EffectivePolicyAssignment> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!effectivePolicyAssignment || isSerializingDerivedType) { return; }
    writer.writeStringValue("@odata.type", effectivePolicyAssignment.odataType);
    writer.writeObjectValue<PolicyAssignment>("policyAssignment", effectivePolicyAssignment.policyAssignment, serializePolicyAssignment);
    writer.writeStringValue("policyType", effectivePolicyAssignment.policyType);
    writer.writeAdditionalData(effectivePolicyAssignment.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param NumberAssignment The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeNumberAssignment(writer: SerializationWriter, numberAssignment: Partial<NumberAssignment> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!numberAssignment || isSerializingDerivedType) { return; }
    serializeEntity(writer, numberAssignment, isSerializingDerivedType)
    writer.writeEnumValue<ActivationState>("activationState", numberAssignment.activationState);
    writer.writeEnumValue<AssignmentCategory>("assignmentCategory", numberAssignment.assignmentCategory);
    writer.writeEnumValue<AssignmentStatus>("assignmentStatus", numberAssignment.assignmentStatus);
    writer.writeStringValue("assignmentTargetId", numberAssignment.assignmentTargetId);
    if(numberAssignment.capabilities)
    writer.writeCollectionOfEnumValues<NumberCapability>("capabilities", numberAssignment.capabilities);
    writer.writeStringValue("city", numberAssignment.city);
    writer.writeStringValue("civicAddressId", numberAssignment.civicAddressId);
    writer.writeStringValue("isoCountryCode", numberAssignment.isoCountryCode);
    writer.writeStringValue("locationId", numberAssignment.locationId);
    writer.writeStringValue("networkSiteId", numberAssignment.networkSiteId);
    writer.writeEnumValue<NumberSource>("numberSource", numberAssignment.numberSource);
    writer.writeEnumValue<NumberType>("numberType", numberAssignment.numberType);
    writer.writeStringValue("operatorId", numberAssignment.operatorId);
    writer.writeEnumValue<PortInStatus>("portInStatus", numberAssignment.portInStatus);
    if(numberAssignment.reverseNumberLookupOptions)
    writer.writeCollectionOfEnumValues<ReverseNumberLookupOption>("reverseNumberLookupOptions", numberAssignment.reverseNumberLookupOptions);
    if(numberAssignment.supportedCustomerActions)
    writer.writeCollectionOfEnumValues<CustomerAction>("supportedCustomerActions", numberAssignment.supportedCustomerActions);
    writer.writeStringValue("telephoneNumber", numberAssignment.telephoneNumber);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param NumberAssignmentCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeNumberAssignmentCollectionResponse(writer: SerializationWriter, numberAssignmentCollectionResponse: Partial<NumberAssignmentCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!numberAssignmentCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, numberAssignmentCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<NumberAssignment>("value", numberAssignmentCollectionResponse.value, serializeNumberAssignment);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PolicyAssignment The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePolicyAssignment(writer: SerializationWriter, policyAssignment: Partial<PolicyAssignment> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!policyAssignment || isSerializingDerivedType) { return; }
    writer.writeEnumValue<AssignmentType>("assignmentType", policyAssignment.assignmentType);
    writer.writeStringValue("displayName", policyAssignment.displayName);
    writer.writeStringValue("groupId", policyAssignment.groupId);
    writer.writeStringValue("@odata.type", policyAssignment.odataType);
    writer.writeStringValue("policyId", policyAssignment.policyId);
    writer.writeAdditionalData(policyAssignment.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PolicyIdentifierDetail The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePolicyIdentifierDetail(writer: SerializationWriter, policyIdentifierDetail: Partial<PolicyIdentifierDetail> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!policyIdentifierDetail || isSerializingDerivedType) { return; }
    serializeEntity(writer, policyIdentifierDetail, isSerializingDerivedType)
    writer.writeStringValue("name", policyIdentifierDetail.name);
    writer.writeStringValue("policyId", policyIdentifierDetail.policyId);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TeamsAdminRoot The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamsAdminRoot(writer: SerializationWriter, teamsAdminRoot: Partial<TeamsAdminRoot> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!teamsAdminRoot || isSerializingDerivedType) { return; }
    serializeEntity(writer, teamsAdminRoot, isSerializingDerivedType)
    writer.writeObjectValue<TeamsPolicyAssignment>("policy", teamsAdminRoot.policy, serializeTeamsPolicyAssignment);
    writer.writeObjectValue<TelephoneNumberManagementRoot>("telephoneNumberManagement", teamsAdminRoot.telephoneNumberManagement, serializeTelephoneNumberManagementRoot);
    writer.writeCollectionOfObjectValues<TeamsUserConfiguration>("userConfigurations", teamsAdminRoot.userConfigurations, serializeTeamsUserConfiguration);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TeamsPolicyAssignment The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamsPolicyAssignment(writer: SerializationWriter, teamsPolicyAssignment: Partial<TeamsPolicyAssignment> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!teamsPolicyAssignment || isSerializingDerivedType) { return; }
    serializeEntity(writer, teamsPolicyAssignment, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<TeamsPolicyUserAssignment>("userAssignments", teamsPolicyAssignment.userAssignments, serializeTeamsPolicyUserAssignment);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TeamsPolicyUserAssignment The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamsPolicyUserAssignment(writer: SerializationWriter, teamsPolicyUserAssignment: Partial<TeamsPolicyUserAssignment> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!teamsPolicyUserAssignment || isSerializingDerivedType) { return; }
    serializeEntity(writer, teamsPolicyUserAssignment, isSerializingDerivedType)
    writer.writeStringValue("policyId", teamsPolicyUserAssignment.policyId);
    writer.writeStringValue("policyType", teamsPolicyUserAssignment.policyType);
    writer.writeStringValue("userId", teamsPolicyUserAssignment.userId);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TeamsPolicyUserAssignmentCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamsPolicyUserAssignmentCollectionResponse(writer: SerializationWriter, teamsPolicyUserAssignmentCollectionResponse: Partial<TeamsPolicyUserAssignmentCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!teamsPolicyUserAssignmentCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, teamsPolicyUserAssignmentCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<TeamsPolicyUserAssignment>("value", teamsPolicyUserAssignmentCollectionResponse.value, serializeTeamsPolicyUserAssignment);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TeamsUserConfiguration The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamsUserConfiguration(writer: SerializationWriter, teamsUserConfiguration: Partial<TeamsUserConfiguration> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!teamsUserConfiguration || isSerializingDerivedType) { return; }
    serializeEntity(writer, teamsUserConfiguration, isSerializingDerivedType)
    writer.writeEnumValue<AccountType>("accountType", teamsUserConfiguration.accountType);
    writer.writeDateValue("createdDateTime", teamsUserConfiguration.createdDateTime);
    writer.writeCollectionOfObjectValues<EffectivePolicyAssignment>("effectivePolicyAssignments", teamsUserConfiguration.effectivePolicyAssignments, serializeEffectivePolicyAssignment);
    writer.writeCollectionOfPrimitiveValues<string>("featureTypes", teamsUserConfiguration.featureTypes);
    writer.writeBooleanValue("isEnterpriseVoiceEnabled", teamsUserConfiguration.isEnterpriseVoiceEnabled);
    writer.writeDateValue("modifiedDateTime", teamsUserConfiguration.modifiedDateTime);
    writer.writeCollectionOfObjectValues<AssignedTelephoneNumber>("telephoneNumbers", teamsUserConfiguration.telephoneNumbers, serializeAssignedTelephoneNumber);
    writer.writeStringValue("tenantId", teamsUserConfiguration.tenantId);
    writer.writeObjectValue<User>("user", teamsUserConfiguration.user, serializeUser);
    writer.writeStringValue("userPrincipalName", teamsUserConfiguration.userPrincipalName);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TeamsUserConfigurationCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamsUserConfigurationCollectionResponse(writer: SerializationWriter, teamsUserConfigurationCollectionResponse: Partial<TeamsUserConfigurationCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!teamsUserConfigurationCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, teamsUserConfigurationCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<TeamsUserConfiguration>("value", teamsUserConfigurationCollectionResponse.value, serializeTeamsUserConfiguration);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TelephoneNumberLongRunningOperation The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTelephoneNumberLongRunningOperation(writer: SerializationWriter, telephoneNumberLongRunningOperation: Partial<TelephoneNumberLongRunningOperation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!telephoneNumberLongRunningOperation || isSerializingDerivedType) { return; }
    serializeEntity(writer, telephoneNumberLongRunningOperation, isSerializingDerivedType)
    writer.writeStringValue("createdDateTime", telephoneNumberLongRunningOperation.createdDateTime);
    writer.writeCollectionOfObjectValues<TelephoneNumberLongRunningOperationDetails>("numbers", telephoneNumberLongRunningOperation.numbers, serializeTelephoneNumberLongRunningOperationDetails);
    writer.writeEnumValue<LongRunningOperationStatus>("status", telephoneNumberLongRunningOperation.status);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TelephoneNumberLongRunningOperationCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTelephoneNumberLongRunningOperationCollectionResponse(writer: SerializationWriter, telephoneNumberLongRunningOperationCollectionResponse: Partial<TelephoneNumberLongRunningOperationCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!telephoneNumberLongRunningOperationCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, telephoneNumberLongRunningOperationCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<TelephoneNumberLongRunningOperation>("value", telephoneNumberLongRunningOperationCollectionResponse.value, serializeTelephoneNumberLongRunningOperation);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TelephoneNumberLongRunningOperationDetails The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTelephoneNumberLongRunningOperationDetails(writer: SerializationWriter, telephoneNumberLongRunningOperationDetails: Partial<TelephoneNumberLongRunningOperationDetails> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!telephoneNumberLongRunningOperationDetails || isSerializingDerivedType) { return; }
    writer.writeStringValue("@odata.type", telephoneNumberLongRunningOperationDetails.odataType);
    writer.writeStringValue("resourceLocation", telephoneNumberLongRunningOperationDetails.resourceLocation);
    writer.writeEnumValue<LongRunningOperationStatus>("status", telephoneNumberLongRunningOperationDetails.status);
    writer.writeStringValue("statusDetail", telephoneNumberLongRunningOperationDetails.statusDetail);
    writer.writeAdditionalData(telephoneNumberLongRunningOperationDetails.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TelephoneNumberManagementRoot The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTelephoneNumberManagementRoot(writer: SerializationWriter, telephoneNumberManagementRoot: Partial<TelephoneNumberManagementRoot> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!telephoneNumberManagementRoot || isSerializingDerivedType) { return; }
    serializeEntity(writer, telephoneNumberManagementRoot, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<NumberAssignment>("numberAssignments", telephoneNumberManagementRoot.numberAssignments, serializeNumberAssignment);
    writer.writeCollectionOfObjectValues<TelephoneNumberLongRunningOperation>("operations", telephoneNumberManagementRoot.operations, serializeTelephoneNumberLongRunningOperation);
}
export interface TeamsAdminRoot extends Entity, Parsable {
    /**
     * Represents a navigation property to the Teams policy assignment object.
     */
    policy?: TeamsPolicyAssignment | null;
    /**
     * Represents a collection of available telephone number management operations.
     */
    telephoneNumberManagement?: TelephoneNumberManagementRoot | null;
    /**
     * Represents the configuration information of users who have accounts hosted on Microsoft Teams.
     */
    userConfigurations?: TeamsUserConfiguration[] | null;
}
export interface TeamsPolicyAssignment extends Entity, Parsable {
    /**
     * Navigation property to the collection of user policy assignments.
     */
    userAssignments?: TeamsPolicyUserAssignment[] | null;
}
export interface TeamsPolicyUserAssignment extends Entity, Parsable {
    /**
     * The unique identifier (GUID) of the policy within the specified policy type.
     */
    policyId?: string | null;
    /**
     * The type of Teams policy assigned or unassigned, such as TeamsMeetingBroadcastPolicy.
     */
    policyType?: string | null;
    /**
     * The unique identifier (GUID) of the user.
     */
    userId?: string | null;
}
export interface TeamsPolicyUserAssignmentCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: TeamsPolicyUserAssignment[] | null;
}
export interface TeamsUserConfiguration extends Entity, Parsable {
    /**
     * The type of the account in the Teams context. The possible values are: user, resourceAccount, guest, sfbOnPremUser, unknown, unknownFutureValue, ineligibleUser. Use the Prefer: include-unknown-enum-members request header to get the following value from this enum evolvable enum: ineligibleUser.
     */
    accountType?: AccountType | null;
    /**
     * The date and time when the user was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    createdDateTime?: Date | null;
    /**
     * Contains the user's effective policy assignments, with each assignment including policyType and policyAssignment details.
     */
    effectivePolicyAssignments?: EffectivePolicyAssignment[] | null;
    /**
     * The Teams features enabled for a given user based on licensing or service plan.
     */
    featureTypes?: string[] | null;
    /**
     * Indicates whether voice capability is enabled.
     */
    isEnterpriseVoiceEnabled?: boolean | null;
    /**
     * The date and time when the user's details were last modified. The system updates this value each time the user's details are changed. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    modifiedDateTime?: Date | null;
    /**
     * Includes both the phone number and its corresponding assignment category. The assignment category can include values such as primary, private, and alternate.
     */
    telephoneNumbers?: AssignedTelephoneNumber[] | null;
    /**
     * The unique identifier of the tenant in Entra to which this user is assigned.
     */
    tenantId?: string | null;
    /**
     * Represents an Entra user account.
     */
    user?: User | null;
    /**
     * The sign-in address of the user.
     */
    userPrincipalName?: string | null;
}
export interface TeamsUserConfigurationCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: TeamsUserConfiguration[] | null;
}
export interface TelephoneNumberLongRunningOperation extends Entity, Parsable {
    /**
     * Date and time when the asynchronous operation was created.
     */
    createdDateTime?: string | null;
    /**
     * Asynchronous operation details.
     */
    numbers?: TelephoneNumberLongRunningOperationDetails[] | null;
    /**
     * The status property
     */
    status?: LongRunningOperationStatus | null;
}
export interface TelephoneNumberLongRunningOperationCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: TelephoneNumberLongRunningOperation[] | null;
}
export interface TelephoneNumberLongRunningOperationDetails extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Location of the asynchronous operation. It includes the operation identifier.
     */
    resourceLocation?: string | null;
    /**
     * status of the asynchronous operation. The possible values are: notStarted, running, succeeded, failed, unknownFutureValue.
     */
    status?: LongRunningOperationStatus | null;
    /**
     * Indicates the asynchronous operation details.
     */
    statusDetail?: string | null;
}
export interface TelephoneNumberManagementRoot extends Entity, Parsable {
    /**
     * Represents a collection of synchronous telephone number management operations.
     */
    numberAssignments?: NumberAssignment[] | null;
    /**
     * Represents a collection of asynchronous telephone number management operations.
     */
    operations?: TelephoneNumberLongRunningOperation[] | null;
}
export const AccountTypeObject = {
    User: "user",
    ResourceAccount: "resourceAccount",
    Guest: "guest",
    SfbOnPremUser: "sfbOnPremUser",
    Unknown: "unknown",
    UnknownFutureValue: "unknownFutureValue",
    IneligibleUser: "ineligibleUser",
} as const;
export const ActivationStateObject = {
    Activated: "activated",
    AssignmentPending: "assignmentPending",
    AssignmentFailed: "assignmentFailed",
    UpdatePending: "updatePending",
    UpdateFailed: "updateFailed",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AssignmentCategoryObject = {
    Primary: "primary",
    Private: "private",
    Alternate: "alternate",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AssignmentStatusObject = {
    Unassigned: "unassigned",
    InternalError: "internalError",
    UserAssigned: "userAssigned",
    ConferenceAssigned: "conferenceAssigned",
    VoiceApplicationAssigned: "voiceApplicationAssigned",
    ThirdPartyAppAssigned: "thirdPartyAppAssigned",
    PolicyAssigned: "policyAssigned",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AssignmentTypeObject = {
    Direct: "direct",
    Group: "group",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const CustomerActionObject = {
    LocationUpdate: "locationUpdate",
    Release: "release",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const NumberCapabilityObject = {
    ConferenceAssignment: "conferenceAssignment",
    VoiceApplicationAssignment: "voiceApplicationAssignment",
    UserAssignment: "userAssignment",
    TeamsPhoneMobile: "teamsPhoneMobile",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const NumberSourceObject = {
    Online: "online",
    OnPremises: "onPremises",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const NumberTypeObject = {
    InternalError: "internalError",
    DirectRouting: "directRouting",
    CallingPlan: "callingPlan",
    OperatorConnect: "operatorConnect",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const PortInStatusObject = {
    Completed: "completed",
    FirmOrderCommitmentAccepted: "firmOrderCommitmentAccepted",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ReverseNumberLookupOptionObject = {
    SkipInternalVoip: "skipInternalVoip",
    UnknownFutureValue: "unknownFutureValue",
} as const;
/* tslint:enable */
/* eslint-enable */
