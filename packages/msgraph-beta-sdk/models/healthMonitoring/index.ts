/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDirectoryObjectFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, deserializeIntoEntity, serializeBaseCollectionPaginationCountResponse, serializeDirectoryObject, serializeEntity, type BaseCollectionPaginationCountResponse, type DirectoryObject, type Entity } from '../index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface Alert extends Entity, Parsable {
    /**
     * The alertType property
     */
    alertType?: AlertType | null;
    /**
     * The category property
     */
    category?: Category | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The documentation property
     */
    documentation?: Documentation | null;
    /**
     * The enrichment property
     */
    enrichment?: Enrichment | null;
    /**
     * The scenario property
     */
    scenario?: Scenario | null;
    /**
     * The signals property
     */
    signals?: Signals | null;
    /**
     * The state property
     */
    state?: AlertState | null;
}
export interface AlertCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Alert[] | null;
}
export interface AlertConfiguration extends Entity, Parsable {
    /**
     * The emailNotificationConfigurations property
     */
    emailNotificationConfigurations?: EmailNotificationConfiguration[] | null;
}
export interface AlertConfigurationCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AlertConfiguration[] | null;
}
export type AlertState = (typeof AlertStateObject)[keyof typeof AlertStateObject];
export type AlertType = (typeof AlertTypeObject)[keyof typeof AlertTypeObject];
export interface ApplicationImpactSummary extends DirectoryObjectImpactSummary, Parsable {
}
export type Category = (typeof CategoryObject)[keyof typeof CategoryObject];
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AlertCollectionResponse}
 */
// @ts-ignore
export function createAlertCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAlertCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AlertConfigurationCollectionResponse}
 */
// @ts-ignore
export function createAlertConfigurationCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAlertConfigurationCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AlertConfiguration}
 */
// @ts-ignore
export function createAlertConfigurationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAlertConfiguration;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Alert}
 */
// @ts-ignore
export function createAlertFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAlert;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ApplicationImpactSummary}
 */
// @ts-ignore
export function createApplicationImpactSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoApplicationImpactSummary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeviceImpactSummary}
 */
// @ts-ignore
export function createDeviceImpactSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeviceImpactSummary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Dictionary}
 */
// @ts-ignore
export function createDictionaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.healthMonitoring.documentation":
                    return deserializeIntoDocumentation;
                case "#microsoft.graph.healthMonitoring.healthMonitoringDictionary":
                    return deserializeIntoHealthMonitoringDictionary;
                case "#microsoft.graph.healthMonitoring.signals":
                    return deserializeIntoSignals;
                case "#microsoft.graph.healthMonitoring.supportingData":
                    return deserializeIntoSupportingData;
            }
        }
    }
    return deserializeIntoDictionary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DirectoryObjectImpactSummary}
 */
// @ts-ignore
export function createDirectoryObjectImpactSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.healthMonitoring.applicationImpactSummary":
                    return deserializeIntoApplicationImpactSummary;
                case "#microsoft.graph.healthMonitoring.deviceImpactSummary":
                    return deserializeIntoDeviceImpactSummary;
                case "#microsoft.graph.healthMonitoring.groupImpactSummary":
                    return deserializeIntoGroupImpactSummary;
                case "#microsoft.graph.healthMonitoring.servicePrincipalImpactSummary":
                    return deserializeIntoServicePrincipalImpactSummary;
                case "#microsoft.graph.healthMonitoring.userImpactSummary":
                    return deserializeIntoUserImpactSummary;
            }
        }
    }
    return deserializeIntoDirectoryObjectImpactSummary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Documentation}
 */
// @ts-ignore
export function createDocumentationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDocumentation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EmailNotificationConfiguration}
 */
// @ts-ignore
export function createEmailNotificationConfigurationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEmailNotificationConfiguration;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Enrichment}
 */
// @ts-ignore
export function createEnrichmentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEnrichment;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GroupImpactSummary}
 */
// @ts-ignore
export function createGroupImpactSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGroupImpactSummary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HealthMonitoringDictionary}
 */
// @ts-ignore
export function createHealthMonitoringDictionaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.healthMonitoring.documentation":
                    return deserializeIntoDocumentation;
                case "#microsoft.graph.healthMonitoring.signals":
                    return deserializeIntoSignals;
                case "#microsoft.graph.healthMonitoring.supportingData":
                    return deserializeIntoSupportingData;
            }
        }
    }
    return deserializeIntoHealthMonitoringDictionary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HealthMonitoringRoot}
 */
// @ts-ignore
export function createHealthMonitoringRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHealthMonitoringRoot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ResourceImpactSummary}
 */
// @ts-ignore
export function createResourceImpactSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.healthMonitoring.applicationImpactSummary":
                    return deserializeIntoApplicationImpactSummary;
                case "#microsoft.graph.healthMonitoring.deviceImpactSummary":
                    return deserializeIntoDeviceImpactSummary;
                case "#microsoft.graph.healthMonitoring.directoryObjectImpactSummary":
                    return deserializeIntoDirectoryObjectImpactSummary;
                case "#microsoft.graph.healthMonitoring.groupImpactSummary":
                    return deserializeIntoGroupImpactSummary;
                case "#microsoft.graph.healthMonitoring.servicePrincipalImpactSummary":
                    return deserializeIntoServicePrincipalImpactSummary;
                case "#microsoft.graph.healthMonitoring.userImpactSummary":
                    return deserializeIntoUserImpactSummary;
            }
        }
    }
    return deserializeIntoResourceImpactSummary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServicePrincipalImpactSummary}
 */
// @ts-ignore
export function createServicePrincipalImpactSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServicePrincipalImpactSummary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Signals}
 */
// @ts-ignore
export function createSignalsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSignals;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SupportingData}
 */
// @ts-ignore
export function createSupportingDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSupportingData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserImpactSummary}
 */
// @ts-ignore
export function createUserImpactSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserImpactSummary;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlert(alert: Partial<Alert> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(alert),
        "alertType": n => { alert.alertType = n.getEnumValue<AlertType>(AlertTypeObject); },
        "category": n => { alert.category = n.getEnumValue<Category>(CategoryObject); },
        "createdDateTime": n => { alert.createdDateTime = n.getDateValue(); },
        "documentation": n => { alert.documentation = n.getObjectValue<Documentation>(createDocumentationFromDiscriminatorValue); },
        "enrichment": n => { alert.enrichment = n.getObjectValue<Enrichment>(createEnrichmentFromDiscriminatorValue); },
        "scenario": n => { alert.scenario = n.getEnumValue<Scenario>(ScenarioObject); },
        "signals": n => { alert.signals = n.getObjectValue<Signals>(createSignalsFromDiscriminatorValue); },
        "state": n => { alert.state = n.getEnumValue<AlertState>(AlertStateObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlertCollectionResponse(alertCollectionResponse: Partial<AlertCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(alertCollectionResponse),
        "value": n => { alertCollectionResponse.value = n.getCollectionOfObjectValues<Alert>(createAlertFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlertConfiguration(alertConfiguration: Partial<AlertConfiguration> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(alertConfiguration),
        "emailNotificationConfigurations": n => { alertConfiguration.emailNotificationConfigurations = n.getCollectionOfObjectValues<EmailNotificationConfiguration>(createEmailNotificationConfigurationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlertConfigurationCollectionResponse(alertConfigurationCollectionResponse: Partial<AlertConfigurationCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(alertConfigurationCollectionResponse),
        "value": n => { alertConfigurationCollectionResponse.value = n.getCollectionOfObjectValues<AlertConfiguration>(createAlertConfigurationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoApplicationImpactSummary(applicationImpactSummary: Partial<ApplicationImpactSummary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDirectoryObjectImpactSummary(applicationImpactSummary),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeviceImpactSummary(deviceImpactSummary: Partial<DeviceImpactSummary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDirectoryObjectImpactSummary(deviceImpactSummary),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDictionary(dictionary: Partial<Dictionary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { dictionary.backingStoreEnabled = true; },
        "@odata.type": n => { dictionary.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDirectoryObjectImpactSummary(directoryObjectImpactSummary: Partial<DirectoryObjectImpactSummary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoResourceImpactSummary(directoryObjectImpactSummary),
        "resourceSampling": n => { directoryObjectImpactSummary.resourceSampling = n.getCollectionOfObjectValues<DirectoryObject>(createDirectoryObjectFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDocumentation(documentation: Partial<Documentation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoHealthMonitoringDictionary(documentation),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEmailNotificationConfiguration(emailNotificationConfiguration: Partial<EmailNotificationConfiguration> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { emailNotificationConfiguration.backingStoreEnabled = true; },
        "groupId": n => { emailNotificationConfiguration.groupId = n.getStringValue(); },
        "isEnabled": n => { emailNotificationConfiguration.isEnabled = n.getBooleanValue(); },
        "@odata.type": n => { emailNotificationConfiguration.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEnrichment(enrichment: Partial<Enrichment> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { enrichment.backingStoreEnabled = true; },
        "impacts": n => { enrichment.impacts = n.getCollectionOfObjectValues<ResourceImpactSummary>(createResourceImpactSummaryFromDiscriminatorValue); },
        "@odata.type": n => { enrichment.odataType = n.getStringValue(); },
        "state": n => { enrichment.state = n.getEnumValue<EnrichmentState>(EnrichmentStateObject); },
        "supportingData": n => { enrichment.supportingData = n.getObjectValue<SupportingData>(createSupportingDataFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGroupImpactSummary(groupImpactSummary: Partial<GroupImpactSummary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDirectoryObjectImpactSummary(groupImpactSummary),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHealthMonitoringDictionary(healthMonitoringDictionary: Partial<HealthMonitoringDictionary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDictionary(healthMonitoringDictionary),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHealthMonitoringRoot(healthMonitoringRoot: Partial<HealthMonitoringRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(healthMonitoringRoot),
        "alertConfigurations": n => { healthMonitoringRoot.alertConfigurations = n.getCollectionOfObjectValues<AlertConfiguration>(createAlertConfigurationFromDiscriminatorValue); },
        "alerts": n => { healthMonitoringRoot.alerts = n.getCollectionOfObjectValues<Alert>(createAlertFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoResourceImpactSummary(resourceImpactSummary: Partial<ResourceImpactSummary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { resourceImpactSummary.backingStoreEnabled = true; },
        "impactedCount": n => { resourceImpactSummary.impactedCount = n.getStringValue(); },
        "impactedCountLimitExceeded": n => { resourceImpactSummary.impactedCountLimitExceeded = n.getBooleanValue(); },
        "@odata.type": n => { resourceImpactSummary.odataType = n.getStringValue(); },
        "resourceType": n => { resourceImpactSummary.resourceType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServicePrincipalImpactSummary(servicePrincipalImpactSummary: Partial<ServicePrincipalImpactSummary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDirectoryObjectImpactSummary(servicePrincipalImpactSummary),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSignals(signals: Partial<Signals> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoHealthMonitoringDictionary(signals),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSupportingData(supportingData: Partial<SupportingData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoHealthMonitoringDictionary(supportingData),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserImpactSummary(userImpactSummary: Partial<UserImpactSummary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDirectoryObjectImpactSummary(userImpactSummary),
    }
}
export interface DeviceImpactSummary extends DirectoryObjectImpactSummary, Parsable {
}
export interface Dictionary extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface DirectoryObjectImpactSummary extends Parsable, ResourceImpactSummary {
    /**
     * The resourceSampling property
     */
    resourceSampling?: DirectoryObject[] | null;
}
export interface Documentation extends HealthMonitoringDictionary, Parsable {
}
export interface EmailNotificationConfiguration extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The groupId property
     */
    groupId?: string | null;
    /**
     * The isEnabled property
     */
    isEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface Enrichment extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The impacts property
     */
    impacts?: ResourceImpactSummary[] | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The state property
     */
    state?: EnrichmentState | null;
    /**
     * The supportingData property
     */
    supportingData?: SupportingData | null;
}
export type EnrichmentState = (typeof EnrichmentStateObject)[keyof typeof EnrichmentStateObject];
export interface GroupImpactSummary extends DirectoryObjectImpactSummary, Parsable {
}
export interface HealthMonitoringDictionary extends Dictionary, Parsable {
}
export interface HealthMonitoringRoot extends Entity, Parsable {
    /**
     * The alertConfigurations property
     */
    alertConfigurations?: AlertConfiguration[] | null;
    /**
     * The alerts property
     */
    alerts?: Alert[] | null;
}
export interface ResourceImpactSummary extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The impactedCount property
     */
    impactedCount?: string | null;
    /**
     * The impactedCountLimitExceeded property
     */
    impactedCountLimitExceeded?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The resourceType property
     */
    resourceType?: string | null;
}
export type Scenario = (typeof ScenarioObject)[keyof typeof ScenarioObject];
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlert(writer: SerializationWriter, alert: Partial<Alert> | undefined | null = {}) : void {
    if (alert) {
        serializeEntity(writer, alert)
        writer.writeEnumValue<AlertType>("alertType", alert.alertType);
        writer.writeEnumValue<Category>("category", alert.category);
        writer.writeDateValue("createdDateTime", alert.createdDateTime);
        writer.writeObjectValue<Documentation>("documentation", alert.documentation, serializeDocumentation);
        writer.writeObjectValue<Enrichment>("enrichment", alert.enrichment, serializeEnrichment);
        writer.writeEnumValue<Scenario>("scenario", alert.scenario);
        writer.writeObjectValue<Signals>("signals", alert.signals, serializeSignals);
        writer.writeEnumValue<AlertState>("state", alert.state);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlertCollectionResponse(writer: SerializationWriter, alertCollectionResponse: Partial<AlertCollectionResponse> | undefined | null = {}) : void {
    if (alertCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, alertCollectionResponse)
        writer.writeCollectionOfObjectValues<Alert>("value", alertCollectionResponse.value, serializeAlert);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlertConfiguration(writer: SerializationWriter, alertConfiguration: Partial<AlertConfiguration> | undefined | null = {}) : void {
    if (alertConfiguration) {
        serializeEntity(writer, alertConfiguration)
        writer.writeCollectionOfObjectValues<EmailNotificationConfiguration>("emailNotificationConfigurations", alertConfiguration.emailNotificationConfigurations, serializeEmailNotificationConfiguration);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlertConfigurationCollectionResponse(writer: SerializationWriter, alertConfigurationCollectionResponse: Partial<AlertConfigurationCollectionResponse> | undefined | null = {}) : void {
    if (alertConfigurationCollectionResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, alertConfigurationCollectionResponse)
        writer.writeCollectionOfObjectValues<AlertConfiguration>("value", alertConfigurationCollectionResponse.value, serializeAlertConfiguration);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeApplicationImpactSummary(writer: SerializationWriter, applicationImpactSummary: Partial<ApplicationImpactSummary> | undefined | null = {}) : void {
    if (applicationImpactSummary) {
        serializeDirectoryObjectImpactSummary(writer, applicationImpactSummary)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeviceImpactSummary(writer: SerializationWriter, deviceImpactSummary: Partial<DeviceImpactSummary> | undefined | null = {}) : void {
    if (deviceImpactSummary) {
        serializeDirectoryObjectImpactSummary(writer, deviceImpactSummary)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDictionary(writer: SerializationWriter, dictionary: Partial<Dictionary> | undefined | null = {}) : void {
    if (dictionary) {
        writer.writeStringValue("@odata.type", dictionary.odataType);
        writer.writeAdditionalData(dictionary.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDirectoryObjectImpactSummary(writer: SerializationWriter, directoryObjectImpactSummary: Partial<DirectoryObjectImpactSummary> | undefined | null = {}) : void {
    if (directoryObjectImpactSummary) {
        serializeResourceImpactSummary(writer, directoryObjectImpactSummary)
        writer.writeCollectionOfObjectValues<DirectoryObject>("resourceSampling", directoryObjectImpactSummary.resourceSampling, serializeDirectoryObject);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDocumentation(writer: SerializationWriter, documentation: Partial<Documentation> | undefined | null = {}) : void {
    if (documentation) {
        serializeHealthMonitoringDictionary(writer, documentation)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEmailNotificationConfiguration(writer: SerializationWriter, emailNotificationConfiguration: Partial<EmailNotificationConfiguration> | undefined | null = {}) : void {
    if (emailNotificationConfiguration) {
        writer.writeStringValue("groupId", emailNotificationConfiguration.groupId);
        writer.writeBooleanValue("isEnabled", emailNotificationConfiguration.isEnabled);
        writer.writeStringValue("@odata.type", emailNotificationConfiguration.odataType);
        writer.writeAdditionalData(emailNotificationConfiguration.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEnrichment(writer: SerializationWriter, enrichment: Partial<Enrichment> | undefined | null = {}) : void {
    if (enrichment) {
        writer.writeCollectionOfObjectValues<ResourceImpactSummary>("impacts", enrichment.impacts, serializeResourceImpactSummary);
        writer.writeStringValue("@odata.type", enrichment.odataType);
        writer.writeEnumValue<EnrichmentState>("state", enrichment.state);
        writer.writeObjectValue<SupportingData>("supportingData", enrichment.supportingData, serializeSupportingData);
        writer.writeAdditionalData(enrichment.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGroupImpactSummary(writer: SerializationWriter, groupImpactSummary: Partial<GroupImpactSummary> | undefined | null = {}) : void {
    if (groupImpactSummary) {
        serializeDirectoryObjectImpactSummary(writer, groupImpactSummary)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHealthMonitoringDictionary(writer: SerializationWriter, healthMonitoringDictionary: Partial<HealthMonitoringDictionary> | undefined | null = {}) : void {
    if (healthMonitoringDictionary) {
        serializeDictionary(writer, healthMonitoringDictionary)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHealthMonitoringRoot(writer: SerializationWriter, healthMonitoringRoot: Partial<HealthMonitoringRoot> | undefined | null = {}) : void {
    if (healthMonitoringRoot) {
        serializeEntity(writer, healthMonitoringRoot)
        writer.writeCollectionOfObjectValues<AlertConfiguration>("alertConfigurations", healthMonitoringRoot.alertConfigurations, serializeAlertConfiguration);
        writer.writeCollectionOfObjectValues<Alert>("alerts", healthMonitoringRoot.alerts, serializeAlert);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeResourceImpactSummary(writer: SerializationWriter, resourceImpactSummary: Partial<ResourceImpactSummary> | undefined | null = {}) : void {
    if (resourceImpactSummary) {
        writer.writeStringValue("impactedCount", resourceImpactSummary.impactedCount);
        writer.writeBooleanValue("impactedCountLimitExceeded", resourceImpactSummary.impactedCountLimitExceeded);
        writer.writeStringValue("@odata.type", resourceImpactSummary.odataType);
        writer.writeStringValue("resourceType", resourceImpactSummary.resourceType);
        writer.writeAdditionalData(resourceImpactSummary.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServicePrincipalImpactSummary(writer: SerializationWriter, servicePrincipalImpactSummary: Partial<ServicePrincipalImpactSummary> | undefined | null = {}) : void {
    if (servicePrincipalImpactSummary) {
        serializeDirectoryObjectImpactSummary(writer, servicePrincipalImpactSummary)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSignals(writer: SerializationWriter, signals: Partial<Signals> | undefined | null = {}) : void {
    if (signals) {
        serializeHealthMonitoringDictionary(writer, signals)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSupportingData(writer: SerializationWriter, supportingData: Partial<SupportingData> | undefined | null = {}) : void {
    if (supportingData) {
        serializeHealthMonitoringDictionary(writer, supportingData)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserImpactSummary(writer: SerializationWriter, userImpactSummary: Partial<UserImpactSummary> | undefined | null = {}) : void {
    if (userImpactSummary) {
        serializeDirectoryObjectImpactSummary(writer, userImpactSummary)
    }
}
export interface ServicePrincipalImpactSummary extends DirectoryObjectImpactSummary, Parsable {
}
export interface Signals extends HealthMonitoringDictionary, Parsable {
}
export interface SupportingData extends HealthMonitoringDictionary, Parsable {
}
export interface UserImpactSummary extends DirectoryObjectImpactSummary, Parsable {
}
export const AlertStateObject = {
    Active: "active",
    Resolved: "resolved",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AlertTypeObject = {
    Unknown: "unknown",
    MfaSignInFailure: "mfaSignInFailure",
    ManagedDeviceSignInFailure: "managedDeviceSignInFailure",
    CompliantDeviceSignInFailure: "compliantDeviceSignInFailure",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const CategoryObject = {
    Unknown: "unknown",
    Authentication: "authentication",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const EnrichmentStateObject = {
    None: "none",
    InProgress: "inProgress",
    Enriched: "enriched",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ScenarioObject = {
    Unknown: "unknown",
    Mfa: "mfa",
    Devices: "devices",
    UnknownFutureValue: "unknownFutureValue",
} as const;
/* tslint:enable */
/* eslint-enable */
