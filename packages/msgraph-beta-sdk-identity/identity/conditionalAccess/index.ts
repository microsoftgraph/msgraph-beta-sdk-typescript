/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { AuthenticationContextClassReferencesRequestBuilderNavigationMetadata, AuthenticationContextClassReferencesRequestBuilderRequestsMetadata, AuthenticationContextClassReferencesRequestBuilderUriTemplate, type AuthenticationContextClassReferencesRequestBuilder } from './authenticationContextClassReferences/';
import { AuthenticationStrengthRequestBuilderNavigationMetadata, AuthenticationStrengthRequestBuilderRequestsMetadata, AuthenticationStrengthRequestBuilderUriTemplate, type AuthenticationStrengthRequestBuilder } from './authenticationStrength/';
import { AuthenticationStrengthsRequestBuilderNavigationMetadata, AuthenticationStrengthsRequestBuilderRequestsMetadata, AuthenticationStrengthsRequestBuilderUriTemplate, type AuthenticationStrengthsRequestBuilder } from './authenticationStrengths/';
import { NamedLocationsRequestBuilderNavigationMetadata, NamedLocationsRequestBuilderRequestsMetadata, NamedLocationsRequestBuilderUriTemplate, type NamedLocationsRequestBuilder } from './namedLocations/';
import { PoliciesRequestBuilderNavigationMetadata, PoliciesRequestBuilderRequestsMetadata, PoliciesRequestBuilderUriTemplate, type PoliciesRequestBuilder } from './policies/';
import { TemplatesRequestBuilderNavigationMetadata, TemplatesRequestBuilderRequestsMetadata, TemplatesRequestBuilderUriTemplate, type TemplatesRequestBuilder } from './templates/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /identity/conditionalAccess
 */
export interface ConditionalAccessRequestBuilder extends BaseRequestBuilder<ConditionalAccessRequestBuilder> {
    /**
     * Provides operations to manage the authenticationContextClassReferences property of the microsoft.graph.conditionalAccessRoot entity.
     */
    get authenticationContextClassReferences(): AuthenticationContextClassReferencesRequestBuilder;
    /**
     * Provides operations to manage the authenticationStrength property of the microsoft.graph.conditionalAccessRoot entity.
     */
    get authenticationStrength(): AuthenticationStrengthRequestBuilder;
    /**
     * Provides operations to manage the authenticationStrengths property of the microsoft.graph.conditionalAccessRoot entity.
     */
    get authenticationStrengths(): AuthenticationStrengthsRequestBuilder;
    /**
     * Provides operations to manage the namedLocations property of the microsoft.graph.conditionalAccessRoot entity.
     */
    get namedLocations(): NamedLocationsRequestBuilder;
    /**
     * Provides operations to manage the policies property of the microsoft.graph.conditionalAccessRoot entity.
     */
    get policies(): PoliciesRequestBuilder;
    /**
     * Provides operations to manage the templates property of the microsoft.graph.conditionalAccessRoot entity.
     */
    get templates(): TemplatesRequestBuilder;
}
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ConditionalAccessRequestBuilderNavigationMetadata: Record<Exclude<keyof ConditionalAccessRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    authenticationContextClassReferences: {
        uriTemplate: AuthenticationContextClassReferencesRequestBuilderUriTemplate,
        requestsMetadata: AuthenticationContextClassReferencesRequestBuilderRequestsMetadata,
        navigationMetadata: AuthenticationContextClassReferencesRequestBuilderNavigationMetadata,
    },
    authenticationStrength: {
        uriTemplate: AuthenticationStrengthRequestBuilderUriTemplate,
        requestsMetadata: AuthenticationStrengthRequestBuilderRequestsMetadata,
        navigationMetadata: AuthenticationStrengthRequestBuilderNavigationMetadata,
    },
    authenticationStrengths: {
        uriTemplate: AuthenticationStrengthsRequestBuilderUriTemplate,
        requestsMetadata: AuthenticationStrengthsRequestBuilderRequestsMetadata,
        navigationMetadata: AuthenticationStrengthsRequestBuilderNavigationMetadata,
    },
    namedLocations: {
        uriTemplate: NamedLocationsRequestBuilderUriTemplate,
        requestsMetadata: NamedLocationsRequestBuilderRequestsMetadata,
        navigationMetadata: NamedLocationsRequestBuilderNavigationMetadata,
    },
    policies: {
        uriTemplate: PoliciesRequestBuilderUriTemplate,
        requestsMetadata: PoliciesRequestBuilderRequestsMetadata,
        navigationMetadata: PoliciesRequestBuilderNavigationMetadata,
    },
    templates: {
        uriTemplate: TemplatesRequestBuilderUriTemplate,
        requestsMetadata: TemplatesRequestBuilderRequestsMetadata,
        navigationMetadata: TemplatesRequestBuilderNavigationMetadata,
    },
};
/**
 * Uri template for the request builder.
 */
export const ConditionalAccessRequestBuilderUriTemplate = "{+baseurl}/identity/conditionalAccess";
/* tslint:enable */
/* eslint-enable */
