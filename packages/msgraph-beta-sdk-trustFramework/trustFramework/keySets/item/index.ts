/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createTrustFrameworkKeySetFromDiscriminatorValue, serializeTrustFrameworkKeySet, type TrustFrameworkKeySet } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { GenerateKeyRequestBuilderRequestsMetadata, GenerateKeyRequestBuilderUriTemplate, type GenerateKeyRequestBuilder } from './generateKey/';
import { GetActiveKeyRequestBuilderRequestsMetadata, GetActiveKeyRequestBuilderUriTemplate, type GetActiveKeyRequestBuilder } from './getActiveKey/';
import { type UploadCertificateRequestBuilder, UploadCertificateRequestBuilderRequestsMetadata, UploadCertificateRequestBuilderUriTemplate } from './uploadCertificate/';
import { type UploadPkcs12RequestBuilder, UploadPkcs12RequestBuilderRequestsMetadata, UploadPkcs12RequestBuilderUriTemplate } from './uploadPkcs12/';
import { type UploadSecretRequestBuilder, UploadSecretRequestBuilderRequestsMetadata, UploadSecretRequestBuilderUriTemplate } from './uploadSecret/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the keySets property of the microsoft.graph.trustFramework entity.
 */
export interface TrustFrameworkKeySetItemRequestBuilder extends BaseRequestBuilder<TrustFrameworkKeySetItemRequestBuilder> {
    /**
     * Provides operations to call the generateKey method.
     */
    get generateKey(): GenerateKeyRequestBuilder;
    /**
     * Provides operations to call the getActiveKey method.
     */
    get getActiveKey(): GetActiveKeyRequestBuilder;
    /**
     * Provides operations to call the uploadCertificate method.
     */
    get uploadCertificate(): UploadCertificateRequestBuilder;
    /**
     * Provides operations to call the uploadPkcs12 method.
     */
    get uploadPkcs12(): UploadPkcs12RequestBuilder;
    /**
     * Provides operations to call the uploadSecret method.
     */
    get uploadSecret(): UploadSecretRequestBuilder;
    /**
     * Delete a trustFrameworkKeySet.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @see {@link https://learn.microsoft.com/graph/api/trustframeworkkeyset-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Retrieve the properties and associations for a Trustframeworkkeyset.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of TrustFrameworkKeySet
     * @see {@link https://learn.microsoft.com/graph/api/trustframeworkkeyset-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<TrustFrameworkKeySetItemRequestBuilderGetQueryParameters> | undefined) : Promise<TrustFrameworkKeySet | undefined>;
    /**
     * Update the properties of a trustFrameworkKeyset. This operation will replace the content of an existing keyset. Specifying the ID in the request payload is optional.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of TrustFrameworkKeySet
     * @see {@link https://learn.microsoft.com/graph/api/trustframeworkkeyset-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: TrustFrameworkKeySet, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<TrustFrameworkKeySet | undefined>;
    /**
     * Delete a trustFrameworkKeySet.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieve the properties and associations for a Trustframeworkkeyset.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<TrustFrameworkKeySetItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of a trustFrameworkKeyset. This operation will replace the content of an existing keyset. Specifying the ID in the request payload is optional.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: TrustFrameworkKeySet, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve the properties and associations for a Trustframeworkkeyset.
 */
export interface TrustFrameworkKeySetItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const TrustFrameworkKeySetItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const TrustFrameworkKeySetItemRequestBuilderNavigationMetadata: Record<Exclude<keyof TrustFrameworkKeySetItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    generateKey: {
        uriTemplate: GenerateKeyRequestBuilderUriTemplate,
        requestsMetadata: GenerateKeyRequestBuilderRequestsMetadata,
    },
    getActiveKey: {
        uriTemplate: GetActiveKeyRequestBuilderUriTemplate,
        requestsMetadata: GetActiveKeyRequestBuilderRequestsMetadata,
    },
    uploadCertificate: {
        uriTemplate: UploadCertificateRequestBuilderUriTemplate,
        requestsMetadata: UploadCertificateRequestBuilderRequestsMetadata,
    },
    uploadPkcs12: {
        uriTemplate: UploadPkcs12RequestBuilderUriTemplate,
        requestsMetadata: UploadPkcs12RequestBuilderRequestsMetadata,
    },
    uploadSecret: {
        uriTemplate: UploadSecretRequestBuilderUriTemplate,
        requestsMetadata: UploadSecretRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const TrustFrameworkKeySetItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createTrustFrameworkKeySetFromDiscriminatorValue,
        queryParametersMapper: TrustFrameworkKeySetItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createTrustFrameworkKeySetFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeTrustFrameworkKeySet,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const TrustFrameworkKeySetItemRequestBuilderUriTemplate = "{+baseurl}/trustFramework/keySets/{trustFrameworkKeySet%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
