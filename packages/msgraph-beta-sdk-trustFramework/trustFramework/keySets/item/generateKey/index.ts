/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createTrustFrameworkKeyFromDiscriminatorValue, serializeTrustFrameworkKey, type TrustFrameworkKey } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a generateKeyPostRequestBody
 */
export function createGenerateKeyPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGenerateKeyPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoGenerateKeyPostRequestBody(generateKeyPostRequestBody: Partial<GenerateKeyPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { generateKeyPostRequestBody.backingStoreEnabled = true; },
        "exp": n => { generateKeyPostRequestBody.exp = n.getNumberValue(); },
        "kty": n => { generateKeyPostRequestBody.kty = n.getStringValue(); },
        "nbf": n => { generateKeyPostRequestBody.nbf = n.getNumberValue(); },
        "use": n => { generateKeyPostRequestBody.use = n.getStringValue(); },
    }
}
export interface GenerateKeyPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The exp property
     */
    exp?: number;
    /**
     * The kty property
     */
    kty?: string;
    /**
     * The nbf property
     */
    nbf?: number;
    /**
     * The use property
     */
    use?: string;
}
/**
 * Provides operations to call the generateKey method.
 */
export interface GenerateKeyRequestBuilder extends BaseRequestBuilder<GenerateKeyRequestBuilder> {
    /**
     * Generate a trustFrameworkKey and a secret automatically in the trustFrameworkKeyset. The caller doesn't have to provide a secret.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of TrustFrameworkKey
     * @see {@link https://learn.microsoft.com/graph/api/trustframeworkkeyset-generatekey?view=graph-rest-1.0|Find more info here}
     */
     post(body: GenerateKeyPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<TrustFrameworkKey | undefined>;
    /**
     * Generate a trustFrameworkKey and a secret automatically in the trustFrameworkKeyset. The caller doesn't have to provide a secret.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: GenerateKeyPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeGenerateKeyPostRequestBody(writer: SerializationWriter, generateKeyPostRequestBody: Partial<GenerateKeyPostRequestBody> | undefined = {}) : void {
    writer.writeNumberValue("exp", generateKeyPostRequestBody.exp);
    writer.writeStringValue("kty", generateKeyPostRequestBody.kty);
    writer.writeNumberValue("nbf", generateKeyPostRequestBody.nbf);
    writer.writeStringValue("use", generateKeyPostRequestBody.use);
    writer.writeAdditionalData(generateKeyPostRequestBody.additionalData);
}
/**
 * Metadata for all the requests in the request builder.
 */
export const GenerateKeyRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createTrustFrameworkKeyFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeGenerateKeyPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const GenerateKeyRequestBuilderUriTemplate = "{+baseurl}/trustFramework/keySets/{trustFrameworkKeySet%2Did}/generateKey";
/* tslint:enable */
/* eslint-enable */
