/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createWorkbookCommentFromDiscriminatorValue, serializeWorkbookComment, type WorkbookComment } from '@microsoft/msgraph-beta-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
// @ts-ignore
import { RepliesRequestBuilderNavigationMetadata, RepliesRequestBuilderRequestsMetadata, type RepliesRequestBuilder } from './replies/';
// @ts-ignore
import { TaskRequestBuilderNavigationMetadata, TaskRequestBuilderRequestsMetadata, type TaskRequestBuilder } from './task/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the comment property of the microsoft.graph.workbookDocumentTask entity.
 */
export interface CommentRequestBuilder extends BaseRequestBuilder<CommentRequestBuilder> {
    /**
     * Provides operations to manage the replies property of the microsoft.graph.workbookComment entity.
     */
    get replies(): RepliesRequestBuilder;
    /**
     * Provides operations to manage the task property of the microsoft.graph.workbookComment entity.
     */
    get task(): TaskRequestBuilder;
    /**
     * Delete navigation property comment for drives
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The comment that the task is associated with.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WorkbookComment>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<CommentRequestBuilderGetQueryParameters> | undefined) : Promise<WorkbookComment | undefined>;
    /**
     * Update the navigation property comment in drives
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WorkbookComment>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: WorkbookComment, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WorkbookComment | undefined>;
    /**
     * Delete navigation property comment for drives
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The comment that the task is associated with.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<CommentRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property comment in drives
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: WorkbookComment, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The comment that the task is associated with.
 */
export interface CommentRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const CommentRequestBuilderUriTemplate = "{+baseurl}/drives/{drive%2Did}/items/{driveItem%2Did}/workbook/worksheets/{workbookWorksheet%2Did}/tasks/{workbookDocumentTask%2Did}/comment{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const CommentRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const CommentRequestBuilderNavigationMetadata: Record<Exclude<keyof CommentRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    replies: {
        requestsMetadata: RepliesRequestBuilderRequestsMetadata,
        navigationMetadata: RepliesRequestBuilderNavigationMetadata,
    },
    task: {
        requestsMetadata: TaskRequestBuilderRequestsMetadata,
        navigationMetadata: TaskRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const CommentRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: CommentRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: CommentRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWorkbookCommentFromDiscriminatorValue,
        queryParametersMapper: CommentRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: CommentRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWorkbookCommentFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeWorkbookComment,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
