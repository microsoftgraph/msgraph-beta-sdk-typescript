/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createOnPremisesAgentGroupCollectionResponseFromDiscriminatorValue, type OnPremisesAgentGroupCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { OnPremisesAgentGroupItemRequestBuilderNavigationMetadata, type OnPremisesAgentGroupItemRequestBuilder } from './item/';
import { RefRequestBuilderRequestsMetadata, type RefRequestBuilder } from './ref/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the agentGroups property of the microsoft.graph.onPremisesAgent entity.
 */
export interface AgentGroupsRequestBuilder extends BaseRequestBuilder<AgentGroupsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the collection of onPremisesPublishingProfile entities.
     */
    get ref(): RefRequestBuilder;
    /**
     * Gets an item from the github.com/microsoftgraph/msgraph-sdk-typescript/.onPremisesPublishingProfiles.item.agents.item.agentGroups.item collection
     * @param onPremisesAgentGroupId The unique identifier of onPremisesAgentGroup
     * @returns {OnPremisesAgentGroupItemRequestBuilder}
     */
     byOnPremisesAgentGroupId(onPremisesAgentGroupId: string) : OnPremisesAgentGroupItemRequestBuilder;
    /**
     * List of onPremisesAgentGroups that an onPremisesAgent is assigned to. Read-only. Nullable.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OnPremisesAgentGroupCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<AgentGroupsRequestBuilderGetQueryParameters> | undefined) : Promise<OnPremisesAgentGroupCollectionResponse | undefined>;
    /**
     * List of onPremisesAgentGroups that an onPremisesAgent is assigned to. Read-only. Nullable.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AgentGroupsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * List of onPremisesAgentGroups that an onPremisesAgent is assigned to. Read-only. Nullable.
 */
export interface AgentGroupsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const AgentGroupsRequestBuilderUriTemplate = "{+baseurl}/onPremisesPublishingProfiles/{onPremisesPublishingProfile%2Did}/agents/{onPremisesAgent%2Did}/agentGroups{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AgentGroupsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AgentGroupsRequestBuilderNavigationMetadata: Record<Exclude<keyof AgentGroupsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byOnPremisesAgentGroupId: {
        navigationMetadata: OnPremisesAgentGroupItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["onPremisesAgentGroup%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    ref: {
        requestsMetadata: RefRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AgentGroupsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: AgentGroupsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createOnPremisesAgentGroupCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: AgentGroupsRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
