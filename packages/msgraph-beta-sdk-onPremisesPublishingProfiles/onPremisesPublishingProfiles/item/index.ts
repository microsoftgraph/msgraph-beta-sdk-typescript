/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createOnPremisesPublishingProfileFromDiscriminatorValue, serializeOnPremisesPublishingProfile, type OnPremisesPublishingProfile } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { AgentGroupsRequestBuilderNavigationMetadata, AgentGroupsRequestBuilderRequestsMetadata, type AgentGroupsRequestBuilder } from './agentGroups/index.js';
// @ts-ignore
import { AgentsRequestBuilderNavigationMetadata, AgentsRequestBuilderRequestsMetadata, type AgentsRequestBuilder } from './agents/index.js';
// @ts-ignore
import { ApplicationSegmentsRequestBuilderNavigationMetadata, ApplicationSegmentsRequestBuilderRequestsMetadata, type ApplicationSegmentsRequestBuilder } from './applicationSegments/index.js';
// @ts-ignore
import { ConnectorGroupsRequestBuilderNavigationMetadata, ConnectorGroupsRequestBuilderRequestsMetadata, type ConnectorGroupsRequestBuilder } from './connectorGroups/index.js';
// @ts-ignore
import { ConnectorsRequestBuilderNavigationMetadata, ConnectorsRequestBuilderRequestsMetadata, type ConnectorsRequestBuilder } from './connectors/index.js';
// @ts-ignore
import { PublishedResourcesRequestBuilderNavigationMetadata, PublishedResourcesRequestBuilderRequestsMetadata, type PublishedResourcesRequestBuilder } from './publishedResources/index.js';
// @ts-ignore
import { SensorsRequestBuilderNavigationMetadata, SensorsRequestBuilderRequestsMetadata, type SensorsRequestBuilder } from './sensors/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the collection of onPremisesPublishingProfile entities.
 */
export interface OnPremisesPublishingProfileItemRequestBuilder extends BaseRequestBuilder<OnPremisesPublishingProfileItemRequestBuilder> {
    /**
     * Provides operations to manage the agentGroups property of the microsoft.graph.onPremisesPublishingProfile entity.
     */
    get agentGroups(): AgentGroupsRequestBuilder;
    /**
     * Provides operations to manage the agents property of the microsoft.graph.onPremisesPublishingProfile entity.
     */
    get agents(): AgentsRequestBuilder;
    /**
     * Provides operations to manage the applicationSegments property of the microsoft.graph.onPremisesPublishingProfile entity.
     */
    get applicationSegments(): ApplicationSegmentsRequestBuilder;
    /**
     * Provides operations to manage the connectorGroups property of the microsoft.graph.onPremisesPublishingProfile entity.
     */
    get connectorGroups(): ConnectorGroupsRequestBuilder;
    /**
     * Provides operations to manage the connectors property of the microsoft.graph.onPremisesPublishingProfile entity.
     */
    get connectors(): ConnectorsRequestBuilder;
    /**
     * Provides operations to manage the publishedResources property of the microsoft.graph.onPremisesPublishingProfile entity.
     */
    get publishedResources(): PublishedResourcesRequestBuilder;
    /**
     * Provides operations to manage the sensors property of the microsoft.graph.onPremisesPublishingProfile entity.
     */
    get sensors(): SensorsRequestBuilder;
    /**
     * Delete entity from onPremisesPublishingProfiles
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get entity from onPremisesPublishingProfiles by key
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OnPremisesPublishingProfile>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<OnPremisesPublishingProfileItemRequestBuilderGetQueryParameters> | undefined) : Promise<OnPremisesPublishingProfile | undefined>;
    /**
     * Update entity in onPremisesPublishingProfiles
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OnPremisesPublishingProfile>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: OnPremisesPublishingProfile, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<OnPremisesPublishingProfile | undefined>;
    /**
     * Delete entity from onPremisesPublishingProfiles
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get entity from onPremisesPublishingProfiles by key
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<OnPremisesPublishingProfileItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update entity in onPremisesPublishingProfiles
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: OnPremisesPublishingProfile, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get entity from onPremisesPublishingProfiles by key
 */
export interface OnPremisesPublishingProfileItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const OnPremisesPublishingProfileItemRequestBuilderUriTemplate = "{+baseurl}/onPremisesPublishingProfiles/{onPremisesPublishingProfile%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const OnPremisesPublishingProfileItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const OnPremisesPublishingProfileItemRequestBuilderNavigationMetadata: Record<Exclude<keyof OnPremisesPublishingProfileItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    agentGroups: {
        requestsMetadata: AgentGroupsRequestBuilderRequestsMetadata,
        navigationMetadata: AgentGroupsRequestBuilderNavigationMetadata,
    },
    agents: {
        requestsMetadata: AgentsRequestBuilderRequestsMetadata,
        navigationMetadata: AgentsRequestBuilderNavigationMetadata,
    },
    applicationSegments: {
        requestsMetadata: ApplicationSegmentsRequestBuilderRequestsMetadata,
        navigationMetadata: ApplicationSegmentsRequestBuilderNavigationMetadata,
    },
    connectorGroups: {
        requestsMetadata: ConnectorGroupsRequestBuilderRequestsMetadata,
        navigationMetadata: ConnectorGroupsRequestBuilderNavigationMetadata,
    },
    connectors: {
        requestsMetadata: ConnectorsRequestBuilderRequestsMetadata,
        navigationMetadata: ConnectorsRequestBuilderNavigationMetadata,
    },
    publishedResources: {
        requestsMetadata: PublishedResourcesRequestBuilderRequestsMetadata,
        navigationMetadata: PublishedResourcesRequestBuilderNavigationMetadata,
    },
    sensors: {
        requestsMetadata: SensorsRequestBuilderRequestsMetadata,
        navigationMetadata: SensorsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const OnPremisesPublishingProfileItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: OnPremisesPublishingProfileItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: OnPremisesPublishingProfileItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createOnPremisesPublishingProfileFromDiscriminatorValue,
        queryParametersMapper: OnPremisesPublishingProfileItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: OnPremisesPublishingProfileItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createOnPremisesPublishingProfileFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeOnPremisesPublishingProfile,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
