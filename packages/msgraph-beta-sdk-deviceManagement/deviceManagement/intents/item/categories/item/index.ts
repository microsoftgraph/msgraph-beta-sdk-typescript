/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDeviceManagementIntentSettingCategoryFromDiscriminatorValue, serializeDeviceManagementIntentSettingCategory, type DeviceManagementIntentSettingCategory } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { SettingDefinitionsRequestBuilderNavigationMetadata, SettingDefinitionsRequestBuilderRequestsMetadata, type SettingDefinitionsRequestBuilder } from './settingDefinitions/';
import { SettingsRequestBuilderNavigationMetadata, SettingsRequestBuilderRequestsMetadata, type SettingsRequestBuilder } from './settings/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the categories property of the microsoft.graph.deviceManagementIntent entity.
 */
export interface DeviceManagementIntentSettingCategoryItemRequestBuilder extends BaseRequestBuilder<DeviceManagementIntentSettingCategoryItemRequestBuilder> {
    /**
     * Provides operations to manage the settingDefinitions property of the microsoft.graph.deviceManagementSettingCategory entity.
     */
    get settingDefinitions(): SettingDefinitionsRequestBuilder;
    /**
     * Provides operations to manage the settings property of the microsoft.graph.deviceManagementIntentSettingCategory entity.
     */
    get settings(): SettingsRequestBuilder;
    /**
     * Delete navigation property categories for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Collection of setting categories within the intent
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceManagementIntentSettingCategory>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<DeviceManagementIntentSettingCategoryItemRequestBuilderGetQueryParameters> | undefined) : Promise<DeviceManagementIntentSettingCategory | undefined>;
    /**
     * Update the navigation property categories in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceManagementIntentSettingCategory>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: DeviceManagementIntentSettingCategory, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DeviceManagementIntentSettingCategory | undefined>;
    /**
     * Delete navigation property categories for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Collection of setting categories within the intent
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DeviceManagementIntentSettingCategoryItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property categories in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: DeviceManagementIntentSettingCategory, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Collection of setting categories within the intent
 */
export interface DeviceManagementIntentSettingCategoryItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const DeviceManagementIntentSettingCategoryItemRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/intents/{deviceManagementIntent%2Did}/categories/{deviceManagementIntentSettingCategory%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DeviceManagementIntentSettingCategoryItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DeviceManagementIntentSettingCategoryItemRequestBuilderNavigationMetadata: Record<Exclude<keyof DeviceManagementIntentSettingCategoryItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    settingDefinitions: {
        requestsMetadata: SettingDefinitionsRequestBuilderRequestsMetadata,
        navigationMetadata: SettingDefinitionsRequestBuilderNavigationMetadata,
    },
    settings: {
        requestsMetadata: SettingsRequestBuilderRequestsMetadata,
        navigationMetadata: SettingsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DeviceManagementIntentSettingCategoryItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: DeviceManagementIntentSettingCategoryItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: DeviceManagementIntentSettingCategoryItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceManagementIntentSettingCategoryFromDiscriminatorValue,
        queryParametersMapper: DeviceManagementIntentSettingCategoryItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: DeviceManagementIntentSettingCategoryItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceManagementIntentSettingCategoryFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDeviceManagementIntentSettingCategory,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the categories property of the microsoft.graph.deviceManagementIntent entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    SettingDefinitions: "settingDefinitions",
    Settings: "settings",
} as const;
/**
 * Provides operations to manage the categories property of the microsoft.graph.deviceManagementIntent entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    DisplayName: "displayName",
    HasRequiredSetting: "hasRequiredSetting",
    SettingDefinitions: "settingDefinitions",
    Settings: "settings",
} as const;
/* tslint:enable */
/* eslint-enable */
