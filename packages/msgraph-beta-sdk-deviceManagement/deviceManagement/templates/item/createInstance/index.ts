/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDeviceManagementIntentFromDiscriminatorValue, createDeviceManagementSettingInstanceFromDiscriminatorValue, serializeDeviceManagementIntent, serializeDeviceManagementSettingInstance, type DeviceManagementIntent, type DeviceManagementSettingInstance } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a createInstancePostRequestBody
 */
export function createCreateInstancePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateInstancePostRequestBody;
}
export interface CreateInstancePostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The description property
     */
    description?: string;
    /**
     * The displayName property
     */
    displayName?: string;
    /**
     * The roleScopeTagIds property
     */
    roleScopeTagIds?: string[];
    /**
     * The settingsDelta property
     */
    settingsDelta?: DeviceManagementSettingInstance[];
}
/**
 * Provides operations to call the createInstance method.
 */
export interface CreateInstanceRequestBuilder extends BaseRequestBuilder<CreateInstanceRequestBuilder> {
    /**
     * Invoke action createInstance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of DeviceManagementIntent
     */
     post(body: CreateInstancePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DeviceManagementIntent | undefined>;
    /**
     * Invoke action createInstance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: CreateInstancePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoCreateInstancePostRequestBody(createInstancePostRequestBody: Partial<CreateInstancePostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { createInstancePostRequestBody.backingStoreEnabled = true; },
        "description": n => { createInstancePostRequestBody.description = n.getStringValue(); },
        "displayName": n => { createInstancePostRequestBody.displayName = n.getStringValue(); },
        "roleScopeTagIds": n => { createInstancePostRequestBody.roleScopeTagIds = n.getCollectionOfPrimitiveValues<string>(); },
        "settingsDelta": n => { createInstancePostRequestBody.settingsDelta = n.getCollectionOfObjectValues<DeviceManagementSettingInstance>(createDeviceManagementSettingInstanceFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeCreateInstancePostRequestBody(writer: SerializationWriter, createInstancePostRequestBody: Partial<CreateInstancePostRequestBody> | undefined = {}) : void {
    writer.writeStringValue("description", createInstancePostRequestBody.description);
    writer.writeStringValue("displayName", createInstancePostRequestBody.displayName);
    writer.writeCollectionOfPrimitiveValues<string>("roleScopeTagIds", createInstancePostRequestBody.roleScopeTagIds);
    writer.writeCollectionOfObjectValues<DeviceManagementSettingInstance>("settingsDelta", createInstancePostRequestBody.settingsDelta, serializeDeviceManagementSettingInstance);
    writer.writeAdditionalData(createInstancePostRequestBody.additionalData);
}
/**
 * Metadata for all the requests in the request builder.
 */
export const CreateInstanceRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDeviceManagementIntentFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeCreateInstancePostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const CreateInstanceRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/templates/{deviceManagementTemplate%2Did}/createInstance";
/* tslint:enable */
/* eslint-enable */
