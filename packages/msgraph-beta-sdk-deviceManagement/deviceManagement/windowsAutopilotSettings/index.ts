/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createWindowsAutopilotSettingsFromDiscriminatorValue, serializeWindowsAutopilotSettings, type WindowsAutopilotSettings } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { SyncRequestBuilderRequestsMetadata, SyncRequestBuilderUriTemplate, type SyncRequestBuilder } from './sync/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the windowsAutopilotSettings property of the microsoft.graph.deviceManagement entity.
 */
export interface WindowsAutopilotSettingsRequestBuilder extends BaseRequestBuilder<WindowsAutopilotSettingsRequestBuilder> {
    /**
     * Provides operations to call the sync method.
     */
    get sync(): SyncRequestBuilder;
    /**
     * Delete navigation property windowsAutopilotSettings for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The Windows autopilot account settings.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of WindowsAutopilotSettings
     */
     get(requestConfiguration?: RequestConfiguration<WindowsAutopilotSettingsRequestBuilderGetQueryParameters> | undefined) : Promise<WindowsAutopilotSettings | undefined>;
    /**
     * Update the navigation property windowsAutopilotSettings in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of WindowsAutopilotSettings
     */
     patch(body: WindowsAutopilotSettings, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WindowsAutopilotSettings | undefined>;
    /**
     * Delete navigation property windowsAutopilotSettings for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The Windows autopilot account settings.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<WindowsAutopilotSettingsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property windowsAutopilotSettings in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: WindowsAutopilotSettings, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The Windows autopilot account settings.
 */
export interface WindowsAutopilotSettingsRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const WindowsAutopilotSettingsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WindowsAutopilotSettingsRequestBuilderNavigationMetadata: Record<Exclude<keyof WindowsAutopilotSettingsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    sync: {
        uriTemplate: SyncRequestBuilderUriTemplate,
        requestsMetadata: SyncRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WindowsAutopilotSettingsRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createWindowsAutopilotSettingsFromDiscriminatorValue,
        queryParametersMapper: WindowsAutopilotSettingsRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createWindowsAutopilotSettingsFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeWindowsAutopilotSettings,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const WindowsAutopilotSettingsRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/windowsAutopilotSettings{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
