/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDeviceManagementConfigurationPolicyFromDiscriminatorValue, type DeviceManagementConfigurationPolicy } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to call the retrieveLatestUpgradeDefaultBaselinePolicy method.
 */
export interface RetrieveLatestUpgradeDefaultBaselinePolicyRequestBuilder extends BaseRequestBuilder<RetrieveLatestUpgradeDefaultBaselinePolicyRequestBuilder> {
    /**
     * Invoke function retrieveLatestUpgradeDefaultBaselinePolicy
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of DeviceManagementConfigurationPolicy
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DeviceManagementConfigurationPolicy | undefined>;
    /**
     * Invoke function retrieveLatestUpgradeDefaultBaselinePolicy
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Metadata for all the requests in the request builder.
 */
export const RetrieveLatestUpgradeDefaultBaselinePolicyRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDeviceManagementConfigurationPolicyFromDiscriminatorValue,
    },
};
/**
 * Uri template for the request builder.
 */
export const RetrieveLatestUpgradeDefaultBaselinePolicyRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/reusablePolicySettings/{deviceManagementReusablePolicySetting%2Did}/referencingConfigurationPolicies/{deviceManagementConfigurationPolicy%2Did}/retrieveLatestUpgradeDefaultBaselinePolicy()";
/* tslint:enable */
/* eslint-enable */
