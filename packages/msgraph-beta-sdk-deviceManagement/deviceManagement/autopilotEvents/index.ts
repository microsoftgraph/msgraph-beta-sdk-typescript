/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDeviceManagementAutopilotEventCollectionResponseFromDiscriminatorValue, createDeviceManagementAutopilotEventFromDiscriminatorValue, serializeDeviceManagementAutopilotEvent, type DeviceManagementAutopilotEvent, type DeviceManagementAutopilotEventCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { DeviceManagementAutopilotEventItemRequestBuilderNavigationMetadata, DeviceManagementAutopilotEventItemRequestBuilderRequestsMetadata, type DeviceManagementAutopilotEventItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the autopilotEvents property of the microsoft.graph.deviceManagement entity.
 */
export interface AutopilotEventsRequestBuilder extends BaseRequestBuilder<AutopilotEventsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the autopilotEvents property of the microsoft.graph.deviceManagement entity.
     * @param deviceManagementAutopilotEventId The unique identifier of deviceManagementAutopilotEvent
     * @returns {DeviceManagementAutopilotEventItemRequestBuilder}
     */
     byDeviceManagementAutopilotEventId(deviceManagementAutopilotEventId: string) : DeviceManagementAutopilotEventItemRequestBuilder;
    /**
     * The list of autopilot events for the tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceManagementAutopilotEventCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<AutopilotEventsRequestBuilderGetQueryParameters> | undefined) : Promise<DeviceManagementAutopilotEventCollectionResponse | undefined>;
    /**
     * Create new navigation property to autopilotEvents for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceManagementAutopilotEvent>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: DeviceManagementAutopilotEvent, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DeviceManagementAutopilotEvent | undefined>;
    /**
     * The list of autopilot events for the tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AutopilotEventsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to autopilotEvents for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: DeviceManagementAutopilotEvent, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The list of autopilot events for the tenant.
 */
export interface AutopilotEventsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const AutopilotEventsRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/autopilotEvents{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AutopilotEventsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AutopilotEventsRequestBuilderNavigationMetadata: Record<Exclude<keyof AutopilotEventsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byDeviceManagementAutopilotEventId: {
        requestsMetadata: DeviceManagementAutopilotEventItemRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceManagementAutopilotEventItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["deviceManagementAutopilotEvent%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AutopilotEventsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: AutopilotEventsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceManagementAutopilotEventCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: AutopilotEventsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: AutopilotEventsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceManagementAutopilotEventFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDeviceManagementAutopilotEvent,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the autopilotEvents property of the microsoft.graph.deviceManagement entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    PolicyStatusDetails: "policyStatusDetails",
} as const;
/**
 * Provides operations to manage the autopilotEvents property of the microsoft.graph.deviceManagement entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    AccountSetupDuration: "accountSetupDuration",
    AccountSetupDurationDesc: "accountSetupDuration desc",
    AccountSetupStatus: "accountSetupStatus",
    AccountSetupStatusDesc: "accountSetupStatus desc",
    DeploymentDuration: "deploymentDuration",
    DeploymentDurationDesc: "deploymentDuration desc",
    DeploymentEndDateTime: "deploymentEndDateTime",
    DeploymentEndDateTimeDesc: "deploymentEndDateTime desc",
    DeploymentStartDateTime: "deploymentStartDateTime",
    DeploymentStartDateTimeDesc: "deploymentStartDateTime desc",
    DeploymentState: "deploymentState",
    DeploymentStateDesc: "deploymentState desc",
    DeploymentTotalDuration: "deploymentTotalDuration",
    DeploymentTotalDurationDesc: "deploymentTotalDuration desc",
    DeviceId: "deviceId",
    DeviceIdDesc: "deviceId desc",
    DevicePreparationDuration: "devicePreparationDuration",
    DevicePreparationDurationDesc: "devicePreparationDuration desc",
    DeviceRegisteredDateTime: "deviceRegisteredDateTime",
    DeviceRegisteredDateTimeDesc: "deviceRegisteredDateTime desc",
    DeviceSerialNumber: "deviceSerialNumber",
    DeviceSerialNumberDesc: "deviceSerialNumber desc",
    DeviceSetupDuration: "deviceSetupDuration",
    DeviceSetupDurationDesc: "deviceSetupDuration desc",
    DeviceSetupStatus: "deviceSetupStatus",
    DeviceSetupStatusDesc: "deviceSetupStatus desc",
    EnrollmentFailureDetails: "enrollmentFailureDetails",
    EnrollmentFailureDetailsDesc: "enrollmentFailureDetails desc",
    EnrollmentStartDateTime: "enrollmentStartDateTime",
    EnrollmentStartDateTimeDesc: "enrollmentStartDateTime desc",
    EnrollmentState: "enrollmentState",
    EnrollmentStateDesc: "enrollmentState desc",
    EnrollmentType: "enrollmentType",
    EnrollmentTypeDesc: "enrollmentType desc",
    EventDateTime: "eventDateTime",
    EventDateTimeDesc: "eventDateTime desc",
    ManagedDeviceName: "managedDeviceName",
    ManagedDeviceNameDesc: "managedDeviceName desc",
    OsVersion: "osVersion",
    OsVersionDesc: "osVersion desc",
    TargetedAppCount: "targetedAppCount",
    TargetedAppCountDesc: "targetedAppCount desc",
    TargetedPolicyCount: "targetedPolicyCount",
    TargetedPolicyCountDesc: "targetedPolicyCount desc",
    UserPrincipalName: "userPrincipalName",
    UserPrincipalNameDesc: "userPrincipalName desc",
    Windows10EnrollmentCompletionPageConfigurationDisplayName: "windows10EnrollmentCompletionPageConfigurationDisplayName",
    Windows10EnrollmentCompletionPageConfigurationDisplayNameDesc: "windows10EnrollmentCompletionPageConfigurationDisplayName desc",
    Windows10EnrollmentCompletionPageConfigurationId: "windows10EnrollmentCompletionPageConfigurationId",
    Windows10EnrollmentCompletionPageConfigurationIdDesc: "windows10EnrollmentCompletionPageConfigurationId desc",
    WindowsAutopilotDeploymentProfileDisplayName: "windowsAutopilotDeploymentProfileDisplayName",
    WindowsAutopilotDeploymentProfileDisplayNameDesc: "windowsAutopilotDeploymentProfileDisplayName desc",
} as const;
/**
 * Provides operations to manage the autopilotEvents property of the microsoft.graph.deviceManagement entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AccountSetupDuration: "accountSetupDuration",
    AccountSetupStatus: "accountSetupStatus",
    DeploymentDuration: "deploymentDuration",
    DeploymentEndDateTime: "deploymentEndDateTime",
    DeploymentStartDateTime: "deploymentStartDateTime",
    DeploymentState: "deploymentState",
    DeploymentTotalDuration: "deploymentTotalDuration",
    DeviceId: "deviceId",
    DevicePreparationDuration: "devicePreparationDuration",
    DeviceRegisteredDateTime: "deviceRegisteredDateTime",
    DeviceSerialNumber: "deviceSerialNumber",
    DeviceSetupDuration: "deviceSetupDuration",
    DeviceSetupStatus: "deviceSetupStatus",
    EnrollmentFailureDetails: "enrollmentFailureDetails",
    EnrollmentStartDateTime: "enrollmentStartDateTime",
    EnrollmentState: "enrollmentState",
    EnrollmentType: "enrollmentType",
    EventDateTime: "eventDateTime",
    ManagedDeviceName: "managedDeviceName",
    OsVersion: "osVersion",
    TargetedAppCount: "targetedAppCount",
    TargetedPolicyCount: "targetedPolicyCount",
    UserPrincipalName: "userPrincipalName",
    Windows10EnrollmentCompletionPageConfigurationDisplayName: "windows10EnrollmentCompletionPageConfigurationDisplayName",
    Windows10EnrollmentCompletionPageConfigurationId: "windows10EnrollmentCompletionPageConfigurationId",
    WindowsAutopilotDeploymentProfileDisplayName: "windowsAutopilotDeploymentProfileDisplayName",
    PolicyStatusDetails: "policyStatusDetails",
} as const;
/* tslint:enable */
/* eslint-enable */
