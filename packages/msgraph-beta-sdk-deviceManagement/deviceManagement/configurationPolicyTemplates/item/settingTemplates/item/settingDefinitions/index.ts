/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDeviceManagementConfigurationSettingDefinitionCollectionResponseFromDiscriminatorValue, createDeviceManagementConfigurationSettingDefinitionFromDiscriminatorValue, serializeDeviceManagementConfigurationSettingDefinition, type DeviceManagementConfigurationSettingDefinition, type DeviceManagementConfigurationSettingDefinitionCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { DeviceManagementConfigurationSettingDefinitionItemRequestBuilderRequestsMetadata, type DeviceManagementConfigurationSettingDefinitionItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the settingDefinitions property of the microsoft.graph.deviceManagementConfigurationSettingTemplate entity.
 */
export interface SettingDefinitionsRequestBuilder extends BaseRequestBuilder<SettingDefinitionsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the settingDefinitions property of the microsoft.graph.deviceManagementConfigurationSettingTemplate entity.
     * @param deviceManagementConfigurationSettingDefinitionId The unique identifier of deviceManagementConfigurationSettingDefinition
     * @returns {DeviceManagementConfigurationSettingDefinitionItemRequestBuilder}
     */
     byDeviceManagementConfigurationSettingDefinitionId(deviceManagementConfigurationSettingDefinitionId: string) : DeviceManagementConfigurationSettingDefinitionItemRequestBuilder;
    /**
     * List of related Setting Definitions
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceManagementConfigurationSettingDefinitionCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<SettingDefinitionsRequestBuilderGetQueryParameters> | undefined) : Promise<DeviceManagementConfigurationSettingDefinitionCollectionResponse | undefined>;
    /**
     * Create new navigation property to settingDefinitions for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceManagementConfigurationSettingDefinition>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: DeviceManagementConfigurationSettingDefinition, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DeviceManagementConfigurationSettingDefinition | undefined>;
    /**
     * List of related Setting Definitions
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SettingDefinitionsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to settingDefinitions for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: DeviceManagementConfigurationSettingDefinition, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * List of related Setting Definitions
 */
export interface SettingDefinitionsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const SettingDefinitionsRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/configurationPolicyTemplates/{deviceManagementConfigurationPolicyTemplate%2Did}/settingTemplates/{deviceManagementConfigurationSettingTemplate%2Did}/settingDefinitions{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the settingDefinitions property of the microsoft.graph.deviceManagementConfigurationSettingTemplate entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the settingDefinitions property of the microsoft.graph.deviceManagementConfigurationSettingTemplate entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    AccessTypes: "accessTypes",
    AccessTypesDesc: "accessTypes desc",
    Applicability: "applicability",
    ApplicabilityDesc: "applicability desc",
    BaseUri: "baseUri",
    BaseUriDesc: "baseUri desc",
    CategoryId: "categoryId",
    CategoryIdDesc: "categoryId desc",
    Description: "description",
    DescriptionDesc: "description desc",
    DisplayName: "displayName",
    DisplayNameDesc: "displayName desc",
    HelpText: "helpText",
    HelpTextDesc: "helpText desc",
    InfoUrls: "infoUrls",
    InfoUrlsDesc: "infoUrls desc",
    Keywords: "keywords",
    KeywordsDesc: "keywords desc",
    Name: "name",
    NameDesc: "name desc",
    Occurrence: "occurrence",
    OccurrenceDesc: "occurrence desc",
    OffsetUri: "offsetUri",
    OffsetUriDesc: "offsetUri desc",
    ReferredSettingInformationList: "referredSettingInformationList",
    ReferredSettingInformationListDesc: "referredSettingInformationList desc",
    RootDefinitionId: "rootDefinitionId",
    RootDefinitionIdDesc: "rootDefinitionId desc",
    SettingUsage: "settingUsage",
    SettingUsageDesc: "settingUsage desc",
    UxBehavior: "uxBehavior",
    UxBehaviorDesc: "uxBehavior desc",
    Version: "version",
    VersionDesc: "version desc",
    Visibility: "visibility",
    VisibilityDesc: "visibility desc",
} as const;
/**
 * Provides operations to manage the settingDefinitions property of the microsoft.graph.deviceManagementConfigurationSettingTemplate entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AccessTypes: "accessTypes",
    Applicability: "applicability",
    BaseUri: "baseUri",
    CategoryId: "categoryId",
    Description: "description",
    DisplayName: "displayName",
    HelpText: "helpText",
    InfoUrls: "infoUrls",
    Keywords: "keywords",
    Name: "name",
    Occurrence: "occurrence",
    OffsetUri: "offsetUri",
    ReferredSettingInformationList: "referredSettingInformationList",
    RootDefinitionId: "rootDefinitionId",
    SettingUsage: "settingUsage",
    UxBehavior: "uxBehavior",
    Version: "version",
    Visibility: "visibility",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SettingDefinitionsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SettingDefinitionsRequestBuilderNavigationMetadata: Record<Exclude<keyof SettingDefinitionsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byDeviceManagementConfigurationSettingDefinitionId: {
        requestsMetadata: DeviceManagementConfigurationSettingDefinitionItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["deviceManagementConfigurationSettingDefinition%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SettingDefinitionsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: SettingDefinitionsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceManagementConfigurationSettingDefinitionCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: SettingDefinitionsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: SettingDefinitionsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceManagementConfigurationSettingDefinitionFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDeviceManagementConfigurationSettingDefinition,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
