/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDeviceHealthScriptPolicyStateCollectionResponseFromDiscriminatorValue, createDeviceHealthScriptPolicyStateFromDiscriminatorValue, serializeDeviceHealthScriptPolicyState, type DeviceHealthScriptPolicyState, type DeviceHealthScriptPolicyStateCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { type WithIdWithPolicyIdWithDeviceIdRequestBuilder, WithIdWithPolicyIdWithDeviceIdRequestBuilderRequestsMetadata } from './withIdWithPolicyIdWithDeviceId/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the deviceHealthScriptStates property of the microsoft.graph.managedDevice entity.
 */
export interface DeviceHealthScriptStatesRequestBuilder extends BaseRequestBuilder<DeviceHealthScriptStatesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Results of device health scripts that ran for this device. Default is empty list. This property is read-only.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceHealthScriptPolicyStateCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<DeviceHealthScriptStatesRequestBuilderGetQueryParameters> | undefined) : Promise<DeviceHealthScriptPolicyStateCollectionResponse | undefined>;
    /**
     * Create new navigation property to deviceHealthScriptStates for deviceManagement
     * @param body Contains properties for policy run state of the device health script.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceHealthScriptPolicyState>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: DeviceHealthScriptPolicyState, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DeviceHealthScriptPolicyState | undefined>;
    /**
     * Results of device health scripts that ran for this device. Default is empty list. This property is read-only.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DeviceHealthScriptStatesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to deviceHealthScriptStates for deviceManagement
     * @param body Contains properties for policy run state of the device health script.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: DeviceHealthScriptPolicyState, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Provides operations to manage the deviceHealthScriptStates property of the microsoft.graph.managedDevice entity.
     * @param deviceId Property in multi-part unique identifier of deviceHealthScriptPolicyState
     * @param id Property in multi-part unique identifier of deviceHealthScriptPolicyState
     * @param policyId Property in multi-part unique identifier of deviceHealthScriptPolicyState
     * @returns {WithIdWithPolicyIdWithDeviceIdRequestBuilder}
     */
     withIdWithPolicyIdWithDeviceId(deviceId: string | undefined, id: string | undefined, policyId: string | undefined) : WithIdWithPolicyIdWithDeviceIdRequestBuilder;
}
/**
 * Results of device health scripts that ran for this device. Default is empty list. This property is read-only.
 */
export interface DeviceHealthScriptStatesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const DeviceHealthScriptStatesRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/comanagedDevices/{managedDevice%2Did}/deviceHealthScriptStates{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DeviceHealthScriptStatesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DeviceHealthScriptStatesRequestBuilderNavigationMetadata: Record<Exclude<keyof DeviceHealthScriptStatesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    withIdWithPolicyIdWithDeviceId: {
        requestsMetadata: WithIdWithPolicyIdWithDeviceIdRequestBuilderRequestsMetadata,
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DeviceHealthScriptStatesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: DeviceHealthScriptStatesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceHealthScriptPolicyStateCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: DeviceHealthScriptStatesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: DeviceHealthScriptStatesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceHealthScriptPolicyStateFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDeviceHealthScriptPolicyState,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the deviceHealthScriptStates property of the microsoft.graph.managedDevice entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the deviceHealthScriptStates property of the microsoft.graph.managedDevice entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    AssignmentFilterIds: "assignmentFilterIds",
    AssignmentFilterIdsDesc: "assignmentFilterIds desc",
    DetectionState: "detectionState",
    DetectionStateDesc: "detectionState desc",
    DeviceId: "deviceId",
    DeviceIdDesc: "deviceId desc",
    DeviceName: "deviceName",
    DeviceNameDesc: "deviceName desc",
    ExpectedStateUpdateDateTime: "expectedStateUpdateDateTime",
    ExpectedStateUpdateDateTimeDesc: "expectedStateUpdateDateTime desc",
    Id: "id",
    IdDesc: "id desc",
    LastStateUpdateDateTime: "lastStateUpdateDateTime",
    LastStateUpdateDateTimeDesc: "lastStateUpdateDateTime desc",
    LastSyncDateTime: "lastSyncDateTime",
    LastSyncDateTimeDesc: "lastSyncDateTime desc",
    OsVersion: "osVersion",
    OsVersionDesc: "osVersion desc",
    PolicyId: "policyId",
    PolicyIdDesc: "policyId desc",
    PolicyName: "policyName",
    PolicyNameDesc: "policyName desc",
    PostRemediationDetectionScriptError: "postRemediationDetectionScriptError",
    PostRemediationDetectionScriptErrorDesc: "postRemediationDetectionScriptError desc",
    PostRemediationDetectionScriptOutput: "postRemediationDetectionScriptOutput",
    PostRemediationDetectionScriptOutputDesc: "postRemediationDetectionScriptOutput desc",
    PreRemediationDetectionScriptError: "preRemediationDetectionScriptError",
    PreRemediationDetectionScriptErrorDesc: "preRemediationDetectionScriptError desc",
    PreRemediationDetectionScriptOutput: "preRemediationDetectionScriptOutput",
    PreRemediationDetectionScriptOutputDesc: "preRemediationDetectionScriptOutput desc",
    RemediationScriptError: "remediationScriptError",
    RemediationScriptErrorDesc: "remediationScriptError desc",
    RemediationState: "remediationState",
    RemediationStateDesc: "remediationState desc",
    UserName: "userName",
    UserNameDesc: "userName desc",
} as const;
/**
 * Provides operations to manage the deviceHealthScriptStates property of the microsoft.graph.managedDevice entity.
 */
export const GetSelectQueryParameterTypeObject = {
    AssignmentFilterIds: "assignmentFilterIds",
    DetectionState: "detectionState",
    DeviceId: "deviceId",
    DeviceName: "deviceName",
    ExpectedStateUpdateDateTime: "expectedStateUpdateDateTime",
    Id: "id",
    LastStateUpdateDateTime: "lastStateUpdateDateTime",
    LastSyncDateTime: "lastSyncDateTime",
    OsVersion: "osVersion",
    PolicyId: "policyId",
    PolicyName: "policyName",
    PostRemediationDetectionScriptError: "postRemediationDetectionScriptError",
    PostRemediationDetectionScriptOutput: "postRemediationDetectionScriptOutput",
    PreRemediationDetectionScriptError: "preRemediationDetectionScriptError",
    PreRemediationDetectionScriptOutput: "preRemediationDetectionScriptOutput",
    RemediationScriptError: "remediationScriptError",
    RemediationState: "remediationState",
    UserName: "userName",
} as const;
/* tslint:enable */
/* eslint-enable */
