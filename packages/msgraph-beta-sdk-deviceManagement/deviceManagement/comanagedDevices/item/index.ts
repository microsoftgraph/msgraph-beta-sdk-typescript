/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createManagedDeviceFromDiscriminatorValue, serializeManagedDevice, type ManagedDevice } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { ActivateDeviceEsimRequestBuilderRequestsMetadata, ActivateDeviceEsimRequestBuilderUriTemplate, type ActivateDeviceEsimRequestBuilder } from './activateDeviceEsim/';
import { AssignmentFilterEvaluationStatusDetailsRequestBuilderNavigationMetadata, AssignmentFilterEvaluationStatusDetailsRequestBuilderRequestsMetadata, AssignmentFilterEvaluationStatusDetailsRequestBuilderUriTemplate, type AssignmentFilterEvaluationStatusDetailsRequestBuilder } from './assignmentFilterEvaluationStatusDetails/';
import { BypassActivationLockRequestBuilderRequestsMetadata, BypassActivationLockRequestBuilderUriTemplate, type BypassActivationLockRequestBuilder } from './bypassActivationLock/';
import { CleanWindowsDeviceRequestBuilderRequestsMetadata, CleanWindowsDeviceRequestBuilderUriTemplate, type CleanWindowsDeviceRequestBuilder } from './cleanWindowsDevice/';
import { CreateDeviceLogCollectionRequestRequestBuilderRequestsMetadata, CreateDeviceLogCollectionRequestRequestBuilderUriTemplate, type CreateDeviceLogCollectionRequestRequestBuilder } from './createDeviceLogCollectionRequest/';
import { DeleteUserFromSharedAppleDeviceRequestBuilderRequestsMetadata, DeleteUserFromSharedAppleDeviceRequestBuilderUriTemplate, type DeleteUserFromSharedAppleDeviceRequestBuilder } from './deleteUserFromSharedAppleDevice/';
import { DeprovisionRequestBuilderRequestsMetadata, DeprovisionRequestBuilderUriTemplate, type DeprovisionRequestBuilder } from './deprovision/';
import { DetectedAppsRequestBuilderNavigationMetadata, DetectedAppsRequestBuilderRequestsMetadata, DetectedAppsRequestBuilderUriTemplate, type DetectedAppsRequestBuilder } from './detectedApps/';
import { DeviceCategoryRequestBuilderRequestsMetadata, DeviceCategoryRequestBuilderUriTemplate, type DeviceCategoryRequestBuilder } from './deviceCategory/';
import { DeviceCompliancePolicyStatesRequestBuilderNavigationMetadata, DeviceCompliancePolicyStatesRequestBuilderRequestsMetadata, DeviceCompliancePolicyStatesRequestBuilderUriTemplate, type DeviceCompliancePolicyStatesRequestBuilder } from './deviceCompliancePolicyStates/';
import { DeviceConfigurationStatesRequestBuilderNavigationMetadata, DeviceConfigurationStatesRequestBuilderRequestsMetadata, DeviceConfigurationStatesRequestBuilderUriTemplate, type DeviceConfigurationStatesRequestBuilder } from './deviceConfigurationStates/';
import { DeviceHealthScriptStatesRequestBuilderNavigationMetadata, DeviceHealthScriptStatesRequestBuilderRequestsMetadata, DeviceHealthScriptStatesRequestBuilderUriTemplate, type DeviceHealthScriptStatesRequestBuilder } from './deviceHealthScriptStates/';
import { DisableRequestBuilderRequestsMetadata, DisableRequestBuilderUriTemplate, type DisableRequestBuilder } from './disable/';
import { DisableLostModeRequestBuilderRequestsMetadata, DisableLostModeRequestBuilderUriTemplate, type DisableLostModeRequestBuilder } from './disableLostMode/';
import { EnableLostModeRequestBuilderRequestsMetadata, EnableLostModeRequestBuilderUriTemplate, type EnableLostModeRequestBuilder } from './enableLostMode/';
import { EnrollNowActionRequestBuilderRequestsMetadata, EnrollNowActionRequestBuilderUriTemplate, type EnrollNowActionRequestBuilder } from './enrollNowAction/';
import { GetCloudPcRemoteActionResultsRequestBuilderRequestsMetadata, GetCloudPcRemoteActionResultsRequestBuilderUriTemplate, type GetCloudPcRemoteActionResultsRequestBuilder } from './getCloudPcRemoteActionResults/';
import { GetCloudPcReviewStatusRequestBuilderRequestsMetadata, GetCloudPcReviewStatusRequestBuilderUriTemplate, type GetCloudPcReviewStatusRequestBuilder } from './getCloudPcReviewStatus/';
import { GetFileVaultKeyRequestBuilderRequestsMetadata, GetFileVaultKeyRequestBuilderUriTemplate, type GetFileVaultKeyRequestBuilder } from './getFileVaultKey/';
import { GetNonCompliantSettingsRequestBuilderRequestsMetadata, GetNonCompliantSettingsRequestBuilderUriTemplate, type GetNonCompliantSettingsRequestBuilder } from './getNonCompliantSettings/';
import { InitiateDeviceAttestationRequestBuilderRequestsMetadata, InitiateDeviceAttestationRequestBuilderUriTemplate, type InitiateDeviceAttestationRequestBuilder } from './initiateDeviceAttestation/';
import { InitiateMobileDeviceManagementKeyRecoveryRequestBuilderRequestsMetadata, InitiateMobileDeviceManagementKeyRecoveryRequestBuilderUriTemplate, type InitiateMobileDeviceManagementKeyRecoveryRequestBuilder } from './initiateMobileDeviceManagementKeyRecovery/';
import { InitiateOnDemandProactiveRemediationRequestBuilderRequestsMetadata, InitiateOnDemandProactiveRemediationRequestBuilderUriTemplate, type InitiateOnDemandProactiveRemediationRequestBuilder } from './initiateOnDemandProactiveRemediation/';
import { LocateDeviceRequestBuilderRequestsMetadata, LocateDeviceRequestBuilderUriTemplate, type LocateDeviceRequestBuilder } from './locateDevice/';
import { LogCollectionRequestsRequestBuilderNavigationMetadata, LogCollectionRequestsRequestBuilderRequestsMetadata, LogCollectionRequestsRequestBuilderUriTemplate, type LogCollectionRequestsRequestBuilder } from './logCollectionRequests/';
import { LogoutSharedAppleDeviceActiveUserRequestBuilderRequestsMetadata, LogoutSharedAppleDeviceActiveUserRequestBuilderUriTemplate, type LogoutSharedAppleDeviceActiveUserRequestBuilder } from './logoutSharedAppleDeviceActiveUser/';
import { ManagedDeviceMobileAppConfigurationStatesRequestBuilderNavigationMetadata, ManagedDeviceMobileAppConfigurationStatesRequestBuilderRequestsMetadata, ManagedDeviceMobileAppConfigurationStatesRequestBuilderUriTemplate, type ManagedDeviceMobileAppConfigurationStatesRequestBuilder } from './managedDeviceMobileAppConfigurationStates/';
import { OverrideComplianceStateRequestBuilderRequestsMetadata, OverrideComplianceStateRequestBuilderUriTemplate, type OverrideComplianceStateRequestBuilder } from './overrideComplianceState/';
import { PauseConfigurationRefreshRequestBuilderRequestsMetadata, PauseConfigurationRefreshRequestBuilderUriTemplate, type PauseConfigurationRefreshRequestBuilder } from './pauseConfigurationRefresh/';
import { PlayLostModeSoundRequestBuilderRequestsMetadata, PlayLostModeSoundRequestBuilderUriTemplate, type PlayLostModeSoundRequestBuilder } from './playLostModeSound/';
import { RebootNowRequestBuilderRequestsMetadata, RebootNowRequestBuilderUriTemplate, type RebootNowRequestBuilder } from './rebootNow/';
import { RecoverPasscodeRequestBuilderRequestsMetadata, RecoverPasscodeRequestBuilderUriTemplate, type RecoverPasscodeRequestBuilder } from './recoverPasscode/';
import { ReenableRequestBuilderRequestsMetadata, ReenableRequestBuilderUriTemplate, type ReenableRequestBuilder } from './reenable/';
import { RemoteLockRequestBuilderRequestsMetadata, RemoteLockRequestBuilderUriTemplate, type RemoteLockRequestBuilder } from './remoteLock/';
import { RemoveDeviceFirmwareConfigurationInterfaceManagementRequestBuilderRequestsMetadata, RemoveDeviceFirmwareConfigurationInterfaceManagementRequestBuilderUriTemplate, type RemoveDeviceFirmwareConfigurationInterfaceManagementRequestBuilder } from './removeDeviceFirmwareConfigurationInterfaceManagement/';
import { ReprovisionCloudPcRequestBuilderRequestsMetadata, ReprovisionCloudPcRequestBuilderUriTemplate, type ReprovisionCloudPcRequestBuilder } from './reprovisionCloudPc/';
import { RequestRemoteAssistanceRequestBuilderRequestsMetadata, RequestRemoteAssistanceRequestBuilderUriTemplate, type RequestRemoteAssistanceRequestBuilder } from './requestRemoteAssistance/';
import { ResetPasscodeRequestBuilderRequestsMetadata, ResetPasscodeRequestBuilderUriTemplate, type ResetPasscodeRequestBuilder } from './resetPasscode/';
import { ResizeCloudPcRequestBuilderRequestsMetadata, ResizeCloudPcRequestBuilderUriTemplate, type ResizeCloudPcRequestBuilder } from './resizeCloudPc/';
import { RestoreCloudPcRequestBuilderRequestsMetadata, RestoreCloudPcRequestBuilderUriTemplate, type RestoreCloudPcRequestBuilder } from './restoreCloudPc/';
import { RetireRequestBuilderRequestsMetadata, RetireRequestBuilderUriTemplate, type RetireRequestBuilder } from './retire/';
import { RevokeAppleVppLicensesRequestBuilderRequestsMetadata, RevokeAppleVppLicensesRequestBuilderUriTemplate, type RevokeAppleVppLicensesRequestBuilder } from './revokeAppleVppLicenses/';
import { RotateBitLockerKeysRequestBuilderRequestsMetadata, RotateBitLockerKeysRequestBuilderUriTemplate, type RotateBitLockerKeysRequestBuilder } from './rotateBitLockerKeys/';
import { RotateFileVaultKeyRequestBuilderRequestsMetadata, RotateFileVaultKeyRequestBuilderUriTemplate, type RotateFileVaultKeyRequestBuilder } from './rotateFileVaultKey/';
import { RotateLocalAdminPasswordRequestBuilderRequestsMetadata, RotateLocalAdminPasswordRequestBuilderUriTemplate, type RotateLocalAdminPasswordRequestBuilder } from './rotateLocalAdminPassword/';
import { SecurityBaselineStatesRequestBuilderNavigationMetadata, SecurityBaselineStatesRequestBuilderRequestsMetadata, SecurityBaselineStatesRequestBuilderUriTemplate, type SecurityBaselineStatesRequestBuilder } from './securityBaselineStates/';
import { SendCustomNotificationToCompanyPortalRequestBuilderRequestsMetadata, SendCustomNotificationToCompanyPortalRequestBuilderUriTemplate, type SendCustomNotificationToCompanyPortalRequestBuilder } from './sendCustomNotificationToCompanyPortal/';
import { SetCloudPcReviewStatusRequestBuilderRequestsMetadata, SetCloudPcReviewStatusRequestBuilderUriTemplate, type SetCloudPcReviewStatusRequestBuilder } from './setCloudPcReviewStatus/';
import { SetDeviceNameRequestBuilderRequestsMetadata, SetDeviceNameRequestBuilderUriTemplate, type SetDeviceNameRequestBuilder } from './setDeviceName/';
import { ShutDownRequestBuilderRequestsMetadata, ShutDownRequestBuilderUriTemplate, type ShutDownRequestBuilder } from './shutDown/';
import { SyncDeviceRequestBuilderRequestsMetadata, SyncDeviceRequestBuilderUriTemplate, type SyncDeviceRequestBuilder } from './syncDevice/';
import { TriggerConfigurationManagerActionRequestBuilderRequestsMetadata, TriggerConfigurationManagerActionRequestBuilderUriTemplate, type TriggerConfigurationManagerActionRequestBuilder } from './triggerConfigurationManagerAction/';
import { type UpdateWindowsDeviceAccountRequestBuilder, UpdateWindowsDeviceAccountRequestBuilderRequestsMetadata, UpdateWindowsDeviceAccountRequestBuilderUriTemplate } from './updateWindowsDeviceAccount/';
import { type UsersRequestBuilder, UsersRequestBuilderRequestsMetadata, UsersRequestBuilderUriTemplate } from './users/';
import { type WindowsDefenderScanRequestBuilder, WindowsDefenderScanRequestBuilderRequestsMetadata, WindowsDefenderScanRequestBuilderUriTemplate } from './windowsDefenderScan/';
import { type WindowsDefenderUpdateSignaturesRequestBuilder, WindowsDefenderUpdateSignaturesRequestBuilderRequestsMetadata, WindowsDefenderUpdateSignaturesRequestBuilderUriTemplate } from './windowsDefenderUpdateSignatures/';
import { type WindowsProtectionStateRequestBuilder, WindowsProtectionStateRequestBuilderNavigationMetadata, WindowsProtectionStateRequestBuilderRequestsMetadata, WindowsProtectionStateRequestBuilderUriTemplate } from './windowsProtectionState/';
import { type WipeRequestBuilder, WipeRequestBuilderRequestsMetadata, WipeRequestBuilderUriTemplate } from './wipe/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the comanagedDevices property of the microsoft.graph.deviceManagement entity.
 */
export interface ManagedDeviceItemRequestBuilder extends BaseRequestBuilder<ManagedDeviceItemRequestBuilder> {
    /**
     * Provides operations to call the activateDeviceEsim method.
     */
    get activateDeviceEsim(): ActivateDeviceEsimRequestBuilder;
    /**
     * Provides operations to manage the assignmentFilterEvaluationStatusDetails property of the microsoft.graph.managedDevice entity.
     */
    get assignmentFilterEvaluationStatusDetails(): AssignmentFilterEvaluationStatusDetailsRequestBuilder;
    /**
     * Provides operations to call the bypassActivationLock method.
     */
    get bypassActivationLock(): BypassActivationLockRequestBuilder;
    /**
     * Provides operations to call the cleanWindowsDevice method.
     */
    get cleanWindowsDevice(): CleanWindowsDeviceRequestBuilder;
    /**
     * Provides operations to call the createDeviceLogCollectionRequest method.
     */
    get createDeviceLogCollectionRequest(): CreateDeviceLogCollectionRequestRequestBuilder;
    /**
     * Provides operations to call the deleteUserFromSharedAppleDevice method.
     */
    get deleteUserFromSharedAppleDevice(): DeleteUserFromSharedAppleDeviceRequestBuilder;
    /**
     * Provides operations to call the deprovision method.
     */
    get deprovision(): DeprovisionRequestBuilder;
    /**
     * Provides operations to manage the detectedApps property of the microsoft.graph.managedDevice entity.
     */
    get detectedApps(): DetectedAppsRequestBuilder;
    /**
     * Provides operations to manage the deviceCategory property of the microsoft.graph.managedDevice entity.
     */
    get deviceCategory(): DeviceCategoryRequestBuilder;
    /**
     * Provides operations to manage the deviceCompliancePolicyStates property of the microsoft.graph.managedDevice entity.
     */
    get deviceCompliancePolicyStates(): DeviceCompliancePolicyStatesRequestBuilder;
    /**
     * Provides operations to manage the deviceConfigurationStates property of the microsoft.graph.managedDevice entity.
     */
    get deviceConfigurationStates(): DeviceConfigurationStatesRequestBuilder;
    /**
     * Provides operations to manage the deviceHealthScriptStates property of the microsoft.graph.managedDevice entity.
     */
    get deviceHealthScriptStates(): DeviceHealthScriptStatesRequestBuilder;
    /**
     * Provides operations to call the disable method.
     */
    get disable(): DisableRequestBuilder;
    /**
     * Provides operations to call the disableLostMode method.
     */
    get disableLostMode(): DisableLostModeRequestBuilder;
    /**
     * Provides operations to call the enableLostMode method.
     */
    get enableLostMode(): EnableLostModeRequestBuilder;
    /**
     * Provides operations to call the enrollNowAction method.
     */
    get enrollNowAction(): EnrollNowActionRequestBuilder;
    /**
     * Provides operations to call the getCloudPcRemoteActionResults method.
     */
    get getCloudPcRemoteActionResults(): GetCloudPcRemoteActionResultsRequestBuilder;
    /**
     * Provides operations to call the getCloudPcReviewStatus method.
     */
    get getCloudPcReviewStatus(): GetCloudPcReviewStatusRequestBuilder;
    /**
     * Provides operations to call the getFileVaultKey method.
     */
    get getFileVaultKey(): GetFileVaultKeyRequestBuilder;
    /**
     * Provides operations to call the getNonCompliantSettings method.
     */
    get getNonCompliantSettings(): GetNonCompliantSettingsRequestBuilder;
    /**
     * Provides operations to call the initiateDeviceAttestation method.
     */
    get initiateDeviceAttestation(): InitiateDeviceAttestationRequestBuilder;
    /**
     * Provides operations to call the initiateMobileDeviceManagementKeyRecovery method.
     */
    get initiateMobileDeviceManagementKeyRecovery(): InitiateMobileDeviceManagementKeyRecoveryRequestBuilder;
    /**
     * Provides operations to call the initiateOnDemandProactiveRemediation method.
     */
    get initiateOnDemandProactiveRemediation(): InitiateOnDemandProactiveRemediationRequestBuilder;
    /**
     * Provides operations to call the locateDevice method.
     */
    get locateDevice(): LocateDeviceRequestBuilder;
    /**
     * Provides operations to manage the logCollectionRequests property of the microsoft.graph.managedDevice entity.
     */
    get logCollectionRequests(): LogCollectionRequestsRequestBuilder;
    /**
     * Provides operations to call the logoutSharedAppleDeviceActiveUser method.
     */
    get logoutSharedAppleDeviceActiveUser(): LogoutSharedAppleDeviceActiveUserRequestBuilder;
    /**
     * Provides operations to manage the managedDeviceMobileAppConfigurationStates property of the microsoft.graph.managedDevice entity.
     */
    get managedDeviceMobileAppConfigurationStates(): ManagedDeviceMobileAppConfigurationStatesRequestBuilder;
    /**
     * Provides operations to call the overrideComplianceState method.
     */
    get overrideComplianceState(): OverrideComplianceStateRequestBuilder;
    /**
     * Provides operations to call the pauseConfigurationRefresh method.
     */
    get pauseConfigurationRefresh(): PauseConfigurationRefreshRequestBuilder;
    /**
     * Provides operations to call the playLostModeSound method.
     */
    get playLostModeSound(): PlayLostModeSoundRequestBuilder;
    /**
     * Provides operations to call the rebootNow method.
     */
    get rebootNow(): RebootNowRequestBuilder;
    /**
     * Provides operations to call the recoverPasscode method.
     */
    get recoverPasscode(): RecoverPasscodeRequestBuilder;
    /**
     * Provides operations to call the reenable method.
     */
    get reenable(): ReenableRequestBuilder;
    /**
     * Provides operations to call the remoteLock method.
     */
    get remoteLock(): RemoteLockRequestBuilder;
    /**
     * Provides operations to call the removeDeviceFirmwareConfigurationInterfaceManagement method.
     */
    get removeDeviceFirmwareConfigurationInterfaceManagement(): RemoveDeviceFirmwareConfigurationInterfaceManagementRequestBuilder;
    /**
     * Provides operations to call the reprovisionCloudPc method.
     */
    get reprovisionCloudPc(): ReprovisionCloudPcRequestBuilder;
    /**
     * Provides operations to call the requestRemoteAssistance method.
     */
    get requestRemoteAssistance(): RequestRemoteAssistanceRequestBuilder;
    /**
     * Provides operations to call the resetPasscode method.
     */
    get resetPasscode(): ResetPasscodeRequestBuilder;
    /**
     * Provides operations to call the resizeCloudPc method.
     */
    get resizeCloudPc(): ResizeCloudPcRequestBuilder;
    /**
     * Provides operations to call the restoreCloudPc method.
     */
    get restoreCloudPc(): RestoreCloudPcRequestBuilder;
    /**
     * Provides operations to call the retire method.
     */
    get retire(): RetireRequestBuilder;
    /**
     * Provides operations to call the revokeAppleVppLicenses method.
     */
    get revokeAppleVppLicenses(): RevokeAppleVppLicensesRequestBuilder;
    /**
     * Provides operations to call the rotateBitLockerKeys method.
     */
    get rotateBitLockerKeys(): RotateBitLockerKeysRequestBuilder;
    /**
     * Provides operations to call the rotateFileVaultKey method.
     */
    get rotateFileVaultKey(): RotateFileVaultKeyRequestBuilder;
    /**
     * Provides operations to call the rotateLocalAdminPassword method.
     */
    get rotateLocalAdminPassword(): RotateLocalAdminPasswordRequestBuilder;
    /**
     * Provides operations to manage the securityBaselineStates property of the microsoft.graph.managedDevice entity.
     */
    get securityBaselineStates(): SecurityBaselineStatesRequestBuilder;
    /**
     * Provides operations to call the sendCustomNotificationToCompanyPortal method.
     */
    get sendCustomNotificationToCompanyPortal(): SendCustomNotificationToCompanyPortalRequestBuilder;
    /**
     * Provides operations to call the setCloudPcReviewStatus method.
     */
    get setCloudPcReviewStatus(): SetCloudPcReviewStatusRequestBuilder;
    /**
     * Provides operations to call the setDeviceName method.
     */
    get setDeviceName(): SetDeviceNameRequestBuilder;
    /**
     * Provides operations to call the shutDown method.
     */
    get shutDown(): ShutDownRequestBuilder;
    /**
     * Provides operations to call the syncDevice method.
     */
    get syncDevice(): SyncDeviceRequestBuilder;
    /**
     * Provides operations to call the triggerConfigurationManagerAction method.
     */
    get triggerConfigurationManagerAction(): TriggerConfigurationManagerActionRequestBuilder;
    /**
     * Provides operations to call the updateWindowsDeviceAccount method.
     */
    get updateWindowsDeviceAccount(): UpdateWindowsDeviceAccountRequestBuilder;
    /**
     * Provides operations to manage the users property of the microsoft.graph.managedDevice entity.
     */
    get users(): UsersRequestBuilder;
    /**
     * Provides operations to call the windowsDefenderScan method.
     */
    get windowsDefenderScan(): WindowsDefenderScanRequestBuilder;
    /**
     * Provides operations to call the windowsDefenderUpdateSignatures method.
     */
    get windowsDefenderUpdateSignatures(): WindowsDefenderUpdateSignaturesRequestBuilder;
    /**
     * Provides operations to manage the windowsProtectionState property of the microsoft.graph.managedDevice entity.
     */
    get windowsProtectionState(): WindowsProtectionStateRequestBuilder;
    /**
     * Provides operations to call the wipe method.
     */
    get wipe(): WipeRequestBuilder;
    /**
     * Delete navigation property comanagedDevices for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The list of co-managed devices report
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of ManagedDevice
     */
     get(requestConfiguration?: RequestConfiguration<ManagedDeviceItemRequestBuilderGetQueryParameters> | undefined) : Promise<ManagedDevice | undefined>;
    /**
     * Update the navigation property comanagedDevices in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of ManagedDevice
     */
     patch(body: ManagedDevice, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ManagedDevice | undefined>;
    /**
     * Delete navigation property comanagedDevices for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The list of co-managed devices report
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ManagedDeviceItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property comanagedDevices in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: ManagedDevice, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The list of co-managed devices report
 */
export interface ManagedDeviceItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ManagedDeviceItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ManagedDeviceItemRequestBuilderNavigationMetadata: Record<Exclude<keyof ManagedDeviceItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    activateDeviceEsim: {
        uriTemplate: ActivateDeviceEsimRequestBuilderUriTemplate,
        requestsMetadata: ActivateDeviceEsimRequestBuilderRequestsMetadata,
    },
    assignmentFilterEvaluationStatusDetails: {
        uriTemplate: AssignmentFilterEvaluationStatusDetailsRequestBuilderUriTemplate,
        requestsMetadata: AssignmentFilterEvaluationStatusDetailsRequestBuilderRequestsMetadata,
        navigationMetadata: AssignmentFilterEvaluationStatusDetailsRequestBuilderNavigationMetadata,
    },
    bypassActivationLock: {
        uriTemplate: BypassActivationLockRequestBuilderUriTemplate,
        requestsMetadata: BypassActivationLockRequestBuilderRequestsMetadata,
    },
    cleanWindowsDevice: {
        uriTemplate: CleanWindowsDeviceRequestBuilderUriTemplate,
        requestsMetadata: CleanWindowsDeviceRequestBuilderRequestsMetadata,
    },
    createDeviceLogCollectionRequest: {
        uriTemplate: CreateDeviceLogCollectionRequestRequestBuilderUriTemplate,
        requestsMetadata: CreateDeviceLogCollectionRequestRequestBuilderRequestsMetadata,
    },
    deleteUserFromSharedAppleDevice: {
        uriTemplate: DeleteUserFromSharedAppleDeviceRequestBuilderUriTemplate,
        requestsMetadata: DeleteUserFromSharedAppleDeviceRequestBuilderRequestsMetadata,
    },
    deprovision: {
        uriTemplate: DeprovisionRequestBuilderUriTemplate,
        requestsMetadata: DeprovisionRequestBuilderRequestsMetadata,
    },
    detectedApps: {
        uriTemplate: DetectedAppsRequestBuilderUriTemplate,
        requestsMetadata: DetectedAppsRequestBuilderRequestsMetadata,
        navigationMetadata: DetectedAppsRequestBuilderNavigationMetadata,
    },
    deviceCategory: {
        uriTemplate: DeviceCategoryRequestBuilderUriTemplate,
        requestsMetadata: DeviceCategoryRequestBuilderRequestsMetadata,
    },
    deviceCompliancePolicyStates: {
        uriTemplate: DeviceCompliancePolicyStatesRequestBuilderUriTemplate,
        requestsMetadata: DeviceCompliancePolicyStatesRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceCompliancePolicyStatesRequestBuilderNavigationMetadata,
    },
    deviceConfigurationStates: {
        uriTemplate: DeviceConfigurationStatesRequestBuilderUriTemplate,
        requestsMetadata: DeviceConfigurationStatesRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceConfigurationStatesRequestBuilderNavigationMetadata,
    },
    deviceHealthScriptStates: {
        uriTemplate: DeviceHealthScriptStatesRequestBuilderUriTemplate,
        requestsMetadata: DeviceHealthScriptStatesRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceHealthScriptStatesRequestBuilderNavigationMetadata,
    },
    disable: {
        uriTemplate: DisableRequestBuilderUriTemplate,
        requestsMetadata: DisableRequestBuilderRequestsMetadata,
    },
    disableLostMode: {
        uriTemplate: DisableLostModeRequestBuilderUriTemplate,
        requestsMetadata: DisableLostModeRequestBuilderRequestsMetadata,
    },
    enableLostMode: {
        uriTemplate: EnableLostModeRequestBuilderUriTemplate,
        requestsMetadata: EnableLostModeRequestBuilderRequestsMetadata,
    },
    enrollNowAction: {
        uriTemplate: EnrollNowActionRequestBuilderUriTemplate,
        requestsMetadata: EnrollNowActionRequestBuilderRequestsMetadata,
    },
    getCloudPcRemoteActionResults: {
        uriTemplate: GetCloudPcRemoteActionResultsRequestBuilderUriTemplate,
        requestsMetadata: GetCloudPcRemoteActionResultsRequestBuilderRequestsMetadata,
    },
    getCloudPcReviewStatus: {
        uriTemplate: GetCloudPcReviewStatusRequestBuilderUriTemplate,
        requestsMetadata: GetCloudPcReviewStatusRequestBuilderRequestsMetadata,
    },
    getFileVaultKey: {
        uriTemplate: GetFileVaultKeyRequestBuilderUriTemplate,
        requestsMetadata: GetFileVaultKeyRequestBuilderRequestsMetadata,
    },
    getNonCompliantSettings: {
        uriTemplate: GetNonCompliantSettingsRequestBuilderUriTemplate,
        requestsMetadata: GetNonCompliantSettingsRequestBuilderRequestsMetadata,
    },
    initiateDeviceAttestation: {
        uriTemplate: InitiateDeviceAttestationRequestBuilderUriTemplate,
        requestsMetadata: InitiateDeviceAttestationRequestBuilderRequestsMetadata,
    },
    initiateMobileDeviceManagementKeyRecovery: {
        uriTemplate: InitiateMobileDeviceManagementKeyRecoveryRequestBuilderUriTemplate,
        requestsMetadata: InitiateMobileDeviceManagementKeyRecoveryRequestBuilderRequestsMetadata,
    },
    initiateOnDemandProactiveRemediation: {
        uriTemplate: InitiateOnDemandProactiveRemediationRequestBuilderUriTemplate,
        requestsMetadata: InitiateOnDemandProactiveRemediationRequestBuilderRequestsMetadata,
    },
    locateDevice: {
        uriTemplate: LocateDeviceRequestBuilderUriTemplate,
        requestsMetadata: LocateDeviceRequestBuilderRequestsMetadata,
    },
    logCollectionRequests: {
        uriTemplate: LogCollectionRequestsRequestBuilderUriTemplate,
        requestsMetadata: LogCollectionRequestsRequestBuilderRequestsMetadata,
        navigationMetadata: LogCollectionRequestsRequestBuilderNavigationMetadata,
    },
    logoutSharedAppleDeviceActiveUser: {
        uriTemplate: LogoutSharedAppleDeviceActiveUserRequestBuilderUriTemplate,
        requestsMetadata: LogoutSharedAppleDeviceActiveUserRequestBuilderRequestsMetadata,
    },
    managedDeviceMobileAppConfigurationStates: {
        uriTemplate: ManagedDeviceMobileAppConfigurationStatesRequestBuilderUriTemplate,
        requestsMetadata: ManagedDeviceMobileAppConfigurationStatesRequestBuilderRequestsMetadata,
        navigationMetadata: ManagedDeviceMobileAppConfigurationStatesRequestBuilderNavigationMetadata,
    },
    overrideComplianceState: {
        uriTemplate: OverrideComplianceStateRequestBuilderUriTemplate,
        requestsMetadata: OverrideComplianceStateRequestBuilderRequestsMetadata,
    },
    pauseConfigurationRefresh: {
        uriTemplate: PauseConfigurationRefreshRequestBuilderUriTemplate,
        requestsMetadata: PauseConfigurationRefreshRequestBuilderRequestsMetadata,
    },
    playLostModeSound: {
        uriTemplate: PlayLostModeSoundRequestBuilderUriTemplate,
        requestsMetadata: PlayLostModeSoundRequestBuilderRequestsMetadata,
    },
    rebootNow: {
        uriTemplate: RebootNowRequestBuilderUriTemplate,
        requestsMetadata: RebootNowRequestBuilderRequestsMetadata,
    },
    recoverPasscode: {
        uriTemplate: RecoverPasscodeRequestBuilderUriTemplate,
        requestsMetadata: RecoverPasscodeRequestBuilderRequestsMetadata,
    },
    reenable: {
        uriTemplate: ReenableRequestBuilderUriTemplate,
        requestsMetadata: ReenableRequestBuilderRequestsMetadata,
    },
    remoteLock: {
        uriTemplate: RemoteLockRequestBuilderUriTemplate,
        requestsMetadata: RemoteLockRequestBuilderRequestsMetadata,
    },
    removeDeviceFirmwareConfigurationInterfaceManagement: {
        uriTemplate: RemoveDeviceFirmwareConfigurationInterfaceManagementRequestBuilderUriTemplate,
        requestsMetadata: RemoveDeviceFirmwareConfigurationInterfaceManagementRequestBuilderRequestsMetadata,
    },
    reprovisionCloudPc: {
        uriTemplate: ReprovisionCloudPcRequestBuilderUriTemplate,
        requestsMetadata: ReprovisionCloudPcRequestBuilderRequestsMetadata,
    },
    requestRemoteAssistance: {
        uriTemplate: RequestRemoteAssistanceRequestBuilderUriTemplate,
        requestsMetadata: RequestRemoteAssistanceRequestBuilderRequestsMetadata,
    },
    resetPasscode: {
        uriTemplate: ResetPasscodeRequestBuilderUriTemplate,
        requestsMetadata: ResetPasscodeRequestBuilderRequestsMetadata,
    },
    resizeCloudPc: {
        uriTemplate: ResizeCloudPcRequestBuilderUriTemplate,
        requestsMetadata: ResizeCloudPcRequestBuilderRequestsMetadata,
    },
    restoreCloudPc: {
        uriTemplate: RestoreCloudPcRequestBuilderUriTemplate,
        requestsMetadata: RestoreCloudPcRequestBuilderRequestsMetadata,
    },
    retire: {
        uriTemplate: RetireRequestBuilderUriTemplate,
        requestsMetadata: RetireRequestBuilderRequestsMetadata,
    },
    revokeAppleVppLicenses: {
        uriTemplate: RevokeAppleVppLicensesRequestBuilderUriTemplate,
        requestsMetadata: RevokeAppleVppLicensesRequestBuilderRequestsMetadata,
    },
    rotateBitLockerKeys: {
        uriTemplate: RotateBitLockerKeysRequestBuilderUriTemplate,
        requestsMetadata: RotateBitLockerKeysRequestBuilderRequestsMetadata,
    },
    rotateFileVaultKey: {
        uriTemplate: RotateFileVaultKeyRequestBuilderUriTemplate,
        requestsMetadata: RotateFileVaultKeyRequestBuilderRequestsMetadata,
    },
    rotateLocalAdminPassword: {
        uriTemplate: RotateLocalAdminPasswordRequestBuilderUriTemplate,
        requestsMetadata: RotateLocalAdminPasswordRequestBuilderRequestsMetadata,
    },
    securityBaselineStates: {
        uriTemplate: SecurityBaselineStatesRequestBuilderUriTemplate,
        requestsMetadata: SecurityBaselineStatesRequestBuilderRequestsMetadata,
        navigationMetadata: SecurityBaselineStatesRequestBuilderNavigationMetadata,
    },
    sendCustomNotificationToCompanyPortal: {
        uriTemplate: SendCustomNotificationToCompanyPortalRequestBuilderUriTemplate,
        requestsMetadata: SendCustomNotificationToCompanyPortalRequestBuilderRequestsMetadata,
    },
    setCloudPcReviewStatus: {
        uriTemplate: SetCloudPcReviewStatusRequestBuilderUriTemplate,
        requestsMetadata: SetCloudPcReviewStatusRequestBuilderRequestsMetadata,
    },
    setDeviceName: {
        uriTemplate: SetDeviceNameRequestBuilderUriTemplate,
        requestsMetadata: SetDeviceNameRequestBuilderRequestsMetadata,
    },
    shutDown: {
        uriTemplate: ShutDownRequestBuilderUriTemplate,
        requestsMetadata: ShutDownRequestBuilderRequestsMetadata,
    },
    syncDevice: {
        uriTemplate: SyncDeviceRequestBuilderUriTemplate,
        requestsMetadata: SyncDeviceRequestBuilderRequestsMetadata,
    },
    triggerConfigurationManagerAction: {
        uriTemplate: TriggerConfigurationManagerActionRequestBuilderUriTemplate,
        requestsMetadata: TriggerConfigurationManagerActionRequestBuilderRequestsMetadata,
    },
    updateWindowsDeviceAccount: {
        uriTemplate: UpdateWindowsDeviceAccountRequestBuilderUriTemplate,
        requestsMetadata: UpdateWindowsDeviceAccountRequestBuilderRequestsMetadata,
    },
    users: {
        uriTemplate: UsersRequestBuilderUriTemplate,
        requestsMetadata: UsersRequestBuilderRequestsMetadata,
    },
    windowsDefenderScan: {
        uriTemplate: WindowsDefenderScanRequestBuilderUriTemplate,
        requestsMetadata: WindowsDefenderScanRequestBuilderRequestsMetadata,
    },
    windowsDefenderUpdateSignatures: {
        uriTemplate: WindowsDefenderUpdateSignaturesRequestBuilderUriTemplate,
        requestsMetadata: WindowsDefenderUpdateSignaturesRequestBuilderRequestsMetadata,
    },
    windowsProtectionState: {
        uriTemplate: WindowsProtectionStateRequestBuilderUriTemplate,
        requestsMetadata: WindowsProtectionStateRequestBuilderRequestsMetadata,
        navigationMetadata: WindowsProtectionStateRequestBuilderNavigationMetadata,
    },
    wipe: {
        uriTemplate: WipeRequestBuilderUriTemplate,
        requestsMetadata: WipeRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ManagedDeviceItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createManagedDeviceFromDiscriminatorValue,
        queryParametersMapper: ManagedDeviceItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createManagedDeviceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeManagedDevice,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const ManagedDeviceItemRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/comanagedDevices/{managedDevice%2Did}{?%24expand,%24select}";
/* tslint:enable */
/* eslint-enable */
