/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { AdministratorConfiguredDeviceComplianceState, AdministratorConfiguredDeviceComplianceStateObject } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OverrideComplianceStatePostRequestBody}
 */
export function createOverrideComplianceStatePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOverrideComplianceStatePostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoOverrideComplianceStatePostRequestBody(overrideComplianceStatePostRequestBody: Partial<OverrideComplianceStatePostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { overrideComplianceStatePostRequestBody.backingStoreEnabled = true; },
        "complianceState": n => { overrideComplianceStatePostRequestBody.complianceState = n.getEnumValue<AdministratorConfiguredDeviceComplianceState>(AdministratorConfiguredDeviceComplianceStateObject); },
        "remediationUrl": n => { overrideComplianceStatePostRequestBody.remediationUrl = n.getStringValue(); },
    }
}
export interface OverrideComplianceStatePostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * Administrator configured device compliance state Enum
     */
    complianceState?: AdministratorConfiguredDeviceComplianceState;
    /**
     * The remediationUrl property
     */
    remediationUrl?: string;
}
/**
 * Provides operations to call the overrideComplianceState method.
 */
export interface OverrideComplianceStateRequestBuilder extends BaseRequestBuilder<OverrideComplianceStateRequestBuilder> {
    /**
     * Invoke action overrideComplianceState
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: OverrideComplianceStatePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Invoke action overrideComplianceState
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: OverrideComplianceStatePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeOverrideComplianceStatePostRequestBody(writer: SerializationWriter, overrideComplianceStatePostRequestBody: Partial<OverrideComplianceStatePostRequestBody> | undefined = {}) : void {
    writer.writeEnumValue<AdministratorConfiguredDeviceComplianceState>("complianceState", overrideComplianceStatePostRequestBody.complianceState);
    writer.writeStringValue("remediationUrl", overrideComplianceStatePostRequestBody.remediationUrl);
    writer.writeAdditionalData(overrideComplianceStatePostRequestBody.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const OverrideComplianceStateRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/comanagedDevices/{managedDevice%2Did}/overrideComplianceState";
/**
 * Metadata for all the requests in the request builder.
 */
export const OverrideComplianceStateRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: OverrideComplianceStateRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeOverrideComplianceStatePostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
