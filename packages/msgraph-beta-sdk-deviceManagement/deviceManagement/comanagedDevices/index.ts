/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createManagedDeviceCollectionResponseFromDiscriminatorValue, createManagedDeviceFromDiscriminatorValue, serializeManagedDevice, type ManagedDevice, type ManagedDeviceCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { AppDiagnosticsWithUpnRequestBuilderRequestsMetadata, AppDiagnosticsWithUpnRequestBuilderUriTemplate, type AppDiagnosticsWithUpnRequestBuilder } from './appDiagnosticsWithUpn/';
import { BulkReprovisionCloudPcRequestBuilderRequestsMetadata, BulkReprovisionCloudPcRequestBuilderUriTemplate, type BulkReprovisionCloudPcRequestBuilder } from './bulkReprovisionCloudPc/';
import { BulkRestoreCloudPcRequestBuilderRequestsMetadata, BulkRestoreCloudPcRequestBuilderUriTemplate, type BulkRestoreCloudPcRequestBuilder } from './bulkRestoreCloudPc/';
import { BulkSetCloudPcReviewStatusRequestBuilderRequestsMetadata, BulkSetCloudPcReviewStatusRequestBuilderUriTemplate, type BulkSetCloudPcReviewStatusRequestBuilder } from './bulkSetCloudPcReviewStatus/';
import { CountRequestBuilderRequestsMetadata, CountRequestBuilderUriTemplate, type CountRequestBuilder } from './count/';
import { DownloadAppDiagnosticsRequestBuilderRequestsMetadata, DownloadAppDiagnosticsRequestBuilderUriTemplate, type DownloadAppDiagnosticsRequestBuilder } from './downloadAppDiagnostics/';
import { ExecuteActionRequestBuilderRequestsMetadata, ExecuteActionRequestBuilderUriTemplate, type ExecuteActionRequestBuilder } from './executeAction/';
import { ManagedDeviceItemRequestBuilderNavigationMetadata, ManagedDeviceItemRequestBuilderRequestsMetadata, ManagedDeviceItemRequestBuilderUriTemplate, type ManagedDeviceItemRequestBuilder } from './item/';
import { MoveDevicesToOURequestBuilderRequestsMetadata, MoveDevicesToOURequestBuilderUriTemplate, type MoveDevicesToOURequestBuilder } from './moveDevicesToOU/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the comanagedDevices property of the microsoft.graph.deviceManagement entity.
 */
export interface ComanagedDevicesRequestBuilder extends BaseRequestBuilder<ComanagedDevicesRequestBuilder> {
    /**
     * Provides operations to call the bulkReprovisionCloudPc method.
     */
    get bulkReprovisionCloudPc(): BulkReprovisionCloudPcRequestBuilder;
    /**
     * Provides operations to call the bulkRestoreCloudPc method.
     */
    get bulkRestoreCloudPc(): BulkRestoreCloudPcRequestBuilder;
    /**
     * Provides operations to call the bulkSetCloudPcReviewStatus method.
     */
    get bulkSetCloudPcReviewStatus(): BulkSetCloudPcReviewStatusRequestBuilder;
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to call the downloadAppDiagnostics method.
     */
    get downloadAppDiagnostics(): DownloadAppDiagnosticsRequestBuilder;
    /**
     * Provides operations to call the executeAction method.
     */
    get executeAction(): ExecuteActionRequestBuilder;
    /**
     * Provides operations to call the moveDevicesToOU method.
     */
    get moveDevicesToOU(): MoveDevicesToOURequestBuilder;
    /**
     * Provides operations to call the appDiagnostics method.
     * @param upn Usage: upn='{upn}'
     * @returns a appDiagnosticsWithUpnRequestBuilder
     */
     appDiagnosticsWithUpn(upn: string | undefined) : AppDiagnosticsWithUpnRequestBuilder;
    /**
     * Provides operations to manage the comanagedDevices property of the microsoft.graph.deviceManagement entity.
     * @param managedDeviceId The unique identifier of managedDevice
     * @returns a ManagedDeviceItemRequestBuilder
     */
     byManagedDeviceId(managedDeviceId: string) : ManagedDeviceItemRequestBuilder;
    /**
     * The list of co-managed devices report
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of ManagedDeviceCollectionResponse
     */
     get(requestConfiguration?: RequestConfiguration<ComanagedDevicesRequestBuilderGetQueryParameters> | undefined) : Promise<ManagedDeviceCollectionResponse | undefined>;
    /**
     * Create new navigation property to comanagedDevices for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of ManagedDevice
     */
     post(body: ManagedDevice, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ManagedDevice | undefined>;
    /**
     * The list of co-managed devices report
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ComanagedDevicesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to comanagedDevices for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: ManagedDevice, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The list of co-managed devices report
 */
export interface ComanagedDevicesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ComanagedDevicesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ComanagedDevicesRequestBuilderNavigationMetadata: Record<Exclude<keyof ComanagedDevicesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    appDiagnosticsWithUpn: {
        uriTemplate: AppDiagnosticsWithUpnRequestBuilderUriTemplate,
        requestsMetadata: AppDiagnosticsWithUpnRequestBuilderRequestsMetadata,
    },
    byManagedDeviceId: {
        uriTemplate: ManagedDeviceItemRequestBuilderUriTemplate,
        requestsMetadata: ManagedDeviceItemRequestBuilderRequestsMetadata,
        navigationMetadata: ManagedDeviceItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["managedDevice%2Did"],
    },
    bulkReprovisionCloudPc: {
        uriTemplate: BulkReprovisionCloudPcRequestBuilderUriTemplate,
        requestsMetadata: BulkReprovisionCloudPcRequestBuilderRequestsMetadata,
    },
    bulkRestoreCloudPc: {
        uriTemplate: BulkRestoreCloudPcRequestBuilderUriTemplate,
        requestsMetadata: BulkRestoreCloudPcRequestBuilderRequestsMetadata,
    },
    bulkSetCloudPcReviewStatus: {
        uriTemplate: BulkSetCloudPcReviewStatusRequestBuilderUriTemplate,
        requestsMetadata: BulkSetCloudPcReviewStatusRequestBuilderRequestsMetadata,
    },
    count: {
        uriTemplate: CountRequestBuilderUriTemplate,
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    downloadAppDiagnostics: {
        uriTemplate: DownloadAppDiagnosticsRequestBuilderUriTemplate,
        requestsMetadata: DownloadAppDiagnosticsRequestBuilderRequestsMetadata,
    },
    executeAction: {
        uriTemplate: ExecuteActionRequestBuilderUriTemplate,
        requestsMetadata: ExecuteActionRequestBuilderRequestsMetadata,
    },
    moveDevicesToOU: {
        uriTemplate: MoveDevicesToOURequestBuilderUriTemplate,
        requestsMetadata: MoveDevicesToOURequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ComanagedDevicesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createManagedDeviceCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: ComanagedDevicesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createManagedDeviceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeManagedDevice,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const ComanagedDevicesRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/comanagedDevices{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/* tslint:enable */
/* eslint-enable */
