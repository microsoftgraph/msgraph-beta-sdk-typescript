/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDeviceManagementConfigurationPolicyFromDiscriminatorValue, serializeDeviceManagementConfigurationPolicy, type DeviceManagementConfigurationPolicy } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { AssignRequestBuilderRequestsMetadata, type AssignRequestBuilder } from './assign/';
import { AssignmentsRequestBuilderNavigationMetadata, AssignmentsRequestBuilderRequestsMetadata, type AssignmentsRequestBuilder } from './assignments/';
import { CreateCopyRequestBuilderRequestsMetadata, type CreateCopyRequestBuilder } from './createCopy/';
import { ReorderRequestBuilderRequestsMetadata, type ReorderRequestBuilder } from './reorder/';
import { RetrieveLatestUpgradeDefaultBaselinePolicyRequestBuilderRequestsMetadata, type RetrieveLatestUpgradeDefaultBaselinePolicyRequestBuilder } from './retrieveLatestUpgradeDefaultBaselinePolicy/';
import { SettingsRequestBuilderNavigationMetadata, SettingsRequestBuilderRequestsMetadata, type SettingsRequestBuilder } from './settings/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the configurationPolicies property of the microsoft.graph.deviceManagement entity.
 */
export interface DeviceManagementConfigurationPolicyItemRequestBuilder extends BaseRequestBuilder<DeviceManagementConfigurationPolicyItemRequestBuilder> {
    /**
     * Provides operations to call the assign method.
     */
    get assign(): AssignRequestBuilder;
    /**
     * Provides operations to manage the assignments property of the microsoft.graph.deviceManagementConfigurationPolicy entity.
     */
    get assignments(): AssignmentsRequestBuilder;
    /**
     * Provides operations to call the createCopy method.
     */
    get createCopy(): CreateCopyRequestBuilder;
    /**
     * Provides operations to call the reorder method.
     */
    get reorder(): ReorderRequestBuilder;
    /**
     * Provides operations to call the retrieveLatestUpgradeDefaultBaselinePolicy method.
     */
    get retrieveLatestUpgradeDefaultBaselinePolicy(): RetrieveLatestUpgradeDefaultBaselinePolicyRequestBuilder;
    /**
     * Provides operations to manage the settings property of the microsoft.graph.deviceManagementConfigurationPolicy entity.
     */
    get settings(): SettingsRequestBuilder;
    /**
     * Delete navigation property configurationPolicies for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * List of all Configuration policies
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceManagementConfigurationPolicy>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<DeviceManagementConfigurationPolicyItemRequestBuilderGetQueryParameters> | undefined) : Promise<DeviceManagementConfigurationPolicy | undefined>;
    /**
     * Update the navigation property configurationPolicies in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceManagementConfigurationPolicy>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: DeviceManagementConfigurationPolicy, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DeviceManagementConfigurationPolicy | undefined>;
    /**
     * Delete navigation property configurationPolicies for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * List of all Configuration policies
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DeviceManagementConfigurationPolicyItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property configurationPolicies in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: DeviceManagementConfigurationPolicy, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * List of all Configuration policies
 */
export interface DeviceManagementConfigurationPolicyItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const DeviceManagementConfigurationPolicyItemRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/configurationPolicies/{deviceManagementConfigurationPolicy%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DeviceManagementConfigurationPolicyItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DeviceManagementConfigurationPolicyItemRequestBuilderNavigationMetadata: Record<Exclude<keyof DeviceManagementConfigurationPolicyItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    assign: {
        requestsMetadata: AssignRequestBuilderRequestsMetadata,
    },
    assignments: {
        requestsMetadata: AssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AssignmentsRequestBuilderNavigationMetadata,
    },
    createCopy: {
        requestsMetadata: CreateCopyRequestBuilderRequestsMetadata,
    },
    reorder: {
        requestsMetadata: ReorderRequestBuilderRequestsMetadata,
    },
    retrieveLatestUpgradeDefaultBaselinePolicy: {
        requestsMetadata: RetrieveLatestUpgradeDefaultBaselinePolicyRequestBuilderRequestsMetadata,
    },
    settings: {
        requestsMetadata: SettingsRequestBuilderRequestsMetadata,
        navigationMetadata: SettingsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DeviceManagementConfigurationPolicyItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: DeviceManagementConfigurationPolicyItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: DeviceManagementConfigurationPolicyItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceManagementConfigurationPolicyFromDiscriminatorValue,
        queryParametersMapper: DeviceManagementConfigurationPolicyItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: DeviceManagementConfigurationPolicyItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceManagementConfigurationPolicyFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDeviceManagementConfigurationPolicy,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the configurationPolicies property of the microsoft.graph.deviceManagement entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Assignments: "assignments",
    Settings: "settings",
} as const;
/**
 * Provides operations to manage the configurationPolicies property of the microsoft.graph.deviceManagement entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    CreatedDateTime: "createdDateTime",
    CreationSource: "creationSource",
    Description: "description",
    IsAssigned: "isAssigned",
    LastModifiedDateTime: "lastModifiedDateTime",
    Name: "name",
    Platforms: "platforms",
    PriorityMetaData: "priorityMetaData",
    RoleScopeTagIds: "roleScopeTagIds",
    SettingCount: "settingCount",
    Technologies: "technologies",
    TemplateReference: "templateReference",
    Assignments: "assignments",
    Settings: "settings",
} as const;
/* tslint:enable */
/* eslint-enable */
