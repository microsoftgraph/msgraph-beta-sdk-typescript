/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDeviceAndAppManagementAssignmentFilterCollectionResponseFromDiscriminatorValue, createDeviceAndAppManagementAssignmentFilterFromDiscriminatorValue, serializeDeviceAndAppManagementAssignmentFilter, type DeviceAndAppManagementAssignmentFilter, type DeviceAndAppManagementAssignmentFilterCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, CountRequestBuilderUriTemplate, type CountRequestBuilder } from './count/';
import { EnableRequestBuilderRequestsMetadata, EnableRequestBuilderUriTemplate, type EnableRequestBuilder } from './enable/';
import { GetPlatformSupportedPropertiesWithPlatformRequestBuilderRequestsMetadata, GetPlatformSupportedPropertiesWithPlatformRequestBuilderUriTemplate, type GetPlatformSupportedPropertiesWithPlatformRequestBuilder } from './getPlatformSupportedPropertiesWithPlatform/';
import { GetStateRequestBuilderRequestsMetadata, GetStateRequestBuilderUriTemplate, type GetStateRequestBuilder } from './getState/';
import { DeviceAndAppManagementAssignmentFilterItemRequestBuilderNavigationMetadata, DeviceAndAppManagementAssignmentFilterItemRequestBuilderRequestsMetadata, DeviceAndAppManagementAssignmentFilterItemRequestBuilderUriTemplate, type DeviceAndAppManagementAssignmentFilterItemRequestBuilder } from './item/';
import { type ValidateFilterRequestBuilder, ValidateFilterRequestBuilderRequestsMetadata, ValidateFilterRequestBuilderUriTemplate } from './validateFilter/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the assignmentFilters property of the microsoft.graph.deviceManagement entity.
 */
export interface AssignmentFiltersRequestBuilder extends BaseRequestBuilder<AssignmentFiltersRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to call the enable method.
     */
    get enable(): EnableRequestBuilder;
    /**
     * Provides operations to call the getState method.
     */
    get getState(): GetStateRequestBuilder;
    /**
     * Provides operations to call the validateFilter method.
     */
    get validateFilter(): ValidateFilterRequestBuilder;
    /**
     * Provides operations to manage the assignmentFilters property of the microsoft.graph.deviceManagement entity.
     * @param deviceAndAppManagementAssignmentFilterId The unique identifier of deviceAndAppManagementAssignmentFilter
     * @returns a DeviceAndAppManagementAssignmentFilterItemRequestBuilder
     */
     byDeviceAndAppManagementAssignmentFilterId(deviceAndAppManagementAssignmentFilterId: string) : DeviceAndAppManagementAssignmentFilterItemRequestBuilder;
    /**
     * The list of assignment filters
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of DeviceAndAppManagementAssignmentFilterCollectionResponse
     */
     get(requestConfiguration?: RequestConfiguration<AssignmentFiltersRequestBuilderGetQueryParameters> | undefined) : Promise<DeviceAndAppManagementAssignmentFilterCollectionResponse | undefined>;
    /**
     * Provides operations to call the getPlatformSupportedProperties method.
     * @param platform Usage: platform='{platform}'
     * @returns a getPlatformSupportedPropertiesWithPlatformRequestBuilder
     */
     getPlatformSupportedPropertiesWithPlatform(platform: string | undefined) : GetPlatformSupportedPropertiesWithPlatformRequestBuilder;
    /**
     * Create new navigation property to assignmentFilters for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of DeviceAndAppManagementAssignmentFilter
     */
     post(body: DeviceAndAppManagementAssignmentFilter, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DeviceAndAppManagementAssignmentFilter | undefined>;
    /**
     * The list of assignment filters
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AssignmentFiltersRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to assignmentFilters for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: DeviceAndAppManagementAssignmentFilter, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The list of assignment filters
 */
export interface AssignmentFiltersRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AssignmentFiltersRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AssignmentFiltersRequestBuilderNavigationMetadata: Record<Exclude<keyof AssignmentFiltersRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byDeviceAndAppManagementAssignmentFilterId: {
        uriTemplate: DeviceAndAppManagementAssignmentFilterItemRequestBuilderUriTemplate,
        requestsMetadata: DeviceAndAppManagementAssignmentFilterItemRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceAndAppManagementAssignmentFilterItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["deviceAndAppManagementAssignmentFilter%2Did"],
    },
    getPlatformSupportedPropertiesWithPlatform: {
        uriTemplate: GetPlatformSupportedPropertiesWithPlatformRequestBuilderUriTemplate,
        requestsMetadata: GetPlatformSupportedPropertiesWithPlatformRequestBuilderRequestsMetadata,
    },
    count: {
        uriTemplate: CountRequestBuilderUriTemplate,
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    enable: {
        uriTemplate: EnableRequestBuilderUriTemplate,
        requestsMetadata: EnableRequestBuilderRequestsMetadata,
    },
    getState: {
        uriTemplate: GetStateRequestBuilderUriTemplate,
        requestsMetadata: GetStateRequestBuilderRequestsMetadata,
    },
    validateFilter: {
        uriTemplate: ValidateFilterRequestBuilderUriTemplate,
        requestsMetadata: ValidateFilterRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AssignmentFiltersRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDeviceAndAppManagementAssignmentFilterCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: AssignmentFiltersRequestBuilderGetQueryParametersMapper,
    },
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDeviceAndAppManagementAssignmentFilterFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDeviceAndAppManagementAssignmentFilter,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const AssignmentFiltersRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/assignmentFilters{?%24top,%24skip,%24search,%24filter,%24count,%24orderby,%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
