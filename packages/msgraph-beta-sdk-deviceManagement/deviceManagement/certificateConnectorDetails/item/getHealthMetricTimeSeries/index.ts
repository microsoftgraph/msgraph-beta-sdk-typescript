/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createCertificateConnectorHealthMetricValueFromDiscriminatorValue, createTimeSeriesParameterFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, serializeCertificateConnectorHealthMetricValue, serializeTimeSeriesParameter, type BaseCollectionPaginationCountResponse, type CertificateConnectorHealthMetricValue, type TimeSeriesParameter } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GetHealthMetricTimeSeriesPostRequestBody}
 */
// @ts-ignore
export function createGetHealthMetricTimeSeriesPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGetHealthMetricTimeSeriesPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GetHealthMetricTimeSeriesPostResponse}
 */
// @ts-ignore
export function createGetHealthMetricTimeSeriesPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGetHealthMetricTimeSeriesPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGetHealthMetricTimeSeriesPostRequestBody(getHealthMetricTimeSeriesPostRequestBody: Partial<GetHealthMetricTimeSeriesPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { getHealthMetricTimeSeriesPostRequestBody.backingStoreEnabled = true; },
        "timeSeries": n => { getHealthMetricTimeSeriesPostRequestBody.timeSeries = n.getObjectValue<TimeSeriesParameter>(createTimeSeriesParameterFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGetHealthMetricTimeSeriesPostResponse(getHealthMetricTimeSeriesPostResponse: Partial<GetHealthMetricTimeSeriesPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(getHealthMetricTimeSeriesPostResponse),
        "value": n => { getHealthMetricTimeSeriesPostResponse.value = n.getCollectionOfObjectValues<CertificateConnectorHealthMetricValue>(createCertificateConnectorHealthMetricValueFromDiscriminatorValue); },
    }
}
export interface GetHealthMetricTimeSeriesPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The timeSeries property
     */
    timeSeries?: TimeSeriesParameter;
}
export interface GetHealthMetricTimeSeriesPostResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: CertificateConnectorHealthMetricValue[];
}
/**
 * Provides operations to call the getHealthMetricTimeSeries method.
 */
export interface GetHealthMetricTimeSeriesRequestBuilder extends BaseRequestBuilder<GetHealthMetricTimeSeriesRequestBuilder> {
    /**
     * Invoke action getHealthMetricTimeSeries
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<GetHealthMetricTimeSeriesPostResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: GetHealthMetricTimeSeriesPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<GetHealthMetricTimeSeriesPostResponse | undefined>;
    /**
     * Invoke action getHealthMetricTimeSeries
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: GetHealthMetricTimeSeriesPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGetHealthMetricTimeSeriesPostRequestBody(writer: SerializationWriter, getHealthMetricTimeSeriesPostRequestBody: Partial<GetHealthMetricTimeSeriesPostRequestBody> | undefined = {}) : void {
    writer.writeObjectValue<TimeSeriesParameter>("timeSeries", getHealthMetricTimeSeriesPostRequestBody.timeSeries, serializeTimeSeriesParameter);
    writer.writeAdditionalData(getHealthMetricTimeSeriesPostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGetHealthMetricTimeSeriesPostResponse(writer: SerializationWriter, getHealthMetricTimeSeriesPostResponse: Partial<GetHealthMetricTimeSeriesPostResponse> | undefined = {}) : void {
    serializeBaseCollectionPaginationCountResponse(writer, getHealthMetricTimeSeriesPostResponse)
    writer.writeCollectionOfObjectValues<CertificateConnectorHealthMetricValue>("value", getHealthMetricTimeSeriesPostResponse.value, serializeCertificateConnectorHealthMetricValue);
}
/**
 * Uri template for the request builder.
 */
export const GetHealthMetricTimeSeriesRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/certificateConnectorDetails/{certificateConnectorDetails%2Did}/getHealthMetricTimeSeries";
/**
 * Metadata for all the requests in the request builder.
 */
export const GetHealthMetricTimeSeriesRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: GetHealthMetricTimeSeriesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createGetHealthMetricTimeSeriesPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeGetHealthMetricTimeSeriesPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
