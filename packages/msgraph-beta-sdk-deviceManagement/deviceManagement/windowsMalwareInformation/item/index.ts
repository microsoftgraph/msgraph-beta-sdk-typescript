/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createWindowsMalwareInformationFromDiscriminatorValue, serializeWindowsMalwareInformation, type WindowsMalwareInformation } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { DeviceMalwareStatesRequestBuilderNavigationMetadata, DeviceMalwareStatesRequestBuilderRequestsMetadata, DeviceMalwareStatesRequestBuilderUriTemplate, type DeviceMalwareStatesRequestBuilder } from './deviceMalwareStates/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the windowsMalwareInformation property of the microsoft.graph.deviceManagement entity.
 */
export interface WindowsMalwareInformationItemRequestBuilder extends BaseRequestBuilder<WindowsMalwareInformationItemRequestBuilder> {
    /**
     * Provides operations to manage the deviceMalwareStates property of the microsoft.graph.windowsMalwareInformation entity.
     */
    get deviceMalwareStates(): DeviceMalwareStatesRequestBuilder;
    /**
     * Delete navigation property windowsMalwareInformation for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The list of affected malware in the tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of WindowsMalwareInformation
     */
     get(requestConfiguration?: RequestConfiguration<WindowsMalwareInformationItemRequestBuilderGetQueryParameters> | undefined) : Promise<WindowsMalwareInformation | undefined>;
    /**
     * Update the navigation property windowsMalwareInformation in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of WindowsMalwareInformation
     */
     patch(body: WindowsMalwareInformation, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WindowsMalwareInformation | undefined>;
    /**
     * Delete navigation property windowsMalwareInformation for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The list of affected malware in the tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<WindowsMalwareInformationItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property windowsMalwareInformation in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: WindowsMalwareInformation, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The list of affected malware in the tenant.
 */
export interface WindowsMalwareInformationItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const WindowsMalwareInformationItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WindowsMalwareInformationItemRequestBuilderNavigationMetadata: Record<Exclude<keyof WindowsMalwareInformationItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    deviceMalwareStates: {
        uriTemplate: DeviceMalwareStatesRequestBuilderUriTemplate,
        requestsMetadata: DeviceMalwareStatesRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceMalwareStatesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WindowsMalwareInformationItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createWindowsMalwareInformationFromDiscriminatorValue,
        queryParametersMapper: WindowsMalwareInformationItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createWindowsMalwareInformationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeWindowsMalwareInformation,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const WindowsMalwareInformationItemRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/windowsMalwareInformation/{windowsMalwareInformation%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
