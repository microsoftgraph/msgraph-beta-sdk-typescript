/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPrivilegeManagementElevationRequestFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, serializePrivilegeManagementElevationRequest, type BaseCollectionPaginationCountResponse, type PrivilegeManagementElevationRequest } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a getAllElevationRequestsPostResponse
 */
export function createGetAllElevationRequestsPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGetAllElevationRequestsPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoGetAllElevationRequestsPostResponse(getAllElevationRequestsPostResponse: Partial<GetAllElevationRequestsPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(getAllElevationRequestsPostResponse),
        "value": n => { getAllElevationRequestsPostResponse.value = n.getCollectionOfObjectValues<PrivilegeManagementElevationRequest>(createPrivilegeManagementElevationRequestFromDiscriminatorValue); },
    }
}
export interface GetAllElevationRequestsPostResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: PrivilegeManagementElevationRequest[];
}
/**
 * Provides operations to call the getAllElevationRequests method.
 */
export interface GetAllElevationRequestsRequestBuilder extends BaseRequestBuilder<GetAllElevationRequestsRequestBuilder> {
    /**
     * Invoke action getAllElevationRequests
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of GetAllElevationRequestsPostResponse
     */
     post(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<GetAllElevationRequestsPostResponse | undefined>;
    /**
     * Invoke action getAllElevationRequests
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeGetAllElevationRequestsPostResponse(writer: SerializationWriter, getAllElevationRequestsPostResponse: Partial<GetAllElevationRequestsPostResponse> | undefined = {}) : void {
    serializeBaseCollectionPaginationCountResponse(writer, getAllElevationRequestsPostResponse)
    writer.writeCollectionOfObjectValues<PrivilegeManagementElevationRequest>("value", getAllElevationRequestsPostResponse.value, serializePrivilegeManagementElevationRequest);
}
/**
 * Metadata for all the requests in the request builder.
 */
export const GetAllElevationRequestsRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createGetAllElevationRequestsPostResponseFromDiscriminatorValue,
    },
};
/**
 * Uri template for the request builder.
 */
export const GetAllElevationRequestsRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/elevationRequests/{privilegeManagementElevationRequest%2Did}/getAllElevationRequests";
/* tslint:enable */
/* eslint-enable */
