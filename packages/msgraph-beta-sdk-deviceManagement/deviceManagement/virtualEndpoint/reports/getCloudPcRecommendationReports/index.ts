/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { CloudPcReportName, CloudPcReportNameObject } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a getCloudPcRecommendationReportsPostRequestBody
 */
export function createGetCloudPcRecommendationReportsPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGetCloudPcRecommendationReportsPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoGetCloudPcRecommendationReportsPostRequestBody(getCloudPcRecommendationReportsPostRequestBody: Partial<GetCloudPcRecommendationReportsPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { getCloudPcRecommendationReportsPostRequestBody.backingStoreEnabled = true; },
        "filter": n => { getCloudPcRecommendationReportsPostRequestBody.filter = n.getStringValue(); },
        "groupBy": n => { getCloudPcRecommendationReportsPostRequestBody.groupBy = n.getCollectionOfPrimitiveValues<string>(); },
        "orderBy": n => { getCloudPcRecommendationReportsPostRequestBody.orderBy = n.getCollectionOfPrimitiveValues<string>(); },
        "reportName": n => { getCloudPcRecommendationReportsPostRequestBody.reportName = n.getEnumValue<CloudPcReportName>(CloudPcReportNameObject); },
        "search": n => { getCloudPcRecommendationReportsPostRequestBody.search = n.getStringValue(); },
        "select": n => { getCloudPcRecommendationReportsPostRequestBody.select = n.getCollectionOfPrimitiveValues<string>(); },
        "skip": n => { getCloudPcRecommendationReportsPostRequestBody.skip = n.getNumberValue(); },
        "top": n => { getCloudPcRecommendationReportsPostRequestBody.top = n.getNumberValue(); },
    }
}
export interface GetCloudPcRecommendationReportsPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The filter property
     */
    filter?: string;
    /**
     * The groupBy property
     */
    groupBy?: string[];
    /**
     * The orderBy property
     */
    orderBy?: string[];
    /**
     * The reportName property
     */
    reportName?: CloudPcReportName;
    /**
     * The search property
     */
    search?: string;
    /**
     * The select property
     */
    select?: string[];
    /**
     * The skip property
     */
    skip?: number;
    /**
     * The top property
     */
    top?: number;
}
/**
 * Provides operations to call the getCloudPcRecommendationReports method.
 */
export interface GetCloudPcRecommendationReportsRequestBuilder extends BaseRequestBuilder<GetCloudPcRecommendationReportsRequestBuilder> {
    /**
     * Invoke action getCloudPcRecommendationReports
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of ArrayBuffer
     */
     post(body: GetCloudPcRecommendationReportsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * Invoke action getCloudPcRecommendationReports
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: GetCloudPcRecommendationReportsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeGetCloudPcRecommendationReportsPostRequestBody(writer: SerializationWriter, getCloudPcRecommendationReportsPostRequestBody: Partial<GetCloudPcRecommendationReportsPostRequestBody> | undefined = {}) : void {
    writer.writeStringValue("filter", getCloudPcRecommendationReportsPostRequestBody.filter);
    writer.writeCollectionOfPrimitiveValues<string>("groupBy", getCloudPcRecommendationReportsPostRequestBody.groupBy);
    writer.writeCollectionOfPrimitiveValues<string>("orderBy", getCloudPcRecommendationReportsPostRequestBody.orderBy);
    writer.writeEnumValue<CloudPcReportName>("reportName", getCloudPcRecommendationReportsPostRequestBody.reportName);
    writer.writeStringValue("search", getCloudPcRecommendationReportsPostRequestBody.search);
    writer.writeCollectionOfPrimitiveValues<string>("select", getCloudPcRecommendationReportsPostRequestBody.select);
    writer.writeNumberValue("skip", getCloudPcRecommendationReportsPostRequestBody.skip);
    writer.writeNumberValue("top", getCloudPcRecommendationReportsPostRequestBody.top);
    writer.writeAdditionalData(getCloudPcRecommendationReportsPostRequestBody.additionalData);
}
/**
 * Metadata for all the requests in the request builder.
 */
export const GetCloudPcRecommendationReportsRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/octet-stream, application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendPrimitiveAsync",
        responseBodyFactory:  "ArrayBuffer",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeGetCloudPcRecommendationReportsPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const GetCloudPcRecommendationReportsRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/virtualEndpoint/reports/getCloudPcRecommendationReports";
/* tslint:enable */
/* eslint-enable */
