/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { CloudPCFrontlineReportType, CloudPCFrontlineReportTypeObject } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetrieveFrontlineReportsPostRequestBody}
 */
// @ts-ignore
export function createRetrieveFrontlineReportsPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetrieveFrontlineReportsPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetrieveFrontlineReportsPostRequestBody(retrieveFrontlineReportsPostRequestBody: Partial<RetrieveFrontlineReportsPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { retrieveFrontlineReportsPostRequestBody.backingStoreEnabled = true; },
        "filter": n => { retrieveFrontlineReportsPostRequestBody.filter = n.getStringValue(); },
        "groupBy": n => { retrieveFrontlineReportsPostRequestBody.groupBy = n.getCollectionOfPrimitiveValues<string>(); },
        "orderBy": n => { retrieveFrontlineReportsPostRequestBody.orderBy = n.getCollectionOfPrimitiveValues<string>(); },
        "reportName": n => { retrieveFrontlineReportsPostRequestBody.reportName = n.getEnumValue<CloudPCFrontlineReportType>(CloudPCFrontlineReportTypeObject); },
        "search": n => { retrieveFrontlineReportsPostRequestBody.search = n.getStringValue(); },
        "select": n => { retrieveFrontlineReportsPostRequestBody.select = n.getCollectionOfPrimitiveValues<string>(); },
        "skip": n => { retrieveFrontlineReportsPostRequestBody.skip = n.getNumberValue(); },
        "top": n => { retrieveFrontlineReportsPostRequestBody.top = n.getNumberValue(); },
    }
}
export interface RetrieveFrontlineReportsPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The filter property
     */
    filter?: string | null;
    /**
     * The groupBy property
     */
    groupBy?: string[] | null;
    /**
     * The orderBy property
     */
    orderBy?: string[] | null;
    /**
     * The reportName property
     */
    reportName?: CloudPCFrontlineReportType | null;
    /**
     * The search property
     */
    search?: string | null;
    /**
     * The select property
     */
    select?: string[] | null;
    /**
     * The skip property
     */
    skip?: number | null;
    /**
     * The top property
     */
    top?: number | null;
}
/**
 * Provides operations to call the retrieveFrontlineReports method.
 */
export interface RetrieveFrontlineReportsRequestBuilder extends BaseRequestBuilder<RetrieveFrontlineReportsRequestBuilder> {
    /**
     * Invoke action retrieveFrontlineReports
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: RetrieveFrontlineReportsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * Invoke action retrieveFrontlineReports
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: RetrieveFrontlineReportsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetrieveFrontlineReportsPostRequestBody(writer: SerializationWriter, retrieveFrontlineReportsPostRequestBody: Partial<RetrieveFrontlineReportsPostRequestBody> | undefined | null = {}) : void {
    if (retrieveFrontlineReportsPostRequestBody) {
        writer.writeStringValue("filter", retrieveFrontlineReportsPostRequestBody.filter);
        writer.writeCollectionOfPrimitiveValues<string>("groupBy", retrieveFrontlineReportsPostRequestBody.groupBy);
        writer.writeCollectionOfPrimitiveValues<string>("orderBy", retrieveFrontlineReportsPostRequestBody.orderBy);
        writer.writeEnumValue<CloudPCFrontlineReportType>("reportName", retrieveFrontlineReportsPostRequestBody.reportName);
        writer.writeStringValue("search", retrieveFrontlineReportsPostRequestBody.search);
        writer.writeCollectionOfPrimitiveValues<string>("select", retrieveFrontlineReportsPostRequestBody.select);
        writer.writeNumberValue("skip", retrieveFrontlineReportsPostRequestBody.skip);
        writer.writeNumberValue("top", retrieveFrontlineReportsPostRequestBody.top);
        writer.writeAdditionalData(retrieveFrontlineReportsPostRequestBody.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const RetrieveFrontlineReportsRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/virtualEndpoint/reports/retrieveFrontlineReports";
/**
 * Metadata for all the requests in the request builder.
 */
export const RetrieveFrontlineReportsRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: RetrieveFrontlineReportsRequestBuilderUriTemplate,
        responseBodyContentType: "application/octet-stream",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeRetrieveFrontlineReportsPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
