/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createVirtualEndpointFromDiscriminatorValue, serializeVirtualEndpoint, type VirtualEndpoint } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { AuditEventsRequestBuilderNavigationMetadata, AuditEventsRequestBuilderRequestsMetadata, type AuditEventsRequestBuilder } from './auditEvents/';
import { BulkActionsRequestBuilderNavigationMetadata, BulkActionsRequestBuilderRequestsMetadata, type BulkActionsRequestBuilder } from './bulkActions/';
import { CloudPCsRequestBuilderNavigationMetadata, CloudPCsRequestBuilderRequestsMetadata, type CloudPCsRequestBuilder } from './cloudPCs/';
import { CrossCloudGovernmentOrganizationMappingRequestBuilderRequestsMetadata, type CrossCloudGovernmentOrganizationMappingRequestBuilder } from './crossCloudGovernmentOrganizationMapping/';
import { DeviceImagesRequestBuilderNavigationMetadata, DeviceImagesRequestBuilderRequestsMetadata, type DeviceImagesRequestBuilder } from './deviceImages/';
import { ExternalPartnerSettingsRequestBuilderNavigationMetadata, ExternalPartnerSettingsRequestBuilderRequestsMetadata, type ExternalPartnerSettingsRequestBuilder } from './externalPartnerSettings/';
import { FrontLineServicePlansRequestBuilderNavigationMetadata, FrontLineServicePlansRequestBuilderRequestsMetadata, type FrontLineServicePlansRequestBuilder } from './frontLineServicePlans/';
import { GalleryImagesRequestBuilderNavigationMetadata, GalleryImagesRequestBuilderRequestsMetadata, type GalleryImagesRequestBuilder } from './galleryImages/';
import { GetEffectivePermissionsRequestBuilderRequestsMetadata, type GetEffectivePermissionsRequestBuilder } from './getEffectivePermissions/';
import { OnPremisesConnectionsRequestBuilderNavigationMetadata, OnPremisesConnectionsRequestBuilderRequestsMetadata, type OnPremisesConnectionsRequestBuilder } from './onPremisesConnections/';
import { OrganizationSettingsRequestBuilderRequestsMetadata, type OrganizationSettingsRequestBuilder } from './organizationSettings/';
import { ProvisioningPoliciesRequestBuilderNavigationMetadata, ProvisioningPoliciesRequestBuilderRequestsMetadata, type ProvisioningPoliciesRequestBuilder } from './provisioningPolicies/';
import { ReportsRequestBuilderNavigationMetadata, ReportsRequestBuilderRequestsMetadata, type ReportsRequestBuilder } from './reports/';
import { RetrieveScopedPermissionsRequestBuilderRequestsMetadata, type RetrieveScopedPermissionsRequestBuilder } from './retrieveScopedPermissions/';
import { RetrieveTenantEncryptionSettingRequestBuilderRequestsMetadata, type RetrieveTenantEncryptionSettingRequestBuilder } from './retrieveTenantEncryptionSetting/';
import { ServicePlansRequestBuilderNavigationMetadata, ServicePlansRequestBuilderRequestsMetadata, type ServicePlansRequestBuilder } from './servicePlans/';
import { SharedUseServicePlansRequestBuilderNavigationMetadata, SharedUseServicePlansRequestBuilderRequestsMetadata, type SharedUseServicePlansRequestBuilder } from './sharedUseServicePlans/';
import { SnapshotsRequestBuilderNavigationMetadata, SnapshotsRequestBuilderRequestsMetadata, type SnapshotsRequestBuilder } from './snapshots/';
import { SupportedRegionsRequestBuilderNavigationMetadata, SupportedRegionsRequestBuilderRequestsMetadata, type SupportedRegionsRequestBuilder } from './supportedRegions/';
import { type UserSettingsRequestBuilder, UserSettingsRequestBuilderNavigationMetadata, UserSettingsRequestBuilderRequestsMetadata } from './userSettings/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the virtualEndpoint property of the microsoft.graph.deviceManagement entity.
 */
export interface VirtualEndpointRequestBuilder extends BaseRequestBuilder<VirtualEndpointRequestBuilder> {
    /**
     * Provides operations to manage the auditEvents property of the microsoft.graph.virtualEndpoint entity.
     */
    get auditEvents(): AuditEventsRequestBuilder;
    /**
     * Provides operations to manage the bulkActions property of the microsoft.graph.virtualEndpoint entity.
     */
    get bulkActions(): BulkActionsRequestBuilder;
    /**
     * Provides operations to manage the cloudPCs property of the microsoft.graph.virtualEndpoint entity.
     */
    get cloudPCs(): CloudPCsRequestBuilder;
    /**
     * Provides operations to manage the crossCloudGovernmentOrganizationMapping property of the microsoft.graph.virtualEndpoint entity.
     */
    get crossCloudGovernmentOrganizationMapping(): CrossCloudGovernmentOrganizationMappingRequestBuilder;
    /**
     * Provides operations to manage the deviceImages property of the microsoft.graph.virtualEndpoint entity.
     */
    get deviceImages(): DeviceImagesRequestBuilder;
    /**
     * Provides operations to manage the externalPartnerSettings property of the microsoft.graph.virtualEndpoint entity.
     */
    get externalPartnerSettings(): ExternalPartnerSettingsRequestBuilder;
    /**
     * Provides operations to manage the frontLineServicePlans property of the microsoft.graph.virtualEndpoint entity.
     */
    get frontLineServicePlans(): FrontLineServicePlansRequestBuilder;
    /**
     * Provides operations to manage the galleryImages property of the microsoft.graph.virtualEndpoint entity.
     */
    get galleryImages(): GalleryImagesRequestBuilder;
    /**
     * Provides operations to call the getEffectivePermissions method.
     */
    get getEffectivePermissions(): GetEffectivePermissionsRequestBuilder;
    /**
     * Provides operations to manage the onPremisesConnections property of the microsoft.graph.virtualEndpoint entity.
     */
    get onPremisesConnections(): OnPremisesConnectionsRequestBuilder;
    /**
     * Provides operations to manage the organizationSettings property of the microsoft.graph.virtualEndpoint entity.
     */
    get organizationSettings(): OrganizationSettingsRequestBuilder;
    /**
     * Provides operations to manage the provisioningPolicies property of the microsoft.graph.virtualEndpoint entity.
     */
    get provisioningPolicies(): ProvisioningPoliciesRequestBuilder;
    /**
     * Provides operations to manage the reports property of the microsoft.graph.virtualEndpoint entity.
     */
    get reports(): ReportsRequestBuilder;
    /**
     * Provides operations to call the retrieveScopedPermissions method.
     */
    get retrieveScopedPermissions(): RetrieveScopedPermissionsRequestBuilder;
    /**
     * Provides operations to call the retrieveTenantEncryptionSetting method.
     */
    get retrieveTenantEncryptionSetting(): RetrieveTenantEncryptionSettingRequestBuilder;
    /**
     * Provides operations to manage the servicePlans property of the microsoft.graph.virtualEndpoint entity.
     */
    get servicePlans(): ServicePlansRequestBuilder;
    /**
     * Provides operations to manage the sharedUseServicePlans property of the microsoft.graph.virtualEndpoint entity.
     */
    get sharedUseServicePlans(): SharedUseServicePlansRequestBuilder;
    /**
     * Provides operations to manage the snapshots property of the microsoft.graph.virtualEndpoint entity.
     */
    get snapshots(): SnapshotsRequestBuilder;
    /**
     * Provides operations to manage the supportedRegions property of the microsoft.graph.virtualEndpoint entity.
     */
    get supportedRegions(): SupportedRegionsRequestBuilder;
    /**
     * Provides operations to manage the userSettings property of the microsoft.graph.virtualEndpoint entity.
     */
    get userSettings(): UserSettingsRequestBuilder;
    /**
     * Delete navigation property virtualEndpoint for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get virtualEndpoint from deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<VirtualEndpoint>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<VirtualEndpointRequestBuilderGetQueryParameters> | undefined) : Promise<VirtualEndpoint | undefined>;
    /**
     * Update the navigation property virtualEndpoint in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<VirtualEndpoint>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: VirtualEndpoint, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<VirtualEndpoint | undefined>;
    /**
     * Delete navigation property virtualEndpoint for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get virtualEndpoint from deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<VirtualEndpointRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property virtualEndpoint in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: VirtualEndpoint, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get virtualEndpoint from deviceManagement
 */
export interface VirtualEndpointRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
/**
 * Uri template for the request builder.
 */
export const VirtualEndpointRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/virtualEndpoint{?%24expand,%24select}";
/**
 * Provides operations to manage the virtualEndpoint property of the microsoft.graph.deviceManagement entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    AuditEvents: "auditEvents",
    BulkActions: "bulkActions",
    CloudPCs: "cloudPCs",
    CrossCloudGovernmentOrganizationMapping: "crossCloudGovernmentOrganizationMapping",
    DeviceImages: "deviceImages",
    ExternalPartnerSettings: "externalPartnerSettings",
    FrontLineServicePlans: "frontLineServicePlans",
    GalleryImages: "galleryImages",
    OnPremisesConnections: "onPremisesConnections",
    OrganizationSettings: "organizationSettings",
    ProvisioningPolicies: "provisioningPolicies",
    Reports: "reports",
    ServicePlans: "servicePlans",
    SharedUseServicePlans: "sharedUseServicePlans",
    Snapshots: "snapshots",
    SupportedRegions: "supportedRegions",
    UserSettings: "userSettings",
} as const;
/**
 * Provides operations to manage the virtualEndpoint property of the microsoft.graph.deviceManagement entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AuditEvents: "auditEvents",
    BulkActions: "bulkActions",
    CloudPCs: "cloudPCs",
    CrossCloudGovernmentOrganizationMapping: "crossCloudGovernmentOrganizationMapping",
    DeviceImages: "deviceImages",
    ExternalPartnerSettings: "externalPartnerSettings",
    FrontLineServicePlans: "frontLineServicePlans",
    GalleryImages: "galleryImages",
    OnPremisesConnections: "onPremisesConnections",
    OrganizationSettings: "organizationSettings",
    ProvisioningPolicies: "provisioningPolicies",
    Reports: "reports",
    ServicePlans: "servicePlans",
    SharedUseServicePlans: "sharedUseServicePlans",
    Snapshots: "snapshots",
    SupportedRegions: "supportedRegions",
    UserSettings: "userSettings",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const VirtualEndpointRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const VirtualEndpointRequestBuilderNavigationMetadata: Record<Exclude<keyof VirtualEndpointRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    auditEvents: {
        requestsMetadata: AuditEventsRequestBuilderRequestsMetadata,
        navigationMetadata: AuditEventsRequestBuilderNavigationMetadata,
    },
    bulkActions: {
        requestsMetadata: BulkActionsRequestBuilderRequestsMetadata,
        navigationMetadata: BulkActionsRequestBuilderNavigationMetadata,
    },
    cloudPCs: {
        requestsMetadata: CloudPCsRequestBuilderRequestsMetadata,
        navigationMetadata: CloudPCsRequestBuilderNavigationMetadata,
    },
    crossCloudGovernmentOrganizationMapping: {
        requestsMetadata: CrossCloudGovernmentOrganizationMappingRequestBuilderRequestsMetadata,
    },
    deviceImages: {
        requestsMetadata: DeviceImagesRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceImagesRequestBuilderNavigationMetadata,
    },
    externalPartnerSettings: {
        requestsMetadata: ExternalPartnerSettingsRequestBuilderRequestsMetadata,
        navigationMetadata: ExternalPartnerSettingsRequestBuilderNavigationMetadata,
    },
    frontLineServicePlans: {
        requestsMetadata: FrontLineServicePlansRequestBuilderRequestsMetadata,
        navigationMetadata: FrontLineServicePlansRequestBuilderNavigationMetadata,
    },
    galleryImages: {
        requestsMetadata: GalleryImagesRequestBuilderRequestsMetadata,
        navigationMetadata: GalleryImagesRequestBuilderNavigationMetadata,
    },
    getEffectivePermissions: {
        requestsMetadata: GetEffectivePermissionsRequestBuilderRequestsMetadata,
    },
    onPremisesConnections: {
        requestsMetadata: OnPremisesConnectionsRequestBuilderRequestsMetadata,
        navigationMetadata: OnPremisesConnectionsRequestBuilderNavigationMetadata,
    },
    organizationSettings: {
        requestsMetadata: OrganizationSettingsRequestBuilderRequestsMetadata,
    },
    provisioningPolicies: {
        requestsMetadata: ProvisioningPoliciesRequestBuilderRequestsMetadata,
        navigationMetadata: ProvisioningPoliciesRequestBuilderNavigationMetadata,
    },
    reports: {
        requestsMetadata: ReportsRequestBuilderRequestsMetadata,
        navigationMetadata: ReportsRequestBuilderNavigationMetadata,
    },
    retrieveScopedPermissions: {
        requestsMetadata: RetrieveScopedPermissionsRequestBuilderRequestsMetadata,
    },
    retrieveTenantEncryptionSetting: {
        requestsMetadata: RetrieveTenantEncryptionSettingRequestBuilderRequestsMetadata,
    },
    servicePlans: {
        requestsMetadata: ServicePlansRequestBuilderRequestsMetadata,
        navigationMetadata: ServicePlansRequestBuilderNavigationMetadata,
    },
    sharedUseServicePlans: {
        requestsMetadata: SharedUseServicePlansRequestBuilderRequestsMetadata,
        navigationMetadata: SharedUseServicePlansRequestBuilderNavigationMetadata,
    },
    snapshots: {
        requestsMetadata: SnapshotsRequestBuilderRequestsMetadata,
        navigationMetadata: SnapshotsRequestBuilderNavigationMetadata,
    },
    supportedRegions: {
        requestsMetadata: SupportedRegionsRequestBuilderRequestsMetadata,
        navigationMetadata: SupportedRegionsRequestBuilderNavigationMetadata,
    },
    userSettings: {
        requestsMetadata: UserSettingsRequestBuilderRequestsMetadata,
        navigationMetadata: UserSettingsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const VirtualEndpointRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: VirtualEndpointRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: VirtualEndpointRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createVirtualEndpointFromDiscriminatorValue,
        queryParametersMapper: VirtualEndpointRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: VirtualEndpointRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createVirtualEndpointFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeVirtualEndpoint,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
