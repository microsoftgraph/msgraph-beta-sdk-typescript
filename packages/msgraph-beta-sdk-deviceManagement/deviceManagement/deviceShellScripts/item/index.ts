/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDeviceShellScriptFromDiscriminatorValue, serializeDeviceShellScript, type DeviceShellScript } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { AssignRequestBuilderRequestsMetadata, type AssignRequestBuilder } from './assign/index.js';
// @ts-ignore
import { AssignmentsRequestBuilderNavigationMetadata, AssignmentsRequestBuilderRequestsMetadata, type AssignmentsRequestBuilder } from './assignments/index.js';
// @ts-ignore
import { DeviceRunStatesRequestBuilderNavigationMetadata, DeviceRunStatesRequestBuilderRequestsMetadata, type DeviceRunStatesRequestBuilder } from './deviceRunStates/index.js';
// @ts-ignore
import { GroupAssignmentsRequestBuilderNavigationMetadata, GroupAssignmentsRequestBuilderRequestsMetadata, type GroupAssignmentsRequestBuilder } from './groupAssignments/index.js';
// @ts-ignore
import { RunSummaryRequestBuilderRequestsMetadata, type RunSummaryRequestBuilder } from './runSummary/index.js';
// @ts-ignore
import { type UserRunStatesRequestBuilder, UserRunStatesRequestBuilderNavigationMetadata, UserRunStatesRequestBuilderRequestsMetadata } from './userRunStates/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the deviceShellScripts property of the microsoft.graph.deviceManagement entity.
 */
export interface DeviceShellScriptItemRequestBuilder extends BaseRequestBuilder<DeviceShellScriptItemRequestBuilder> {
    /**
     * Provides operations to call the assign method.
     */
    get assign(): AssignRequestBuilder;
    /**
     * Provides operations to manage the assignments property of the microsoft.graph.deviceShellScript entity.
     */
    get assignments(): AssignmentsRequestBuilder;
    /**
     * Provides operations to manage the deviceRunStates property of the microsoft.graph.deviceShellScript entity.
     */
    get deviceRunStates(): DeviceRunStatesRequestBuilder;
    /**
     * Provides operations to manage the groupAssignments property of the microsoft.graph.deviceShellScript entity.
     */
    get groupAssignments(): GroupAssignmentsRequestBuilder;
    /**
     * Provides operations to manage the runSummary property of the microsoft.graph.deviceShellScript entity.
     */
    get runSummary(): RunSummaryRequestBuilder;
    /**
     * Provides operations to manage the userRunStates property of the microsoft.graph.deviceShellScript entity.
     */
    get userRunStates(): UserRunStatesRequestBuilder;
    /**
     * Delete navigation property deviceShellScripts for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The list of device shell scripts associated with the tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceShellScript>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<DeviceShellScriptItemRequestBuilderGetQueryParameters> | undefined) : Promise<DeviceShellScript | undefined>;
    /**
     * Update the navigation property deviceShellScripts in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceShellScript>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: DeviceShellScript, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DeviceShellScript | undefined>;
    /**
     * Delete navigation property deviceShellScripts for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The list of device shell scripts associated with the tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DeviceShellScriptItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property deviceShellScripts in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: DeviceShellScript, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The list of device shell scripts associated with the tenant.
 */
export interface DeviceShellScriptItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const DeviceShellScriptItemRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/deviceShellScripts/{deviceShellScript%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DeviceShellScriptItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DeviceShellScriptItemRequestBuilderNavigationMetadata: Record<Exclude<keyof DeviceShellScriptItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    assign: {
        requestsMetadata: AssignRequestBuilderRequestsMetadata,
    },
    assignments: {
        requestsMetadata: AssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AssignmentsRequestBuilderNavigationMetadata,
    },
    deviceRunStates: {
        requestsMetadata: DeviceRunStatesRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceRunStatesRequestBuilderNavigationMetadata,
    },
    groupAssignments: {
        requestsMetadata: GroupAssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: GroupAssignmentsRequestBuilderNavigationMetadata,
    },
    runSummary: {
        requestsMetadata: RunSummaryRequestBuilderRequestsMetadata,
    },
    userRunStates: {
        requestsMetadata: UserRunStatesRequestBuilderRequestsMetadata,
        navigationMetadata: UserRunStatesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DeviceShellScriptItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: DeviceShellScriptItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: DeviceShellScriptItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceShellScriptFromDiscriminatorValue,
        queryParametersMapper: DeviceShellScriptItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: DeviceShellScriptItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceShellScriptFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDeviceShellScript,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
