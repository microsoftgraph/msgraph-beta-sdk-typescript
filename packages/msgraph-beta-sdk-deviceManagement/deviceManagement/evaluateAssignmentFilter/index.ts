/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createAssignmentFilterEvaluateRequestFromDiscriminatorValue, serializeAssignmentFilterEvaluateRequest, type AssignmentFilterEvaluateRequest } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EvaluateAssignmentFilterPostRequestBody}
 */
export function createEvaluateAssignmentFilterPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEvaluateAssignmentFilterPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoEvaluateAssignmentFilterPostRequestBody(evaluateAssignmentFilterPostRequestBody: Partial<EvaluateAssignmentFilterPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { evaluateAssignmentFilterPostRequestBody.backingStoreEnabled = true; },
        "data": n => { evaluateAssignmentFilterPostRequestBody.data = n.getObjectValue<AssignmentFilterEvaluateRequest>(createAssignmentFilterEvaluateRequestFromDiscriminatorValue); },
    }
}
export interface EvaluateAssignmentFilterPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The data property
     */
    data?: AssignmentFilterEvaluateRequest;
}
/**
 * Provides operations to call the evaluateAssignmentFilter method.
 */
export interface EvaluateAssignmentFilterRequestBuilder extends BaseRequestBuilder<EvaluateAssignmentFilterRequestBuilder> {
    /**
     * Invoke action evaluateAssignmentFilter
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: EvaluateAssignmentFilterPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * Invoke action evaluateAssignmentFilter
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: EvaluateAssignmentFilterPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeEvaluateAssignmentFilterPostRequestBody(writer: SerializationWriter, evaluateAssignmentFilterPostRequestBody: Partial<EvaluateAssignmentFilterPostRequestBody> | undefined = {}) : void {
    writer.writeObjectValue<AssignmentFilterEvaluateRequest>("data", evaluateAssignmentFilterPostRequestBody.data, serializeAssignmentFilterEvaluateRequest);
    writer.writeAdditionalData(evaluateAssignmentFilterPostRequestBody.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const EvaluateAssignmentFilterRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/evaluateAssignmentFilter";
/**
 * Metadata for all the requests in the request builder.
 */
export const EvaluateAssignmentFilterRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: EvaluateAssignmentFilterRequestBuilderUriTemplate,
        responseBodyContentType: "application/octet-stream, application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendPrimitiveAsync",
        responseBodyFactory:  "ArrayBuffer",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeEvaluateAssignmentFilterPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
