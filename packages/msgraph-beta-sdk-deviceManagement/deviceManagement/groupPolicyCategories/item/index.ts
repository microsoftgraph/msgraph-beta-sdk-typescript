/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createGroupPolicyCategoryFromDiscriminatorValue, serializeGroupPolicyCategory, type GroupPolicyCategory } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { ChildrenRequestBuilderNavigationMetadata, ChildrenRequestBuilderRequestsMetadata, type ChildrenRequestBuilder } from './children/';
import { DefinitionFileRequestBuilderRequestsMetadata, type DefinitionFileRequestBuilder } from './definitionFile/';
import { DefinitionsRequestBuilderNavigationMetadata, DefinitionsRequestBuilderRequestsMetadata, type DefinitionsRequestBuilder } from './definitions/';
import { ParentRequestBuilderRequestsMetadata, type ParentRequestBuilder } from './parent/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the groupPolicyCategories property of the microsoft.graph.deviceManagement entity.
 */
export interface GroupPolicyCategoryItemRequestBuilder extends BaseRequestBuilder<GroupPolicyCategoryItemRequestBuilder> {
    /**
     * Provides operations to manage the children property of the microsoft.graph.groupPolicyCategory entity.
     */
    get children(): ChildrenRequestBuilder;
    /**
     * Provides operations to manage the definitionFile property of the microsoft.graph.groupPolicyCategory entity.
     */
    get definitionFile(): DefinitionFileRequestBuilder;
    /**
     * Provides operations to manage the definitions property of the microsoft.graph.groupPolicyCategory entity.
     */
    get definitions(): DefinitionsRequestBuilder;
    /**
     * Provides operations to manage the parent property of the microsoft.graph.groupPolicyCategory entity.
     */
    get parent(): ParentRequestBuilder;
    /**
     * Delete navigation property groupPolicyCategories for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The available group policy categories for this account.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<GroupPolicyCategory>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<GroupPolicyCategoryItemRequestBuilderGetQueryParameters> | undefined) : Promise<GroupPolicyCategory | undefined>;
    /**
     * Update the navigation property groupPolicyCategories in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<GroupPolicyCategory>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: GroupPolicyCategory, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<GroupPolicyCategory | undefined>;
    /**
     * Delete navigation property groupPolicyCategories for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The available group policy categories for this account.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<GroupPolicyCategoryItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property groupPolicyCategories in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: GroupPolicyCategory, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The available group policy categories for this account.
 */
export interface GroupPolicyCategoryItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const GroupPolicyCategoryItemRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/groupPolicyCategories/{groupPolicyCategory%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const GroupPolicyCategoryItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const GroupPolicyCategoryItemRequestBuilderNavigationMetadata: Record<Exclude<keyof GroupPolicyCategoryItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    children: {
        requestsMetadata: ChildrenRequestBuilderRequestsMetadata,
        navigationMetadata: ChildrenRequestBuilderNavigationMetadata,
    },
    definitionFile: {
        requestsMetadata: DefinitionFileRequestBuilderRequestsMetadata,
    },
    definitions: {
        requestsMetadata: DefinitionsRequestBuilderRequestsMetadata,
        navigationMetadata: DefinitionsRequestBuilderNavigationMetadata,
    },
    parent: {
        requestsMetadata: ParentRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const GroupPolicyCategoryItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: GroupPolicyCategoryItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: GroupPolicyCategoryItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createGroupPolicyCategoryFromDiscriminatorValue,
        queryParametersMapper: GroupPolicyCategoryItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: GroupPolicyCategoryItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createGroupPolicyCategoryFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeGroupPolicyCategory,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
