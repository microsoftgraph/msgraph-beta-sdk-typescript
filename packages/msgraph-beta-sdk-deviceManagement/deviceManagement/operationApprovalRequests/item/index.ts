/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createOperationApprovalRequestFromDiscriminatorValue, serializeOperationApprovalRequest, type OperationApprovalRequest } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { ApproveRequestBuilderRequestsMetadata, ApproveRequestBuilderUriTemplate, type ApproveRequestBuilder } from './approve/';
import { CancelApprovalRequestBuilderRequestsMetadata, CancelApprovalRequestBuilderUriTemplate, type CancelApprovalRequestBuilder } from './cancelApproval/';
import { RejectRequestBuilderRequestsMetadata, RejectRequestBuilderUriTemplate, type RejectRequestBuilder } from './reject/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the operationApprovalRequests property of the microsoft.graph.deviceManagement entity.
 */
export interface OperationApprovalRequestItemRequestBuilder extends BaseRequestBuilder<OperationApprovalRequestItemRequestBuilder> {
    /**
     * Provides operations to call the approve method.
     */
    get approve(): ApproveRequestBuilder;
    /**
     * Provides operations to call the cancelApproval method.
     */
    get cancelApproval(): CancelApprovalRequestBuilder;
    /**
     * Provides operations to call the reject method.
     */
    get reject(): RejectRequestBuilder;
    /**
     * Delete navigation property operationApprovalRequests for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The Operation Approval Requests
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of OperationApprovalRequest
     */
     get(requestConfiguration?: RequestConfiguration<OperationApprovalRequestItemRequestBuilderGetQueryParameters> | undefined) : Promise<OperationApprovalRequest | undefined>;
    /**
     * Update the navigation property operationApprovalRequests in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of OperationApprovalRequest
     */
     patch(body: OperationApprovalRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<OperationApprovalRequest | undefined>;
    /**
     * Delete navigation property operationApprovalRequests for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The Operation Approval Requests
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<OperationApprovalRequestItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property operationApprovalRequests in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: OperationApprovalRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The Operation Approval Requests
 */
export interface OperationApprovalRequestItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const OperationApprovalRequestItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const OperationApprovalRequestItemRequestBuilderNavigationMetadata: Record<Exclude<keyof OperationApprovalRequestItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    approve: {
        uriTemplate: ApproveRequestBuilderUriTemplate,
        requestsMetadata: ApproveRequestBuilderRequestsMetadata,
    },
    cancelApproval: {
        uriTemplate: CancelApprovalRequestBuilderUriTemplate,
        requestsMetadata: CancelApprovalRequestBuilderRequestsMetadata,
    },
    reject: {
        uriTemplate: RejectRequestBuilderUriTemplate,
        requestsMetadata: RejectRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const OperationApprovalRequestItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createOperationApprovalRequestFromDiscriminatorValue,
        queryParametersMapper: OperationApprovalRequestItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createOperationApprovalRequestFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeOperationApprovalRequest,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const OperationApprovalRequestItemRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/operationApprovalRequests/{operationApprovalRequest%2Did}{?%24expand,%24select}";
/* tslint:enable */
/* eslint-enable */
