/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { OperationApprovalSource, OperationApprovalSourceObject } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RejectPostRequestBody}
 */
// @ts-ignore
export function createRejectPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRejectPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RejectPostResponse}
 */
// @ts-ignore
export function createRejectPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRejectPostResponse;
}
/**
 * The deserialization information for the current model
 * @param RejectPostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRejectPostRequestBody(rejectPostRequestBody: Partial<RejectPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "approvalSource": n => { rejectPostRequestBody.approvalSource = n.getEnumValue<OperationApprovalSource>(OperationApprovalSourceObject); },
        "backingStoreEnabled": n => { rejectPostRequestBody.backingStoreEnabled = true; },
        "justification": n => { rejectPostRequestBody.justification = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param RejectPostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRejectPostResponse(rejectPostResponse: Partial<RejectPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { rejectPostResponse.backingStoreEnabled = true; },
        "value": n => { rejectPostResponse.value = n.getStringValue(); },
    }
}
export interface RejectPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The approvalSource property
     */
    approvalSource?: OperationApprovalSource | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The justification property
     */
    justification?: string | null;
}
export interface RejectPostResponse extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The value property
     */
    value?: string | null;
}
/**
 * Provides operations to call the reject method.
 */
export interface RejectRequestBuilder extends BaseRequestBuilder<RejectRequestBuilder> {
    /**
     * Rejects the requested instance of an operationApprovalRequest.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<RejectPostResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: RejectPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<RejectPostResponse | undefined>;
    /**
     * Rejects the requested instance of an operationApprovalRequest.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: RejectPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RejectPostRequestBody The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRejectPostRequestBody(writer: SerializationWriter, rejectPostRequestBody: Partial<RejectPostRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!rejectPostRequestBody || isSerializingDerivedType) { return; }
    writer.writeEnumValue<OperationApprovalSource>("approvalSource", rejectPostRequestBody.approvalSource);
    writer.writeStringValue("justification", rejectPostRequestBody.justification);
    writer.writeAdditionalData(rejectPostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RejectPostResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRejectPostResponse(writer: SerializationWriter, rejectPostResponse: Partial<RejectPostResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!rejectPostResponse || isSerializingDerivedType) { return; }
    writer.writeStringValue("value", rejectPostResponse.value);
    writer.writeAdditionalData(rejectPostResponse.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const RejectRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/operationApprovalRequests/{operationApprovalRequest%2Did}/reject";
/**
 * Metadata for all the requests in the request builder.
 */
export const RejectRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: RejectRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createRejectPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeRejectPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
