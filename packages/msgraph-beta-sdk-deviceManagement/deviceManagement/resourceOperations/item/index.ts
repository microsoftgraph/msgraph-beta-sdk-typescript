/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createResourceOperationFromDiscriminatorValue, serializeResourceOperation, type ResourceOperation } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { GetScopesForUserWithUseridRequestBuilderRequestsMetadata, GetScopesForUserWithUseridRequestBuilderUriTemplate, type GetScopesForUserWithUseridRequestBuilder } from './getScopesForUserWithUserid/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the resourceOperations property of the microsoft.graph.deviceManagement entity.
 */
export interface ResourceOperationItemRequestBuilder extends BaseRequestBuilder<ResourceOperationItemRequestBuilder> {
    /**
     * Delete navigation property resourceOperations for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The Resource Operations.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of ResourceOperation
     */
     get(requestConfiguration?: RequestConfiguration<ResourceOperationItemRequestBuilderGetQueryParameters> | undefined) : Promise<ResourceOperation | undefined>;
    /**
     * Provides operations to call the getScopesForUser method.
     * @param userid Usage: userid='{userid}'
     * @returns a getScopesForUserWithUseridRequestBuilder
     */
     getScopesForUserWithUserid(userid: string | undefined) : GetScopesForUserWithUseridRequestBuilder;
    /**
     * Update the navigation property resourceOperations in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of ResourceOperation
     */
     patch(body: ResourceOperation, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ResourceOperation | undefined>;
    /**
     * Delete navigation property resourceOperations for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The Resource Operations.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ResourceOperationItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property resourceOperations in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: ResourceOperation, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The Resource Operations.
 */
export interface ResourceOperationItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ResourceOperationItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ResourceOperationItemRequestBuilderNavigationMetadata: Record<Exclude<keyof ResourceOperationItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    getScopesForUserWithUserid: {
        uriTemplate: GetScopesForUserWithUseridRequestBuilderUriTemplate,
        requestsMetadata: GetScopesForUserWithUseridRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ResourceOperationItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createResourceOperationFromDiscriminatorValue,
        queryParametersMapper: ResourceOperationItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createResourceOperationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeResourceOperation,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const ResourceOperationItemRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/resourceOperations/{resourceOperation%2Did}{?%24expand,%24select}";
/* tslint:enable */
/* eslint-enable */
