/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createManagedDeviceCollectionResponseFromDiscriminatorValue, createManagedDeviceFromDiscriminatorValue, serializeManagedDevice, type ManagedDevice, type ManagedDeviceCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { AppDiagnosticsWithUpnRequestBuilderRequestsMetadata, type AppDiagnosticsWithUpnRequestBuilder } from './appDiagnosticsWithUpn/';
import { BulkReprovisionCloudPcRequestBuilderRequestsMetadata, type BulkReprovisionCloudPcRequestBuilder } from './bulkReprovisionCloudPc/';
import { BulkRestoreCloudPcRequestBuilderRequestsMetadata, type BulkRestoreCloudPcRequestBuilder } from './bulkRestoreCloudPc/';
import { BulkSetCloudPcReviewStatusRequestBuilderRequestsMetadata, type BulkSetCloudPcReviewStatusRequestBuilder } from './bulkSetCloudPcReviewStatus/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { DownloadAppDiagnosticsRequestBuilderRequestsMetadata, type DownloadAppDiagnosticsRequestBuilder } from './downloadAppDiagnostics/';
import { ExecuteActionRequestBuilderRequestsMetadata, type ExecuteActionRequestBuilder } from './executeAction/';
import { ManagedDeviceItemRequestBuilderNavigationMetadata, ManagedDeviceItemRequestBuilderRequestsMetadata, type ManagedDeviceItemRequestBuilder } from './item/';
import { MoveDevicesToOURequestBuilderRequestsMetadata, type MoveDevicesToOURequestBuilder } from './moveDevicesToOU/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the managedDevices property of the microsoft.graph.deviceManagement entity.
 */
export interface ManagedDevicesRequestBuilder extends BaseRequestBuilder<ManagedDevicesRequestBuilder> {
    /**
     * Provides operations to call the bulkReprovisionCloudPc method.
     */
    get bulkReprovisionCloudPc(): BulkReprovisionCloudPcRequestBuilder;
    /**
     * Provides operations to call the bulkRestoreCloudPc method.
     */
    get bulkRestoreCloudPc(): BulkRestoreCloudPcRequestBuilder;
    /**
     * Provides operations to call the bulkSetCloudPcReviewStatus method.
     */
    get bulkSetCloudPcReviewStatus(): BulkSetCloudPcReviewStatusRequestBuilder;
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to call the downloadAppDiagnostics method.
     */
    get downloadAppDiagnostics(): DownloadAppDiagnosticsRequestBuilder;
    /**
     * Provides operations to call the executeAction method.
     */
    get executeAction(): ExecuteActionRequestBuilder;
    /**
     * Provides operations to call the moveDevicesToOU method.
     */
    get moveDevicesToOU(): MoveDevicesToOURequestBuilder;
    /**
     * Provides operations to call the appDiagnostics method.
     * @param upn Usage: upn='{upn}'
     * @returns {AppDiagnosticsWithUpnRequestBuilder}
     */
     appDiagnosticsWithUpn(upn: string | undefined) : AppDiagnosticsWithUpnRequestBuilder;
    /**
     * Provides operations to manage the managedDevices property of the microsoft.graph.deviceManagement entity.
     * @param managedDeviceId The unique identifier of managedDevice
     * @returns {ManagedDeviceItemRequestBuilder}
     */
     byManagedDeviceId(managedDeviceId: string) : ManagedDeviceItemRequestBuilder;
    /**
     * The list of managed devices.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ManagedDeviceCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ManagedDevicesRequestBuilderGetQueryParameters> | undefined) : Promise<ManagedDeviceCollectionResponse | undefined>;
    /**
     * Create new navigation property to managedDevices for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ManagedDevice>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: ManagedDevice, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ManagedDevice | undefined>;
    /**
     * The list of managed devices.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ManagedDevicesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to managedDevices for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ManagedDevice, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The list of managed devices.
 */
export interface ManagedDevicesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const ManagedDevicesRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/managedDevices{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the managedDevices property of the microsoft.graph.deviceManagement entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    AssignmentFilterEvaluationStatusDetails: "assignmentFilterEvaluationStatusDetails",
    DetectedApps: "detectedApps",
    DeviceCategory: "deviceCategory",
    DeviceCompliancePolicyStates: "deviceCompliancePolicyStates",
    DeviceConfigurationStates: "deviceConfigurationStates",
    DeviceHealthScriptStates: "deviceHealthScriptStates",
    LogCollectionRequests: "logCollectionRequests",
    ManagedDeviceMobileAppConfigurationStates: "managedDeviceMobileAppConfigurationStates",
    SecurityBaselineStates: "securityBaselineStates",
    Users: "users",
    WindowsProtectionState: "windowsProtectionState",
} as const;
/**
 * Provides operations to manage the managedDevices property of the microsoft.graph.deviceManagement entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    AadRegistered: "aadRegistered",
    AadRegisteredDesc: "aadRegistered desc",
    ActivationLockBypassCode: "activationLockBypassCode",
    ActivationLockBypassCodeDesc: "activationLockBypassCode desc",
    AndroidSecurityPatchLevel: "androidSecurityPatchLevel",
    AndroidSecurityPatchLevelDesc: "androidSecurityPatchLevel desc",
    AutopilotEnrolled: "autopilotEnrolled",
    AutopilotEnrolledDesc: "autopilotEnrolled desc",
    AzureActiveDirectoryDeviceId: "azureActiveDirectoryDeviceId",
    AzureActiveDirectoryDeviceIdDesc: "azureActiveDirectoryDeviceId desc",
    AzureADDeviceId: "azureADDeviceId",
    AzureADDeviceIdDesc: "azureADDeviceId desc",
    AzureADRegistered: "azureADRegistered",
    AzureADRegisteredDesc: "azureADRegistered desc",
    BootstrapTokenEscrowed: "bootstrapTokenEscrowed",
    BootstrapTokenEscrowedDesc: "bootstrapTokenEscrowed desc",
    ChassisType: "chassisType",
    ChassisTypeDesc: "chassisType desc",
    ChromeOSDeviceInfo: "chromeOSDeviceInfo",
    ChromeOSDeviceInfoDesc: "chromeOSDeviceInfo desc",
    CloudPcRemoteActionResults: "cloudPcRemoteActionResults",
    CloudPcRemoteActionResultsDesc: "cloudPcRemoteActionResults desc",
    ComplianceGracePeriodExpirationDateTime: "complianceGracePeriodExpirationDateTime",
    ComplianceGracePeriodExpirationDateTimeDesc: "complianceGracePeriodExpirationDateTime desc",
    ComplianceState: "complianceState",
    ComplianceStateDesc: "complianceState desc",
    ConfigurationManagerClientEnabledFeatures: "configurationManagerClientEnabledFeatures",
    ConfigurationManagerClientEnabledFeaturesDesc: "configurationManagerClientEnabledFeatures desc",
    ConfigurationManagerClientHealthState: "configurationManagerClientHealthState",
    ConfigurationManagerClientHealthStateDesc: "configurationManagerClientHealthState desc",
    ConfigurationManagerClientInformation: "configurationManagerClientInformation",
    ConfigurationManagerClientInformationDesc: "configurationManagerClientInformation desc",
    DeviceActionResults: "deviceActionResults",
    DeviceActionResultsDesc: "deviceActionResults desc",
    DeviceCategoryDisplayName: "deviceCategoryDisplayName",
    DeviceCategoryDisplayNameDesc: "deviceCategoryDisplayName desc",
    DeviceEnrollmentType: "deviceEnrollmentType",
    DeviceEnrollmentTypeDesc: "deviceEnrollmentType desc",
    DeviceFirmwareConfigurationInterfaceManaged: "deviceFirmwareConfigurationInterfaceManaged",
    DeviceFirmwareConfigurationInterfaceManagedDesc: "deviceFirmwareConfigurationInterfaceManaged desc",
    DeviceHealthAttestationState: "deviceHealthAttestationState",
    DeviceHealthAttestationStateDesc: "deviceHealthAttestationState desc",
    DeviceName: "deviceName",
    DeviceNameDesc: "deviceName desc",
    DeviceRegistrationState: "deviceRegistrationState",
    DeviceRegistrationStateDesc: "deviceRegistrationState desc",
    DeviceType: "deviceType",
    DeviceTypeDesc: "deviceType desc",
    EasActivated: "easActivated",
    EasActivatedDesc: "easActivated desc",
    EasActivationDateTime: "easActivationDateTime",
    EasActivationDateTimeDesc: "easActivationDateTime desc",
    EasDeviceId: "easDeviceId",
    EasDeviceIdDesc: "easDeviceId desc",
    EmailAddress: "emailAddress",
    EmailAddressDesc: "emailAddress desc",
    EnrolledDateTime: "enrolledDateTime",
    EnrolledDateTimeDesc: "enrolledDateTime desc",
    EnrollmentProfileName: "enrollmentProfileName",
    EnrollmentProfileNameDesc: "enrollmentProfileName desc",
    EthernetMacAddress: "ethernetMacAddress",
    EthernetMacAddressDesc: "ethernetMacAddress desc",
    ExchangeAccessState: "exchangeAccessState",
    ExchangeAccessStateDesc: "exchangeAccessState desc",
    ExchangeAccessStateReason: "exchangeAccessStateReason",
    ExchangeAccessStateReasonDesc: "exchangeAccessStateReason desc",
    ExchangeLastSuccessfulSyncDateTime: "exchangeLastSuccessfulSyncDateTime",
    ExchangeLastSuccessfulSyncDateTimeDesc: "exchangeLastSuccessfulSyncDateTime desc",
    FreeStorageSpaceInBytes: "freeStorageSpaceInBytes",
    FreeStorageSpaceInBytesDesc: "freeStorageSpaceInBytes desc",
    HardwareInformation: "hardwareInformation",
    HardwareInformationDesc: "hardwareInformation desc",
    Iccid: "iccid",
    IccidDesc: "iccid desc",
    Imei: "imei",
    ImeiDesc: "imei desc",
    IsEncrypted: "isEncrypted",
    IsEncryptedDesc: "isEncrypted desc",
    IsSupervised: "isSupervised",
    IsSupervisedDesc: "isSupervised desc",
    JailBroken: "jailBroken",
    JailBrokenDesc: "jailBroken desc",
    JoinType: "joinType",
    JoinTypeDesc: "joinType desc",
    LastSyncDateTime: "lastSyncDateTime",
    LastSyncDateTimeDesc: "lastSyncDateTime desc",
    LostModeState: "lostModeState",
    LostModeStateDesc: "lostModeState desc",
    ManagedDeviceName: "managedDeviceName",
    ManagedDeviceNameDesc: "managedDeviceName desc",
    ManagedDeviceOwnerType: "managedDeviceOwnerType",
    ManagedDeviceOwnerTypeDesc: "managedDeviceOwnerType desc",
    ManagementAgent: "managementAgent",
    ManagementAgentDesc: "managementAgent desc",
    ManagementCertificateExpirationDate: "managementCertificateExpirationDate",
    ManagementCertificateExpirationDateDesc: "managementCertificateExpirationDate desc",
    ManagementFeatures: "managementFeatures",
    ManagementFeaturesDesc: "managementFeatures desc",
    ManagementState: "managementState",
    ManagementStateDesc: "managementState desc",
    Manufacturer: "manufacturer",
    ManufacturerDesc: "manufacturer desc",
    Meid: "meid",
    MeidDesc: "meid desc",
    Model: "model",
    ModelDesc: "model desc",
    Notes: "notes",
    NotesDesc: "notes desc",
    OperatingSystem: "operatingSystem",
    OperatingSystemDesc: "operatingSystem desc",
    OsVersion: "osVersion",
    OsVersionDesc: "osVersion desc",
    OwnerType: "ownerType",
    OwnerTypeDesc: "ownerType desc",
    PartnerReportedThreatState: "partnerReportedThreatState",
    PartnerReportedThreatStateDesc: "partnerReportedThreatState desc",
    PhoneNumber: "phoneNumber",
    PhoneNumberDesc: "phoneNumber desc",
    PhysicalMemoryInBytes: "physicalMemoryInBytes",
    PhysicalMemoryInBytesDesc: "physicalMemoryInBytes desc",
    PreferMdmOverGroupPolicyAppliedDateTime: "preferMdmOverGroupPolicyAppliedDateTime",
    PreferMdmOverGroupPolicyAppliedDateTimeDesc: "preferMdmOverGroupPolicyAppliedDateTime desc",
    ProcessorArchitecture: "processorArchitecture",
    ProcessorArchitectureDesc: "processorArchitecture desc",
    RemoteAssistanceSessionErrorDetails: "remoteAssistanceSessionErrorDetails",
    RemoteAssistanceSessionErrorDetailsDesc: "remoteAssistanceSessionErrorDetails desc",
    RemoteAssistanceSessionUrl: "remoteAssistanceSessionUrl",
    RemoteAssistanceSessionUrlDesc: "remoteAssistanceSessionUrl desc",
    RequireUserEnrollmentApproval: "requireUserEnrollmentApproval",
    RequireUserEnrollmentApprovalDesc: "requireUserEnrollmentApproval desc",
    RetireAfterDateTime: "retireAfterDateTime",
    RetireAfterDateTimeDesc: "retireAfterDateTime desc",
    RoleScopeTagIds: "roleScopeTagIds",
    RoleScopeTagIdsDesc: "roleScopeTagIds desc",
    SecurityPatchLevel: "securityPatchLevel",
    SecurityPatchLevelDesc: "securityPatchLevel desc",
    SerialNumber: "serialNumber",
    SerialNumberDesc: "serialNumber desc",
    SkuFamily: "skuFamily",
    SkuFamilyDesc: "skuFamily desc",
    SkuNumber: "skuNumber",
    SkuNumberDesc: "skuNumber desc",
    SpecificationVersion: "specificationVersion",
    SpecificationVersionDesc: "specificationVersion desc",
    SubscriberCarrier: "subscriberCarrier",
    SubscriberCarrierDesc: "subscriberCarrier desc",
    TotalStorageSpaceInBytes: "totalStorageSpaceInBytes",
    TotalStorageSpaceInBytesDesc: "totalStorageSpaceInBytes desc",
    Udid: "udid",
    UdidDesc: "udid desc",
    UserDisplayName: "userDisplayName",
    UserDisplayNameDesc: "userDisplayName desc",
    UserId: "userId",
    UserIdDesc: "userId desc",
    UserPrincipalName: "userPrincipalName",
    UserPrincipalNameDesc: "userPrincipalName desc",
    UsersLoggedOn: "usersLoggedOn",
    UsersLoggedOnDesc: "usersLoggedOn desc",
    WiFiMacAddress: "wiFiMacAddress",
    WiFiMacAddressDesc: "wiFiMacAddress desc",
    WindowsActiveMalwareCount: "windowsActiveMalwareCount",
    WindowsActiveMalwareCountDesc: "windowsActiveMalwareCount desc",
    WindowsRemediatedMalwareCount: "windowsRemediatedMalwareCount",
    WindowsRemediatedMalwareCountDesc: "windowsRemediatedMalwareCount desc",
} as const;
/**
 * Provides operations to manage the managedDevices property of the microsoft.graph.deviceManagement entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AadRegistered: "aadRegistered",
    ActivationLockBypassCode: "activationLockBypassCode",
    AndroidSecurityPatchLevel: "androidSecurityPatchLevel",
    AutopilotEnrolled: "autopilotEnrolled",
    AzureActiveDirectoryDeviceId: "azureActiveDirectoryDeviceId",
    AzureADDeviceId: "azureADDeviceId",
    AzureADRegistered: "azureADRegistered",
    BootstrapTokenEscrowed: "bootstrapTokenEscrowed",
    ChassisType: "chassisType",
    ChromeOSDeviceInfo: "chromeOSDeviceInfo",
    CloudPcRemoteActionResults: "cloudPcRemoteActionResults",
    ComplianceGracePeriodExpirationDateTime: "complianceGracePeriodExpirationDateTime",
    ComplianceState: "complianceState",
    ConfigurationManagerClientEnabledFeatures: "configurationManagerClientEnabledFeatures",
    ConfigurationManagerClientHealthState: "configurationManagerClientHealthState",
    ConfigurationManagerClientInformation: "configurationManagerClientInformation",
    DeviceActionResults: "deviceActionResults",
    DeviceCategoryDisplayName: "deviceCategoryDisplayName",
    DeviceEnrollmentType: "deviceEnrollmentType",
    DeviceFirmwareConfigurationInterfaceManaged: "deviceFirmwareConfigurationInterfaceManaged",
    DeviceHealthAttestationState: "deviceHealthAttestationState",
    DeviceName: "deviceName",
    DeviceRegistrationState: "deviceRegistrationState",
    DeviceType: "deviceType",
    EasActivated: "easActivated",
    EasActivationDateTime: "easActivationDateTime",
    EasDeviceId: "easDeviceId",
    EmailAddress: "emailAddress",
    EnrolledDateTime: "enrolledDateTime",
    EnrollmentProfileName: "enrollmentProfileName",
    EthernetMacAddress: "ethernetMacAddress",
    ExchangeAccessState: "exchangeAccessState",
    ExchangeAccessStateReason: "exchangeAccessStateReason",
    ExchangeLastSuccessfulSyncDateTime: "exchangeLastSuccessfulSyncDateTime",
    FreeStorageSpaceInBytes: "freeStorageSpaceInBytes",
    HardwareInformation: "hardwareInformation",
    Iccid: "iccid",
    Imei: "imei",
    IsEncrypted: "isEncrypted",
    IsSupervised: "isSupervised",
    JailBroken: "jailBroken",
    JoinType: "joinType",
    LastSyncDateTime: "lastSyncDateTime",
    LostModeState: "lostModeState",
    ManagedDeviceName: "managedDeviceName",
    ManagedDeviceOwnerType: "managedDeviceOwnerType",
    ManagementAgent: "managementAgent",
    ManagementCertificateExpirationDate: "managementCertificateExpirationDate",
    ManagementFeatures: "managementFeatures",
    ManagementState: "managementState",
    Manufacturer: "manufacturer",
    Meid: "meid",
    Model: "model",
    Notes: "notes",
    OperatingSystem: "operatingSystem",
    OsVersion: "osVersion",
    OwnerType: "ownerType",
    PartnerReportedThreatState: "partnerReportedThreatState",
    PhoneNumber: "phoneNumber",
    PhysicalMemoryInBytes: "physicalMemoryInBytes",
    PreferMdmOverGroupPolicyAppliedDateTime: "preferMdmOverGroupPolicyAppliedDateTime",
    ProcessorArchitecture: "processorArchitecture",
    RemoteAssistanceSessionErrorDetails: "remoteAssistanceSessionErrorDetails",
    RemoteAssistanceSessionUrl: "remoteAssistanceSessionUrl",
    RequireUserEnrollmentApproval: "requireUserEnrollmentApproval",
    RetireAfterDateTime: "retireAfterDateTime",
    RoleScopeTagIds: "roleScopeTagIds",
    SecurityPatchLevel: "securityPatchLevel",
    SerialNumber: "serialNumber",
    SkuFamily: "skuFamily",
    SkuNumber: "skuNumber",
    SpecificationVersion: "specificationVersion",
    SubscriberCarrier: "subscriberCarrier",
    TotalStorageSpaceInBytes: "totalStorageSpaceInBytes",
    Udid: "udid",
    UserDisplayName: "userDisplayName",
    UserId: "userId",
    UserPrincipalName: "userPrincipalName",
    UsersLoggedOn: "usersLoggedOn",
    WiFiMacAddress: "wiFiMacAddress",
    WindowsActiveMalwareCount: "windowsActiveMalwareCount",
    WindowsRemediatedMalwareCount: "windowsRemediatedMalwareCount",
    AssignmentFilterEvaluationStatusDetails: "assignmentFilterEvaluationStatusDetails",
    DetectedApps: "detectedApps",
    DeviceCategory: "deviceCategory",
    DeviceCompliancePolicyStates: "deviceCompliancePolicyStates",
    DeviceConfigurationStates: "deviceConfigurationStates",
    DeviceHealthScriptStates: "deviceHealthScriptStates",
    LogCollectionRequests: "logCollectionRequests",
    ManagedDeviceMobileAppConfigurationStates: "managedDeviceMobileAppConfigurationStates",
    SecurityBaselineStates: "securityBaselineStates",
    Users: "users",
    WindowsProtectionState: "windowsProtectionState",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ManagedDevicesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ManagedDevicesRequestBuilderNavigationMetadata: Record<Exclude<keyof ManagedDevicesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    appDiagnosticsWithUpn: {
        requestsMetadata: AppDiagnosticsWithUpnRequestBuilderRequestsMetadata,
    },
    byManagedDeviceId: {
        requestsMetadata: ManagedDeviceItemRequestBuilderRequestsMetadata,
        navigationMetadata: ManagedDeviceItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["managedDevice%2Did"],
    },
    bulkReprovisionCloudPc: {
        requestsMetadata: BulkReprovisionCloudPcRequestBuilderRequestsMetadata,
    },
    bulkRestoreCloudPc: {
        requestsMetadata: BulkRestoreCloudPcRequestBuilderRequestsMetadata,
    },
    bulkSetCloudPcReviewStatus: {
        requestsMetadata: BulkSetCloudPcReviewStatusRequestBuilderRequestsMetadata,
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    downloadAppDiagnostics: {
        requestsMetadata: DownloadAppDiagnosticsRequestBuilderRequestsMetadata,
    },
    executeAction: {
        requestsMetadata: ExecuteActionRequestBuilderRequestsMetadata,
    },
    moveDevicesToOU: {
        requestsMetadata: MoveDevicesToOURequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ManagedDevicesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ManagedDevicesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createManagedDeviceCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: ManagedDevicesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: ManagedDevicesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createManagedDeviceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeManagedDevice,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
