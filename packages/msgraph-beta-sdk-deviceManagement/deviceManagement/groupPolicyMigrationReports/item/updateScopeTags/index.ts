/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a updateScopeTagsPostRequestBody
 */
export function createUpdateScopeTagsPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateScopeTagsPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a updateScopeTagsPostResponse
 */
export function createUpdateScopeTagsPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateScopeTagsPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUpdateScopeTagsPostRequestBody(updateScopeTagsPostRequestBody: Partial<UpdateScopeTagsPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { updateScopeTagsPostRequestBody.backingStoreEnabled = true; },
        "roleScopeTagIds": n => { updateScopeTagsPostRequestBody.roleScopeTagIds = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUpdateScopeTagsPostResponse(updateScopeTagsPostResponse: Partial<UpdateScopeTagsPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { updateScopeTagsPostResponse.backingStoreEnabled = true; },
        "value": n => { updateScopeTagsPostResponse.value = n.getStringValue(); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUpdateScopeTagsPostRequestBody(writer: SerializationWriter, updateScopeTagsPostRequestBody: Partial<UpdateScopeTagsPostRequestBody> | undefined = {}) : void {
    writer.writeCollectionOfPrimitiveValues<string>("roleScopeTagIds", updateScopeTagsPostRequestBody.roleScopeTagIds);
    writer.writeAdditionalData(updateScopeTagsPostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUpdateScopeTagsPostResponse(writer: SerializationWriter, updateScopeTagsPostResponse: Partial<UpdateScopeTagsPostResponse> | undefined = {}) : void {
    writer.writeStringValue("value", updateScopeTagsPostResponse.value);
    writer.writeAdditionalData(updateScopeTagsPostResponse.additionalData);
}
export interface UpdateScopeTagsPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The roleScopeTagIds property
     */
    roleScopeTagIds?: string[];
}
export interface UpdateScopeTagsPostResponse extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The value property
     */
    value?: string;
}
/**
 * Provides operations to call the updateScopeTags method.
 */
export interface UpdateScopeTagsRequestBuilder extends BaseRequestBuilder<UpdateScopeTagsRequestBuilder> {
    /**
     * Invoke action updateScopeTags
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of UpdateScopeTagsPostResponse
     */
     post(body: UpdateScopeTagsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<UpdateScopeTagsPostResponse | undefined>;
    /**
     * Invoke action updateScopeTags
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: UpdateScopeTagsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Metadata for all the requests in the request builder.
 */
export const UpdateScopeTagsRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createUpdateScopeTagsPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUpdateScopeTagsPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const UpdateScopeTagsRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/groupPolicyMigrationReports/{groupPolicyMigrationReport%2Did}/updateScopeTags";
/* tslint:enable */
/* eslint-enable */
