/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDeviceConfigurationFromDiscriminatorValue, serializeDeviceConfiguration, type DeviceConfiguration } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { AssignRequestBuilderRequestsMetadata, AssignRequestBuilderUriTemplate, type AssignRequestBuilder } from './assign/';
import { AssignedAccessMultiModeProfilesRequestBuilderRequestsMetadata, AssignedAccessMultiModeProfilesRequestBuilderUriTemplate, type AssignedAccessMultiModeProfilesRequestBuilder } from './assignedAccessMultiModeProfiles/';
import { AssignmentsRequestBuilderNavigationMetadata, AssignmentsRequestBuilderRequestsMetadata, AssignmentsRequestBuilderUriTemplate, type AssignmentsRequestBuilder } from './assignments/';
import { DeviceSettingStateSummariesRequestBuilderNavigationMetadata, DeviceSettingStateSummariesRequestBuilderRequestsMetadata, DeviceSettingStateSummariesRequestBuilderUriTemplate, type DeviceSettingStateSummariesRequestBuilder } from './deviceSettingStateSummaries/';
import { DeviceStatusesRequestBuilderNavigationMetadata, DeviceStatusesRequestBuilderRequestsMetadata, DeviceStatusesRequestBuilderUriTemplate, type DeviceStatusesRequestBuilder } from './deviceStatuses/';
import { DeviceStatusOverviewRequestBuilderRequestsMetadata, DeviceStatusOverviewRequestBuilderUriTemplate, type DeviceStatusOverviewRequestBuilder } from './deviceStatusOverview/';
import { GetOmaSettingPlainTextValueWithSecretReferenceValueIdRequestBuilderRequestsMetadata, GetOmaSettingPlainTextValueWithSecretReferenceValueIdRequestBuilderUriTemplate, type GetOmaSettingPlainTextValueWithSecretReferenceValueIdRequestBuilder } from './getOmaSettingPlainTextValueWithSecretReferenceValueId/';
import { GroupAssignmentsRequestBuilderNavigationMetadata, GroupAssignmentsRequestBuilderRequestsMetadata, GroupAssignmentsRequestBuilderUriTemplate, type GroupAssignmentsRequestBuilder } from './groupAssignments/';
import { type UserStatusesRequestBuilder, UserStatusesRequestBuilderNavigationMetadata, UserStatusesRequestBuilderRequestsMetadata, UserStatusesRequestBuilderUriTemplate } from './userStatuses/';
import { type UserStatusOverviewRequestBuilder, UserStatusOverviewRequestBuilderRequestsMetadata, UserStatusOverviewRequestBuilderUriTemplate } from './userStatusOverview/';
import { type WindowsPrivacyAccessControlsRequestBuilder, WindowsPrivacyAccessControlsRequestBuilderRequestsMetadata, WindowsPrivacyAccessControlsRequestBuilderUriTemplate } from './windowsPrivacyAccessControls/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the deviceConfigurations property of the microsoft.graph.deviceManagement entity.
 */
export interface DeviceConfigurationItemRequestBuilder extends BaseRequestBuilder<DeviceConfigurationItemRequestBuilder> {
    /**
     * Provides operations to call the assign method.
     */
    get assign(): AssignRequestBuilder;
    /**
     * Provides operations to call the assignedAccessMultiModeProfiles method.
     */
    get assignedAccessMultiModeProfiles(): AssignedAccessMultiModeProfilesRequestBuilder;
    /**
     * Provides operations to manage the assignments property of the microsoft.graph.deviceConfiguration entity.
     */
    get assignments(): AssignmentsRequestBuilder;
    /**
     * Provides operations to manage the deviceSettingStateSummaries property of the microsoft.graph.deviceConfiguration entity.
     */
    get deviceSettingStateSummaries(): DeviceSettingStateSummariesRequestBuilder;
    /**
     * Provides operations to manage the deviceStatuses property of the microsoft.graph.deviceConfiguration entity.
     */
    get deviceStatuses(): DeviceStatusesRequestBuilder;
    /**
     * Provides operations to manage the deviceStatusOverview property of the microsoft.graph.deviceConfiguration entity.
     */
    get deviceStatusOverview(): DeviceStatusOverviewRequestBuilder;
    /**
     * Provides operations to manage the groupAssignments property of the microsoft.graph.deviceConfiguration entity.
     */
    get groupAssignments(): GroupAssignmentsRequestBuilder;
    /**
     * Provides operations to manage the userStatuses property of the microsoft.graph.deviceConfiguration entity.
     */
    get userStatuses(): UserStatusesRequestBuilder;
    /**
     * Provides operations to manage the userStatusOverview property of the microsoft.graph.deviceConfiguration entity.
     */
    get userStatusOverview(): UserStatusOverviewRequestBuilder;
    /**
     * Provides operations to call the windowsPrivacyAccessControls method.
     */
    get windowsPrivacyAccessControls(): WindowsPrivacyAccessControlsRequestBuilder;
    /**
     * Delete navigation property deviceConfigurations for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The device configurations.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of DeviceConfiguration
     */
     get(requestConfiguration?: RequestConfiguration<DeviceConfigurationItemRequestBuilderGetQueryParameters> | undefined) : Promise<DeviceConfiguration | undefined>;
    /**
     * Provides operations to call the getOmaSettingPlainTextValue method.
     * @param secretReferenceValueId Usage: secretReferenceValueId='{secretReferenceValueId}'
     * @returns a getOmaSettingPlainTextValueWithSecretReferenceValueIdRequestBuilder
     */
     getOmaSettingPlainTextValueWithSecretReferenceValueId(secretReferenceValueId: string | undefined) : GetOmaSettingPlainTextValueWithSecretReferenceValueIdRequestBuilder;
    /**
     * Update the navigation property deviceConfigurations in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of DeviceConfiguration
     */
     patch(body: DeviceConfiguration, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DeviceConfiguration | undefined>;
    /**
     * Delete navigation property deviceConfigurations for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The device configurations.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DeviceConfigurationItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property deviceConfigurations in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: DeviceConfiguration, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The device configurations.
 */
export interface DeviceConfigurationItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DeviceConfigurationItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DeviceConfigurationItemRequestBuilderNavigationMetadata: Record<Exclude<keyof DeviceConfigurationItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    getOmaSettingPlainTextValueWithSecretReferenceValueId: {
        uriTemplate: GetOmaSettingPlainTextValueWithSecretReferenceValueIdRequestBuilderUriTemplate,
        requestsMetadata: GetOmaSettingPlainTextValueWithSecretReferenceValueIdRequestBuilderRequestsMetadata,
    },
    assign: {
        uriTemplate: AssignRequestBuilderUriTemplate,
        requestsMetadata: AssignRequestBuilderRequestsMetadata,
    },
    assignedAccessMultiModeProfiles: {
        uriTemplate: AssignedAccessMultiModeProfilesRequestBuilderUriTemplate,
        requestsMetadata: AssignedAccessMultiModeProfilesRequestBuilderRequestsMetadata,
    },
    assignments: {
        uriTemplate: AssignmentsRequestBuilderUriTemplate,
        requestsMetadata: AssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AssignmentsRequestBuilderNavigationMetadata,
    },
    deviceSettingStateSummaries: {
        uriTemplate: DeviceSettingStateSummariesRequestBuilderUriTemplate,
        requestsMetadata: DeviceSettingStateSummariesRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceSettingStateSummariesRequestBuilderNavigationMetadata,
    },
    deviceStatuses: {
        uriTemplate: DeviceStatusesRequestBuilderUriTemplate,
        requestsMetadata: DeviceStatusesRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceStatusesRequestBuilderNavigationMetadata,
    },
    deviceStatusOverview: {
        uriTemplate: DeviceStatusOverviewRequestBuilderUriTemplate,
        requestsMetadata: DeviceStatusOverviewRequestBuilderRequestsMetadata,
    },
    groupAssignments: {
        uriTemplate: GroupAssignmentsRequestBuilderUriTemplate,
        requestsMetadata: GroupAssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: GroupAssignmentsRequestBuilderNavigationMetadata,
    },
    userStatuses: {
        uriTemplate: UserStatusesRequestBuilderUriTemplate,
        requestsMetadata: UserStatusesRequestBuilderRequestsMetadata,
        navigationMetadata: UserStatusesRequestBuilderNavigationMetadata,
    },
    userStatusOverview: {
        uriTemplate: UserStatusOverviewRequestBuilderUriTemplate,
        requestsMetadata: UserStatusOverviewRequestBuilderRequestsMetadata,
    },
    windowsPrivacyAccessControls: {
        uriTemplate: WindowsPrivacyAccessControlsRequestBuilderUriTemplate,
        requestsMetadata: WindowsPrivacyAccessControlsRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DeviceConfigurationItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDeviceConfigurationFromDiscriminatorValue,
        queryParametersMapper: DeviceConfigurationItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDeviceConfigurationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDeviceConfiguration,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const DeviceConfigurationItemRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/deviceConfigurations/{deviceConfiguration%2Did}{?%24expand,%24select}";
/* tslint:enable */
/* eslint-enable */
