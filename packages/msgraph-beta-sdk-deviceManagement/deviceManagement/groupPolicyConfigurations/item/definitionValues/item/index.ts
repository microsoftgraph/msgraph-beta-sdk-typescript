/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createGroupPolicyDefinitionValueFromDiscriminatorValue, serializeGroupPolicyDefinitionValue, type GroupPolicyDefinitionValue } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { DefinitionRequestBuilderRequestsMetadata, DefinitionRequestBuilderUriTemplate, type DefinitionRequestBuilder } from './definition/';
import { PresentationValuesRequestBuilderNavigationMetadata, PresentationValuesRequestBuilderRequestsMetadata, PresentationValuesRequestBuilderUriTemplate, type PresentationValuesRequestBuilder } from './presentationValues/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the definitionValues property of the microsoft.graph.groupPolicyConfiguration entity.
 */
export interface GroupPolicyDefinitionValueItemRequestBuilder extends BaseRequestBuilder<GroupPolicyDefinitionValueItemRequestBuilder> {
    /**
     * Provides operations to manage the definition property of the microsoft.graph.groupPolicyDefinitionValue entity.
     */
    get definition(): DefinitionRequestBuilder;
    /**
     * Provides operations to manage the presentationValues property of the microsoft.graph.groupPolicyDefinitionValue entity.
     */
    get presentationValues(): PresentationValuesRequestBuilder;
    /**
     * Delete navigation property definitionValues for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The list of enabled or disabled group policy definition values for the configuration.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of GroupPolicyDefinitionValue
     */
     get(requestConfiguration?: RequestConfiguration<GroupPolicyDefinitionValueItemRequestBuilderGetQueryParameters> | undefined) : Promise<GroupPolicyDefinitionValue | undefined>;
    /**
     * Update the navigation property definitionValues in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of GroupPolicyDefinitionValue
     */
     patch(body: GroupPolicyDefinitionValue, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<GroupPolicyDefinitionValue | undefined>;
    /**
     * Delete navigation property definitionValues for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The list of enabled or disabled group policy definition values for the configuration.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<GroupPolicyDefinitionValueItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property definitionValues in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: GroupPolicyDefinitionValue, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The list of enabled or disabled group policy definition values for the configuration.
 */
export interface GroupPolicyDefinitionValueItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const GroupPolicyDefinitionValueItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const GroupPolicyDefinitionValueItemRequestBuilderNavigationMetadata: Record<Exclude<keyof GroupPolicyDefinitionValueItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    definition: {
        uriTemplate: DefinitionRequestBuilderUriTemplate,
        requestsMetadata: DefinitionRequestBuilderRequestsMetadata,
    },
    presentationValues: {
        uriTemplate: PresentationValuesRequestBuilderUriTemplate,
        requestsMetadata: PresentationValuesRequestBuilderRequestsMetadata,
        navigationMetadata: PresentationValuesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const GroupPolicyDefinitionValueItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createGroupPolicyDefinitionValueFromDiscriminatorValue,
        queryParametersMapper: GroupPolicyDefinitionValueItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createGroupPolicyDefinitionValueFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeGroupPolicyDefinitionValue,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const GroupPolicyDefinitionValueItemRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/groupPolicyConfigurations/{groupPolicyConfiguration%2Did}/definitionValues/{groupPolicyDefinitionValue%2Did}{?%24expand,%24select}";
/* tslint:enable */
/* eslint-enable */
