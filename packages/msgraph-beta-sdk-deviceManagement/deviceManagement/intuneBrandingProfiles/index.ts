/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createIntuneBrandingProfileCollectionResponseFromDiscriminatorValue, createIntuneBrandingProfileFromDiscriminatorValue, serializeIntuneBrandingProfile, type IntuneBrandingProfile, type IntuneBrandingProfileCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, CountRequestBuilderUriTemplate, type CountRequestBuilder } from './count/';
import { IntuneBrandingProfileItemRequestBuilderNavigationMetadata, IntuneBrandingProfileItemRequestBuilderRequestsMetadata, IntuneBrandingProfileItemRequestBuilderUriTemplate, type IntuneBrandingProfileItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the intuneBrandingProfiles property of the microsoft.graph.deviceManagement entity.
 */
export interface IntuneBrandingProfilesRequestBuilder extends BaseRequestBuilder<IntuneBrandingProfilesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the intuneBrandingProfiles property of the microsoft.graph.deviceManagement entity.
     * @param intuneBrandingProfileId The unique identifier of intuneBrandingProfile
     * @returns a IntuneBrandingProfileItemRequestBuilder
     */
     byIntuneBrandingProfileId(intuneBrandingProfileId: string) : IntuneBrandingProfileItemRequestBuilder;
    /**
     * Intune branding profiles targeted to AAD groups
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of IntuneBrandingProfileCollectionResponse
     */
     get(requestConfiguration?: RequestConfiguration<IntuneBrandingProfilesRequestBuilderGetQueryParameters> | undefined) : Promise<IntuneBrandingProfileCollectionResponse | undefined>;
    /**
     * Create new navigation property to intuneBrandingProfiles for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of IntuneBrandingProfile
     */
     post(body: IntuneBrandingProfile, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<IntuneBrandingProfile | undefined>;
    /**
     * Intune branding profiles targeted to AAD groups
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<IntuneBrandingProfilesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to intuneBrandingProfiles for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: IntuneBrandingProfile, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Intune branding profiles targeted to AAD groups
 */
export interface IntuneBrandingProfilesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const IntuneBrandingProfilesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const IntuneBrandingProfilesRequestBuilderNavigationMetadata: Record<Exclude<keyof IntuneBrandingProfilesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byIntuneBrandingProfileId: {
        uriTemplate: IntuneBrandingProfileItemRequestBuilderUriTemplate,
        requestsMetadata: IntuneBrandingProfileItemRequestBuilderRequestsMetadata,
        navigationMetadata: IntuneBrandingProfileItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["intuneBrandingProfile%2Did"],
    },
    count: {
        uriTemplate: CountRequestBuilderUriTemplate,
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const IntuneBrandingProfilesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createIntuneBrandingProfileCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: IntuneBrandingProfilesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createIntuneBrandingProfileFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeIntuneBrandingProfile,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const IntuneBrandingProfilesRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/intuneBrandingProfiles{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/* tslint:enable */
/* eslint-enable */
