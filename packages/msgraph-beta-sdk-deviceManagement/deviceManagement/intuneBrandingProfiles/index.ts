/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createIntuneBrandingProfileCollectionResponseFromDiscriminatorValue, createIntuneBrandingProfileFromDiscriminatorValue, serializeIntuneBrandingProfile, type IntuneBrandingProfile, type IntuneBrandingProfileCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { IntuneBrandingProfileItemRequestBuilderNavigationMetadata, IntuneBrandingProfileItemRequestBuilderRequestsMetadata, type IntuneBrandingProfileItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the intuneBrandingProfiles property of the microsoft.graph.deviceManagement entity.
 */
export interface IntuneBrandingProfilesRequestBuilder extends BaseRequestBuilder<IntuneBrandingProfilesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the intuneBrandingProfiles property of the microsoft.graph.deviceManagement entity.
     * @param intuneBrandingProfileId The unique identifier of intuneBrandingProfile
     * @returns {IntuneBrandingProfileItemRequestBuilder}
     */
     byIntuneBrandingProfileId(intuneBrandingProfileId: string) : IntuneBrandingProfileItemRequestBuilder;
    /**
     * Intune branding profiles targeted to AAD groups
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<IntuneBrandingProfileCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<IntuneBrandingProfilesRequestBuilderGetQueryParameters> | undefined) : Promise<IntuneBrandingProfileCollectionResponse | undefined>;
    /**
     * Create new navigation property to intuneBrandingProfiles for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<IntuneBrandingProfile>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: IntuneBrandingProfile, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<IntuneBrandingProfile | undefined>;
    /**
     * Intune branding profiles targeted to AAD groups
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<IntuneBrandingProfilesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to intuneBrandingProfiles for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: IntuneBrandingProfile, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Intune branding profiles targeted to AAD groups
 */
export interface IntuneBrandingProfilesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const IntuneBrandingProfilesRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/intuneBrandingProfiles{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the intuneBrandingProfiles property of the microsoft.graph.deviceManagement entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Assignments: "assignments",
} as const;
/**
 * Provides operations to manage the intuneBrandingProfiles property of the microsoft.graph.deviceManagement entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    CompanyPortalBlockedActions: "companyPortalBlockedActions",
    CompanyPortalBlockedActionsDesc: "companyPortalBlockedActions desc",
    ContactITEmailAddress: "contactITEmailAddress",
    ContactITEmailAddressDesc: "contactITEmailAddress desc",
    ContactITName: "contactITName",
    ContactITNameDesc: "contactITName desc",
    ContactITNotes: "contactITNotes",
    ContactITNotesDesc: "contactITNotes desc",
    ContactITPhoneNumber: "contactITPhoneNumber",
    ContactITPhoneNumberDesc: "contactITPhoneNumber desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    CustomCanSeePrivacyMessage: "customCanSeePrivacyMessage",
    CustomCanSeePrivacyMessageDesc: "customCanSeePrivacyMessage desc",
    CustomCantSeePrivacyMessage: "customCantSeePrivacyMessage",
    CustomCantSeePrivacyMessageDesc: "customCantSeePrivacyMessage desc",
    CustomPrivacyMessage: "customPrivacyMessage",
    CustomPrivacyMessageDesc: "customPrivacyMessage desc",
    DisableClientTelemetry: "disableClientTelemetry",
    DisableClientTelemetryDesc: "disableClientTelemetry desc",
    DisableDeviceCategorySelection: "disableDeviceCategorySelection",
    DisableDeviceCategorySelectionDesc: "disableDeviceCategorySelection desc",
    DisplayName: "displayName",
    DisplayNameDesc: "displayName desc",
    EnrollmentAvailability: "enrollmentAvailability",
    EnrollmentAvailabilityDesc: "enrollmentAvailability desc",
    IsDefaultProfile: "isDefaultProfile",
    IsDefaultProfileDesc: "isDefaultProfile desc",
    IsFactoryResetDisabled: "isFactoryResetDisabled",
    IsFactoryResetDisabledDesc: "isFactoryResetDisabled desc",
    IsRemoveDeviceDisabled: "isRemoveDeviceDisabled",
    IsRemoveDeviceDisabledDesc: "isRemoveDeviceDisabled desc",
    LandingPageCustomizedImage: "landingPageCustomizedImage",
    LandingPageCustomizedImageDesc: "landingPageCustomizedImage desc",
    LastModifiedDateTime: "lastModifiedDateTime",
    LastModifiedDateTimeDesc: "lastModifiedDateTime desc",
    LightBackgroundLogo: "lightBackgroundLogo",
    LightBackgroundLogoDesc: "lightBackgroundLogo desc",
    OnlineSupportSiteName: "onlineSupportSiteName",
    OnlineSupportSiteNameDesc: "onlineSupportSiteName desc",
    OnlineSupportSiteUrl: "onlineSupportSiteUrl",
    OnlineSupportSiteUrlDesc: "onlineSupportSiteUrl desc",
    PrivacyUrl: "privacyUrl",
    PrivacyUrlDesc: "privacyUrl desc",
    ProfileDescription: "profileDescription",
    ProfileDescriptionDesc: "profileDescription desc",
    ProfileName: "profileName",
    ProfileNameDesc: "profileName desc",
    RoleScopeTagIds: "roleScopeTagIds",
    RoleScopeTagIdsDesc: "roleScopeTagIds desc",
    SendDeviceOwnershipChangePushNotification: "sendDeviceOwnershipChangePushNotification",
    SendDeviceOwnershipChangePushNotificationDesc: "sendDeviceOwnershipChangePushNotification desc",
    ShowAzureADEnterpriseApps: "showAzureADEnterpriseApps",
    ShowAzureADEnterpriseAppsDesc: "showAzureADEnterpriseApps desc",
    ShowConfigurationManagerApps: "showConfigurationManagerApps",
    ShowConfigurationManagerAppsDesc: "showConfigurationManagerApps desc",
    ShowDisplayNameNextToLogo: "showDisplayNameNextToLogo",
    ShowDisplayNameNextToLogoDesc: "showDisplayNameNextToLogo desc",
    ShowLogo: "showLogo",
    ShowLogoDesc: "showLogo desc",
    ShowOfficeWebApps: "showOfficeWebApps",
    ShowOfficeWebAppsDesc: "showOfficeWebApps desc",
    ThemeColor: "themeColor",
    ThemeColorDesc: "themeColor desc",
    ThemeColorLogo: "themeColorLogo",
    ThemeColorLogoDesc: "themeColorLogo desc",
} as const;
/**
 * Provides operations to manage the intuneBrandingProfiles property of the microsoft.graph.deviceManagement entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    CompanyPortalBlockedActions: "companyPortalBlockedActions",
    ContactITEmailAddress: "contactITEmailAddress",
    ContactITName: "contactITName",
    ContactITNotes: "contactITNotes",
    ContactITPhoneNumber: "contactITPhoneNumber",
    CreatedDateTime: "createdDateTime",
    CustomCanSeePrivacyMessage: "customCanSeePrivacyMessage",
    CustomCantSeePrivacyMessage: "customCantSeePrivacyMessage",
    CustomPrivacyMessage: "customPrivacyMessage",
    DisableClientTelemetry: "disableClientTelemetry",
    DisableDeviceCategorySelection: "disableDeviceCategorySelection",
    DisplayName: "displayName",
    EnrollmentAvailability: "enrollmentAvailability",
    IsDefaultProfile: "isDefaultProfile",
    IsFactoryResetDisabled: "isFactoryResetDisabled",
    IsRemoveDeviceDisabled: "isRemoveDeviceDisabled",
    LandingPageCustomizedImage: "landingPageCustomizedImage",
    LastModifiedDateTime: "lastModifiedDateTime",
    LightBackgroundLogo: "lightBackgroundLogo",
    OnlineSupportSiteName: "onlineSupportSiteName",
    OnlineSupportSiteUrl: "onlineSupportSiteUrl",
    PrivacyUrl: "privacyUrl",
    ProfileDescription: "profileDescription",
    ProfileName: "profileName",
    RoleScopeTagIds: "roleScopeTagIds",
    SendDeviceOwnershipChangePushNotification: "sendDeviceOwnershipChangePushNotification",
    ShowAzureADEnterpriseApps: "showAzureADEnterpriseApps",
    ShowConfigurationManagerApps: "showConfigurationManagerApps",
    ShowDisplayNameNextToLogo: "showDisplayNameNextToLogo",
    ShowLogo: "showLogo",
    ShowOfficeWebApps: "showOfficeWebApps",
    ThemeColor: "themeColor",
    ThemeColorLogo: "themeColorLogo",
    Assignments: "assignments",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const IntuneBrandingProfilesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const IntuneBrandingProfilesRequestBuilderNavigationMetadata: Record<Exclude<keyof IntuneBrandingProfilesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byIntuneBrandingProfileId: {
        requestsMetadata: IntuneBrandingProfileItemRequestBuilderRequestsMetadata,
        navigationMetadata: IntuneBrandingProfileItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["intuneBrandingProfile%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const IntuneBrandingProfilesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: IntuneBrandingProfilesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createIntuneBrandingProfileCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: IntuneBrandingProfilesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: IntuneBrandingProfilesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createIntuneBrandingProfileFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeIntuneBrandingProfile,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
