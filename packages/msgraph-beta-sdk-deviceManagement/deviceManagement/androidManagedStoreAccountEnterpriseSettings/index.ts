/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createAndroidManagedStoreAccountEnterpriseSettingsFromDiscriminatorValue, serializeAndroidManagedStoreAccountEnterpriseSettings, type AndroidManagedStoreAccountEnterpriseSettings } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { AddAppsRequestBuilderRequestsMetadata, type AddAppsRequestBuilder } from './addApps/index.js';
// @ts-ignore
import { ApproveAppsRequestBuilderRequestsMetadata, type ApproveAppsRequestBuilder } from './approveApps/index.js';
// @ts-ignore
import { CompleteSignupRequestBuilderRequestsMetadata, type CompleteSignupRequestBuilder } from './completeSignup/index.js';
// @ts-ignore
import { CreateGooglePlayWebTokenRequestBuilderRequestsMetadata, type CreateGooglePlayWebTokenRequestBuilder } from './createGooglePlayWebToken/index.js';
// @ts-ignore
import { RequestSignupUrlRequestBuilderRequestsMetadata, type RequestSignupUrlRequestBuilder } from './requestSignupUrl/index.js';
// @ts-ignore
import { SetAndroidDeviceOwnerFullyManagedEnrollmentStateRequestBuilderRequestsMetadata, type SetAndroidDeviceOwnerFullyManagedEnrollmentStateRequestBuilder } from './setAndroidDeviceOwnerFullyManagedEnrollmentState/index.js';
// @ts-ignore
import { SyncAppsRequestBuilderRequestsMetadata, type SyncAppsRequestBuilder } from './syncApps/index.js';
// @ts-ignore
import { type UnbindRequestBuilder, UnbindRequestBuilderRequestsMetadata } from './unbind/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the androidManagedStoreAccountEnterpriseSettings property of the microsoft.graph.deviceManagement entity.
 */
export interface AndroidManagedStoreAccountEnterpriseSettingsRequestBuilder extends BaseRequestBuilder<AndroidManagedStoreAccountEnterpriseSettingsRequestBuilder> {
    /**
     * Provides operations to call the addApps method.
     */
    get addApps(): AddAppsRequestBuilder;
    /**
     * Provides operations to call the approveApps method.
     */
    get approveApps(): ApproveAppsRequestBuilder;
    /**
     * Provides operations to call the completeSignup method.
     */
    get completeSignup(): CompleteSignupRequestBuilder;
    /**
     * Provides operations to call the createGooglePlayWebToken method.
     */
    get createGooglePlayWebToken(): CreateGooglePlayWebTokenRequestBuilder;
    /**
     * Provides operations to call the requestSignupUrl method.
     */
    get requestSignupUrl(): RequestSignupUrlRequestBuilder;
    /**
     * Provides operations to call the setAndroidDeviceOwnerFullyManagedEnrollmentState method.
     */
    get setAndroidDeviceOwnerFullyManagedEnrollmentState(): SetAndroidDeviceOwnerFullyManagedEnrollmentStateRequestBuilder;
    /**
     * Provides operations to call the syncApps method.
     */
    get syncApps(): SyncAppsRequestBuilder;
    /**
     * Provides operations to call the unbind method.
     */
    get unbind(): UnbindRequestBuilder;
    /**
     * Delete navigation property androidManagedStoreAccountEnterpriseSettings for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The singleton Android managed store account enterprise settings entity.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AndroidManagedStoreAccountEnterpriseSettings>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<AndroidManagedStoreAccountEnterpriseSettingsRequestBuilderGetQueryParameters> | undefined) : Promise<AndroidManagedStoreAccountEnterpriseSettings | undefined>;
    /**
     * Update the navigation property androidManagedStoreAccountEnterpriseSettings in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AndroidManagedStoreAccountEnterpriseSettings>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: AndroidManagedStoreAccountEnterpriseSettings, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<AndroidManagedStoreAccountEnterpriseSettings | undefined>;
    /**
     * Delete navigation property androidManagedStoreAccountEnterpriseSettings for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The singleton Android managed store account enterprise settings entity.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AndroidManagedStoreAccountEnterpriseSettingsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property androidManagedStoreAccountEnterpriseSettings in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: AndroidManagedStoreAccountEnterpriseSettings, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The singleton Android managed store account enterprise settings entity.
 */
export interface AndroidManagedStoreAccountEnterpriseSettingsRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const AndroidManagedStoreAccountEnterpriseSettingsRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/androidManagedStoreAccountEnterpriseSettings{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AndroidManagedStoreAccountEnterpriseSettingsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AndroidManagedStoreAccountEnterpriseSettingsRequestBuilderNavigationMetadata: Record<Exclude<keyof AndroidManagedStoreAccountEnterpriseSettingsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    addApps: {
        requestsMetadata: AddAppsRequestBuilderRequestsMetadata,
    },
    approveApps: {
        requestsMetadata: ApproveAppsRequestBuilderRequestsMetadata,
    },
    completeSignup: {
        requestsMetadata: CompleteSignupRequestBuilderRequestsMetadata,
    },
    createGooglePlayWebToken: {
        requestsMetadata: CreateGooglePlayWebTokenRequestBuilderRequestsMetadata,
    },
    requestSignupUrl: {
        requestsMetadata: RequestSignupUrlRequestBuilderRequestsMetadata,
    },
    setAndroidDeviceOwnerFullyManagedEnrollmentState: {
        requestsMetadata: SetAndroidDeviceOwnerFullyManagedEnrollmentStateRequestBuilderRequestsMetadata,
    },
    syncApps: {
        requestsMetadata: SyncAppsRequestBuilderRequestsMetadata,
    },
    unbind: {
        requestsMetadata: UnbindRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AndroidManagedStoreAccountEnterpriseSettingsRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: AndroidManagedStoreAccountEnterpriseSettingsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: AndroidManagedStoreAccountEnterpriseSettingsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAndroidManagedStoreAccountEnterpriseSettingsFromDiscriminatorValue,
        queryParametersMapper: AndroidManagedStoreAccountEnterpriseSettingsRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: AndroidManagedStoreAccountEnterpriseSettingsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAndroidManagedStoreAccountEnterpriseSettingsFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAndroidManagedStoreAccountEnterpriseSettings,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
