/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createOperationApprovalPolicyCollectionResponseFromDiscriminatorValue, createOperationApprovalPolicyFromDiscriminatorValue, serializeOperationApprovalPolicy, type OperationApprovalPolicy, type OperationApprovalPolicyCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, CountRequestBuilderUriTemplate, type CountRequestBuilder } from './count/';
import { GetApprovableOperationsRequestBuilderRequestsMetadata, GetApprovableOperationsRequestBuilderUriTemplate, type GetApprovableOperationsRequestBuilder } from './getApprovableOperations/';
import { GetOperationsRequiringApprovalRequestBuilderRequestsMetadata, GetOperationsRequiringApprovalRequestBuilderUriTemplate, type GetOperationsRequiringApprovalRequestBuilder } from './getOperationsRequiringApproval/';
import { OperationApprovalPolicyItemRequestBuilderRequestsMetadata, OperationApprovalPolicyItemRequestBuilderUriTemplate, type OperationApprovalPolicyItemRequestBuilder } from './item/';
import { RetrieveApprovableOperationsRequestBuilderRequestsMetadata, RetrieveApprovableOperationsRequestBuilderUriTemplate, type RetrieveApprovableOperationsRequestBuilder } from './retrieveApprovableOperations/';
import { RetrieveOperationsRequiringApprovalRequestBuilderRequestsMetadata, RetrieveOperationsRequiringApprovalRequestBuilderUriTemplate, type RetrieveOperationsRequiringApprovalRequestBuilder } from './retrieveOperationsRequiringApproval/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the operationApprovalPolicies property of the microsoft.graph.deviceManagement entity.
 */
export interface OperationApprovalPoliciesRequestBuilder extends BaseRequestBuilder<OperationApprovalPoliciesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to call the getApprovableOperations method.
     */
    get getApprovableOperations(): GetApprovableOperationsRequestBuilder;
    /**
     * Provides operations to call the getOperationsRequiringApproval method.
     */
    get getOperationsRequiringApproval(): GetOperationsRequiringApprovalRequestBuilder;
    /**
     * Provides operations to call the retrieveApprovableOperations method.
     */
    get retrieveApprovableOperations(): RetrieveApprovableOperationsRequestBuilder;
    /**
     * Provides operations to call the retrieveOperationsRequiringApproval method.
     */
    get retrieveOperationsRequiringApproval(): RetrieveOperationsRequiringApprovalRequestBuilder;
    /**
     * Provides operations to manage the operationApprovalPolicies property of the microsoft.graph.deviceManagement entity.
     * @param operationApprovalPolicyId The unique identifier of operationApprovalPolicy
     * @returns a OperationApprovalPolicyItemRequestBuilder
     */
     byOperationApprovalPolicyId(operationApprovalPolicyId: string) : OperationApprovalPolicyItemRequestBuilder;
    /**
     * The Operation Approval Policies
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of OperationApprovalPolicyCollectionResponse
     */
     get(requestConfiguration?: RequestConfiguration<OperationApprovalPoliciesRequestBuilderGetQueryParameters> | undefined) : Promise<OperationApprovalPolicyCollectionResponse | undefined>;
    /**
     * Create new navigation property to operationApprovalPolicies for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of OperationApprovalPolicy
     */
     post(body: OperationApprovalPolicy, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<OperationApprovalPolicy | undefined>;
    /**
     * The Operation Approval Policies
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<OperationApprovalPoliciesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to operationApprovalPolicies for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: OperationApprovalPolicy, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The Operation Approval Policies
 */
export interface OperationApprovalPoliciesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const OperationApprovalPoliciesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const OperationApprovalPoliciesRequestBuilderNavigationMetadata: Record<Exclude<keyof OperationApprovalPoliciesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byOperationApprovalPolicyId: {
        uriTemplate: OperationApprovalPolicyItemRequestBuilderUriTemplate,
        requestsMetadata: OperationApprovalPolicyItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["operationApprovalPolicy%2Did"],
    },
    count: {
        uriTemplate: CountRequestBuilderUriTemplate,
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    getApprovableOperations: {
        uriTemplate: GetApprovableOperationsRequestBuilderUriTemplate,
        requestsMetadata: GetApprovableOperationsRequestBuilderRequestsMetadata,
    },
    getOperationsRequiringApproval: {
        uriTemplate: GetOperationsRequiringApprovalRequestBuilderUriTemplate,
        requestsMetadata: GetOperationsRequiringApprovalRequestBuilderRequestsMetadata,
    },
    retrieveApprovableOperations: {
        uriTemplate: RetrieveApprovableOperationsRequestBuilderUriTemplate,
        requestsMetadata: RetrieveApprovableOperationsRequestBuilderRequestsMetadata,
    },
    retrieveOperationsRequiringApproval: {
        uriTemplate: RetrieveOperationsRequiringApprovalRequestBuilderUriTemplate,
        requestsMetadata: RetrieveOperationsRequiringApprovalRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const OperationApprovalPoliciesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createOperationApprovalPolicyCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: OperationApprovalPoliciesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createOperationApprovalPolicyFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeOperationApprovalPolicy,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const OperationApprovalPoliciesRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/operationApprovalPolicies{?%24top,%24skip,%24search,%24filter,%24count,%24orderby,%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
