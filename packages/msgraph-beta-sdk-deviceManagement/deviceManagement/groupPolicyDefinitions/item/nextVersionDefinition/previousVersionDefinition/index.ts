/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createGroupPolicyDefinitionFromDiscriminatorValue, serializeGroupPolicyDefinition, type GroupPolicyDefinition } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CategoryRequestBuilderRequestsMetadata, CategoryRequestBuilderUriTemplate, type CategoryRequestBuilder } from './category/';
import { DefinitionFileRequestBuilderRequestsMetadata, DefinitionFileRequestBuilderUriTemplate, type DefinitionFileRequestBuilder } from './definitionFile/';
import { PresentationsRequestBuilderNavigationMetadata, PresentationsRequestBuilderRequestsMetadata, PresentationsRequestBuilderUriTemplate, type PresentationsRequestBuilder } from './presentations/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the previousVersionDefinition property of the microsoft.graph.groupPolicyDefinition entity.
 */
export interface PreviousVersionDefinitionRequestBuilder extends BaseRequestBuilder<PreviousVersionDefinitionRequestBuilder> {
    /**
     * Provides operations to manage the category property of the microsoft.graph.groupPolicyDefinition entity.
     */
    get category(): CategoryRequestBuilder;
    /**
     * Provides operations to manage the definitionFile property of the microsoft.graph.groupPolicyDefinition entity.
     */
    get definitionFile(): DefinitionFileRequestBuilder;
    /**
     * Provides operations to manage the presentations property of the microsoft.graph.groupPolicyDefinition entity.
     */
    get presentations(): PresentationsRequestBuilder;
    /**
     * Delete navigation property previousVersionDefinition for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Definition of the previous version of this definition
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of GroupPolicyDefinition
     */
     get(requestConfiguration?: RequestConfiguration<PreviousVersionDefinitionRequestBuilderGetQueryParameters> | undefined) : Promise<GroupPolicyDefinition | undefined>;
    /**
     * Update the navigation property previousVersionDefinition in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of GroupPolicyDefinition
     */
     patch(body: GroupPolicyDefinition, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<GroupPolicyDefinition | undefined>;
    /**
     * Delete navigation property previousVersionDefinition for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Definition of the previous version of this definition
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PreviousVersionDefinitionRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property previousVersionDefinition in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: GroupPolicyDefinition, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Definition of the previous version of this definition
 */
export interface PreviousVersionDefinitionRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PreviousVersionDefinitionRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PreviousVersionDefinitionRequestBuilderNavigationMetadata: Record<Exclude<keyof PreviousVersionDefinitionRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    category: {
        uriTemplate: CategoryRequestBuilderUriTemplate,
        requestsMetadata: CategoryRequestBuilderRequestsMetadata,
    },
    definitionFile: {
        uriTemplate: DefinitionFileRequestBuilderUriTemplate,
        requestsMetadata: DefinitionFileRequestBuilderRequestsMetadata,
    },
    presentations: {
        uriTemplate: PresentationsRequestBuilderUriTemplate,
        requestsMetadata: PresentationsRequestBuilderRequestsMetadata,
        navigationMetadata: PresentationsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PreviousVersionDefinitionRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createGroupPolicyDefinitionFromDiscriminatorValue,
        queryParametersMapper: PreviousVersionDefinitionRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createGroupPolicyDefinitionFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeGroupPolicyDefinition,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const PreviousVersionDefinitionRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/groupPolicyDefinitions/{groupPolicyDefinition%2Did}/nextVersionDefinition/previousVersionDefinition{?%24expand,%24select}";
/* tslint:enable */
/* eslint-enable */
