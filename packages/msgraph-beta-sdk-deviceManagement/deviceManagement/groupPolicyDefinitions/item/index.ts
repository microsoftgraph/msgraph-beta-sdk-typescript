/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createGroupPolicyDefinitionFromDiscriminatorValue, serializeGroupPolicyDefinition, type GroupPolicyDefinition } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { CategoryRequestBuilderRequestsMetadata, type CategoryRequestBuilder } from './category/index.js';
// @ts-ignore
import { DefinitionFileRequestBuilderRequestsMetadata, type DefinitionFileRequestBuilder } from './definitionFile/index.js';
// @ts-ignore
import { NextVersionDefinitionRequestBuilderNavigationMetadata, NextVersionDefinitionRequestBuilderRequestsMetadata, type NextVersionDefinitionRequestBuilder } from './nextVersionDefinition/index.js';
// @ts-ignore
import { PresentationsRequestBuilderNavigationMetadata, PresentationsRequestBuilderRequestsMetadata, type PresentationsRequestBuilder } from './presentations/index.js';
// @ts-ignore
import { PreviousVersionDefinitionRequestBuilderNavigationMetadata, PreviousVersionDefinitionRequestBuilderRequestsMetadata, type PreviousVersionDefinitionRequestBuilder } from './previousVersionDefinition/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the groupPolicyDefinitions property of the microsoft.graph.deviceManagement entity.
 */
export interface GroupPolicyDefinitionItemRequestBuilder extends BaseRequestBuilder<GroupPolicyDefinitionItemRequestBuilder> {
    /**
     * Provides operations to manage the category property of the microsoft.graph.groupPolicyDefinition entity.
     */
    get category(): CategoryRequestBuilder;
    /**
     * Provides operations to manage the definitionFile property of the microsoft.graph.groupPolicyDefinition entity.
     */
    get definitionFile(): DefinitionFileRequestBuilder;
    /**
     * Provides operations to manage the nextVersionDefinition property of the microsoft.graph.groupPolicyDefinition entity.
     */
    get nextVersionDefinition(): NextVersionDefinitionRequestBuilder;
    /**
     * Provides operations to manage the presentations property of the microsoft.graph.groupPolicyDefinition entity.
     */
    get presentations(): PresentationsRequestBuilder;
    /**
     * Provides operations to manage the previousVersionDefinition property of the microsoft.graph.groupPolicyDefinition entity.
     */
    get previousVersionDefinition(): PreviousVersionDefinitionRequestBuilder;
    /**
     * Delete navigation property groupPolicyDefinitions for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The available group policy definitions for this account.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<GroupPolicyDefinition>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<GroupPolicyDefinitionItemRequestBuilderGetQueryParameters> | undefined) : Promise<GroupPolicyDefinition | undefined>;
    /**
     * Update the navigation property groupPolicyDefinitions in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<GroupPolicyDefinition>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: GroupPolicyDefinition, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<GroupPolicyDefinition | undefined>;
    /**
     * Delete navigation property groupPolicyDefinitions for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The available group policy definitions for this account.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<GroupPolicyDefinitionItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property groupPolicyDefinitions in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: GroupPolicyDefinition, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The available group policy definitions for this account.
 */
export interface GroupPolicyDefinitionItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const GroupPolicyDefinitionItemRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/groupPolicyDefinitions/{groupPolicyDefinition%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const GroupPolicyDefinitionItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const GroupPolicyDefinitionItemRequestBuilderNavigationMetadata: Record<Exclude<keyof GroupPolicyDefinitionItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    category: {
        requestsMetadata: CategoryRequestBuilderRequestsMetadata,
    },
    definitionFile: {
        requestsMetadata: DefinitionFileRequestBuilderRequestsMetadata,
    },
    nextVersionDefinition: {
        requestsMetadata: NextVersionDefinitionRequestBuilderRequestsMetadata,
        navigationMetadata: NextVersionDefinitionRequestBuilderNavigationMetadata,
    },
    presentations: {
        requestsMetadata: PresentationsRequestBuilderRequestsMetadata,
        navigationMetadata: PresentationsRequestBuilderNavigationMetadata,
    },
    previousVersionDefinition: {
        requestsMetadata: PreviousVersionDefinitionRequestBuilderRequestsMetadata,
        navigationMetadata: PreviousVersionDefinitionRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const GroupPolicyDefinitionItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: GroupPolicyDefinitionItemRequestBuilderUriTemplate,
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: GroupPolicyDefinitionItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createGroupPolicyDefinitionFromDiscriminatorValue,
        queryParametersMapper: GroupPolicyDefinitionItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: GroupPolicyDefinitionItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createGroupPolicyDefinitionFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeGroupPolicyDefinition,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
