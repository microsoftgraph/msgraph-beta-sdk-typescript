/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDepOnboardingSettingFromDiscriminatorValue, serializeDepOnboardingSetting, type DepOnboardingSetting } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { DefaultIosEnrollmentProfileRequestBuilderRequestsMetadata, type DefaultIosEnrollmentProfileRequestBuilder } from './defaultIosEnrollmentProfile/index.js';
// @ts-ignore
import { DefaultMacOsEnrollmentProfileRequestBuilderRequestsMetadata, type DefaultMacOsEnrollmentProfileRequestBuilder } from './defaultMacOsEnrollmentProfile/index.js';
// @ts-ignore
import { DefaultTvOSEnrollmentProfileRequestBuilderRequestsMetadata, type DefaultTvOSEnrollmentProfileRequestBuilder } from './defaultTvOSEnrollmentProfile/index.js';
// @ts-ignore
import { DefaultVisionOSEnrollmentProfileRequestBuilderRequestsMetadata, type DefaultVisionOSEnrollmentProfileRequestBuilder } from './defaultVisionOSEnrollmentProfile/index.js';
// @ts-ignore
import { EnrollmentProfilesRequestBuilderNavigationMetadata, EnrollmentProfilesRequestBuilderRequestsMetadata, type EnrollmentProfilesRequestBuilder } from './enrollmentProfiles/index.js';
// @ts-ignore
import { GenerateEncryptionPublicKeyRequestBuilderRequestsMetadata, type GenerateEncryptionPublicKeyRequestBuilder } from './generateEncryptionPublicKey/index.js';
// @ts-ignore
import { GetEncryptionPublicKeyRequestBuilderRequestsMetadata, type GetEncryptionPublicKeyRequestBuilder } from './getEncryptionPublicKey/index.js';
// @ts-ignore
import { ImportedAppleDeviceIdentitiesRequestBuilderNavigationMetadata, ImportedAppleDeviceIdentitiesRequestBuilderRequestsMetadata, type ImportedAppleDeviceIdentitiesRequestBuilder } from './importedAppleDeviceIdentities/index.js';
// @ts-ignore
import { ShareForSchoolDataSyncServiceRequestBuilderRequestsMetadata, type ShareForSchoolDataSyncServiceRequestBuilder } from './shareForSchoolDataSyncService/index.js';
// @ts-ignore
import { SyncWithAppleDeviceEnrollmentProgramRequestBuilderRequestsMetadata, type SyncWithAppleDeviceEnrollmentProgramRequestBuilder } from './syncWithAppleDeviceEnrollmentProgram/index.js';
// @ts-ignore
import { type UnshareForSchoolDataSyncServiceRequestBuilder, UnshareForSchoolDataSyncServiceRequestBuilderRequestsMetadata } from './unshareForSchoolDataSyncService/index.js';
// @ts-ignore
import { type UploadDepTokenRequestBuilder, UploadDepTokenRequestBuilderRequestsMetadata } from './uploadDepToken/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the depOnboardingSettings property of the microsoft.graph.deviceManagement entity.
 */
export interface DepOnboardingSettingItemRequestBuilder extends BaseRequestBuilder<DepOnboardingSettingItemRequestBuilder> {
    /**
     * Provides operations to manage the defaultIosEnrollmentProfile property of the microsoft.graph.depOnboardingSetting entity.
     */
    get defaultIosEnrollmentProfile(): DefaultIosEnrollmentProfileRequestBuilder;
    /**
     * Provides operations to manage the defaultMacOsEnrollmentProfile property of the microsoft.graph.depOnboardingSetting entity.
     */
    get defaultMacOsEnrollmentProfile(): DefaultMacOsEnrollmentProfileRequestBuilder;
    /**
     * Provides operations to manage the defaultTvOSEnrollmentProfile property of the microsoft.graph.depOnboardingSetting entity.
     */
    get defaultTvOSEnrollmentProfile(): DefaultTvOSEnrollmentProfileRequestBuilder;
    /**
     * Provides operations to manage the defaultVisionOSEnrollmentProfile property of the microsoft.graph.depOnboardingSetting entity.
     */
    get defaultVisionOSEnrollmentProfile(): DefaultVisionOSEnrollmentProfileRequestBuilder;
    /**
     * Provides operations to manage the enrollmentProfiles property of the microsoft.graph.depOnboardingSetting entity.
     */
    get enrollmentProfiles(): EnrollmentProfilesRequestBuilder;
    /**
     * Provides operations to call the generateEncryptionPublicKey method.
     */
    get generateEncryptionPublicKey(): GenerateEncryptionPublicKeyRequestBuilder;
    /**
     * Provides operations to call the getEncryptionPublicKey method.
     */
    get getEncryptionPublicKey(): GetEncryptionPublicKeyRequestBuilder;
    /**
     * Provides operations to manage the importedAppleDeviceIdentities property of the microsoft.graph.depOnboardingSetting entity.
     */
    get importedAppleDeviceIdentities(): ImportedAppleDeviceIdentitiesRequestBuilder;
    /**
     * Provides operations to call the shareForSchoolDataSyncService method.
     */
    get shareForSchoolDataSyncService(): ShareForSchoolDataSyncServiceRequestBuilder;
    /**
     * Provides operations to call the syncWithAppleDeviceEnrollmentProgram method.
     */
    get syncWithAppleDeviceEnrollmentProgram(): SyncWithAppleDeviceEnrollmentProgramRequestBuilder;
    /**
     * Provides operations to call the unshareForSchoolDataSyncService method.
     */
    get unshareForSchoolDataSyncService(): UnshareForSchoolDataSyncServiceRequestBuilder;
    /**
     * Provides operations to call the uploadDepToken method.
     */
    get uploadDepToken(): UploadDepTokenRequestBuilder;
    /**
     * Delete navigation property depOnboardingSettings for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * This collections of multiple DEP tokens per-tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DepOnboardingSetting>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<DepOnboardingSettingItemRequestBuilderGetQueryParameters> | undefined) : Promise<DepOnboardingSetting | undefined>;
    /**
     * Update the navigation property depOnboardingSettings in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DepOnboardingSetting>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: DepOnboardingSetting, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DepOnboardingSetting | undefined>;
    /**
     * Delete navigation property depOnboardingSettings for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * This collections of multiple DEP tokens per-tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DepOnboardingSettingItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property depOnboardingSettings in deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: DepOnboardingSetting, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * This collections of multiple DEP tokens per-tenant.
 */
export interface DepOnboardingSettingItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const DepOnboardingSettingItemRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/depOnboardingSettings/{depOnboardingSetting%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DepOnboardingSettingItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DepOnboardingSettingItemRequestBuilderNavigationMetadata: Record<Exclude<keyof DepOnboardingSettingItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    defaultIosEnrollmentProfile: {
        requestsMetadata: DefaultIosEnrollmentProfileRequestBuilderRequestsMetadata,
    },
    defaultMacOsEnrollmentProfile: {
        requestsMetadata: DefaultMacOsEnrollmentProfileRequestBuilderRequestsMetadata,
    },
    defaultTvOSEnrollmentProfile: {
        requestsMetadata: DefaultTvOSEnrollmentProfileRequestBuilderRequestsMetadata,
    },
    defaultVisionOSEnrollmentProfile: {
        requestsMetadata: DefaultVisionOSEnrollmentProfileRequestBuilderRequestsMetadata,
    },
    enrollmentProfiles: {
        requestsMetadata: EnrollmentProfilesRequestBuilderRequestsMetadata,
        navigationMetadata: EnrollmentProfilesRequestBuilderNavigationMetadata,
    },
    generateEncryptionPublicKey: {
        requestsMetadata: GenerateEncryptionPublicKeyRequestBuilderRequestsMetadata,
    },
    getEncryptionPublicKey: {
        requestsMetadata: GetEncryptionPublicKeyRequestBuilderRequestsMetadata,
    },
    importedAppleDeviceIdentities: {
        requestsMetadata: ImportedAppleDeviceIdentitiesRequestBuilderRequestsMetadata,
        navigationMetadata: ImportedAppleDeviceIdentitiesRequestBuilderNavigationMetadata,
    },
    shareForSchoolDataSyncService: {
        requestsMetadata: ShareForSchoolDataSyncServiceRequestBuilderRequestsMetadata,
    },
    syncWithAppleDeviceEnrollmentProgram: {
        requestsMetadata: SyncWithAppleDeviceEnrollmentProgramRequestBuilderRequestsMetadata,
    },
    unshareForSchoolDataSyncService: {
        requestsMetadata: UnshareForSchoolDataSyncServiceRequestBuilderRequestsMetadata,
    },
    uploadDepToken: {
        requestsMetadata: UploadDepTokenRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DepOnboardingSettingItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: DepOnboardingSettingItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: DepOnboardingSettingItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDepOnboardingSettingFromDiscriminatorValue,
        queryParametersMapper: DepOnboardingSettingItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: DepOnboardingSettingItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDepOnboardingSettingFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDepOnboardingSetting,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
