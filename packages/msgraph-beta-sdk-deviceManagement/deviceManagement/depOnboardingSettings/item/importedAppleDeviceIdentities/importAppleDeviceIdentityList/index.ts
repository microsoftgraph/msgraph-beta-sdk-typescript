/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createImportedAppleDeviceIdentityFromDiscriminatorValue, createImportedAppleDeviceIdentityResultFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, serializeImportedAppleDeviceIdentity, serializeImportedAppleDeviceIdentityResult, type BaseCollectionPaginationCountResponse, type ImportedAppleDeviceIdentity, type ImportedAppleDeviceIdentityResult } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ImportAppleDeviceIdentityListPostRequestBody}
 */
export function createImportAppleDeviceIdentityListPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoImportAppleDeviceIdentityListPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ImportAppleDeviceIdentityListPostResponse}
 */
export function createImportAppleDeviceIdentityListPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoImportAppleDeviceIdentityListPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoImportAppleDeviceIdentityListPostRequestBody(importAppleDeviceIdentityListPostRequestBody: Partial<ImportAppleDeviceIdentityListPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { importAppleDeviceIdentityListPostRequestBody.backingStoreEnabled = true; },
        "importedAppleDeviceIdentities": n => { importAppleDeviceIdentityListPostRequestBody.importedAppleDeviceIdentities = n.getCollectionOfObjectValues<ImportedAppleDeviceIdentity>(createImportedAppleDeviceIdentityFromDiscriminatorValue); },
        "overwriteImportedDeviceIdentities": n => { importAppleDeviceIdentityListPostRequestBody.overwriteImportedDeviceIdentities = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoImportAppleDeviceIdentityListPostResponse(importAppleDeviceIdentityListPostResponse: Partial<ImportAppleDeviceIdentityListPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(importAppleDeviceIdentityListPostResponse),
        "value": n => { importAppleDeviceIdentityListPostResponse.value = n.getCollectionOfObjectValues<ImportedAppleDeviceIdentityResult>(createImportedAppleDeviceIdentityResultFromDiscriminatorValue); },
    }
}
export interface ImportAppleDeviceIdentityListPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The importedAppleDeviceIdentities property
     */
    importedAppleDeviceIdentities?: ImportedAppleDeviceIdentity[];
    /**
     * The overwriteImportedDeviceIdentities property
     */
    overwriteImportedDeviceIdentities?: boolean;
}
export interface ImportAppleDeviceIdentityListPostResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ImportedAppleDeviceIdentityResult[];
}
/**
 * Provides operations to call the importAppleDeviceIdentityList method.
 */
export interface ImportAppleDeviceIdentityListRequestBuilder extends BaseRequestBuilder<ImportAppleDeviceIdentityListRequestBuilder> {
    /**
     * Invoke action importAppleDeviceIdentityList
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ImportAppleDeviceIdentityListPostResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: ImportAppleDeviceIdentityListPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ImportAppleDeviceIdentityListPostResponse | undefined>;
    /**
     * Invoke action importAppleDeviceIdentityList
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ImportAppleDeviceIdentityListPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeImportAppleDeviceIdentityListPostRequestBody(writer: SerializationWriter, importAppleDeviceIdentityListPostRequestBody: Partial<ImportAppleDeviceIdentityListPostRequestBody> | undefined = {}) : void {
    writer.writeCollectionOfObjectValues<ImportedAppleDeviceIdentity>("importedAppleDeviceIdentities", importAppleDeviceIdentityListPostRequestBody.importedAppleDeviceIdentities, serializeImportedAppleDeviceIdentity);
    writer.writeBooleanValue("overwriteImportedDeviceIdentities", importAppleDeviceIdentityListPostRequestBody.overwriteImportedDeviceIdentities);
    writer.writeAdditionalData(importAppleDeviceIdentityListPostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeImportAppleDeviceIdentityListPostResponse(writer: SerializationWriter, importAppleDeviceIdentityListPostResponse: Partial<ImportAppleDeviceIdentityListPostResponse> | undefined = {}) : void {
    serializeBaseCollectionPaginationCountResponse(writer, importAppleDeviceIdentityListPostResponse)
    writer.writeCollectionOfObjectValues<ImportedAppleDeviceIdentityResult>("value", importAppleDeviceIdentityListPostResponse.value, serializeImportedAppleDeviceIdentityResult);
}
/**
 * Uri template for the request builder.
 */
export const ImportAppleDeviceIdentityListRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/depOnboardingSettings/{depOnboardingSetting%2Did}/importedAppleDeviceIdentities/importAppleDeviceIdentityList";
/**
 * Metadata for all the requests in the request builder.
 */
export const ImportAppleDeviceIdentityListRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: ImportAppleDeviceIdentityListRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createImportAppleDeviceIdentityListPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeImportAppleDeviceIdentityListPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
