/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createCloudCertificationAuthorityFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, serializeCloudCertificationAuthority, type BaseCollectionPaginationCountResponse, type CloudCertificationAuthority } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GetAllCloudCertificationAuthorityPostResponse}
 */
// @ts-ignore
export function createGetAllCloudCertificationAuthorityPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGetAllCloudCertificationAuthorityPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGetAllCloudCertificationAuthorityPostResponse(getAllCloudCertificationAuthorityPostResponse: Partial<GetAllCloudCertificationAuthorityPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(getAllCloudCertificationAuthorityPostResponse),
        "value": n => { getAllCloudCertificationAuthorityPostResponse.value = n.getCollectionOfObjectValues<CloudCertificationAuthority>(createCloudCertificationAuthorityFromDiscriminatorValue); },
    }
}
export interface GetAllCloudCertificationAuthorityPostResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: CloudCertificationAuthority[] | null;
}
/**
 * Provides operations to call the getAllCloudCertificationAuthority method.
 */
export interface GetAllCloudCertificationAuthorityRequestBuilder extends BaseRequestBuilder<GetAllCloudCertificationAuthorityRequestBuilder> {
    /**
     * Invoke action getAllCloudCertificationAuthority
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<GetAllCloudCertificationAuthorityPostResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<GetAllCloudCertificationAuthorityPostResponse | undefined>;
    /**
     * Invoke action getAllCloudCertificationAuthority
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGetAllCloudCertificationAuthorityPostResponse(writer: SerializationWriter, getAllCloudCertificationAuthorityPostResponse: Partial<GetAllCloudCertificationAuthorityPostResponse> | undefined | null = {}) : void {
    if (getAllCloudCertificationAuthorityPostResponse) {
        serializeBaseCollectionPaginationCountResponse(writer, getAllCloudCertificationAuthorityPostResponse)
        writer.writeCollectionOfObjectValues<CloudCertificationAuthority>("value", getAllCloudCertificationAuthorityPostResponse.value, serializeCloudCertificationAuthority);
    }
}
/**
 * Uri template for the request builder.
 */
export const GetAllCloudCertificationAuthorityRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/cloudCertificationAuthority/{cloudCertificationAuthority%2Did}/getAllCloudCertificationAuthority";
/**
 * Metadata for all the requests in the request builder.
 */
export const GetAllCloudCertificationAuthorityRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: GetAllCloudCertificationAuthorityRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createGetAllCloudCertificationAuthorityPostResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
