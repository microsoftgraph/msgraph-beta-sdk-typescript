/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPromptFromDiscriminatorValue, createRecordOperationFromDiscriminatorValue, serializePrompt, serializeRecordOperation, type Prompt, type RecordOperation } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a recordPostRequestBody
 */
export function createRecordPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRecordPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoRecordPostRequestBody(recordPostRequestBody: Partial<RecordPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { recordPostRequestBody.backingStoreEnabled = true; },
        "bargeInAllowed": n => { recordPostRequestBody.bargeInAllowed = n.getBooleanValue(); },
        "clientContext": n => { recordPostRequestBody.clientContext = n.getStringValue(); },
        "initialSilenceTimeoutInSeconds": n => { recordPostRequestBody.initialSilenceTimeoutInSeconds = n.getNumberValue(); },
        "maxRecordDurationInSeconds": n => { recordPostRequestBody.maxRecordDurationInSeconds = n.getNumberValue(); },
        "maxSilenceTimeoutInSeconds": n => { recordPostRequestBody.maxSilenceTimeoutInSeconds = n.getNumberValue(); },
        "playBeep": n => { recordPostRequestBody.playBeep = n.getBooleanValue(); },
        "prompts": n => { recordPostRequestBody.prompts = n.getCollectionOfObjectValues<Prompt>(createPromptFromDiscriminatorValue); },
        "stopTones": n => { recordPostRequestBody.stopTones = n.getCollectionOfPrimitiveValues<string>(); },
        "streamWhileRecording": n => { recordPostRequestBody.streamWhileRecording = n.getBooleanValue(); },
    }
}
export interface RecordPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The bargeInAllowed property
     */
    bargeInAllowed?: boolean;
    /**
     * The clientContext property
     */
    clientContext?: string;
    /**
     * The initialSilenceTimeoutInSeconds property
     */
    initialSilenceTimeoutInSeconds?: number;
    /**
     * The maxRecordDurationInSeconds property
     */
    maxRecordDurationInSeconds?: number;
    /**
     * The maxSilenceTimeoutInSeconds property
     */
    maxSilenceTimeoutInSeconds?: number;
    /**
     * The playBeep property
     */
    playBeep?: boolean;
    /**
     * The prompts property
     */
    prompts?: Prompt[];
    /**
     * The stopTones property
     */
    stopTones?: string[];
    /**
     * The streamWhileRecording property
     */
    streamWhileRecording?: boolean;
}
/**
 * Provides operations to call the record method.
 */
export interface RecordRequestBuilder extends BaseRequestBuilder<RecordRequestBuilder> {
    /**
     * Invoke action record
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of RecordOperation
     */
     post(body: RecordPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<RecordOperation | undefined>;
    /**
     * Invoke action record
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: RecordPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeRecordPostRequestBody(writer: SerializationWriter, recordPostRequestBody: Partial<RecordPostRequestBody> | undefined = {}) : void {
    writer.writeBooleanValue("bargeInAllowed", recordPostRequestBody.bargeInAllowed);
    writer.writeStringValue("clientContext", recordPostRequestBody.clientContext);
    writer.writeNumberValue("initialSilenceTimeoutInSeconds", recordPostRequestBody.initialSilenceTimeoutInSeconds);
    writer.writeNumberValue("maxRecordDurationInSeconds", recordPostRequestBody.maxRecordDurationInSeconds);
    writer.writeNumberValue("maxSilenceTimeoutInSeconds", recordPostRequestBody.maxSilenceTimeoutInSeconds);
    writer.writeBooleanValue("playBeep", recordPostRequestBody.playBeep);
    writer.writeCollectionOfObjectValues<Prompt>("prompts", recordPostRequestBody.prompts, serializePrompt);
    writer.writeCollectionOfPrimitiveValues<string>("stopTones", recordPostRequestBody.stopTones);
    writer.writeBooleanValue("streamWhileRecording", recordPostRequestBody.streamWhileRecording);
    writer.writeAdditionalData(recordPostRequestBody.additionalData);
}
/**
 * Metadata for all the requests in the request builder.
 */
export const RecordRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createRecordOperationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeRecordPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const RecordRequestBuilderUriTemplate = "{+baseurl}/app/calls/{call%2Did}/record";
/* tslint:enable */
/* eslint-enable */
