/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createCommsApplicationFromDiscriminatorValue, serializeCommsApplication, type CommsApplication } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CallsRequestBuilderNavigationMetadata, CallsRequestBuilderRequestsMetadata, CallsRequestBuilderUriTemplate, type CallsRequestBuilder } from './calls/';
import { OnlineMeetingsRequestBuilderNavigationMetadata, OnlineMeetingsRequestBuilderRequestsMetadata, OnlineMeetingsRequestBuilderUriTemplate, type OnlineMeetingsRequestBuilder } from './onlineMeetings/';
import { OnlineMeetingsWithJoinWebUrlRequestBuilderNavigationMetadata, OnlineMeetingsWithJoinWebUrlRequestBuilderRequestsMetadata, OnlineMeetingsWithJoinWebUrlRequestBuilderUriTemplate, type OnlineMeetingsWithJoinWebUrlRequestBuilder } from './onlineMeetingsWithJoinWebUrl/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the commsApplication singleton.
 */
export interface AppRequestBuilder extends BaseRequestBuilder<AppRequestBuilder> {
    /**
     * Provides operations to manage the calls property of the microsoft.graph.commsApplication entity.
     */
    get calls(): CallsRequestBuilder;
    /**
     * Provides operations to manage the onlineMeetings property of the microsoft.graph.commsApplication entity.
     */
    get onlineMeetings(): OnlineMeetingsRequestBuilder;
    /**
     * Get app
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of CommsApplication
     */
     get(requestConfiguration?: RequestConfiguration<AppRequestBuilderGetQueryParameters> | undefined) : Promise<CommsApplication | undefined>;
    /**
     * Provides operations to manage the onlineMeetings property of the microsoft.graph.commsApplication entity.
     * @param joinWebUrl Alternate key of onlineMeeting
     * @returns a onlineMeetingsWithJoinWebUrlRequestBuilder
     */
     onlineMeetingsWithJoinWebUrl(joinWebUrl: string | undefined) : OnlineMeetingsWithJoinWebUrlRequestBuilder;
    /**
     * Update app
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of CommsApplication
     */
     patch(body: CommsApplication, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<CommsApplication | undefined>;
    /**
     * Get app
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AppRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update app
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: CommsApplication, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get app
 */
export interface AppRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AppRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AppRequestBuilderNavigationMetadata: Record<Exclude<keyof AppRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    onlineMeetingsWithJoinWebUrl: {
        uriTemplate: OnlineMeetingsWithJoinWebUrlRequestBuilderUriTemplate,
        requestsMetadata: OnlineMeetingsWithJoinWebUrlRequestBuilderRequestsMetadata,
        navigationMetadata: OnlineMeetingsWithJoinWebUrlRequestBuilderNavigationMetadata,
    },
    calls: {
        uriTemplate: CallsRequestBuilderUriTemplate,
        requestsMetadata: CallsRequestBuilderRequestsMetadata,
        navigationMetadata: CallsRequestBuilderNavigationMetadata,
    },
    onlineMeetings: {
        uriTemplate: OnlineMeetingsRequestBuilderUriTemplate,
        requestsMetadata: OnlineMeetingsRequestBuilderRequestsMetadata,
        navigationMetadata: OnlineMeetingsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AppRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createCommsApplicationFromDiscriminatorValue,
        queryParametersMapper: AppRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createCommsApplicationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeCommsApplication,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const AppRequestBuilderUriTemplate = "{+baseurl}/app{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
