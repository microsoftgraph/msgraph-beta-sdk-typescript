/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPrivilegedRoleAssignmentRequestFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, serializePrivilegedRoleAssignmentRequest, type BaseCollectionPaginationCountResponse, type PrivilegedRoleAssignmentRequest } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a myGetResponse
 */
export function createMyGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMyGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoMyGetResponse(myGetResponse: Partial<MyGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(myGetResponse),
        "value": n => { myGetResponse.value = n.getCollectionOfObjectValues<PrivilegedRoleAssignmentRequest>(createPrivilegedRoleAssignmentRequestFromDiscriminatorValue); },
    }
}
export interface MyGetResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: PrivilegedRoleAssignmentRequest[];
}
/**
 * Provides operations to call the my method.
 */
export interface MyRequestBuilder extends BaseRequestBuilder<MyRequestBuilder> {
    /**
     * Invoke function my
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of MyGetResponse
     */
     get(requestConfiguration?: RequestConfiguration<MyRequestBuilderGetQueryParameters> | undefined) : Promise<MyGetResponse | undefined>;
    /**
     * Invoke function my
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<MyRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Invoke function my
 */
export interface MyRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeMyGetResponse(writer: SerializationWriter, myGetResponse: Partial<MyGetResponse> | undefined = {}) : void {
    serializeBaseCollectionPaginationCountResponse(writer, myGetResponse)
    writer.writeCollectionOfObjectValues<PrivilegedRoleAssignmentRequest>("value", myGetResponse.value, serializePrivilegedRoleAssignmentRequest);
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const MyRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const MyRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createMyGetResponseFromDiscriminatorValue,
        queryParametersMapper: MyRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Uri template for the request builder.
 */
export const MyRequestBuilderUriTemplate = "{+baseurl}/privilegedRoleAssignmentRequests/my(){?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/* tslint:enable */
/* eslint-enable */
