/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createContentInfoFromDiscriminatorValue, createInformationProtectionContentLabelFromDiscriminatorValue, serializeContentInfo, serializeInformationProtectionContentLabel, type ContentInfo, type InformationProtectionContentLabel } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a extractLabelPostRequestBody
 */
export function createExtractLabelPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoExtractLabelPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoExtractLabelPostRequestBody(extractLabelPostRequestBody: Partial<ExtractLabelPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { extractLabelPostRequestBody.backingStoreEnabled = true; },
        "contentInfo": n => { extractLabelPostRequestBody.contentInfo = n.getObjectValue<ContentInfo>(createContentInfoFromDiscriminatorValue); },
    }
}
export interface ExtractLabelPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The contentInfo property
     */
    contentInfo?: ContentInfo;
}
/**
 * Provides operations to call the extractLabel method.
 */
export interface ExtractLabelRequestBuilder extends BaseRequestBuilder<ExtractLabelRequestBuilder> {
    /**
     * Using the metadata that exists on an already-labeled piece of information, resolve the metadata to a specific sensitivity label. The contentInfo input is resolved to informationProtectionContentLabel.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of InformationProtectionContentLabel
     * @deprecated This API will no longer be accessible, please see microsoft.graph.security.informationProtection APIs. as of 2021-02/Beta_SensitivityLabels
     * @see {@link https://learn.microsoft.com/graph/api/informationprotectionlabel-extractlabel?view=graph-rest-1.0|Find more info here}
     */
     post(body: ExtractLabelPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<InformationProtectionContentLabel | undefined>;
    /**
     * Using the metadata that exists on an already-labeled piece of information, resolve the metadata to a specific sensitivity label. The contentInfo input is resolved to informationProtectionContentLabel.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     * @deprecated This API will no longer be accessible, please see microsoft.graph.security.informationProtection APIs. as of 2021-02/Beta_SensitivityLabels
     */
     toPostRequestInformation(body: ExtractLabelPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeExtractLabelPostRequestBody(writer: SerializationWriter, extractLabelPostRequestBody: Partial<ExtractLabelPostRequestBody> | undefined = {}) : void {
    writer.writeObjectValue<ContentInfo>("contentInfo", extractLabelPostRequestBody.contentInfo, serializeContentInfo);
    writer.writeAdditionalData(extractLabelPostRequestBody.additionalData);
}
/**
 * Metadata for all the requests in the request builder.
 */
export const ExtractLabelRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createInformationProtectionContentLabelFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeExtractLabelPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const ExtractLabelRequestBuilderUriTemplate = "{+baseurl}/informationProtection/policy/labels/extractLabel";
/* tslint:enable */
/* eslint-enable */
