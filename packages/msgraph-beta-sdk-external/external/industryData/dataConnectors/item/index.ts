/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createIndustryDataConnectorFromDiscriminatorValue, serializeIndustryDataConnector, type IndustryDataConnector } from '@microsoft/msgraph-beta-sdk/models/industryData/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
// @ts-ignore
import { MicrosoftGraphIndustryDataValidateRequestBuilderRequestsMetadata, type MicrosoftGraphIndustryDataValidateRequestBuilder } from './microsoftGraphIndustryDataValidate/';
// @ts-ignore
import { SourceSystemRequestBuilderRequestsMetadata, type SourceSystemRequestBuilder } from './sourceSystem/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the dataConnectors property of the microsoft.graph.industryData.industryDataRoot entity.
 */
export interface IndustryDataConnectorItemRequestBuilder extends BaseRequestBuilder<IndustryDataConnectorItemRequestBuilder> {
    /**
     * Provides operations to call the validate method.
     */
    get microsoftGraphIndustryDataValidate(): MicrosoftGraphIndustryDataValidateRequestBuilder;
    /**
     * Provides operations to manage the sourceSystem property of the microsoft.graph.industryData.industryDataConnector entity.
     */
    get sourceSystem(): SourceSystemRequestBuilder;
    /**
     * Delete an industryDataConnector object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/industrydata-industrydataconnector-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Read the properties and relationships of an azureDataLakeConnector object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<IndustryDataConnector>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/industrydata-azuredatalakeconnector-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<IndustryDataConnectorItemRequestBuilderGetQueryParameters> | undefined) : Promise<IndustryDataConnector | undefined>;
    /**
     * Update the properties of an azureDataLakeConnector object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<IndustryDataConnector>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/industrydata-azuredatalakeconnector-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: IndustryDataConnector, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<IndustryDataConnector | undefined>;
    /**
     * Delete an industryDataConnector object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Read the properties and relationships of an azureDataLakeConnector object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<IndustryDataConnectorItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of an azureDataLakeConnector object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: IndustryDataConnector, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Read the properties and relationships of an azureDataLakeConnector object.
 */
export interface IndustryDataConnectorItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const IndustryDataConnectorItemRequestBuilderUriTemplate = "{+baseurl}/external/industryData/dataConnectors/{industryDataConnector%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const IndustryDataConnectorItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const IndustryDataConnectorItemRequestBuilderNavigationMetadata: Record<Exclude<keyof IndustryDataConnectorItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    microsoftGraphIndustryDataValidate: {
        requestsMetadata: MicrosoftGraphIndustryDataValidateRequestBuilderRequestsMetadata,
    },
    sourceSystem: {
        requestsMetadata: SourceSystemRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const IndustryDataConnectorItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: IndustryDataConnectorItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: IndustryDataConnectorItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createIndustryDataConnectorFromDiscriminatorValue,
        queryParametersMapper: IndustryDataConnectorItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: IndustryDataConnectorItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createIndustryDataConnectorFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeIndustryDataConnector,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
