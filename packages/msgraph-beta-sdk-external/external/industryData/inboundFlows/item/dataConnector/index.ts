/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createIndustryDataConnectorFromDiscriminatorValue, type IndustryDataConnector } from '@microsoft/msgraph-beta-sdk/models/industryData/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the dataConnector property of the microsoft.graph.industryData.inboundFlow entity.
 */
export interface DataConnectorRequestBuilder extends BaseRequestBuilder<DataConnectorRequestBuilder> {
    /**
     * The data connector in the context of which this flow pulls in data from a source system.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<IndustryDataConnector>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<DataConnectorRequestBuilderGetQueryParameters> | undefined) : Promise<IndustryDataConnector | undefined>;
    /**
     * The data connector in the context of which this flow pulls in data from a source system.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DataConnectorRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * The data connector in the context of which this flow pulls in data from a source system.
 */
export interface DataConnectorRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const DataConnectorRequestBuilderUriTemplate = "{+baseurl}/external/industryData/inboundFlows/{inboundFlow%2Did}/dataConnector{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DataConnectorRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DataConnectorRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: DataConnectorRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createIndustryDataConnectorFromDiscriminatorValue,
        queryParametersMapper: DataConnectorRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Provides operations to manage the dataConnector property of the microsoft.graph.industryData.inboundFlow entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    SourceSystem: "sourceSystem",
} as const;
/**
 * Provides operations to manage the dataConnector property of the microsoft.graph.industryData.inboundFlow entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    DisplayName: "displayName",
    SourceSystem: "sourceSystem",
} as const;
/* tslint:enable */
/* eslint-enable */
