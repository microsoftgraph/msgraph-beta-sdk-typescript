/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createIosVppAppFromDiscriminatorValue, type IosVppApp } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { AssignedLicensesRequestBuilderNavigationMetadata, AssignedLicensesRequestBuilderRequestsMetadata, AssignedLicensesRequestBuilderUriTemplate, type AssignedLicensesRequestBuilder } from './assignedLicenses/';
import { AssignmentsRequestBuilderNavigationMetadata, AssignmentsRequestBuilderRequestsMetadata, AssignmentsRequestBuilderUriTemplate, type AssignmentsRequestBuilder } from './assignments/';
import { CategoriesRequestBuilderNavigationMetadata, CategoriesRequestBuilderRequestsMetadata, CategoriesRequestBuilderUriTemplate, type CategoriesRequestBuilder } from './categories/';
import { RelationshipsRequestBuilderNavigationMetadata, RelationshipsRequestBuilderRequestsMetadata, RelationshipsRequestBuilderUriTemplate, type RelationshipsRequestBuilder } from './relationships/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Casts the previous resource to iosVppApp.
 */
export interface GraphIosVppAppRequestBuilder extends BaseRequestBuilder<GraphIosVppAppRequestBuilder> {
    /**
     * Provides operations to manage the assignedLicenses property of the microsoft.graph.iosVppApp entity.
     */
    get assignedLicenses(): AssignedLicensesRequestBuilder;
    /**
     * Provides operations to manage the assignments property of the microsoft.graph.mobileApp entity.
     */
    get assignments(): AssignmentsRequestBuilder;
    /**
     * Provides operations to manage the categories property of the microsoft.graph.mobileApp entity.
     */
    get categories(): CategoriesRequestBuilder;
    /**
     * Provides operations to manage the relationships property of the microsoft.graph.mobileApp entity.
     */
    get relationships(): RelationshipsRequestBuilder;
    /**
     * Get the item of type microsoft.graph.mobileApp as microsoft.graph.iosVppApp
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of IosVppApp
     */
     get(requestConfiguration?: RequestConfiguration<GraphIosVppAppRequestBuilderGetQueryParameters> | undefined) : Promise<IosVppApp | undefined>;
    /**
     * Get the item of type microsoft.graph.mobileApp as microsoft.graph.iosVppApp
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<GraphIosVppAppRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Get the item of type microsoft.graph.mobileApp as microsoft.graph.iosVppApp
 */
export interface GraphIosVppAppRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const GraphIosVppAppRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const GraphIosVppAppRequestBuilderNavigationMetadata: Record<Exclude<keyof GraphIosVppAppRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    assignedLicenses: {
        uriTemplate: AssignedLicensesRequestBuilderUriTemplate,
        requestsMetadata: AssignedLicensesRequestBuilderRequestsMetadata,
        navigationMetadata: AssignedLicensesRequestBuilderNavigationMetadata,
    },
    assignments: {
        uriTemplate: AssignmentsRequestBuilderUriTemplate,
        requestsMetadata: AssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AssignmentsRequestBuilderNavigationMetadata,
    },
    categories: {
        uriTemplate: CategoriesRequestBuilderUriTemplate,
        requestsMetadata: CategoriesRequestBuilderRequestsMetadata,
        navigationMetadata: CategoriesRequestBuilderNavigationMetadata,
    },
    relationships: {
        uriTemplate: RelationshipsRequestBuilderUriTemplate,
        requestsMetadata: RelationshipsRequestBuilderRequestsMetadata,
        navigationMetadata: RelationshipsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const GraphIosVppAppRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createIosVppAppFromDiscriminatorValue,
        queryParametersMapper: GraphIosVppAppRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Uri template for the request builder.
 */
export const GraphIosVppAppRequestBuilderUriTemplate = "{+baseurl}/deviceAppManagement/mobileApps/{mobileApp%2Did}/graph.iosVppApp{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
