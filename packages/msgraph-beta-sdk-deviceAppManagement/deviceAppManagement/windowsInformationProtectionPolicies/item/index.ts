/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createWindowsInformationProtectionPolicyFromDiscriminatorValue, serializeWindowsInformationProtectionPolicy, type WindowsInformationProtectionPolicy } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { AssignmentsRequestBuilderNavigationMetadata, AssignmentsRequestBuilderRequestsMetadata, AssignmentsRequestBuilderUriTemplate, type AssignmentsRequestBuilder } from './assignments/';
import { ExemptAppLockerFilesRequestBuilderNavigationMetadata, ExemptAppLockerFilesRequestBuilderRequestsMetadata, ExemptAppLockerFilesRequestBuilderUriTemplate, type ExemptAppLockerFilesRequestBuilder } from './exemptAppLockerFiles/';
import { ProtectedAppLockerFilesRequestBuilderNavigationMetadata, ProtectedAppLockerFilesRequestBuilderRequestsMetadata, ProtectedAppLockerFilesRequestBuilderUriTemplate, type ProtectedAppLockerFilesRequestBuilder } from './protectedAppLockerFiles/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the windowsInformationProtectionPolicies property of the microsoft.graph.deviceAppManagement entity.
 */
export interface WindowsInformationProtectionPolicyItemRequestBuilder extends BaseRequestBuilder<WindowsInformationProtectionPolicyItemRequestBuilder> {
    /**
     * Provides operations to manage the assignments property of the microsoft.graph.windowsInformationProtection entity.
     */
    get assignments(): AssignmentsRequestBuilder;
    /**
     * Provides operations to manage the exemptAppLockerFiles property of the microsoft.graph.windowsInformationProtection entity.
     */
    get exemptAppLockerFiles(): ExemptAppLockerFilesRequestBuilder;
    /**
     * Provides operations to manage the protectedAppLockerFiles property of the microsoft.graph.windowsInformationProtection entity.
     */
    get protectedAppLockerFiles(): ProtectedAppLockerFilesRequestBuilder;
    /**
     * Delete navigation property windowsInformationProtectionPolicies for deviceAppManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Windows information protection for apps running on devices which are not MDM enrolled.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of WindowsInformationProtectionPolicy
     */
     get(requestConfiguration?: RequestConfiguration<WindowsInformationProtectionPolicyItemRequestBuilderGetQueryParameters> | undefined) : Promise<WindowsInformationProtectionPolicy | undefined>;
    /**
     * Update the navigation property windowsInformationProtectionPolicies in deviceAppManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of WindowsInformationProtectionPolicy
     */
     patch(body: WindowsInformationProtectionPolicy, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WindowsInformationProtectionPolicy | undefined>;
    /**
     * Delete navigation property windowsInformationProtectionPolicies for deviceAppManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Windows information protection for apps running on devices which are not MDM enrolled.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<WindowsInformationProtectionPolicyItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property windowsInformationProtectionPolicies in deviceAppManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: WindowsInformationProtectionPolicy, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Windows information protection for apps running on devices which are not MDM enrolled.
 */
export interface WindowsInformationProtectionPolicyItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const WindowsInformationProtectionPolicyItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WindowsInformationProtectionPolicyItemRequestBuilderNavigationMetadata: Record<Exclude<keyof WindowsInformationProtectionPolicyItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    assignments: {
        uriTemplate: AssignmentsRequestBuilderUriTemplate,
        requestsMetadata: AssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AssignmentsRequestBuilderNavigationMetadata,
    },
    exemptAppLockerFiles: {
        uriTemplate: ExemptAppLockerFilesRequestBuilderUriTemplate,
        requestsMetadata: ExemptAppLockerFilesRequestBuilderRequestsMetadata,
        navigationMetadata: ExemptAppLockerFilesRequestBuilderNavigationMetadata,
    },
    protectedAppLockerFiles: {
        uriTemplate: ProtectedAppLockerFilesRequestBuilderUriTemplate,
        requestsMetadata: ProtectedAppLockerFilesRequestBuilderRequestsMetadata,
        navigationMetadata: ProtectedAppLockerFilesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WindowsInformationProtectionPolicyItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createWindowsInformationProtectionPolicyFromDiscriminatorValue,
        queryParametersMapper: WindowsInformationProtectionPolicyItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createWindowsInformationProtectionPolicyFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeWindowsInformationProtectionPolicy,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const WindowsInformationProtectionPolicyItemRequestBuilderUriTemplate = "{+baseurl}/deviceAppManagement/windowsInformationProtectionPolicies/{windowsInformationProtectionPolicy%2Did}{?%24expand,%24select}";
/* tslint:enable */
/* eslint-enable */
