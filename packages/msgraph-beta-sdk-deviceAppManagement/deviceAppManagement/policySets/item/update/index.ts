/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPolicySetAssignmentFromDiscriminatorValue, createPolicySetItemFromDiscriminatorValue, serializePolicySetAssignment, serializePolicySetItem, type PolicySetAssignment, type PolicySetItem } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdatePostRequestBody}
 */
export function createUpdatePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdatePostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoUpdatePostRequestBody(updatePostRequestBody: Partial<UpdatePostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "addedPolicySetItems": n => { updatePostRequestBody.addedPolicySetItems = n.getCollectionOfObjectValues<PolicySetItem>(createPolicySetItemFromDiscriminatorValue); },
        "assignments": n => { updatePostRequestBody.assignments = n.getCollectionOfObjectValues<PolicySetAssignment>(createPolicySetAssignmentFromDiscriminatorValue); },
        "backingStoreEnabled": n => { updatePostRequestBody.backingStoreEnabled = true; },
        "deletedPolicySetItems": n => { updatePostRequestBody.deletedPolicySetItems = n.getCollectionOfPrimitiveValues<string>(); },
        "updatedPolicySetItems": n => { updatePostRequestBody.updatedPolicySetItems = n.getCollectionOfObjectValues<PolicySetItem>(createPolicySetItemFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUpdatePostRequestBody(writer: SerializationWriter, updatePostRequestBody: Partial<UpdatePostRequestBody> | undefined = {}) : void {
    writer.writeCollectionOfObjectValues<PolicySetItem>("addedPolicySetItems", updatePostRequestBody.addedPolicySetItems, serializePolicySetItem);
    writer.writeCollectionOfObjectValues<PolicySetAssignment>("assignments", updatePostRequestBody.assignments, serializePolicySetAssignment);
    writer.writeCollectionOfPrimitiveValues<string>("deletedPolicySetItems", updatePostRequestBody.deletedPolicySetItems);
    writer.writeCollectionOfObjectValues<PolicySetItem>("updatedPolicySetItems", updatePostRequestBody.updatedPolicySetItems, serializePolicySetItem);
    writer.writeAdditionalData(updatePostRequestBody.additionalData);
}
export interface UpdatePostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The addedPolicySetItems property
     */
    addedPolicySetItems?: PolicySetItem[];
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The assignments property
     */
    assignments?: PolicySetAssignment[];
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The deletedPolicySetItems property
     */
    deletedPolicySetItems?: string[];
    /**
     * The updatedPolicySetItems property
     */
    updatedPolicySetItems?: PolicySetItem[];
}
/**
 * Provides operations to call the update method.
 */
export interface UpdateRequestBuilder extends BaseRequestBuilder<UpdateRequestBuilder> {
    /**
     * Invoke action update
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: UpdatePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Invoke action update
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: UpdatePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const UpdateRequestBuilderUriTemplate = "{+baseurl}/deviceAppManagement/policySets/{policySet%2Did}/update";
/**
 * Metadata for all the requests in the request builder.
 */
export const UpdateRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: UpdateRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUpdatePostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
