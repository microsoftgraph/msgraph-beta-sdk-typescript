/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createIosManagedAppProtectionFromDiscriminatorValue, serializeIosManagedAppProtection, type IosManagedAppProtection } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { AppsRequestBuilderNavigationMetadata, AppsRequestBuilderRequestsMetadata, type AppsRequestBuilder } from './apps/';
import { AssignmentsRequestBuilderNavigationMetadata, AssignmentsRequestBuilderRequestsMetadata, type AssignmentsRequestBuilder } from './assignments/';
import { DeploymentSummaryRequestBuilderRequestsMetadata, type DeploymentSummaryRequestBuilder } from './deploymentSummary/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the iosManagedAppProtections property of the microsoft.graph.deviceAppManagement entity.
 */
export interface IosManagedAppProtectionItemRequestBuilder extends BaseRequestBuilder<IosManagedAppProtectionItemRequestBuilder> {
    /**
     * Provides operations to manage the apps property of the microsoft.graph.iosManagedAppProtection entity.
     */
    get apps(): AppsRequestBuilder;
    /**
     * Provides operations to manage the assignments property of the microsoft.graph.targetedManagedAppProtection entity.
     */
    get assignments(): AssignmentsRequestBuilder;
    /**
     * Provides operations to manage the deploymentSummary property of the microsoft.graph.iosManagedAppProtection entity.
     */
    get deploymentSummary(): DeploymentSummaryRequestBuilder;
    /**
     * Delete navigation property iosManagedAppProtections for deviceAppManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * iOS managed app policies.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<IosManagedAppProtection>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<IosManagedAppProtectionItemRequestBuilderGetQueryParameters> | undefined) : Promise<IosManagedAppProtection | undefined>;
    /**
     * Update the navigation property iosManagedAppProtections in deviceAppManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<IosManagedAppProtection>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: IosManagedAppProtection, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<IosManagedAppProtection | undefined>;
    /**
     * Delete navigation property iosManagedAppProtections for deviceAppManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * iOS managed app policies.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<IosManagedAppProtectionItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property iosManagedAppProtections in deviceAppManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: IosManagedAppProtection, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * iOS managed app policies.
 */
export interface IosManagedAppProtectionItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
/**
 * Uri template for the request builder.
 */
export const IosManagedAppProtectionItemRequestBuilderUriTemplate = "{+baseurl}/deviceAppManagement/iosManagedAppProtections/{iosManagedAppProtection%2Did}{?%24expand,%24select}";
/**
 * Provides operations to manage the iosManagedAppProtections property of the microsoft.graph.deviceAppManagement entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Assignments: "assignments",
    Apps: "apps",
    DeploymentSummary: "deploymentSummary",
} as const;
/**
 * Provides operations to manage the iosManagedAppProtections property of the microsoft.graph.deviceAppManagement entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    CreatedDateTime: "createdDateTime",
    Description: "description",
    DisplayName: "displayName",
    LastModifiedDateTime: "lastModifiedDateTime",
    RoleScopeTagIds: "roleScopeTagIds",
    Version: "version",
    AllowedDataIngestionLocations: "allowedDataIngestionLocations",
    AllowedDataStorageLocations: "allowedDataStorageLocations",
    AllowedInboundDataTransferSources: "allowedInboundDataTransferSources",
    AllowedOutboundClipboardSharingExceptionLength: "allowedOutboundClipboardSharingExceptionLength",
    AllowedOutboundClipboardSharingLevel: "allowedOutboundClipboardSharingLevel",
    AllowedOutboundDataTransferDestinations: "allowedOutboundDataTransferDestinations",
    AppActionIfDeviceComplianceRequired: "appActionIfDeviceComplianceRequired",
    AppActionIfMaximumPinRetriesExceeded: "appActionIfMaximumPinRetriesExceeded",
    AppActionIfUnableToAuthenticateUser: "appActionIfUnableToAuthenticateUser",
    BlockDataIngestionIntoOrganizationDocuments: "blockDataIngestionIntoOrganizationDocuments",
    ContactSyncBlocked: "contactSyncBlocked",
    DataBackupBlocked: "dataBackupBlocked",
    DeviceComplianceRequired: "deviceComplianceRequired",
    DialerRestrictionLevel: "dialerRestrictionLevel",
    DisableAppPinIfDevicePinIsSet: "disableAppPinIfDevicePinIsSet",
    FingerprintBlocked: "fingerprintBlocked",
    GracePeriodToBlockAppsDuringOffClockHours: "gracePeriodToBlockAppsDuringOffClockHours",
    ManagedBrowser: "managedBrowser",
    ManagedBrowserToOpenLinksRequired: "managedBrowserToOpenLinksRequired",
    MaximumAllowedDeviceThreatLevel: "maximumAllowedDeviceThreatLevel",
    MaximumPinRetries: "maximumPinRetries",
    MaximumRequiredOsVersion: "maximumRequiredOsVersion",
    MaximumWarningOsVersion: "maximumWarningOsVersion",
    MaximumWipeOsVersion: "maximumWipeOsVersion",
    MinimumPinLength: "minimumPinLength",
    MinimumRequiredAppVersion: "minimumRequiredAppVersion",
    MinimumRequiredOsVersion: "minimumRequiredOsVersion",
    MinimumWarningAppVersion: "minimumWarningAppVersion",
    MinimumWarningOsVersion: "minimumWarningOsVersion",
    MinimumWipeAppVersion: "minimumWipeAppVersion",
    MinimumWipeOsVersion: "minimumWipeOsVersion",
    MobileThreatDefensePartnerPriority: "mobileThreatDefensePartnerPriority",
    MobileThreatDefenseRemediationAction: "mobileThreatDefenseRemediationAction",
    NotificationRestriction: "notificationRestriction",
    OrganizationalCredentialsRequired: "organizationalCredentialsRequired",
    PeriodBeforePinReset: "periodBeforePinReset",
    PeriodOfflineBeforeAccessCheck: "periodOfflineBeforeAccessCheck",
    PeriodOfflineBeforeWipeIsEnforced: "periodOfflineBeforeWipeIsEnforced",
    PeriodOnlineBeforeAccessCheck: "periodOnlineBeforeAccessCheck",
    PinCharacterSet: "pinCharacterSet",
    PinRequired: "pinRequired",
    PinRequiredInsteadOfBiometricTimeout: "pinRequiredInsteadOfBiometricTimeout",
    PreviousPinBlockCount: "previousPinBlockCount",
    PrintBlocked: "printBlocked",
    ProtectedMessagingRedirectAppType: "protectedMessagingRedirectAppType",
    SaveAsBlocked: "saveAsBlocked",
    SimplePinBlocked: "simplePinBlocked",
    AppGroupType: "appGroupType",
    IsAssigned: "isAssigned",
    TargetedAppManagementLevels: "targetedAppManagementLevels",
    AllowedIosDeviceModels: "allowedIosDeviceModels",
    AppActionIfIosDeviceModelNotAllowed: "appActionIfIosDeviceModelNotAllowed",
    AppDataEncryptionType: "appDataEncryptionType",
    CustomBrowserProtocol: "customBrowserProtocol",
    CustomDialerAppProtocol: "customDialerAppProtocol",
    DeployedAppCount: "deployedAppCount",
    DisableProtectionOfManagedOutboundOpenInData: "disableProtectionOfManagedOutboundOpenInData",
    ExemptedAppProtocols: "exemptedAppProtocols",
    ExemptedUniversalLinks: "exemptedUniversalLinks",
    FaceIdBlocked: "faceIdBlocked",
    FilterOpenInToOnlyManagedApps: "filterOpenInToOnlyManagedApps",
    ManagedUniversalLinks: "managedUniversalLinks",
    MessagingRedirectAppUrlScheme: "messagingRedirectAppUrlScheme",
    MinimumRequiredSdkVersion: "minimumRequiredSdkVersion",
    MinimumWarningSdkVersion: "minimumWarningSdkVersion",
    MinimumWipeSdkVersion: "minimumWipeSdkVersion",
    ProtectInboundDataFromUnknownSources: "protectInboundDataFromUnknownSources",
    ThirdPartyKeyboardsBlocked: "thirdPartyKeyboardsBlocked",
    Assignments: "assignments",
    Apps: "apps",
    DeploymentSummary: "deploymentSummary",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const IosManagedAppProtectionItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const IosManagedAppProtectionItemRequestBuilderNavigationMetadata: Record<Exclude<keyof IosManagedAppProtectionItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    apps: {
        requestsMetadata: AppsRequestBuilderRequestsMetadata,
        navigationMetadata: AppsRequestBuilderNavigationMetadata,
    },
    assignments: {
        requestsMetadata: AssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AssignmentsRequestBuilderNavigationMetadata,
    },
    deploymentSummary: {
        requestsMetadata: DeploymentSummaryRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const IosManagedAppProtectionItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: IosManagedAppProtectionItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: IosManagedAppProtectionItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createIosManagedAppProtectionFromDiscriminatorValue,
        queryParametersMapper: IosManagedAppProtectionItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: IosManagedAppProtectionItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createIosManagedAppProtectionFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeIosManagedAppProtection,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
