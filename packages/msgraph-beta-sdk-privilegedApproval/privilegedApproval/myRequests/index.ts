/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPrivilegedApprovalFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, serializePrivilegedApproval, type BaseCollectionPaginationCountResponse, type PrivilegedApproval } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MyRequestsGetResponse}
 */
export function createMyRequestsGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMyRequestsGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoMyRequestsGetResponse(myRequestsGetResponse: Partial<MyRequestsGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(myRequestsGetResponse),
        "value": n => { myRequestsGetResponse.value = n.getCollectionOfObjectValues<PrivilegedApproval>(createPrivilegedApprovalFromDiscriminatorValue); },
    }
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
export interface MyRequestsGetResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: PrivilegedApproval[];
}
/**
 * Provides operations to call the myRequests method.
 */
export interface MyRequestsRequestBuilder extends BaseRequestBuilder<MyRequestsRequestBuilder> {
    /**
     * Invoke function myRequests
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<MyRequestsGetResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<MyRequestsRequestBuilderGetQueryParameters> | undefined) : Promise<MyRequestsGetResponse | undefined>;
    /**
     * Invoke function myRequests
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<MyRequestsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Invoke function myRequests
 */
export interface MyRequestsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeMyRequestsGetResponse(writer: SerializationWriter, myRequestsGetResponse: Partial<MyRequestsGetResponse> | undefined = {}) : void {
    serializeBaseCollectionPaginationCountResponse(writer, myRequestsGetResponse)
    writer.writeCollectionOfObjectValues<PrivilegedApproval>("value", myRequestsGetResponse.value, serializePrivilegedApproval);
}
/**
 * Uri template for the request builder.
 */
export const MyRequestsRequestBuilderUriTemplate = "{+baseurl}/privilegedApproval/myRequests(){?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to call the myRequests method.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Request: "request",
    RoleInfo: "roleInfo",
} as const;
/**
 * Provides operations to call the myRequests method.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    ApprovalDuration: "approvalDuration",
    ApprovalDurationDesc: "approvalDuration desc",
    ApprovalState: "approvalState",
    ApprovalStateDesc: "approvalState desc",
    ApprovalType: "approvalType",
    ApprovalTypeDesc: "approvalType desc",
    ApproverReason: "approverReason",
    ApproverReasonDesc: "approverReason desc",
    EndDateTime: "endDateTime",
    EndDateTimeDesc: "endDateTime desc",
    RequestorReason: "requestorReason",
    RequestorReasonDesc: "requestorReason desc",
    RoleId: "roleId",
    RoleIdDesc: "roleId desc",
    StartDateTime: "startDateTime",
    StartDateTimeDesc: "startDateTime desc",
    UserId: "userId",
    UserIdDesc: "userId desc",
} as const;
/**
 * Provides operations to call the myRequests method.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    ApprovalDuration: "approvalDuration",
    ApprovalState: "approvalState",
    ApprovalType: "approvalType",
    ApproverReason: "approverReason",
    EndDateTime: "endDateTime",
    RequestorReason: "requestorReason",
    RoleId: "roleId",
    StartDateTime: "startDateTime",
    UserId: "userId",
    Request: "request",
    RoleInfo: "roleInfo",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const MyRequestsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const MyRequestsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: MyRequestsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createMyRequestsGetResponseFromDiscriminatorValue,
        queryParametersMapper: MyRequestsRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
