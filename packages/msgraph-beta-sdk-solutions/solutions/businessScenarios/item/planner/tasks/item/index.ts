/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createBusinessScenarioTaskFromDiscriminatorValue, serializeBusinessScenarioTask, type BusinessScenarioTask } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { AssignedToTaskBoardFormatRequestBuilderRequestsMetadata, type AssignedToTaskBoardFormatRequestBuilder } from './assignedToTaskBoardFormat/index.js';
// @ts-ignore
import { BucketTaskBoardFormatRequestBuilderRequestsMetadata, type BucketTaskBoardFormatRequestBuilder } from './bucketTaskBoardFormat/index.js';
// @ts-ignore
import { DetailsRequestBuilderRequestsMetadata, type DetailsRequestBuilder } from './details/index.js';
// @ts-ignore
import { ProgressTaskBoardFormatRequestBuilderRequestsMetadata, type ProgressTaskBoardFormatRequestBuilder } from './progressTaskBoardFormat/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the tasks property of the microsoft.graph.businessScenarioPlanner entity.
 */
export interface BusinessScenarioTaskItemRequestBuilder extends BaseRequestBuilder<BusinessScenarioTaskItemRequestBuilder> {
    /**
     * Provides operations to manage the assignedToTaskBoardFormat property of the microsoft.graph.plannerTask entity.
     */
    get assignedToTaskBoardFormat(): AssignedToTaskBoardFormatRequestBuilder;
    /**
     * Provides operations to manage the bucketTaskBoardFormat property of the microsoft.graph.plannerTask entity.
     */
    get bucketTaskBoardFormat(): BucketTaskBoardFormatRequestBuilder;
    /**
     * Provides operations to manage the details property of the microsoft.graph.plannerTask entity.
     */
    get details(): DetailsRequestBuilder;
    /**
     * Provides operations to manage the progressTaskBoardFormat property of the microsoft.graph.plannerTask entity.
     */
    get progressTaskBoardFormat(): ProgressTaskBoardFormatRequestBuilder;
    /**
     * Delete a businessScenarioTask object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/businessscenarioplanner-delete-tasks?view=graph-rest-beta|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Read the properties and relationships of a businessScenarioTask object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<BusinessScenarioTask>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/businessscenariotask-get?view=graph-rest-beta|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<BusinessScenarioTaskItemRequestBuilderGetQueryParameters> | undefined) : Promise<BusinessScenarioTask | undefined>;
    /**
     * Update the properties of a businessScenarioTask object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<BusinessScenarioTask>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/businessscenariotask-update?view=graph-rest-beta|Find more info here}
     */
     patch(body: BusinessScenarioTask, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<BusinessScenarioTask | undefined>;
    /**
     * Delete a businessScenarioTask object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Read the properties and relationships of a businessScenarioTask object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<BusinessScenarioTaskItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of a businessScenarioTask object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: BusinessScenarioTask, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Read the properties and relationships of a businessScenarioTask object.
 */
export interface BusinessScenarioTaskItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const BusinessScenarioTaskItemRequestBuilderUriTemplate = "{+baseurl}/solutions/businessScenarios/{businessScenario%2Did}/planner/tasks/{businessScenarioTask%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const BusinessScenarioTaskItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const BusinessScenarioTaskItemRequestBuilderNavigationMetadata: Record<Exclude<keyof BusinessScenarioTaskItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    assignedToTaskBoardFormat: {
        requestsMetadata: AssignedToTaskBoardFormatRequestBuilderRequestsMetadata,
    },
    bucketTaskBoardFormat: {
        requestsMetadata: BucketTaskBoardFormatRequestBuilderRequestsMetadata,
    },
    details: {
        requestsMetadata: DetailsRequestBuilderRequestsMetadata,
    },
    progressTaskBoardFormat: {
        requestsMetadata: ProgressTaskBoardFormatRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const BusinessScenarioTaskItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: BusinessScenarioTaskItemRequestBuilderUriTemplate,
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: BusinessScenarioTaskItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createBusinessScenarioTaskFromDiscriminatorValue,
        queryParametersMapper: BusinessScenarioTaskItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: BusinessScenarioTaskItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createBusinessScenarioTaskFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeBusinessScenarioTask,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
