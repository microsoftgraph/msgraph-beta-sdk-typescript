/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createSalesOrderLineFromDiscriminatorValue, serializeSalesOrderLine, type SalesOrderLine } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { AccountRequestBuilderRequestsMetadata, type AccountRequestBuilder } from './account/';
import { ItemRequestBuilderNavigationMetadata, ItemRequestBuilderRequestsMetadata, type ItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the salesOrderLines property of the microsoft.graph.salesOrder entity.
 */
export interface SalesOrderLineItemRequestBuilder extends BaseRequestBuilder<SalesOrderLineItemRequestBuilder> {
    /**
     * Provides operations to manage the account property of the microsoft.graph.salesOrderLine entity.
     */
    get account(): AccountRequestBuilder;
    /**
     * Provides operations to manage the item property of the microsoft.graph.salesOrderLine entity.
     */
    get item(): ItemRequestBuilder;
    /**
     * Get salesOrderLines from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<SalesOrderLine>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<SalesOrderLineItemRequestBuilderGetQueryParameters> | undefined) : Promise<SalesOrderLine | undefined>;
    /**
     * Update the navigation property salesOrderLines in financials
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<SalesOrderLine>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: SalesOrderLine, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<SalesOrderLine | undefined>;
    /**
     * Get salesOrderLines from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SalesOrderLineItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property salesOrderLines in financials
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: SalesOrderLine, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get salesOrderLines from financials
 */
export interface SalesOrderLineItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
/**
 * Uri template for the request builder.
 */
export const SalesOrderLineItemRequestBuilderUriTemplate = "{+baseurl}/financials/companies/{company%2Did}/salesOrders/{salesOrder%2Did}/salesOrderLines/{salesOrderLine%2Did}{?%24expand,%24select}";
/**
 * Provides operations to manage the salesOrderLines property of the microsoft.graph.salesOrder entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Account: "account",
    Item: "item",
} as const;
/**
 * Provides operations to manage the salesOrderLines property of the microsoft.graph.salesOrder entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AccountId: "accountId",
    AmountExcludingTax: "amountExcludingTax",
    AmountIncludingTax: "amountIncludingTax",
    Description: "description",
    DiscountAmount: "discountAmount",
    DiscountAppliedBeforeTax: "discountAppliedBeforeTax",
    DiscountPercent: "discountPercent",
    DocumentId: "documentId",
    InvoiceDiscountAllocation: "invoiceDiscountAllocation",
    InvoicedQuantity: "invoicedQuantity",
    InvoiceQuantity: "invoiceQuantity",
    ItemId: "itemId",
    LineType: "lineType",
    NetAmount: "netAmount",
    NetAmountIncludingTax: "netAmountIncludingTax",
    NetTaxAmount: "netTaxAmount",
    Quantity: "quantity",
    Sequence: "sequence",
    ShipmentDate: "shipmentDate",
    ShippedQuantity: "shippedQuantity",
    ShipQuantity: "shipQuantity",
    TaxCode: "taxCode",
    TaxPercent: "taxPercent",
    TotalTaxAmount: "totalTaxAmount",
    UnitOfMeasureId: "unitOfMeasureId",
    UnitPrice: "unitPrice",
    Account: "account",
    Item: "item",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SalesOrderLineItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SalesOrderLineItemRequestBuilderNavigationMetadata: Record<Exclude<keyof SalesOrderLineItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    account: {
        requestsMetadata: AccountRequestBuilderRequestsMetadata,
    },
    item: {
        requestsMetadata: ItemRequestBuilderRequestsMetadata,
        navigationMetadata: ItemRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SalesOrderLineItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: SalesOrderLineItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createSalesOrderLineFromDiscriminatorValue,
        queryParametersMapper: SalesOrderLineItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: SalesOrderLineItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createSalesOrderLineFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSalesOrderLine,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
