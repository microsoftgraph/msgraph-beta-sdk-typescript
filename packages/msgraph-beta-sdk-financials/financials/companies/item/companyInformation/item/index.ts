/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createCompanyInformationFromDiscriminatorValue, serializeCompanyInformation, type CompanyInformation } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { PictureRequestBuilderRequestsMetadata, type PictureRequestBuilder } from './picture/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the companyInformation property of the microsoft.graph.company entity.
 */
export interface CompanyInformationItemRequestBuilder extends BaseRequestBuilder<CompanyInformationItemRequestBuilder> {
    /**
     * Provides operations to manage the media for the financials entity.
     */
    get picture(): PictureRequestBuilder;
    /**
     * Get companyInformation from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<CompanyInformation>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<CompanyInformationItemRequestBuilderGetQueryParameters> | undefined) : Promise<CompanyInformation | undefined>;
    /**
     * Update the navigation property companyInformation in financials
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<CompanyInformation>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: CompanyInformation, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<CompanyInformation | undefined>;
    /**
     * Get companyInformation from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<CompanyInformationItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property companyInformation in financials
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: CompanyInformation, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get companyInformation from financials
 */
export interface CompanyInformationItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const CompanyInformationItemRequestBuilderUriTemplate = "{+baseurl}/financials/companies/{company%2Did}/companyInformation/{companyInformation%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const CompanyInformationItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const CompanyInformationItemRequestBuilderNavigationMetadata: Record<Exclude<keyof CompanyInformationItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    picture: {
        requestsMetadata: PictureRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const CompanyInformationItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: CompanyInformationItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createCompanyInformationFromDiscriminatorValue,
        queryParametersMapper: CompanyInformationItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: CompanyInformationItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createCompanyInformationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeCompanyInformation,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the companyInformation property of the microsoft.graph.company entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the companyInformation property of the microsoft.graph.company entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Address: "address",
    CurrencyCode: "currencyCode",
    CurrentFiscalYearStartDate: "currentFiscalYearStartDate",
    DisplayName: "displayName",
    Email: "email",
    FaxNumber: "faxNumber",
    Id: "id",
    Industry: "industry",
    LastModifiedDateTime: "lastModifiedDateTime",
    PhoneNumber: "phoneNumber",
    Picture: "picture",
    TaxRegistrationNumber: "taxRegistrationNumber",
    Website: "website",
} as const;
/* tslint:enable */
/* eslint-enable */
