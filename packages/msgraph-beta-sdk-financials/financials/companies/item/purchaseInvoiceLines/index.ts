/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPurchaseInvoiceLineCollectionResponseFromDiscriminatorValue, type PurchaseInvoiceLineCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { PurchaseInvoiceLineItemRequestBuilderNavigationMetadata, PurchaseInvoiceLineItemRequestBuilderRequestsMetadata, type PurchaseInvoiceLineItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the purchaseInvoiceLines property of the microsoft.graph.company entity.
 */
export interface PurchaseInvoiceLinesRequestBuilder extends BaseRequestBuilder<PurchaseInvoiceLinesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the purchaseInvoiceLines property of the microsoft.graph.company entity.
     * @param purchaseInvoiceLineId The unique identifier of purchaseInvoiceLine
     * @returns {PurchaseInvoiceLineItemRequestBuilder}
     */
     byPurchaseInvoiceLineId(purchaseInvoiceLineId: string) : PurchaseInvoiceLineItemRequestBuilder;
    /**
     * Get purchaseInvoiceLines from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PurchaseInvoiceLineCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<PurchaseInvoiceLinesRequestBuilderGetQueryParameters> | undefined) : Promise<PurchaseInvoiceLineCollectionResponse | undefined>;
    /**
     * Get purchaseInvoiceLines from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PurchaseInvoiceLinesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Get purchaseInvoiceLines from financials
 */
export interface PurchaseInvoiceLinesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const PurchaseInvoiceLinesRequestBuilderUriTemplate = "{+baseurl}/financials/companies/{company%2Did}/purchaseInvoiceLines{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the purchaseInvoiceLines property of the microsoft.graph.company entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Account: "account",
    Item: "item",
} as const;
/**
 * Provides operations to manage the purchaseInvoiceLines property of the microsoft.graph.company entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    AccountId: "accountId",
    AccountIdDesc: "accountId desc",
    AmountExcludingTax: "amountExcludingTax",
    AmountExcludingTaxDesc: "amountExcludingTax desc",
    AmountIncludingTax: "amountIncludingTax",
    AmountIncludingTaxDesc: "amountIncludingTax desc",
    Description: "description",
    DescriptionDesc: "description desc",
    DiscountAmount: "discountAmount",
    DiscountAmountDesc: "discountAmount desc",
    DiscountAppliedBeforeTax: "discountAppliedBeforeTax",
    DiscountAppliedBeforeTaxDesc: "discountAppliedBeforeTax desc",
    DiscountPercent: "discountPercent",
    DiscountPercentDesc: "discountPercent desc",
    DocumentId: "documentId",
    DocumentIdDesc: "documentId desc",
    ExpectedReceiptDate: "expectedReceiptDate",
    ExpectedReceiptDateDesc: "expectedReceiptDate desc",
    InvoiceDiscountAllocation: "invoiceDiscountAllocation",
    InvoiceDiscountAllocationDesc: "invoiceDiscountAllocation desc",
    ItemId: "itemId",
    ItemIdDesc: "itemId desc",
    LineType: "lineType",
    LineTypeDesc: "lineType desc",
    NetAmount: "netAmount",
    NetAmountDesc: "netAmount desc",
    NetAmountIncludingTax: "netAmountIncludingTax",
    NetAmountIncludingTaxDesc: "netAmountIncludingTax desc",
    NetTaxAmount: "netTaxAmount",
    NetTaxAmountDesc: "netTaxAmount desc",
    Quantity: "quantity",
    QuantityDesc: "quantity desc",
    Sequence: "sequence",
    SequenceDesc: "sequence desc",
    TaxCode: "taxCode",
    TaxCodeDesc: "taxCode desc",
    TaxPercent: "taxPercent",
    TaxPercentDesc: "taxPercent desc",
    TotalTaxAmount: "totalTaxAmount",
    TotalTaxAmountDesc: "totalTaxAmount desc",
    UnitCost: "unitCost",
    UnitCostDesc: "unitCost desc",
} as const;
/**
 * Provides operations to manage the purchaseInvoiceLines property of the microsoft.graph.company entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AccountId: "accountId",
    AmountExcludingTax: "amountExcludingTax",
    AmountIncludingTax: "amountIncludingTax",
    Description: "description",
    DiscountAmount: "discountAmount",
    DiscountAppliedBeforeTax: "discountAppliedBeforeTax",
    DiscountPercent: "discountPercent",
    DocumentId: "documentId",
    ExpectedReceiptDate: "expectedReceiptDate",
    InvoiceDiscountAllocation: "invoiceDiscountAllocation",
    ItemId: "itemId",
    LineType: "lineType",
    NetAmount: "netAmount",
    NetAmountIncludingTax: "netAmountIncludingTax",
    NetTaxAmount: "netTaxAmount",
    Quantity: "quantity",
    Sequence: "sequence",
    TaxCode: "taxCode",
    TaxPercent: "taxPercent",
    TotalTaxAmount: "totalTaxAmount",
    UnitCost: "unitCost",
    Account: "account",
    Item: "item",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PurchaseInvoiceLinesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PurchaseInvoiceLinesRequestBuilderNavigationMetadata: Record<Exclude<keyof PurchaseInvoiceLinesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byPurchaseInvoiceLineId: {
        requestsMetadata: PurchaseInvoiceLineItemRequestBuilderRequestsMetadata,
        navigationMetadata: PurchaseInvoiceLineItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["purchaseInvoiceLine%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PurchaseInvoiceLinesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: PurchaseInvoiceLinesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPurchaseInvoiceLineCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: PurchaseInvoiceLinesRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
