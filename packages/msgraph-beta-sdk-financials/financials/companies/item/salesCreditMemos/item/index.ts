/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createSalesCreditMemoFromDiscriminatorValue, serializeSalesCreditMemo, type SalesCreditMemo } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CurrencyRequestBuilderRequestsMetadata, CurrencyRequestBuilderUriTemplate, type CurrencyRequestBuilder } from './currency/';
import { CustomerRequestBuilderNavigationMetadata, CustomerRequestBuilderRequestsMetadata, CustomerRequestBuilderUriTemplate, type CustomerRequestBuilder } from './customer/';
import { PaymentTermRequestBuilderRequestsMetadata, PaymentTermRequestBuilderUriTemplate, type PaymentTermRequestBuilder } from './paymentTerm/';
import { SalesCreditMemoLinesRequestBuilderNavigationMetadata, SalesCreditMemoLinesRequestBuilderRequestsMetadata, SalesCreditMemoLinesRequestBuilderUriTemplate, type SalesCreditMemoLinesRequestBuilder } from './salesCreditMemoLines/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the salesCreditMemos property of the microsoft.graph.company entity.
 */
export interface SalesCreditMemoItemRequestBuilder extends BaseRequestBuilder<SalesCreditMemoItemRequestBuilder> {
    /**
     * Provides operations to manage the currency property of the microsoft.graph.salesCreditMemo entity.
     */
    get currency(): CurrencyRequestBuilder;
    /**
     * Provides operations to manage the customer property of the microsoft.graph.salesCreditMemo entity.
     */
    get customer(): CustomerRequestBuilder;
    /**
     * Provides operations to manage the paymentTerm property of the microsoft.graph.salesCreditMemo entity.
     */
    get paymentTerm(): PaymentTermRequestBuilder;
    /**
     * Provides operations to manage the salesCreditMemoLines property of the microsoft.graph.salesCreditMemo entity.
     */
    get salesCreditMemoLines(): SalesCreditMemoLinesRequestBuilder;
    /**
     * Get salesCreditMemos from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of SalesCreditMemo
     */
     get(requestConfiguration?: RequestConfiguration<SalesCreditMemoItemRequestBuilderGetQueryParameters> | undefined) : Promise<SalesCreditMemo | undefined>;
    /**
     * Update the navigation property salesCreditMemos in financials
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of SalesCreditMemo
     */
     patch(body: SalesCreditMemo, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<SalesCreditMemo | undefined>;
    /**
     * Get salesCreditMemos from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SalesCreditMemoItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property salesCreditMemos in financials
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: SalesCreditMemo, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get salesCreditMemos from financials
 */
export interface SalesCreditMemoItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SalesCreditMemoItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SalesCreditMemoItemRequestBuilderNavigationMetadata: Record<Exclude<keyof SalesCreditMemoItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    currency: {
        uriTemplate: CurrencyRequestBuilderUriTemplate,
        requestsMetadata: CurrencyRequestBuilderRequestsMetadata,
    },
    customer: {
        uriTemplate: CustomerRequestBuilderUriTemplate,
        requestsMetadata: CustomerRequestBuilderRequestsMetadata,
        navigationMetadata: CustomerRequestBuilderNavigationMetadata,
    },
    paymentTerm: {
        uriTemplate: PaymentTermRequestBuilderUriTemplate,
        requestsMetadata: PaymentTermRequestBuilderRequestsMetadata,
    },
    salesCreditMemoLines: {
        uriTemplate: SalesCreditMemoLinesRequestBuilderUriTemplate,
        requestsMetadata: SalesCreditMemoLinesRequestBuilderRequestsMetadata,
        navigationMetadata: SalesCreditMemoLinesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SalesCreditMemoItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createSalesCreditMemoFromDiscriminatorValue,
        queryParametersMapper: SalesCreditMemoItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createSalesCreditMemoFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSalesCreditMemo,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const SalesCreditMemoItemRequestBuilderUriTemplate = "{+baseurl}/financials/companies/{company%2Did}/salesCreditMemos/{salesCreditMemo%2Did}{?%24expand,%24select}";
/* tslint:enable */
/* eslint-enable */
