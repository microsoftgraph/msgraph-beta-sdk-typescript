/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createSalesCreditMemoCollectionResponseFromDiscriminatorValue, type SalesCreditMemoCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { SalesCreditMemoItemRequestBuilderNavigationMetadata, SalesCreditMemoItemRequestBuilderRequestsMetadata, type SalesCreditMemoItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';
import { type Guid } from 'guid-typescript';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the salesCreditMemos property of the microsoft.graph.company entity.
 */
export interface SalesCreditMemosRequestBuilder extends BaseRequestBuilder<SalesCreditMemosRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the salesCreditMemos property of the microsoft.graph.company entity.
     * @param salesCreditMemoId The unique identifier of salesCreditMemo
     * @returns {SalesCreditMemoItemRequestBuilder}
     */
     bySalesCreditMemoId(salesCreditMemoId: Guid) : SalesCreditMemoItemRequestBuilder;
    /**
     * Get salesCreditMemos from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<SalesCreditMemoCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<SalesCreditMemosRequestBuilderGetQueryParameters> | undefined) : Promise<SalesCreditMemoCollectionResponse | undefined>;
    /**
     * Get salesCreditMemos from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SalesCreditMemosRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Get salesCreditMemos from financials
 */
export interface SalesCreditMemosRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const SalesCreditMemosRequestBuilderUriTemplate = "{+baseurl}/financials/companies/{company%2Did}/salesCreditMemos{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the salesCreditMemos property of the microsoft.graph.company entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Currency: "currency",
    Customer: "customer",
    PaymentTerm: "paymentTerm",
    SalesCreditMemoLines: "salesCreditMemoLines",
} as const;
/**
 * Provides operations to manage the salesCreditMemos property of the microsoft.graph.company entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    BillingPostalAddress: "billingPostalAddress",
    BillingPostalAddressDesc: "billingPostalAddress desc",
    BillToCustomerId: "billToCustomerId",
    BillToCustomerIdDesc: "billToCustomerId desc",
    BillToCustomerNumber: "billToCustomerNumber",
    BillToCustomerNumberDesc: "billToCustomerNumber desc",
    BillToName: "billToName",
    BillToNameDesc: "billToName desc",
    CreditMemoDate: "creditMemoDate",
    CreditMemoDateDesc: "creditMemoDate desc",
    CurrencyCode: "currencyCode",
    CurrencyCodeDesc: "currencyCode desc",
    CurrencyId: "currencyId",
    CurrencyIdDesc: "currencyId desc",
    CustomerId: "customerId",
    CustomerIdDesc: "customerId desc",
    CustomerName: "customerName",
    CustomerNameDesc: "customerName desc",
    CustomerNumber: "customerNumber",
    CustomerNumberDesc: "customerNumber desc",
    DiscountAmount: "discountAmount",
    DiscountAmountDesc: "discountAmount desc",
    DiscountAppliedBeforeTax: "discountAppliedBeforeTax",
    DiscountAppliedBeforeTaxDesc: "discountAppliedBeforeTax desc",
    DueDate: "dueDate",
    DueDateDesc: "dueDate desc",
    Email: "email",
    EmailDesc: "email desc",
    ExternalDocumentNumber: "externalDocumentNumber",
    ExternalDocumentNumberDesc: "externalDocumentNumber desc",
    Id: "id",
    IdDesc: "id desc",
    InvoiceId: "invoiceId",
    InvoiceIdDesc: "invoiceId desc",
    InvoiceNumber: "invoiceNumber",
    InvoiceNumberDesc: "invoiceNumber desc",
    LastModifiedDateTime: "lastModifiedDateTime",
    LastModifiedDateTimeDesc: "lastModifiedDateTime desc",
    Number: "number",
    NumberDesc: "number desc",
    PaymentTermsId: "paymentTermsId",
    PaymentTermsIdDesc: "paymentTermsId desc",
    PhoneNumber: "phoneNumber",
    PhoneNumberDesc: "phoneNumber desc",
    PricesIncludeTax: "pricesIncludeTax",
    PricesIncludeTaxDesc: "pricesIncludeTax desc",
    Salesperson: "salesperson",
    SalespersonDesc: "salesperson desc",
    SellingPostalAddress: "sellingPostalAddress",
    SellingPostalAddressDesc: "sellingPostalAddress desc",
    Status: "status",
    StatusDesc: "status desc",
    TotalAmountExcludingTax: "totalAmountExcludingTax",
    TotalAmountExcludingTaxDesc: "totalAmountExcludingTax desc",
    TotalAmountIncludingTax: "totalAmountIncludingTax",
    TotalAmountIncludingTaxDesc: "totalAmountIncludingTax desc",
    TotalTaxAmount: "totalTaxAmount",
    TotalTaxAmountDesc: "totalTaxAmount desc",
} as const;
/**
 * Provides operations to manage the salesCreditMemos property of the microsoft.graph.company entity.
 */
export const GetSelectQueryParameterTypeObject = {
    BillingPostalAddress: "billingPostalAddress",
    BillToCustomerId: "billToCustomerId",
    BillToCustomerNumber: "billToCustomerNumber",
    BillToName: "billToName",
    CreditMemoDate: "creditMemoDate",
    CurrencyCode: "currencyCode",
    CurrencyId: "currencyId",
    CustomerId: "customerId",
    CustomerName: "customerName",
    CustomerNumber: "customerNumber",
    DiscountAmount: "discountAmount",
    DiscountAppliedBeforeTax: "discountAppliedBeforeTax",
    DueDate: "dueDate",
    Email: "email",
    ExternalDocumentNumber: "externalDocumentNumber",
    Id: "id",
    InvoiceId: "invoiceId",
    InvoiceNumber: "invoiceNumber",
    LastModifiedDateTime: "lastModifiedDateTime",
    Number: "number",
    PaymentTermsId: "paymentTermsId",
    PhoneNumber: "phoneNumber",
    PricesIncludeTax: "pricesIncludeTax",
    Salesperson: "salesperson",
    SellingPostalAddress: "sellingPostalAddress",
    Status: "status",
    TotalAmountExcludingTax: "totalAmountExcludingTax",
    TotalAmountIncludingTax: "totalAmountIncludingTax",
    TotalTaxAmount: "totalTaxAmount",
    Currency: "currency",
    Customer: "customer",
    PaymentTerm: "paymentTerm",
    SalesCreditMemoLines: "salesCreditMemoLines",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SalesCreditMemosRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SalesCreditMemosRequestBuilderNavigationMetadata: Record<Exclude<keyof SalesCreditMemosRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    bySalesCreditMemoId: {
        requestsMetadata: SalesCreditMemoItemRequestBuilderRequestsMetadata,
        navigationMetadata: SalesCreditMemoItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["salesCreditMemo%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SalesCreditMemosRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: SalesCreditMemosRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createSalesCreditMemoCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: SalesCreditMemosRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
