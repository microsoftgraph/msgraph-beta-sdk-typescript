/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createSalesInvoiceFromDiscriminatorValue, serializeSalesInvoice, type SalesInvoice } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CancelRequestBuilderRequestsMetadata, type CancelRequestBuilder } from './cancel/';
import { CancelAndSendRequestBuilderRequestsMetadata, type CancelAndSendRequestBuilder } from './cancelAndSend/';
import { CurrencyRequestBuilderRequestsMetadata, type CurrencyRequestBuilder } from './currency/';
import { CustomerRequestBuilderNavigationMetadata, CustomerRequestBuilderRequestsMetadata, type CustomerRequestBuilder } from './customer/';
import { PaymentTermRequestBuilderRequestsMetadata, type PaymentTermRequestBuilder } from './paymentTerm/';
import { PostRequestBuilderRequestsMetadata, type PostRequestBuilder } from './post/';
import { PostAndSendRequestBuilderRequestsMetadata, type PostAndSendRequestBuilder } from './postAndSend/';
import { SalesInvoiceLinesRequestBuilderNavigationMetadata, SalesInvoiceLinesRequestBuilderRequestsMetadata, type SalesInvoiceLinesRequestBuilder } from './salesInvoiceLines/';
import { SendRequestBuilderRequestsMetadata, type SendRequestBuilder } from './send/';
import { ShipmentMethodRequestBuilderRequestsMetadata, type ShipmentMethodRequestBuilder } from './shipmentMethod/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the salesInvoices property of the microsoft.graph.company entity.
 */
export interface SalesInvoiceItemRequestBuilder extends BaseRequestBuilder<SalesInvoiceItemRequestBuilder> {
    /**
     * Provides operations to call the cancel method.
     */
    get cancel(): CancelRequestBuilder;
    /**
     * Provides operations to call the cancelAndSend method.
     */
    get cancelAndSend(): CancelAndSendRequestBuilder;
    /**
     * Provides operations to manage the currency property of the microsoft.graph.salesInvoice entity.
     */
    get currency(): CurrencyRequestBuilder;
    /**
     * Provides operations to manage the customer property of the microsoft.graph.salesInvoice entity.
     */
    get customer(): CustomerRequestBuilder;
    /**
     * Provides operations to manage the paymentTerm property of the microsoft.graph.salesInvoice entity.
     */
    get paymentTerm(): PaymentTermRequestBuilder;
    /**
     * Provides operations to call the postAndSend method.
     */
    get postAndSend(): PostAndSendRequestBuilder;
    /**
     * Provides operations to call the post method.
     */
    get postPath(): PostRequestBuilder;
    /**
     * Provides operations to manage the salesInvoiceLines property of the microsoft.graph.salesInvoice entity.
     */
    get salesInvoiceLines(): SalesInvoiceLinesRequestBuilder;
    /**
     * Provides operations to call the send method.
     */
    get send(): SendRequestBuilder;
    /**
     * Provides operations to manage the shipmentMethod property of the microsoft.graph.salesInvoice entity.
     */
    get shipmentMethod(): ShipmentMethodRequestBuilder;
    /**
     * Get salesInvoices from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<SalesInvoice>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<SalesInvoiceItemRequestBuilderGetQueryParameters> | undefined) : Promise<SalesInvoice | undefined>;
    /**
     * Update the navigation property salesInvoices in financials
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<SalesInvoice>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: SalesInvoice, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<SalesInvoice | undefined>;
    /**
     * Get salesInvoices from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SalesInvoiceItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property salesInvoices in financials
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: SalesInvoice, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get salesInvoices from financials
 */
export interface SalesInvoiceItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
/**
 * Uri template for the request builder.
 */
export const SalesInvoiceItemRequestBuilderUriTemplate = "{+baseurl}/financials/companies/{company%2Did}/salesInvoices/{salesInvoice%2Did}{?%24expand,%24select}";
/**
 * Provides operations to manage the salesInvoices property of the microsoft.graph.company entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Currency: "currency",
    Customer: "customer",
    PaymentTerm: "paymentTerm",
    SalesInvoiceLines: "salesInvoiceLines",
    ShipmentMethod: "shipmentMethod",
} as const;
/**
 * Provides operations to manage the salesInvoices property of the microsoft.graph.company entity.
 */
export const GetSelectQueryParameterTypeObject = {
    BillingPostalAddress: "billingPostalAddress",
    BillToCustomerId: "billToCustomerId",
    BillToCustomerNumber: "billToCustomerNumber",
    BillToName: "billToName",
    CurrencyCode: "currencyCode",
    CurrencyId: "currencyId",
    CustomerId: "customerId",
    CustomerName: "customerName",
    CustomerNumber: "customerNumber",
    CustomerPurchaseOrderReference: "customerPurchaseOrderReference",
    DiscountAmount: "discountAmount",
    DiscountAppliedBeforeTax: "discountAppliedBeforeTax",
    DueDate: "dueDate",
    Email: "email",
    ExternalDocumentNumber: "externalDocumentNumber",
    Id: "id",
    InvoiceDate: "invoiceDate",
    LastModifiedDateTime: "lastModifiedDateTime",
    Number: "number",
    OrderId: "orderId",
    OrderNumber: "orderNumber",
    PaymentTermsId: "paymentTermsId",
    PhoneNumber: "phoneNumber",
    PricesIncludeTax: "pricesIncludeTax",
    Salesperson: "salesperson",
    SellingPostalAddress: "sellingPostalAddress",
    ShipmentMethodId: "shipmentMethodId",
    ShippingPostalAddress: "shippingPostalAddress",
    ShipToContact: "shipToContact",
    ShipToName: "shipToName",
    Status: "status",
    TotalAmountExcludingTax: "totalAmountExcludingTax",
    TotalAmountIncludingTax: "totalAmountIncludingTax",
    TotalTaxAmount: "totalTaxAmount",
    Currency: "currency",
    Customer: "customer",
    PaymentTerm: "paymentTerm",
    SalesInvoiceLines: "salesInvoiceLines",
    ShipmentMethod: "shipmentMethod",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SalesInvoiceItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SalesInvoiceItemRequestBuilderNavigationMetadata: Record<Exclude<keyof SalesInvoiceItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    cancel: {
        requestsMetadata: CancelRequestBuilderRequestsMetadata,
    },
    cancelAndSend: {
        requestsMetadata: CancelAndSendRequestBuilderRequestsMetadata,
    },
    currency: {
        requestsMetadata: CurrencyRequestBuilderRequestsMetadata,
    },
    customer: {
        requestsMetadata: CustomerRequestBuilderRequestsMetadata,
        navigationMetadata: CustomerRequestBuilderNavigationMetadata,
    },
    paymentTerm: {
        requestsMetadata: PaymentTermRequestBuilderRequestsMetadata,
    },
    postAndSend: {
        requestsMetadata: PostAndSendRequestBuilderRequestsMetadata,
    },
    postPath: {
        requestsMetadata: PostRequestBuilderRequestsMetadata,
    },
    salesInvoiceLines: {
        requestsMetadata: SalesInvoiceLinesRequestBuilderRequestsMetadata,
        navigationMetadata: SalesInvoiceLinesRequestBuilderNavigationMetadata,
    },
    send: {
        requestsMetadata: SendRequestBuilderRequestsMetadata,
    },
    shipmentMethod: {
        requestsMetadata: ShipmentMethodRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SalesInvoiceItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: SalesInvoiceItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createSalesInvoiceFromDiscriminatorValue,
        queryParametersMapper: SalesInvoiceItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: SalesInvoiceItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createSalesInvoiceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSalesInvoice,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
