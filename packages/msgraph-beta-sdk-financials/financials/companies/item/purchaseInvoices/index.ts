/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPurchaseInvoiceCollectionResponseFromDiscriminatorValue, type PurchaseInvoiceCollectionResponse } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { PurchaseInvoiceItemRequestBuilderNavigationMetadata, PurchaseInvoiceItemRequestBuilderRequestsMetadata, type PurchaseInvoiceItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';
import { type Guid } from 'guid-typescript';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the purchaseInvoices property of the microsoft.graph.company entity.
 */
export interface PurchaseInvoicesRequestBuilder extends BaseRequestBuilder<PurchaseInvoicesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the purchaseInvoices property of the microsoft.graph.company entity.
     * @param purchaseInvoiceId The unique identifier of purchaseInvoice
     * @returns {PurchaseInvoiceItemRequestBuilder}
     */
     byPurchaseInvoiceId(purchaseInvoiceId: Guid) : PurchaseInvoiceItemRequestBuilder;
    /**
     * Get purchaseInvoices from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PurchaseInvoiceCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<PurchaseInvoicesRequestBuilderGetQueryParameters> | undefined) : Promise<PurchaseInvoiceCollectionResponse | undefined>;
    /**
     * Get purchaseInvoices from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PurchaseInvoicesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Get purchaseInvoices from financials
 */
export interface PurchaseInvoicesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const PurchaseInvoicesRequestBuilderUriTemplate = "{+baseurl}/financials/companies/{company%2Did}/purchaseInvoices{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the purchaseInvoices property of the microsoft.graph.company entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Currency: "currency",
    PurchaseInvoiceLines: "purchaseInvoiceLines",
    Vendor: "vendor",
} as const;
/**
 * Provides operations to manage the purchaseInvoices property of the microsoft.graph.company entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    BuyFromAddress: "buyFromAddress",
    BuyFromAddressDesc: "buyFromAddress desc",
    CurrencyCode: "currencyCode",
    CurrencyCodeDesc: "currencyCode desc",
    CurrencyId: "currencyId",
    CurrencyIdDesc: "currencyId desc",
    DiscountAmount: "discountAmount",
    DiscountAmountDesc: "discountAmount desc",
    DiscountAppliedBeforeTax: "discountAppliedBeforeTax",
    DiscountAppliedBeforeTaxDesc: "discountAppliedBeforeTax desc",
    DueDate: "dueDate",
    DueDateDesc: "dueDate desc",
    Id: "id",
    IdDesc: "id desc",
    InvoiceDate: "invoiceDate",
    InvoiceDateDesc: "invoiceDate desc",
    LastModifiedDateTime: "lastModifiedDateTime",
    LastModifiedDateTimeDesc: "lastModifiedDateTime desc",
    Number: "number",
    NumberDesc: "number desc",
    PayToAddress: "payToAddress",
    PayToAddressDesc: "payToAddress desc",
    PayToContact: "payToContact",
    PayToContactDesc: "payToContact desc",
    PayToName: "payToName",
    PayToNameDesc: "payToName desc",
    PayToVendorId: "payToVendorId",
    PayToVendorIdDesc: "payToVendorId desc",
    PayToVendorNumber: "payToVendorNumber",
    PayToVendorNumberDesc: "payToVendorNumber desc",
    PricesIncludeTax: "pricesIncludeTax",
    PricesIncludeTaxDesc: "pricesIncludeTax desc",
    ShipToAddress: "shipToAddress",
    ShipToAddressDesc: "shipToAddress desc",
    ShipToContact: "shipToContact",
    ShipToContactDesc: "shipToContact desc",
    ShipToName: "shipToName",
    ShipToNameDesc: "shipToName desc",
    Status: "status",
    StatusDesc: "status desc",
    TotalAmountExcludingTax: "totalAmountExcludingTax",
    TotalAmountExcludingTaxDesc: "totalAmountExcludingTax desc",
    TotalAmountIncludingTax: "totalAmountIncludingTax",
    TotalAmountIncludingTaxDesc: "totalAmountIncludingTax desc",
    TotalTaxAmount: "totalTaxAmount",
    TotalTaxAmountDesc: "totalTaxAmount desc",
    VendorId: "vendorId",
    VendorIdDesc: "vendorId desc",
    VendorInvoiceNumber: "vendorInvoiceNumber",
    VendorInvoiceNumberDesc: "vendorInvoiceNumber desc",
    VendorName: "vendorName",
    VendorNameDesc: "vendorName desc",
    VendorNumber: "vendorNumber",
    VendorNumberDesc: "vendorNumber desc",
} as const;
/**
 * Provides operations to manage the purchaseInvoices property of the microsoft.graph.company entity.
 */
export const GetSelectQueryParameterTypeObject = {
    BuyFromAddress: "buyFromAddress",
    CurrencyCode: "currencyCode",
    CurrencyId: "currencyId",
    DiscountAmount: "discountAmount",
    DiscountAppliedBeforeTax: "discountAppliedBeforeTax",
    DueDate: "dueDate",
    Id: "id",
    InvoiceDate: "invoiceDate",
    LastModifiedDateTime: "lastModifiedDateTime",
    Number: "number",
    PayToAddress: "payToAddress",
    PayToContact: "payToContact",
    PayToName: "payToName",
    PayToVendorId: "payToVendorId",
    PayToVendorNumber: "payToVendorNumber",
    PricesIncludeTax: "pricesIncludeTax",
    ShipToAddress: "shipToAddress",
    ShipToContact: "shipToContact",
    ShipToName: "shipToName",
    Status: "status",
    TotalAmountExcludingTax: "totalAmountExcludingTax",
    TotalAmountIncludingTax: "totalAmountIncludingTax",
    TotalTaxAmount: "totalTaxAmount",
    VendorId: "vendorId",
    VendorInvoiceNumber: "vendorInvoiceNumber",
    VendorName: "vendorName",
    VendorNumber: "vendorNumber",
    Currency: "currency",
    PurchaseInvoiceLines: "purchaseInvoiceLines",
    Vendor: "vendor",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PurchaseInvoicesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PurchaseInvoicesRequestBuilderNavigationMetadata: Record<Exclude<keyof PurchaseInvoicesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byPurchaseInvoiceId: {
        requestsMetadata: PurchaseInvoiceItemRequestBuilderRequestsMetadata,
        navigationMetadata: PurchaseInvoiceItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["purchaseInvoice%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PurchaseInvoicesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: PurchaseInvoicesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPurchaseInvoiceCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: PurchaseInvoicesRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
