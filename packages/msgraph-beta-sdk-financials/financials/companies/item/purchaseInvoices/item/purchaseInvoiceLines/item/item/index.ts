/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createItemFromDiscriminatorValue, serializeItem, type Item } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { ItemCategoryRequestBuilderRequestsMetadata, type ItemCategoryRequestBuilder } from './itemCategory/';
import { PictureRequestBuilderNavigationMetadata, PictureRequestBuilderRequestsMetadata, type PictureRequestBuilder } from './picture/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the item property of the microsoft.graph.purchaseInvoiceLine entity.
 */
export interface ItemRequestBuilder extends BaseRequestBuilder<ItemRequestBuilder> {
    /**
     * Provides operations to manage the itemCategory property of the microsoft.graph.item entity.
     */
    get itemCategory(): ItemCategoryRequestBuilder;
    /**
     * Provides operations to manage the picture property of the microsoft.graph.item entity.
     */
    get picture(): PictureRequestBuilder;
    /**
     * Delete navigation property item for financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get item from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Item>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ItemRequestBuilderGetQueryParameters> | undefined) : Promise<Item | undefined>;
    /**
     * Update the navigation property item in financials
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Item>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: Item, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Item | undefined>;
    /**
     * Delete navigation property item for financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get item from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property item in financials
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: Item, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get item from financials
 */
export interface ItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
/**
 * Uri template for the request builder.
 */
export const ItemRequestBuilderUriTemplate = "{+baseurl}/financials/companies/{company%2Did}/purchaseInvoices/{purchaseInvoice%2Did}/purchaseInvoiceLines/{purchaseInvoiceLine%2Did}/item{?%24expand,%24select}";
/**
 * Provides operations to manage the item property of the microsoft.graph.purchaseInvoiceLine entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    ItemCategory: "itemCategory",
    Picture: "picture",
} as const;
/**
 * Provides operations to manage the item property of the microsoft.graph.purchaseInvoiceLine entity.
 */
export const GetSelectQueryParameterTypeObject = {
    BaseUnitOfMeasureId: "baseUnitOfMeasureId",
    Blocked: "blocked",
    DisplayName: "displayName",
    Gtin: "gtin",
    Id: "id",
    Inventory: "inventory",
    ItemCategoryCode: "itemCategoryCode",
    ItemCategoryId: "itemCategoryId",
    LastModifiedDateTime: "lastModifiedDateTime",
    Number: "number",
    PriceIncludesTax: "priceIncludesTax",
    TaxGroupCode: "taxGroupCode",
    TaxGroupId: "taxGroupId",
    Type: "type",
    UnitCost: "unitCost",
    UnitPrice: "unitPrice",
    ItemCategory: "itemCategory",
    Picture: "picture",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ItemRequestBuilderNavigationMetadata: Record<Exclude<keyof ItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    itemCategory: {
        requestsMetadata: ItemCategoryRequestBuilderRequestsMetadata,
    },
    picture: {
        requestsMetadata: PictureRequestBuilderRequestsMetadata,
        navigationMetadata: PictureRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createItemFromDiscriminatorValue,
        queryParametersMapper: ItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createItemFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeItem,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
