/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPurchaseInvoiceFromDiscriminatorValue, serializePurchaseInvoice, type PurchaseInvoice } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { CurrencyRequestBuilderRequestsMetadata, CurrencyRequestBuilderUriTemplate, type CurrencyRequestBuilder } from './currency/';
import { PostRequestBuilderRequestsMetadata, PostRequestBuilderUriTemplate, type PostRequestBuilder } from './post/';
import { PurchaseInvoiceLinesRequestBuilderNavigationMetadata, PurchaseInvoiceLinesRequestBuilderRequestsMetadata, PurchaseInvoiceLinesRequestBuilderUriTemplate, type PurchaseInvoiceLinesRequestBuilder } from './purchaseInvoiceLines/';
import { type VendorRequestBuilder, VendorRequestBuilderNavigationMetadata, VendorRequestBuilderRequestsMetadata, VendorRequestBuilderUriTemplate } from './vendor/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the purchaseInvoices property of the microsoft.graph.company entity.
 */
export interface PurchaseInvoiceItemRequestBuilder extends BaseRequestBuilder<PurchaseInvoiceItemRequestBuilder> {
    /**
     * Provides operations to manage the currency property of the microsoft.graph.purchaseInvoice entity.
     */
    get currency(): CurrencyRequestBuilder;
    /**
     * Provides operations to call the post method.
     */
    get postPath(): PostRequestBuilder;
    /**
     * Provides operations to manage the purchaseInvoiceLines property of the microsoft.graph.purchaseInvoice entity.
     */
    get purchaseInvoiceLines(): PurchaseInvoiceLinesRequestBuilder;
    /**
     * Provides operations to manage the vendor property of the microsoft.graph.purchaseInvoice entity.
     */
    get vendor(): VendorRequestBuilder;
    /**
     * Get purchaseInvoices from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of PurchaseInvoice
     */
     get(requestConfiguration?: RequestConfiguration<PurchaseInvoiceItemRequestBuilderGetQueryParameters> | undefined) : Promise<PurchaseInvoice | undefined>;
    /**
     * Update the navigation property purchaseInvoices in financials
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of PurchaseInvoice
     */
     patch(body: PurchaseInvoice, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<PurchaseInvoice | undefined>;
    /**
     * Get purchaseInvoices from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PurchaseInvoiceItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property purchaseInvoices in financials
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: PurchaseInvoice, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get purchaseInvoices from financials
 */
export interface PurchaseInvoiceItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PurchaseInvoiceItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PurchaseInvoiceItemRequestBuilderNavigationMetadata: Record<Exclude<keyof PurchaseInvoiceItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    currency: {
        uriTemplate: CurrencyRequestBuilderUriTemplate,
        requestsMetadata: CurrencyRequestBuilderRequestsMetadata,
    },
    postPath: {
        uriTemplate: PostRequestBuilderUriTemplate,
        requestsMetadata: PostRequestBuilderRequestsMetadata,
    },
    purchaseInvoiceLines: {
        uriTemplate: PurchaseInvoiceLinesRequestBuilderUriTemplate,
        requestsMetadata: PurchaseInvoiceLinesRequestBuilderRequestsMetadata,
        navigationMetadata: PurchaseInvoiceLinesRequestBuilderNavigationMetadata,
    },
    vendor: {
        uriTemplate: VendorRequestBuilderUriTemplate,
        requestsMetadata: VendorRequestBuilderRequestsMetadata,
        navigationMetadata: VendorRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PurchaseInvoiceItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createPurchaseInvoiceFromDiscriminatorValue,
        queryParametersMapper: PurchaseInvoiceItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createPurchaseInvoiceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePurchaseInvoice,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const PurchaseInvoiceItemRequestBuilderUriTemplate = "{+baseurl}/financials/companies/{company%2Did}/purchaseInvoices/{purchaseInvoice%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
