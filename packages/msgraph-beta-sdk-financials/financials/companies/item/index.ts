/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createCompanyFromDiscriminatorValue, type Company } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { AccountsRequestBuilderNavigationMetadata, AccountsRequestBuilderRequestsMetadata, AccountsRequestBuilderUriTemplate, type AccountsRequestBuilder } from './accounts/';
import { AgedAccountsPayableRequestBuilderNavigationMetadata, AgedAccountsPayableRequestBuilderRequestsMetadata, AgedAccountsPayableRequestBuilderUriTemplate, type AgedAccountsPayableRequestBuilder } from './agedAccountsPayable/';
import { AgedAccountsReceivableRequestBuilderNavigationMetadata, AgedAccountsReceivableRequestBuilderRequestsMetadata, AgedAccountsReceivableRequestBuilderUriTemplate, type AgedAccountsReceivableRequestBuilder } from './agedAccountsReceivable/';
import { CompanyInformationRequestBuilderNavigationMetadata, CompanyInformationRequestBuilderRequestsMetadata, CompanyInformationRequestBuilderUriTemplate, type CompanyInformationRequestBuilder } from './companyInformation/';
import { CountriesRegionsRequestBuilderNavigationMetadata, CountriesRegionsRequestBuilderRequestsMetadata, CountriesRegionsRequestBuilderUriTemplate, type CountriesRegionsRequestBuilder } from './countriesRegions/';
import { CurrenciesRequestBuilderNavigationMetadata, CurrenciesRequestBuilderRequestsMetadata, CurrenciesRequestBuilderUriTemplate, type CurrenciesRequestBuilder } from './currencies/';
import { CustomerPaymentJournalsRequestBuilderNavigationMetadata, CustomerPaymentJournalsRequestBuilderRequestsMetadata, CustomerPaymentJournalsRequestBuilderUriTemplate, type CustomerPaymentJournalsRequestBuilder } from './customerPaymentJournals/';
import { CustomerPaymentsRequestBuilderNavigationMetadata, CustomerPaymentsRequestBuilderRequestsMetadata, CustomerPaymentsRequestBuilderUriTemplate, type CustomerPaymentsRequestBuilder } from './customerPayments/';
import { CustomersRequestBuilderNavigationMetadata, CustomersRequestBuilderRequestsMetadata, CustomersRequestBuilderUriTemplate, type CustomersRequestBuilder } from './customers/';
import { DimensionsRequestBuilderNavigationMetadata, DimensionsRequestBuilderRequestsMetadata, DimensionsRequestBuilderUriTemplate, type DimensionsRequestBuilder } from './dimensions/';
import { DimensionValuesRequestBuilderNavigationMetadata, DimensionValuesRequestBuilderRequestsMetadata, DimensionValuesRequestBuilderUriTemplate, type DimensionValuesRequestBuilder } from './dimensionValues/';
import { EmployeesRequestBuilderNavigationMetadata, EmployeesRequestBuilderRequestsMetadata, EmployeesRequestBuilderUriTemplate, type EmployeesRequestBuilder } from './employees/';
import { GeneralLedgerEntriesRequestBuilderNavigationMetadata, GeneralLedgerEntriesRequestBuilderRequestsMetadata, GeneralLedgerEntriesRequestBuilderUriTemplate, type GeneralLedgerEntriesRequestBuilder } from './generalLedgerEntries/';
import { ItemCategoriesRequestBuilderNavigationMetadata, ItemCategoriesRequestBuilderRequestsMetadata, ItemCategoriesRequestBuilderUriTemplate, type ItemCategoriesRequestBuilder } from './itemCategories/';
import { ItemsRequestBuilderNavigationMetadata, ItemsRequestBuilderRequestsMetadata, ItemsRequestBuilderUriTemplate, type ItemsRequestBuilder } from './items/';
import { JournalLinesRequestBuilderNavigationMetadata, JournalLinesRequestBuilderRequestsMetadata, JournalLinesRequestBuilderUriTemplate, type JournalLinesRequestBuilder } from './journalLines/';
import { JournalsRequestBuilderNavigationMetadata, JournalsRequestBuilderRequestsMetadata, JournalsRequestBuilderUriTemplate, type JournalsRequestBuilder } from './journals/';
import { PaymentMethodsRequestBuilderNavigationMetadata, PaymentMethodsRequestBuilderRequestsMetadata, PaymentMethodsRequestBuilderUriTemplate, type PaymentMethodsRequestBuilder } from './paymentMethods/';
import { PaymentTermsRequestBuilderNavigationMetadata, PaymentTermsRequestBuilderRequestsMetadata, PaymentTermsRequestBuilderUriTemplate, type PaymentTermsRequestBuilder } from './paymentTerms/';
import { PictureRequestBuilderNavigationMetadata, PictureRequestBuilderRequestsMetadata, PictureRequestBuilderUriTemplate, type PictureRequestBuilder } from './picture/';
import { PurchaseInvoiceLinesRequestBuilderNavigationMetadata, PurchaseInvoiceLinesRequestBuilderRequestsMetadata, PurchaseInvoiceLinesRequestBuilderUriTemplate, type PurchaseInvoiceLinesRequestBuilder } from './purchaseInvoiceLines/';
import { PurchaseInvoicesRequestBuilderNavigationMetadata, PurchaseInvoicesRequestBuilderRequestsMetadata, PurchaseInvoicesRequestBuilderUriTemplate, type PurchaseInvoicesRequestBuilder } from './purchaseInvoices/';
import { SalesCreditMemoLinesRequestBuilderNavigationMetadata, SalesCreditMemoLinesRequestBuilderRequestsMetadata, SalesCreditMemoLinesRequestBuilderUriTemplate, type SalesCreditMemoLinesRequestBuilder } from './salesCreditMemoLines/';
import { SalesCreditMemosRequestBuilderNavigationMetadata, SalesCreditMemosRequestBuilderRequestsMetadata, SalesCreditMemosRequestBuilderUriTemplate, type SalesCreditMemosRequestBuilder } from './salesCreditMemos/';
import { SalesInvoiceLinesRequestBuilderNavigationMetadata, SalesInvoiceLinesRequestBuilderRequestsMetadata, SalesInvoiceLinesRequestBuilderUriTemplate, type SalesInvoiceLinesRequestBuilder } from './salesInvoiceLines/';
import { SalesInvoicesRequestBuilderNavigationMetadata, SalesInvoicesRequestBuilderRequestsMetadata, SalesInvoicesRequestBuilderUriTemplate, type SalesInvoicesRequestBuilder } from './salesInvoices/';
import { SalesOrderLinesRequestBuilderNavigationMetadata, SalesOrderLinesRequestBuilderRequestsMetadata, SalesOrderLinesRequestBuilderUriTemplate, type SalesOrderLinesRequestBuilder } from './salesOrderLines/';
import { SalesOrdersRequestBuilderNavigationMetadata, SalesOrdersRequestBuilderRequestsMetadata, SalesOrdersRequestBuilderUriTemplate, type SalesOrdersRequestBuilder } from './salesOrders/';
import { SalesQuoteLinesRequestBuilderNavigationMetadata, SalesQuoteLinesRequestBuilderRequestsMetadata, SalesQuoteLinesRequestBuilderUriTemplate, type SalesQuoteLinesRequestBuilder } from './salesQuoteLines/';
import { SalesQuotesRequestBuilderNavigationMetadata, SalesQuotesRequestBuilderRequestsMetadata, SalesQuotesRequestBuilderUriTemplate, type SalesQuotesRequestBuilder } from './salesQuotes/';
import { ShipmentMethodsRequestBuilderNavigationMetadata, ShipmentMethodsRequestBuilderRequestsMetadata, ShipmentMethodsRequestBuilderUriTemplate, type ShipmentMethodsRequestBuilder } from './shipmentMethods/';
import { TaxAreasRequestBuilderNavigationMetadata, TaxAreasRequestBuilderRequestsMetadata, TaxAreasRequestBuilderUriTemplate, type TaxAreasRequestBuilder } from './taxAreas/';
import { TaxGroupsRequestBuilderNavigationMetadata, TaxGroupsRequestBuilderRequestsMetadata, TaxGroupsRequestBuilderUriTemplate, type TaxGroupsRequestBuilder } from './taxGroups/';
import { type UnitsOfMeasureRequestBuilder, UnitsOfMeasureRequestBuilderNavigationMetadata, UnitsOfMeasureRequestBuilderRequestsMetadata, UnitsOfMeasureRequestBuilderUriTemplate } from './unitsOfMeasure/';
import { type VendorsRequestBuilder, VendorsRequestBuilderNavigationMetadata, VendorsRequestBuilderRequestsMetadata, VendorsRequestBuilderUriTemplate } from './vendors/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the companies property of the microsoft.graph.financials entity.
 */
export interface CompanyItemRequestBuilder extends BaseRequestBuilder<CompanyItemRequestBuilder> {
    /**
     * Provides operations to manage the accounts property of the microsoft.graph.company entity.
     */
    get accounts(): AccountsRequestBuilder;
    /**
     * Provides operations to manage the agedAccountsPayable property of the microsoft.graph.company entity.
     */
    get agedAccountsPayable(): AgedAccountsPayableRequestBuilder;
    /**
     * Provides operations to manage the agedAccountsReceivable property of the microsoft.graph.company entity.
     */
    get agedAccountsReceivable(): AgedAccountsReceivableRequestBuilder;
    /**
     * Provides operations to manage the companyInformation property of the microsoft.graph.company entity.
     */
    get companyInformation(): CompanyInformationRequestBuilder;
    /**
     * Provides operations to manage the countriesRegions property of the microsoft.graph.company entity.
     */
    get countriesRegions(): CountriesRegionsRequestBuilder;
    /**
     * Provides operations to manage the currencies property of the microsoft.graph.company entity.
     */
    get currencies(): CurrenciesRequestBuilder;
    /**
     * Provides operations to manage the customerPaymentJournals property of the microsoft.graph.company entity.
     */
    get customerPaymentJournals(): CustomerPaymentJournalsRequestBuilder;
    /**
     * Provides operations to manage the customerPayments property of the microsoft.graph.company entity.
     */
    get customerPayments(): CustomerPaymentsRequestBuilder;
    /**
     * Provides operations to manage the customers property of the microsoft.graph.company entity.
     */
    get customers(): CustomersRequestBuilder;
    /**
     * Provides operations to manage the dimensions property of the microsoft.graph.company entity.
     */
    get dimensions(): DimensionsRequestBuilder;
    /**
     * Provides operations to manage the dimensionValues property of the microsoft.graph.company entity.
     */
    get dimensionValues(): DimensionValuesRequestBuilder;
    /**
     * Provides operations to manage the employees property of the microsoft.graph.company entity.
     */
    get employees(): EmployeesRequestBuilder;
    /**
     * Provides operations to manage the generalLedgerEntries property of the microsoft.graph.company entity.
     */
    get generalLedgerEntries(): GeneralLedgerEntriesRequestBuilder;
    /**
     * Provides operations to manage the itemCategories property of the microsoft.graph.company entity.
     */
    get itemCategories(): ItemCategoriesRequestBuilder;
    /**
     * Provides operations to manage the items property of the microsoft.graph.company entity.
     */
    get items(): ItemsRequestBuilder;
    /**
     * Provides operations to manage the journalLines property of the microsoft.graph.company entity.
     */
    get journalLines(): JournalLinesRequestBuilder;
    /**
     * Provides operations to manage the journals property of the microsoft.graph.company entity.
     */
    get journals(): JournalsRequestBuilder;
    /**
     * Provides operations to manage the paymentMethods property of the microsoft.graph.company entity.
     */
    get paymentMethods(): PaymentMethodsRequestBuilder;
    /**
     * Provides operations to manage the paymentTerms property of the microsoft.graph.company entity.
     */
    get paymentTerms(): PaymentTermsRequestBuilder;
    /**
     * Provides operations to manage the picture property of the microsoft.graph.company entity.
     */
    get picture(): PictureRequestBuilder;
    /**
     * Provides operations to manage the purchaseInvoiceLines property of the microsoft.graph.company entity.
     */
    get purchaseInvoiceLines(): PurchaseInvoiceLinesRequestBuilder;
    /**
     * Provides operations to manage the purchaseInvoices property of the microsoft.graph.company entity.
     */
    get purchaseInvoices(): PurchaseInvoicesRequestBuilder;
    /**
     * Provides operations to manage the salesCreditMemoLines property of the microsoft.graph.company entity.
     */
    get salesCreditMemoLines(): SalesCreditMemoLinesRequestBuilder;
    /**
     * Provides operations to manage the salesCreditMemos property of the microsoft.graph.company entity.
     */
    get salesCreditMemos(): SalesCreditMemosRequestBuilder;
    /**
     * Provides operations to manage the salesInvoiceLines property of the microsoft.graph.company entity.
     */
    get salesInvoiceLines(): SalesInvoiceLinesRequestBuilder;
    /**
     * Provides operations to manage the salesInvoices property of the microsoft.graph.company entity.
     */
    get salesInvoices(): SalesInvoicesRequestBuilder;
    /**
     * Provides operations to manage the salesOrderLines property of the microsoft.graph.company entity.
     */
    get salesOrderLines(): SalesOrderLinesRequestBuilder;
    /**
     * Provides operations to manage the salesOrders property of the microsoft.graph.company entity.
     */
    get salesOrders(): SalesOrdersRequestBuilder;
    /**
     * Provides operations to manage the salesQuoteLines property of the microsoft.graph.company entity.
     */
    get salesQuoteLines(): SalesQuoteLinesRequestBuilder;
    /**
     * Provides operations to manage the salesQuotes property of the microsoft.graph.company entity.
     */
    get salesQuotes(): SalesQuotesRequestBuilder;
    /**
     * Provides operations to manage the shipmentMethods property of the microsoft.graph.company entity.
     */
    get shipmentMethods(): ShipmentMethodsRequestBuilder;
    /**
     * Provides operations to manage the taxAreas property of the microsoft.graph.company entity.
     */
    get taxAreas(): TaxAreasRequestBuilder;
    /**
     * Provides operations to manage the taxGroups property of the microsoft.graph.company entity.
     */
    get taxGroups(): TaxGroupsRequestBuilder;
    /**
     * Provides operations to manage the unitsOfMeasure property of the microsoft.graph.company entity.
     */
    get unitsOfMeasure(): UnitsOfMeasureRequestBuilder;
    /**
     * Provides operations to manage the vendors property of the microsoft.graph.company entity.
     */
    get vendors(): VendorsRequestBuilder;
    /**
     * Get companies from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of Company
     */
     get(requestConfiguration?: RequestConfiguration<CompanyItemRequestBuilderGetQueryParameters> | undefined) : Promise<Company | undefined>;
    /**
     * Get companies from financials
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<CompanyItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Get companies from financials
 */
export interface CompanyItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const CompanyItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const CompanyItemRequestBuilderNavigationMetadata: Record<Exclude<keyof CompanyItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    accounts: {
        uriTemplate: AccountsRequestBuilderUriTemplate,
        requestsMetadata: AccountsRequestBuilderRequestsMetadata,
        navigationMetadata: AccountsRequestBuilderNavigationMetadata,
    },
    agedAccountsPayable: {
        uriTemplate: AgedAccountsPayableRequestBuilderUriTemplate,
        requestsMetadata: AgedAccountsPayableRequestBuilderRequestsMetadata,
        navigationMetadata: AgedAccountsPayableRequestBuilderNavigationMetadata,
    },
    agedAccountsReceivable: {
        uriTemplate: AgedAccountsReceivableRequestBuilderUriTemplate,
        requestsMetadata: AgedAccountsReceivableRequestBuilderRequestsMetadata,
        navigationMetadata: AgedAccountsReceivableRequestBuilderNavigationMetadata,
    },
    companyInformation: {
        uriTemplate: CompanyInformationRequestBuilderUriTemplate,
        requestsMetadata: CompanyInformationRequestBuilderRequestsMetadata,
        navigationMetadata: CompanyInformationRequestBuilderNavigationMetadata,
    },
    countriesRegions: {
        uriTemplate: CountriesRegionsRequestBuilderUriTemplate,
        requestsMetadata: CountriesRegionsRequestBuilderRequestsMetadata,
        navigationMetadata: CountriesRegionsRequestBuilderNavigationMetadata,
    },
    currencies: {
        uriTemplate: CurrenciesRequestBuilderUriTemplate,
        requestsMetadata: CurrenciesRequestBuilderRequestsMetadata,
        navigationMetadata: CurrenciesRequestBuilderNavigationMetadata,
    },
    customerPaymentJournals: {
        uriTemplate: CustomerPaymentJournalsRequestBuilderUriTemplate,
        requestsMetadata: CustomerPaymentJournalsRequestBuilderRequestsMetadata,
        navigationMetadata: CustomerPaymentJournalsRequestBuilderNavigationMetadata,
    },
    customerPayments: {
        uriTemplate: CustomerPaymentsRequestBuilderUriTemplate,
        requestsMetadata: CustomerPaymentsRequestBuilderRequestsMetadata,
        navigationMetadata: CustomerPaymentsRequestBuilderNavigationMetadata,
    },
    customers: {
        uriTemplate: CustomersRequestBuilderUriTemplate,
        requestsMetadata: CustomersRequestBuilderRequestsMetadata,
        navigationMetadata: CustomersRequestBuilderNavigationMetadata,
    },
    dimensions: {
        uriTemplate: DimensionsRequestBuilderUriTemplate,
        requestsMetadata: DimensionsRequestBuilderRequestsMetadata,
        navigationMetadata: DimensionsRequestBuilderNavigationMetadata,
    },
    dimensionValues: {
        uriTemplate: DimensionValuesRequestBuilderUriTemplate,
        requestsMetadata: DimensionValuesRequestBuilderRequestsMetadata,
        navigationMetadata: DimensionValuesRequestBuilderNavigationMetadata,
    },
    employees: {
        uriTemplate: EmployeesRequestBuilderUriTemplate,
        requestsMetadata: EmployeesRequestBuilderRequestsMetadata,
        navigationMetadata: EmployeesRequestBuilderNavigationMetadata,
    },
    generalLedgerEntries: {
        uriTemplate: GeneralLedgerEntriesRequestBuilderUriTemplate,
        requestsMetadata: GeneralLedgerEntriesRequestBuilderRequestsMetadata,
        navigationMetadata: GeneralLedgerEntriesRequestBuilderNavigationMetadata,
    },
    itemCategories: {
        uriTemplate: ItemCategoriesRequestBuilderUriTemplate,
        requestsMetadata: ItemCategoriesRequestBuilderRequestsMetadata,
        navigationMetadata: ItemCategoriesRequestBuilderNavigationMetadata,
    },
    items: {
        uriTemplate: ItemsRequestBuilderUriTemplate,
        requestsMetadata: ItemsRequestBuilderRequestsMetadata,
        navigationMetadata: ItemsRequestBuilderNavigationMetadata,
    },
    journalLines: {
        uriTemplate: JournalLinesRequestBuilderUriTemplate,
        requestsMetadata: JournalLinesRequestBuilderRequestsMetadata,
        navigationMetadata: JournalLinesRequestBuilderNavigationMetadata,
    },
    journals: {
        uriTemplate: JournalsRequestBuilderUriTemplate,
        requestsMetadata: JournalsRequestBuilderRequestsMetadata,
        navigationMetadata: JournalsRequestBuilderNavigationMetadata,
    },
    paymentMethods: {
        uriTemplate: PaymentMethodsRequestBuilderUriTemplate,
        requestsMetadata: PaymentMethodsRequestBuilderRequestsMetadata,
        navigationMetadata: PaymentMethodsRequestBuilderNavigationMetadata,
    },
    paymentTerms: {
        uriTemplate: PaymentTermsRequestBuilderUriTemplate,
        requestsMetadata: PaymentTermsRequestBuilderRequestsMetadata,
        navigationMetadata: PaymentTermsRequestBuilderNavigationMetadata,
    },
    picture: {
        uriTemplate: PictureRequestBuilderUriTemplate,
        requestsMetadata: PictureRequestBuilderRequestsMetadata,
        navigationMetadata: PictureRequestBuilderNavigationMetadata,
    },
    purchaseInvoiceLines: {
        uriTemplate: PurchaseInvoiceLinesRequestBuilderUriTemplate,
        requestsMetadata: PurchaseInvoiceLinesRequestBuilderRequestsMetadata,
        navigationMetadata: PurchaseInvoiceLinesRequestBuilderNavigationMetadata,
    },
    purchaseInvoices: {
        uriTemplate: PurchaseInvoicesRequestBuilderUriTemplate,
        requestsMetadata: PurchaseInvoicesRequestBuilderRequestsMetadata,
        navigationMetadata: PurchaseInvoicesRequestBuilderNavigationMetadata,
    },
    salesCreditMemoLines: {
        uriTemplate: SalesCreditMemoLinesRequestBuilderUriTemplate,
        requestsMetadata: SalesCreditMemoLinesRequestBuilderRequestsMetadata,
        navigationMetadata: SalesCreditMemoLinesRequestBuilderNavigationMetadata,
    },
    salesCreditMemos: {
        uriTemplate: SalesCreditMemosRequestBuilderUriTemplate,
        requestsMetadata: SalesCreditMemosRequestBuilderRequestsMetadata,
        navigationMetadata: SalesCreditMemosRequestBuilderNavigationMetadata,
    },
    salesInvoiceLines: {
        uriTemplate: SalesInvoiceLinesRequestBuilderUriTemplate,
        requestsMetadata: SalesInvoiceLinesRequestBuilderRequestsMetadata,
        navigationMetadata: SalesInvoiceLinesRequestBuilderNavigationMetadata,
    },
    salesInvoices: {
        uriTemplate: SalesInvoicesRequestBuilderUriTemplate,
        requestsMetadata: SalesInvoicesRequestBuilderRequestsMetadata,
        navigationMetadata: SalesInvoicesRequestBuilderNavigationMetadata,
    },
    salesOrderLines: {
        uriTemplate: SalesOrderLinesRequestBuilderUriTemplate,
        requestsMetadata: SalesOrderLinesRequestBuilderRequestsMetadata,
        navigationMetadata: SalesOrderLinesRequestBuilderNavigationMetadata,
    },
    salesOrders: {
        uriTemplate: SalesOrdersRequestBuilderUriTemplate,
        requestsMetadata: SalesOrdersRequestBuilderRequestsMetadata,
        navigationMetadata: SalesOrdersRequestBuilderNavigationMetadata,
    },
    salesQuoteLines: {
        uriTemplate: SalesQuoteLinesRequestBuilderUriTemplate,
        requestsMetadata: SalesQuoteLinesRequestBuilderRequestsMetadata,
        navigationMetadata: SalesQuoteLinesRequestBuilderNavigationMetadata,
    },
    salesQuotes: {
        uriTemplate: SalesQuotesRequestBuilderUriTemplate,
        requestsMetadata: SalesQuotesRequestBuilderRequestsMetadata,
        navigationMetadata: SalesQuotesRequestBuilderNavigationMetadata,
    },
    shipmentMethods: {
        uriTemplate: ShipmentMethodsRequestBuilderUriTemplate,
        requestsMetadata: ShipmentMethodsRequestBuilderRequestsMetadata,
        navigationMetadata: ShipmentMethodsRequestBuilderNavigationMetadata,
    },
    taxAreas: {
        uriTemplate: TaxAreasRequestBuilderUriTemplate,
        requestsMetadata: TaxAreasRequestBuilderRequestsMetadata,
        navigationMetadata: TaxAreasRequestBuilderNavigationMetadata,
    },
    taxGroups: {
        uriTemplate: TaxGroupsRequestBuilderUriTemplate,
        requestsMetadata: TaxGroupsRequestBuilderRequestsMetadata,
        navigationMetadata: TaxGroupsRequestBuilderNavigationMetadata,
    },
    unitsOfMeasure: {
        uriTemplate: UnitsOfMeasureRequestBuilderUriTemplate,
        requestsMetadata: UnitsOfMeasureRequestBuilderRequestsMetadata,
        navigationMetadata: UnitsOfMeasureRequestBuilderNavigationMetadata,
    },
    vendors: {
        uriTemplate: VendorsRequestBuilderUriTemplate,
        requestsMetadata: VendorsRequestBuilderRequestsMetadata,
        navigationMetadata: VendorsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const CompanyItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createCompanyFromDiscriminatorValue,
        queryParametersMapper: CompanyItemRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Uri template for the request builder.
 */
export const CompanyItemRequestBuilderUriTemplate = "{+baseurl}/financials/companies/{company%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
