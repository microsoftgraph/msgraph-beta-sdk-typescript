/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createUnifiedRbacApplicationFromDiscriminatorValue, serializeUnifiedRbacApplication, type UnifiedRbacApplication } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { CustomAppScopesRequestBuilderNavigationMetadata, CustomAppScopesRequestBuilderRequestsMetadata, type CustomAppScopesRequestBuilder } from './customAppScopes/index.js';
// @ts-ignore
import { ResourceNamespacesRequestBuilderNavigationMetadata, ResourceNamespacesRequestBuilderRequestsMetadata, type ResourceNamespacesRequestBuilder } from './resourceNamespaces/index.js';
// @ts-ignore
import { RoleAssignmentsRequestBuilderNavigationMetadata, RoleAssignmentsRequestBuilderRequestsMetadata, type RoleAssignmentsRequestBuilder } from './roleAssignments/index.js';
// @ts-ignore
import { RoleDefinitionsRequestBuilderNavigationMetadata, RoleDefinitionsRequestBuilderRequestsMetadata, type RoleDefinitionsRequestBuilder } from './roleDefinitions/index.js';
// @ts-ignore
import { TransitiveRoleAssignmentsRequestBuilderNavigationMetadata, TransitiveRoleAssignmentsRequestBuilderRequestsMetadata, type TransitiveRoleAssignmentsRequestBuilder } from './transitiveRoleAssignments/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the exchange property of the microsoft.graph.roleManagement entity.
 */
export interface ExchangeRequestBuilder extends BaseRequestBuilder<ExchangeRequestBuilder> {
    /**
     * Provides operations to manage the customAppScopes property of the microsoft.graph.unifiedRbacApplication entity.
     */
    get customAppScopes(): CustomAppScopesRequestBuilder;
    /**
     * Provides operations to manage the resourceNamespaces property of the microsoft.graph.unifiedRbacApplication entity.
     */
    get resourceNamespaces(): ResourceNamespacesRequestBuilder;
    /**
     * Provides operations to manage the roleAssignments property of the microsoft.graph.unifiedRbacApplication entity.
     */
    get roleAssignments(): RoleAssignmentsRequestBuilder;
    /**
     * Provides operations to manage the roleDefinitions property of the microsoft.graph.unifiedRbacApplication entity.
     */
    get roleDefinitions(): RoleDefinitionsRequestBuilder;
    /**
     * Provides operations to manage the transitiveRoleAssignments property of the microsoft.graph.unifiedRbacApplication entity.
     */
    get transitiveRoleAssignments(): TransitiveRoleAssignmentsRequestBuilder;
    /**
     * Delete navigation property exchange for roleManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get exchange from roleManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UnifiedRbacApplication>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ExchangeRequestBuilderGetQueryParameters> | undefined) : Promise<UnifiedRbacApplication | undefined>;
    /**
     * Update the navigation property exchange in roleManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UnifiedRbacApplication>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: UnifiedRbacApplication, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<UnifiedRbacApplication | undefined>;
    /**
     * Delete navigation property exchange for roleManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get exchange from roleManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ExchangeRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property exchange in roleManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: UnifiedRbacApplication, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get exchange from roleManagement
 */
export interface ExchangeRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const ExchangeRequestBuilderUriTemplate = "{+baseurl}/roleManagement/exchange{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ExchangeRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ExchangeRequestBuilderNavigationMetadata: Record<Exclude<keyof ExchangeRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    customAppScopes: {
        requestsMetadata: CustomAppScopesRequestBuilderRequestsMetadata,
        navigationMetadata: CustomAppScopesRequestBuilderNavigationMetadata,
    },
    resourceNamespaces: {
        requestsMetadata: ResourceNamespacesRequestBuilderRequestsMetadata,
        navigationMetadata: ResourceNamespacesRequestBuilderNavigationMetadata,
    },
    roleAssignments: {
        requestsMetadata: RoleAssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: RoleAssignmentsRequestBuilderNavigationMetadata,
    },
    roleDefinitions: {
        requestsMetadata: RoleDefinitionsRequestBuilderRequestsMetadata,
        navigationMetadata: RoleDefinitionsRequestBuilderNavigationMetadata,
    },
    transitiveRoleAssignments: {
        requestsMetadata: TransitiveRoleAssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: TransitiveRoleAssignmentsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ExchangeRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: ExchangeRequestBuilderUriTemplate,
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: ExchangeRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createUnifiedRbacApplicationFromDiscriminatorValue,
        queryParametersMapper: ExchangeRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: ExchangeRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createUnifiedRbacApplicationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUnifiedRbacApplication,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
