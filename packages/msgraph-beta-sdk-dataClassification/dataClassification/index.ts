/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDataClassificationServiceFromDiscriminatorValue, serializeDataClassificationService, type DataClassificationService } from '@microsoft/msgraph-beta-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/';
import { ClassifyExactMatchesRequestBuilderRequestsMetadata, ClassifyExactMatchesRequestBuilderUriTemplate, type ClassifyExactMatchesRequestBuilder } from './classifyExactMatches/';
import { ClassifyFileRequestBuilderRequestsMetadata, ClassifyFileRequestBuilderUriTemplate, type ClassifyFileRequestBuilder } from './classifyFile/';
import { ClassifyFileJobsRequestBuilderNavigationMetadata, ClassifyFileJobsRequestBuilderRequestsMetadata, ClassifyFileJobsRequestBuilderUriTemplate, type ClassifyFileJobsRequestBuilder } from './classifyFileJobs/';
import { ClassifyTextJobsRequestBuilderNavigationMetadata, ClassifyTextJobsRequestBuilderRequestsMetadata, ClassifyTextJobsRequestBuilderUriTemplate, type ClassifyTextJobsRequestBuilder } from './classifyTextJobs/';
import { EvaluateDlpPoliciesJobsRequestBuilderNavigationMetadata, EvaluateDlpPoliciesJobsRequestBuilderRequestsMetadata, EvaluateDlpPoliciesJobsRequestBuilderUriTemplate, type EvaluateDlpPoliciesJobsRequestBuilder } from './evaluateDlpPoliciesJobs/';
import { EvaluateLabelJobsRequestBuilderNavigationMetadata, EvaluateLabelJobsRequestBuilderRequestsMetadata, EvaluateLabelJobsRequestBuilderUriTemplate, type EvaluateLabelJobsRequestBuilder } from './evaluateLabelJobs/';
import { ExactMatchDataStoresRequestBuilderNavigationMetadata, ExactMatchDataStoresRequestBuilderRequestsMetadata, ExactMatchDataStoresRequestBuilderUriTemplate, type ExactMatchDataStoresRequestBuilder } from './exactMatchDataStores/';
import { ExactMatchUploadAgentsRequestBuilderNavigationMetadata, ExactMatchUploadAgentsRequestBuilderRequestsMetadata, ExactMatchUploadAgentsRequestBuilderUriTemplate, type ExactMatchUploadAgentsRequestBuilder } from './exactMatchUploadAgents/';
import { JobsRequestBuilderNavigationMetadata, JobsRequestBuilderRequestsMetadata, JobsRequestBuilderUriTemplate, type JobsRequestBuilder } from './jobs/';
import { SensitiveTypesRequestBuilderNavigationMetadata, SensitiveTypesRequestBuilderRequestsMetadata, SensitiveTypesRequestBuilderUriTemplate, type SensitiveTypesRequestBuilder } from './sensitiveTypes/';
import { SensitivityLabelsRequestBuilderNavigationMetadata, SensitivityLabelsRequestBuilderRequestsMetadata, SensitivityLabelsRequestBuilderUriTemplate, type SensitivityLabelsRequestBuilder } from './sensitivityLabels/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the dataClassificationService singleton.
 */
export interface DataClassificationRequestBuilder extends BaseRequestBuilder<DataClassificationRequestBuilder> {
    /**
     * Provides operations to call the classifyExactMatches method.
     */
    get classifyExactMatches(): ClassifyExactMatchesRequestBuilder;
    /**
     * Provides operations to call the classifyFile method.
     */
    get classifyFile(): ClassifyFileRequestBuilder;
    /**
     * Provides operations to manage the classifyFileJobs property of the microsoft.graph.dataClassificationService entity.
     */
    get classifyFileJobs(): ClassifyFileJobsRequestBuilder;
    /**
     * Provides operations to manage the classifyTextJobs property of the microsoft.graph.dataClassificationService entity.
     */
    get classifyTextJobs(): ClassifyTextJobsRequestBuilder;
    /**
     * Provides operations to manage the evaluateDlpPoliciesJobs property of the microsoft.graph.dataClassificationService entity.
     */
    get evaluateDlpPoliciesJobs(): EvaluateDlpPoliciesJobsRequestBuilder;
    /**
     * Provides operations to manage the evaluateLabelJobs property of the microsoft.graph.dataClassificationService entity.
     */
    get evaluateLabelJobs(): EvaluateLabelJobsRequestBuilder;
    /**
     * Provides operations to manage the exactMatchDataStores property of the microsoft.graph.dataClassificationService entity.
     */
    get exactMatchDataStores(): ExactMatchDataStoresRequestBuilder;
    /**
     * Provides operations to manage the exactMatchUploadAgents property of the microsoft.graph.dataClassificationService entity.
     */
    get exactMatchUploadAgents(): ExactMatchUploadAgentsRequestBuilder;
    /**
     * Provides operations to manage the jobs property of the microsoft.graph.dataClassificationService entity.
     */
    get jobs(): JobsRequestBuilder;
    /**
     * Provides operations to manage the sensitiveTypes property of the microsoft.graph.dataClassificationService entity.
     */
    get sensitiveTypes(): SensitiveTypesRequestBuilder;
    /**
     * Provides operations to manage the sensitivityLabels property of the microsoft.graph.dataClassificationService entity.
     */
    get sensitivityLabels(): SensitivityLabelsRequestBuilder;
    /**
     * Get dataClassification
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of DataClassificationService
     */
     get(requestConfiguration?: RequestConfiguration<DataClassificationRequestBuilderGetQueryParameters> | undefined) : Promise<DataClassificationService | undefined>;
    /**
     * Update dataClassification
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of DataClassificationService
     */
     patch(body: DataClassificationService, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DataClassificationService | undefined>;
    /**
     * Get dataClassification
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DataClassificationRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update dataClassification
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: DataClassificationService, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get dataClassification
 */
export interface DataClassificationRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DataClassificationRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DataClassificationRequestBuilderNavigationMetadata: Record<Exclude<keyof DataClassificationRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    classifyExactMatches: {
        uriTemplate: ClassifyExactMatchesRequestBuilderUriTemplate,
        requestsMetadata: ClassifyExactMatchesRequestBuilderRequestsMetadata,
    },
    classifyFile: {
        uriTemplate: ClassifyFileRequestBuilderUriTemplate,
        requestsMetadata: ClassifyFileRequestBuilderRequestsMetadata,
    },
    classifyFileJobs: {
        uriTemplate: ClassifyFileJobsRequestBuilderUriTemplate,
        requestsMetadata: ClassifyFileJobsRequestBuilderRequestsMetadata,
        navigationMetadata: ClassifyFileJobsRequestBuilderNavigationMetadata,
    },
    classifyTextJobs: {
        uriTemplate: ClassifyTextJobsRequestBuilderUriTemplate,
        requestsMetadata: ClassifyTextJobsRequestBuilderRequestsMetadata,
        navigationMetadata: ClassifyTextJobsRequestBuilderNavigationMetadata,
    },
    evaluateDlpPoliciesJobs: {
        uriTemplate: EvaluateDlpPoliciesJobsRequestBuilderUriTemplate,
        requestsMetadata: EvaluateDlpPoliciesJobsRequestBuilderRequestsMetadata,
        navigationMetadata: EvaluateDlpPoliciesJobsRequestBuilderNavigationMetadata,
    },
    evaluateLabelJobs: {
        uriTemplate: EvaluateLabelJobsRequestBuilderUriTemplate,
        requestsMetadata: EvaluateLabelJobsRequestBuilderRequestsMetadata,
        navigationMetadata: EvaluateLabelJobsRequestBuilderNavigationMetadata,
    },
    exactMatchDataStores: {
        uriTemplate: ExactMatchDataStoresRequestBuilderUriTemplate,
        requestsMetadata: ExactMatchDataStoresRequestBuilderRequestsMetadata,
        navigationMetadata: ExactMatchDataStoresRequestBuilderNavigationMetadata,
    },
    exactMatchUploadAgents: {
        uriTemplate: ExactMatchUploadAgentsRequestBuilderUriTemplate,
        requestsMetadata: ExactMatchUploadAgentsRequestBuilderRequestsMetadata,
        navigationMetadata: ExactMatchUploadAgentsRequestBuilderNavigationMetadata,
    },
    jobs: {
        uriTemplate: JobsRequestBuilderUriTemplate,
        requestsMetadata: JobsRequestBuilderRequestsMetadata,
        navigationMetadata: JobsRequestBuilderNavigationMetadata,
    },
    sensitiveTypes: {
        uriTemplate: SensitiveTypesRequestBuilderUriTemplate,
        requestsMetadata: SensitiveTypesRequestBuilderRequestsMetadata,
        navigationMetadata: SensitiveTypesRequestBuilderNavigationMetadata,
    },
    sensitivityLabels: {
        uriTemplate: SensitivityLabelsRequestBuilderUriTemplate,
        requestsMetadata: SensitivityLabelsRequestBuilderRequestsMetadata,
        navigationMetadata: SensitivityLabelsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DataClassificationRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDataClassificationServiceFromDiscriminatorValue,
        queryParametersMapper: DataClassificationRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDataClassificationServiceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDataClassificationService,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const DataClassificationRequestBuilderUriTemplate = "{+baseurl}/dataClassification{?%24expand,%24select}";
/* tslint:enable */
/* eslint-enable */
