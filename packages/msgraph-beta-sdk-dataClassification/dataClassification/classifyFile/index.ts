/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createClassificationJobResponseFromDiscriminatorValue, serializeClassificationJobResponse, type ClassificationJobResponse } from '@microsoft/msgraph-beta-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-beta-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ClassifyFilePostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The file property
     */
    file?: ArrayBuffer | null;
    /**
     * The sensitiveTypeIds property
     */
    sensitiveTypeIds?: string[] | null;
}
/**
 * Provides operations to call the classifyFile method.
 */
export interface ClassifyFileRequestBuilder extends BaseRequestBuilder<ClassifyFileRequestBuilder> {
    /**
     * Invoke action classifyFile
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ClassificationJobResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: ClassifyFilePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ClassificationJobResponse | undefined>;
    /**
     * Invoke action classifyFile
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ClassifyFilePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ClassifyFilePostRequestBody}
 */
// @ts-ignore
export function createClassifyFilePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoClassifyFilePostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoClassifyFilePostRequestBody(classifyFilePostRequestBody: Partial<ClassifyFilePostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { classifyFilePostRequestBody.backingStoreEnabled = true; },
        "file": n => { classifyFilePostRequestBody.file = n.getByteArrayValue; },
        "sensitiveTypeIds": n => { classifyFilePostRequestBody.sensitiveTypeIds = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeClassifyFilePostRequestBody(writer: SerializationWriter, classifyFilePostRequestBody: Partial<ClassifyFilePostRequestBody> | undefined | null = {}) : void {
    if (classifyFilePostRequestBody) {
        writer.writeByteArrayValue("file", classifyFilePostRequestBody.file);
        writer.writeCollectionOfPrimitiveValues<string>("sensitiveTypeIds", classifyFilePostRequestBody.sensitiveTypeIds);
        writer.writeAdditionalData(classifyFilePostRequestBody.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const ClassifyFileRequestBuilderUriTemplate = "{+baseurl}/dataClassification/classifyFile";
/**
 * Metadata for all the requests in the request builder.
 */
export const ClassifyFileRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: ClassifyFileRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createClassificationJobResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeClassifyFilePostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
